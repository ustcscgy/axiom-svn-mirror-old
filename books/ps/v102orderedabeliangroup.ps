%!PS-Adobe-2.0
%%Creator: dot version 2.8 (Thu Sep 14 20:34:11 UTC 2006)
%%For: (root) root
%%Title: pic
%%Pages: (atend)
%%BoundingBox: 36 36 398 224
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval
EncodingVector 45 /hyphen put

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset graphviz 0 0
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def
/showpage { } def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 398 224
%%PageOrientation: Portrait
gsave
36 36 362 188 boxprim clip newpath
36 36 translate
0 0 1 beginpage
1.0000 set_scale
4 4 translate 0 rotate
0.167 0.600 1.000 graphcolor
0.167 0.600 1.000 graphcolor
newpath -6 -6 moveto
-6 186 lineto
360 186 lineto
360 -6 lineto
closepath
fill
0.167 0.600 1.000 graphcolor
newpath -6 -6 moveto
-6 186 lineto
360 186 lineto
360 -6 lineto
closepath
stroke
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font
% OrderedAbelianGroup()
gsave 10 dict begin
filled
0.537 0.247 0.902 nodecolor
0.537 0.247 0.902 nodecolor
newpath 283 180 moveto
133 180 lineto
133 144 lineto
283 144 lineto
closepath
fill
0.537 0.247 0.902 nodecolor
newpath 283 180 moveto
133 180 lineto
133 144 lineto
283 144 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
140 157 moveto
(OrderedAbelianGroup\(\))
[10.08 4.56 6.96 6.24 4.8 6.24 6.96 9.84 6.96 6.24 3.84 3.84 6.24 6.96 10.08 4.8 6.96 6.96 6.96 4.56 4.56]
xshow
end grestore
end grestore
% OrderedCancellationAbelianMonoid()
gsave 10 dict begin
filled
0.537 0.247 0.902 nodecolor
0.537 0.247 0.902 nodecolor
newpath 230 108 moveto
0 108 lineto
0 72 lineto
230 72 lineto
closepath
fill
0.537 0.247 0.902 nodecolor
newpath 230 108 moveto
0 108 lineto
0 72 lineto
230 72 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
8 85 moveto
(OrderedCancellationAbelianMonoid\(\))
[10.08 4.56 6.96 6.24 4.8 6.24 6.96 9.36 6.24 6.96 6.24 6.24 3.84 3.84 6.24 3.84 3.84 6.96 6.96 9.84 6.96 6.24 3.84 3.84 6.24 6.96 12.48 6.96 6.96 6.96 3.84 6.96 4.56 4.56]
xshow
end grestore
end grestore
% OrderedAbelianGroup()->OrderedCancellationAbelianMonoid()
newpath 185 144 moveto
174 135 159 124 146 114 curveto
stroke
gsave 10 dict begin
solid
1 setlinewidth
0.000 0.000 0.000 edgecolor
newpath 148 111 moveto
138 108 lineto
144 117 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
newpath 148 111 moveto
138 108 lineto
144 117 lineto
closepath
stroke
end grestore
% AbelianGroup()
gsave 10 dict begin
filled
0.537 0.247 0.902 nodecolor
0.537 0.247 0.902 nodecolor
newpath 354 108 moveto
248 108 lineto
248 72 lineto
354 72 lineto
closepath
fill
0.537 0.247 0.902 nodecolor
newpath 354 108 moveto
248 108 lineto
248 72 lineto
354 72 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
256 85 moveto
(AbelianGroup\(\))
[9.84 6.96 6.24 3.84 3.84 6.24 6.96 10.08 4.8 6.96 6.96 6.96 4.56 4.56]
xshow
end grestore
end grestore
% OrderedAbelianGroup()->AbelianGroup()
newpath 231 144 moveto
242 135 257 124 270 114 curveto
stroke
gsave 10 dict begin
solid
1 setlinewidth
0.000 0.000 0.000 edgecolor
newpath 272 117 moveto
278 108 lineto
268 111 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
newpath 272 117 moveto
278 108 lineto
268 111 lineto
closepath
stroke
end grestore
% OAMON...
gsave 10 dict begin
filled
0.537 0.247 0.902 nodecolor
0.537 0.247 0.902 nodecolor
newpath 148 36 moveto
70 36 lineto
70 0 lineto
148 0 lineto
closepath
fill
0.537 0.247 0.902 nodecolor
newpath 148 36 moveto
70 36 lineto
70 0 lineto
148 0 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
77 13 moveto
(OAMON...)
[9.36 10.08 12.48 10.08 9.84 3.6 3.6 3.6]
xshow
end grestore
end grestore
% OrderedCancellationAbelianMonoid()->OAMON...
newpath 113 72 moveto
112 64 112 55 111 46 curveto
stroke
gsave 10 dict begin
solid
1 setlinewidth
0.000 0.000 0.000 edgecolor
newpath 115 46 moveto
111 36 lineto
108 46 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
newpath 115 46 moveto
111 36 lineto
108 46 lineto
closepath
stroke
end grestore
% CABMON...
gsave 10 dict begin
filled
0.537 0.247 0.902 nodecolor
0.537 0.247 0.902 nodecolor
newpath 254 36 moveto
166 36 lineto
166 0 lineto
254 0 lineto
closepath
fill
0.537 0.247 0.902 nodecolor
newpath 254 36 moveto
166 36 lineto
166 0 lineto
254 0 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
174 13 moveto
(CABMON...)
[9.12 10.08 9.36 12.48 10.08 9.84 3.6 3.6 3.6]
xshow
end grestore
end grestore
% OrderedCancellationAbelianMonoid()->CABMON...
newpath 139 72 moveto
150 63 165 52 178 42 curveto
stroke
gsave 10 dict begin
solid
1 setlinewidth
0.000 0.000 0.000 edgecolor
newpath 180 45 moveto
186 36 lineto
176 39 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
newpath 180 45 moveto
186 36 lineto
176 39 lineto
closepath
stroke
end grestore
% AbelianGroup()->CABMON...
newpath 278 72 moveto
267 63 253 52 241 42 curveto
stroke
gsave 10 dict begin
solid
1 setlinewidth
0.000 0.000 0.000 edgecolor
newpath 243 39 moveto
233 36 lineto
239 45 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
newpath 243 39 moveto
233 36 lineto
239 45 lineto
closepath
stroke
end grestore
% REPDB...
gsave 10 dict begin
filled
0.333 1.000 0.933 nodecolor
0.333 1.000 0.933 nodecolor
newpath 344 36 moveto
272 36 lineto
272 0 lineto
344 0 lineto
closepath
fill
0.333 1.000 0.933 nodecolor
newpath 344 36 moveto
272 36 lineto
272 0 lineto
344 0 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
279 13 moveto
(REPDB...)
[9.36 8.64 7.68 10.08 9.36 3.6 3.6 3.6]
xshow
end grestore
end grestore
% AbelianGroup()->REPDB...
newpath 303 72 moveto
304 64 304 55 305 46 curveto
stroke
gsave 10 dict begin
solid
1 setlinewidth
0.000 0.000 0.000 edgecolor
newpath 308 46 moveto
306 36 lineto
302 46 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
newpath 308 46 moveto
306 36 lineto
302 46 lineto
closepath
stroke
end grestore
endpage
showpage
grestore
%%PageTrailer
%%EndPage: 1
%%Trailer
%%Pages: 1
end
restore
%%EOF
