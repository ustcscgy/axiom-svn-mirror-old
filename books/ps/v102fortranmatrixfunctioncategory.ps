%!PS-Adobe-2.0
%%Creator: dot version 2.8 (Thu Sep 14 20:34:11 UTC 2006)
%%For: (root) root
%%Title: pic
%%Pages: (atend)
%%BoundingBox: 36 36 284 368
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval
EncodingVector 45 /hyphen put

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset graphviz 0 0
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def
/showpage { } def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 284 368
%%PageOrientation: Portrait
gsave
36 36 248 332 boxprim clip newpath
36 36 translate
0 0 1 beginpage
1.0000 set_scale
4 4 translate 0 rotate
0.167 0.600 1.000 graphcolor
0.167 0.600 1.000 graphcolor
newpath -6 -6 moveto
-6 330 lineto
246 330 lineto
246 -6 lineto
closepath
fill
0.167 0.600 1.000 graphcolor
newpath -6 -6 moveto
-6 330 lineto
246 330 lineto
246 -6 lineto
closepath
stroke
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font
% FortranMatrixFunctionCategory()
gsave 10 dict begin
filled
0.537 0.247 0.902 nodecolor
0.537 0.247 0.902 nodecolor
newpath 206 324 moveto
0 324 lineto
0 288 lineto
206 288 lineto
closepath
fill
0.537 0.247 0.902 nodecolor
newpath 206 324 moveto
0 324 lineto
0 288 lineto
206 288 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
8 301 moveto
(FortranMatrixFunctionCategory\(\))
[7.44 6.96 5.04 3.84 4.8 6.24 6.96 12.48 6.24 3.84 5.04 3.84 6.96 7.44 6.96 6.96 6.24 3.84 3.84 6.96 6.96 9.36 6.24 3.84 6.24 6.96 6.96 5.04 6.96 4.56 4.56]
xshow
end grestore
end grestore
% FortranProgramCategory()
gsave 10 dict begin
filled
0.537 0.247 0.902 nodecolor
0.537 0.247 0.902 nodecolor
newpath 186 252 moveto
20 252 lineto
20 216 lineto
186 216 lineto
closepath
fill
0.537 0.247 0.902 nodecolor
newpath 186 252 moveto
20 252 lineto
20 216 lineto
186 216 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
27 229 moveto
(FortranProgramCategory\(\))
[7.44 6.96 5.04 3.84 4.8 6.24 6.96 7.68 4.8 6.96 7.2 4.8 6.24 10.8 9.36 6.24 3.84 6.24 6.96 6.96 5.04 6.96 4.56 4.56]
xshow
end grestore
end grestore
% FortranMatrixFunctionCategory()->FortranProgramCategory()
newpath 103 288 moveto
103 280 103 271 103 262 curveto
stroke
gsave 10 dict begin
solid
1 setlinewidth
0.000 0.000 0.000 edgecolor
newpath 107 262 moveto
103 252 lineto
100 262 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
newpath 107 262 moveto
103 252 lineto
100 262 lineto
closepath
stroke
end grestore
% Type()
gsave 10 dict begin
filled
0.537 0.247 0.902 nodecolor
0.537 0.247 0.902 nodecolor
newpath 75 108 moveto
21 108 lineto
21 72 lineto
75 72 lineto
closepath
fill
0.537 0.247 0.902 nodecolor
newpath 75 108 moveto
21 108 lineto
21 72 lineto
75 72 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
29 85 moveto
(Type\(\))
[7.2 6.96 6.96 6.24 4.56 4.56]
xshow
end grestore
end grestore
% FortranProgramCategory()->Type()
newpath 88 216 moveto
81 206 72 193 67 180 curveto
59 160 54 136 51 118 curveto
stroke
gsave 10 dict begin
solid
1 setlinewidth
0.000 0.000 0.000 edgecolor
newpath 54 118 moveto
50 108 lineto
48 118 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
newpath 54 118 moveto
50 108 lineto
48 118 lineto
closepath
stroke
end grestore
% CoercibleTo(OutputForm)
gsave 10 dict begin
filled
0.404 0.667 0.545 nodecolor
0.404 0.667 0.545 nodecolor
newpath 240 180 moveto
76 180 lineto
76 144 lineto
240 144 lineto
closepath
fill
0.404 0.667 0.545 nodecolor
newpath 240 180 moveto
76 180 lineto
76 144 lineto
240 144 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
84 157 moveto
(CoercibleTo\(OutputForm\))
[9.36 6.96 6.24 4.8 6.24 3.84 6.96 3.84 6.24 7.44 6.96 4.56 10.08 6.96 3.84 6.96 6.96 3.84 7.44 6.96 5.04 10.8 4.56]
xshow
end grestore
end grestore
% FortranProgramCategory()->CoercibleTo(OutputForm)
newpath 117 216 moveto
123 208 131 197 138 188 curveto
stroke
gsave 10 dict begin
solid
1 setlinewidth
0.000 0.000 0.000 edgecolor
newpath 141 190 moveto
144 180 lineto
135 186 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
newpath 141 190 moveto
144 180 lineto
135 186 lineto
closepath
stroke
end grestore
% Category
gsave 10 dict begin
filled
0.537 0.247 0.902 nodecolor
0.537 0.247 0.902 nodecolor
newpath 137 36 moveto
69 36 lineto
69 0 lineto
137 0 lineto
closepath
fill
0.537 0.247 0.902 nodecolor
newpath 137 36 moveto
69 36 lineto
69 0 lineto
137 0 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
77 13 moveto
(Category)
[9.36 6.24 3.84 6.24 6.96 6.96 5.04 6.96]
xshow
end grestore
end grestore
% Type()->Category
newpath 62 72 moveto
68 64 76 53 83 44 curveto
stroke
gsave 10 dict begin
solid
1 setlinewidth
0.000 0.000 0.000 edgecolor
newpath 86 46 moveto
89 36 lineto
80 42 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
newpath 86 46 moveto
89 36 lineto
80 42 lineto
closepath
stroke
end grestore
% CoercibleTo(a:Type)
gsave 10 dict begin
filled
0.537 0.247 0.902 nodecolor
0.537 0.247 0.902 nodecolor
newpath 225 108 moveto
93 108 lineto
93 72 lineto
225 72 lineto
closepath
fill
0.537 0.247 0.902 nodecolor
newpath 225 108 moveto
93 108 lineto
93 72 lineto
225 72 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
101 85 moveto
(CoercibleTo\(a:Type\))
[9.36 6.96 6.24 4.8 6.24 3.84 6.96 3.84 6.24 7.44 6.96 4.56 6.24 3.84 7.2 6.96 6.96 6.24 4.56]
xshow
end grestore
end grestore
% CoercibleTo(OutputForm)->CoercibleTo(a:Type)
newpath 158 144 moveto
159 136 159 127 159 118 curveto
stroke
gsave 10 dict begin
solid
1 setlinewidth
0.000 0.000 0.000 edgecolor
newpath 163 118 moveto
159 108 lineto
156 118 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
newpath 163 118 moveto
159 108 lineto
156 118 lineto
closepath
stroke
end grestore
% CoercibleTo(a:Type)->Category
newpath 145 72 moveto
138 64 130 53 123 44 curveto
stroke
gsave 10 dict begin
solid
1 setlinewidth
0.000 0.000 0.000 edgecolor
newpath 126 42 moveto
117 36 lineto
120 46 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
newpath 126 42 moveto
117 36 lineto
120 46 lineto
closepath
stroke
end grestore
endpage
showpage
grestore
%%PageTrailer
%%EndPage: 1
%%Trailer
%%Pages: 1
end
restore
%%EOF
