%!PS-Adobe-2.0
%%Creator: dot version 2.8 (Thu Sep 14 20:34:11 UTC 2006)
%%For: (root) root
%%Title: pic
%%Pages: (atend)
%%BoundingBox: 36 36 456 368
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval
EncodingVector 45 /hyphen put

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset graphviz 0 0
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def
/showpage { } def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 456 368
%%PageOrientation: Portrait
gsave
36 36 420 332 boxprim clip newpath
36 36 translate
0 0 1 beginpage
1.0000 set_scale
4 4 translate 0 rotate
0.167 0.600 1.000 graphcolor
0.167 0.600 1.000 graphcolor
newpath -6 -6 moveto
-6 330 lineto
418 330 lineto
418 -6 lineto
closepath
fill
0.167 0.600 1.000 graphcolor
newpath -6 -6 moveto
-6 330 lineto
418 330 lineto
418 -6 lineto
closepath
stroke
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font
% LeftModule(a:Rng)
gsave 10 dict begin
filled
0.537 0.247 0.902 nodecolor
0.537 0.247 0.902 nodecolor
newpath 262 324 moveto
136 324 lineto
136 288 lineto
262 288 lineto
closepath
fill
0.537 0.247 0.902 nodecolor
newpath 262 324 moveto
136 324 lineto
136 288 lineto
262 288 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
144 301 moveto
(LeftModule\(a:Rng\))
[8.64 6.24 4.8 3.84 12.48 6.96 6.96 6.96 3.84 6.24 4.56 6.24 3.84 9.36 6.96 6.96 4.56]
xshow
end grestore
end grestore
% AbelianGroup()
gsave 10 dict begin
filled
0.537 0.247 0.902 nodecolor
0.537 0.247 0.902 nodecolor
newpath 252 252 moveto
146 252 lineto
146 216 lineto
252 216 lineto
closepath
fill
0.537 0.247 0.902 nodecolor
newpath 252 252 moveto
146 252 lineto
146 216 lineto
252 216 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
154 229 moveto
(AbelianGroup\(\))
[9.84 6.96 6.24 3.84 3.84 6.24 6.96 10.08 4.8 6.96 6.96 6.96 4.56 4.56]
xshow
end grestore
end grestore
% LeftModule(a:Rng)->AbelianGroup()
newpath 199 288 moveto
199 280 199 271 199 262 curveto
stroke
gsave 10 dict begin
solid
1 setlinewidth
0.000 0.000 0.000 edgecolor
newpath 203 262 moveto
199 252 lineto
196 262 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
newpath 203 262 moveto
199 252 lineto
196 262 lineto
closepath
stroke
end grestore
% CancellationAbelianMonoid()
gsave 10 dict begin
filled
0.537 0.247 0.902 nodecolor
0.537 0.247 0.902 nodecolor
newpath 184 180 moveto
0 180 lineto
0 144 lineto
184 144 lineto
closepath
fill
0.537 0.247 0.902 nodecolor
newpath 184 180 moveto
0 180 lineto
0 144 lineto
184 144 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
8 157 moveto
(CancellationAbelianMonoid\(\))
[9.36 6.24 6.96 6.24 6.24 3.84 3.84 6.24 3.84 3.84 6.96 6.96 9.84 6.96 6.24 3.84 3.84 6.24 6.96 12.48 6.96 6.96 6.96 3.84 6.96 4.56 4.56]
xshow
end grestore
end grestore
% AbelianGroup()->CancellationAbelianMonoid()
newpath 172 216 moveto
159 207 142 196 128 186 curveto
stroke
gsave 10 dict begin
solid
1 setlinewidth
0.000 0.000 0.000 edgecolor
newpath 129 183 moveto
119 180 lineto
125 188 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
newpath 129 183 moveto
119 180 lineto
125 188 lineto
closepath
stroke
end grestore
% RepeatedDoubling(AbelianGroup)
gsave 10 dict begin
filled
0.333 1.000 0.933 nodecolor
0.333 1.000 0.933 nodecolor
newpath 412 180 moveto
202 180 lineto
202 144 lineto
412 144 lineto
closepath
fill
0.333 1.000 0.933 nodecolor
newpath 412 180 moveto
202 180 lineto
202 144 lineto
412 144 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
210 157 moveto
(RepeatedDoubling\(AbelianGroup\))
[9.12 6.24 6.96 6.24 6.24 3.84 6.24 6.96 10.08 6.96 6.96 6.96 3.84 3.84 6.96 6.96 4.56 9.84 6.96 6.24 3.84 3.84 6.24 6.96 10.08 4.8 6.96 6.96 6.96 4.56]
xshow
end grestore
end grestore
% AbelianGroup()->RepeatedDoubling(AbelianGroup)
newpath 226 216 moveto
240 207 257 196 271 186 curveto
stroke
gsave 10 dict begin
solid
1 setlinewidth
0.000 0.000 0.000 edgecolor
newpath 274 188 moveto
280 180 lineto
270 183 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
newpath 274 188 moveto
280 180 lineto
270 183 lineto
closepath
stroke
end grestore
% ABELMON...
gsave 10 dict begin
filled
0.537 0.247 0.902 nodecolor
0.537 0.247 0.902 nodecolor
newpath 141 108 moveto
43 108 lineto
43 72 lineto
141 72 lineto
closepath
fill
0.537 0.247 0.902 nodecolor
newpath 141 108 moveto
43 108 lineto
43 72 lineto
141 72 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
51 85 moveto
(ABELMON...)
[10.08 9.36 8.64 8.64 12.48 10.08 9.84 3.6 3.6 3.6]
xshow
end grestore
end grestore
% CancellationAbelianMonoid()->ABELMON...
newpath 92 144 moveto
92 136 92 127 92 118 curveto
stroke
gsave 10 dict begin
solid
1 setlinewidth
0.000 0.000 0.000 edgecolor
newpath 96 118 moveto
92 108 lineto
89 118 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
newpath 96 118 moveto
92 108 lineto
89 118 lineto
closepath
stroke
end grestore
% RepeatedDoubling(a:SetCategory)
gsave 10 dict begin
filled
0.333 1.000 0.933 nodecolor
0.333 1.000 0.933 nodecolor
newpath 411 108 moveto
203 108 lineto
203 72 lineto
411 72 lineto
closepath
fill
0.333 1.000 0.933 nodecolor
newpath 411 108 moveto
203 108 lineto
203 72 lineto
411 72 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
210 85 moveto
(RepeatedDoubling\(a:SetCategory\))
[9.12 6.24 6.96 6.24 6.24 3.84 6.24 6.96 10.08 6.96 6.96 6.96 3.84 3.84 6.96 6.96 4.56 6.24 3.84 7.68 6 3.84 9.36 6.24 3.84 6.24 6.96 6.96 5.04 6.96 4.56]
xshow
end grestore
end grestore
% RepeatedDoubling(AbelianGroup)->RepeatedDoubling(a:SetCategory)
newpath 307 144 moveto
307 136 307 127 307 118 curveto
stroke
gsave 10 dict begin
solid
1 setlinewidth
0.000 0.000 0.000 edgecolor
newpath 311 118 moveto
307 108 lineto
304 118 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
newpath 311 118 moveto
307 108 lineto
304 118 lineto
closepath
stroke
end grestore
% Package
gsave 10 dict begin
filled
0.333 1.000 0.933 nodecolor
0.333 1.000 0.933 nodecolor
newpath 338 36 moveto
276 36 lineto
276 0 lineto
338 0 lineto
closepath
fill
0.333 1.000 0.933 nodecolor
newpath 338 36 moveto
276 36 lineto
276 0 lineto
338 0 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
283 13 moveto
(Package)
[7.44 6.24 6 6.96 6.24 6.72 6.24]
xshow
end grestore
end grestore
% RepeatedDoubling(a:SetCategory)->Package
newpath 307 72 moveto
307 64 307 55 307 46 curveto
stroke
gsave 10 dict begin
solid
1 setlinewidth
0.000 0.000 0.000 edgecolor
newpath 311 46 moveto
307 36 lineto
304 46 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
newpath 311 46 moveto
307 36 lineto
304 46 lineto
closepath
stroke
end grestore
endpage
showpage
grestore
%%PageTrailer
%%EndPage: 1
%%Trailer
%%Pages: 1
end
restore
%%EOF
