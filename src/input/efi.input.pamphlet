\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{\$SPAD/src/input efi.input}
\author{Timothy Daly}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{License}
<<license>>=
--Copyright The Numerical Algorithms Group Limited 1991.
@
<<*>>=
)set break resume
)spool efi.output
)set message test on
)set message auto off
)clear all

--S 1 of 15
EFI:=Expression Integer
--R 
--R
--R   (1)  Expression Integer
--R                                                                 Type: Domain
--E 1

--S 2 of 15
ber:=operator 'ber
--R 
--R
--R   (2)  ber
--R                                                          Type: BasicOperator
--E 2

--S 3 of 15
s:=operator 's
--R 
--R
--R   (3)  s
--R                                                          Type: BasicOperator
--E 3

-- s:OP EFI:=operator 's

--S 4 of 15
br:LIST EFI->EFI
--R 
--R                                                                   Type: Void
--E 4

@
\begin{verbatim}
 br(x|(x.1)~=0)==(x.1)/(exp((x.1))-1)
 br has a removable singularity at the origin
 br(x|(x.1)=0)== limit(br([y]),y=0)
\end{verbatim}
<<*>>=

--S 5 of 15
br(x) == 
 (x.1) = 0 => limit(br([y]),y=0) 
 (x.1)/(exp((x.1))-1) 
--R 
--R                                                                   Type: Void
--E 5

--S 6 of 15
br([1])
--R 
--R   Compiling function br with type List Expression Integer -> 
--R      Expression Integer 
--R
--R           1
--R   (6)  ------
--R        %e - 1
--R                                                     Type: Expression Integer
--E 6

--S 7 of 15
br([0])
--R 
--R
--R   (7)  1
--R                                                     Type: Expression Integer
--E 7

--S 8 of 15
fJ:List FRAC INT -> EFI
--R 
--R                                                                   Type: Void
--E 8

--S 9 of 15
J(i:PI,j:PI):EFI==ber(s(i)-s(j))
--R 
--R   Function declaration J : (PositiveInteger,PositiveInteger) -> 
--R      Expression Integer has been added to workspace.
--R                                                                   Type: Void
--E 9

--S 10 of 15
function(J(1,2),'fJ,['s])
--R 
--R   Compiling function J with type (PositiveInteger,PositiveInteger) -> 
--R      Expression Integer 
--R
--R   (10)  fJ
--R                                                                 Type: Symbol
--E 10

--S 11 of 15
evaluate(ber,br)$BOP1(EFI);
--R 
--R
--R                                                          Type: BasicOperator
--E 11

--S 12 of 15
ss:=[1,2]
--R 
--R
--R   (12)  [1,2]
--R                                                   Type: List PositiveInteger
--E 12

--S 13 of 15
fJ(ss)
--R 
--R   Compiling function fJ with type List Fraction Integer -> Expression 
--R      Integer 
--R
--R           %e
--R   (13)  ------
--R         %e - 1
--R                                                     Type: Expression Integer
--E 13

--S 14 of 15
ss:=[1,1]
--R 
--R
--R   (14)  [1,1]
--R                                                   Type: List PositiveInteger
--E 14

-- fJ doesn't know about the special definition at the origin
--S 15 of 15
fJ(ss)
--R 
--R
--R   (15)  1
--R                                                     Type: Expression Integer
--E 15
)spool
)lisp (bye)
 
@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}

 
