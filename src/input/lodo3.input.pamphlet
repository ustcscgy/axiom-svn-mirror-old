\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{\$SPAD/src/input lodo3.input}
\author{Timothy Daly}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{License}
\begin{chunk}{license}
--Copyright The Numerical Algorithms Group Limited 1991.
\end{chunk}
\begin{chunk}{*}
)set break resume
)spool lodo3.output
)set message test on
)set message auto off
)clear all
--S 1 of 16
Dx: LODO(EXPR INT, f +-> D(f, x))
--R 
--R                                                                   Type: Void
--E 1

--S 2 of 16
Dx := D()
--R 
--R
--R   (2)  D
--IType: LinearOrdinaryDifferentialOperator(Expression Integer,theMap LAMBDA-CLOSURE(NIL,NIL,NIL,G1405 envArg,SPADCALL(G1405,QUOTE x,ELT(*1;anonymousFunction;0;initial;internal;MV,0))))
--E 2

--S 3 of 16
Dop:= Dx**3 + G/x**2*Dx + H/x**3 - 1
--R 
--R
--R                       3
--R         3    G     - x  + H
--R   (3)  D  + -- D + --------
--R              2         3
--R             x         x
--IType: LinearOrdinaryDifferentialOperator(Expression Integer,theMap LAMBDA-CLOSURE(NIL,NIL,NIL,G1405 envArg,SPADCALL(G1405,QUOTE x,ELT(*1;anonymousFunction;0;initial;internal;MV,0))))
--E 3

--S 4 of 16
n == 3
--R 
--R                                                                   Type: Void
--E 4

--S 5 of 16
phi == reduce(+,[subscript(s,[i])*exp(x)/x**i for i in 0..n])
--R 
--R                                                                   Type: Void
--E 5

--S 6 of 16
phi1 ==  Dop(phi) / exp x
--R 
--R                                                                   Type: Void
--E 6

--S 7 of 16
phi2 == phi1 *x**(n+3)
--R 
--R                                                                   Type: Void
--E 7

--S 8 of 16
phi3 == retract(phi2)@(POLY INT)
--R 
--R                                                                   Type: Void
--E 8

--S 9 of 16
pans == phi3 ::UP(x,POLY INT)
--R 
--R                                                                   Type: Void
--E 9

--S 10 of 16
pans1 == [coefficient(pans, (n+3-i) :: NNI) for i in 2..n+1]
--R 
--R                                                                   Type: Void
--E 10

--S 11 of 16
leq == solve(pans1,[subscript(s,[i]) for i in 1..n])
--R 
--R                                                                   Type: Void
--E 11

--S 12 of 16
leq
--R 
--R   Compiling body of rule n to compute value of type PositiveInteger 
--R   Compiling body of rule phi to compute value of type Expression 
--R      Integer 
--R   Compiling body of rule phi1 to compute value of type Expression 
--R      Integer 
--R   Compiling body of rule phi2 to compute value of type Expression 
--R      Integer 
--R   Compiling body of rule phi3 to compute value of type Polynomial 
--R      Integer 
--R   Compiling body of rule pans to compute value of type 
--R      UnivariatePolynomial(x,Polynomial Integer) 
--R   Compiling body of rule pans1 to compute value of type List 
--R      Polynomial Integer 
--R   Compiling body of rule leq to compute value of type List List 
--R      Equation Fraction Polynomial Integer 
--I   Compiling function G3350 with type Integer -> Boolean 
--R
--R   (12)
--R                           2                                3        2
--R         s G     3s H + s G  + 6s G     (9s G + 54s )H + s G  + 18s G  + 72s G
--R          0        0     0       0         0       0      0        0        0
--R   [[s = ---,s = ------------------,s = --------------------------------------]]
--R      1   3   2          18          3                    162
--R                         Type: List List Equation Fraction Polynomial Integer
--E 12

--S 13 of 16
n==4
--R 
--R   Compiled code for n has been cleared.
--R   Compiled code for leq has been cleared.
--R   Compiled code for pans1 has been cleared.
--R   Compiled code for phi2 has been cleared.
--R   Compiled code for phi has been cleared.
--R   Compiled code for phi3 has been cleared.
--R   Compiled code for phi1 has been cleared.
--R   Compiled code for pans has been cleared.
--R   1 old definition(s) deleted for function or rule n 
--R                                                                   Type: Void
--E 13

--S 14 of 16
leq
--R 
--R   Compiling body of rule n to compute value of type PositiveInteger 
--R   Compiling body of rule phi to compute value of type Expression 
--R      Integer 
--R   Compiling body of rule phi1 to compute value of type Expression 
--R      Integer 
--R   Compiling body of rule phi2 to compute value of type Expression 
--R      Integer 
--R   Compiling body of rule phi3 to compute value of type Polynomial 
--R      Integer 
--R   Compiling body of rule pans to compute value of type 
--R      UnivariatePolynomial(x,Polynomial Integer) 
--R   Compiling body of rule pans1 to compute value of type List 
--R      Polynomial Integer 
--R   Compiling body of rule leq to compute value of type List List 
--R      Equation Fraction Polynomial Integer 
--R
--R   (14)
--R   [
--R                             2
--R          s G      3s H + s G  + 6s G
--R           0         0     0       0
--R     [s = ---, s = ------------------,
--R       1   3    2          18
--R                              3        2
--R          (9s G + 54s )H + s G  + 18s G  + 72s G
--R             0       0      0        0        0
--R      s = --------------------------------------,
--R       3                    162
--R
--R       s  =
--R        4
--R                  2         2                          4        3         2
--R             27s H  + (18s G  + 378s G + 1296s )H + s G  + 36s G  + 396s G
--R                0         0         0         0      0        0         0
--R           + 
--R             1296s G
--R                  0
--R        /
--R           1944
--R       ]
--R     ]
--R                         Type: List List Equation Fraction Polynomial Integer
--E 14

--S 15 of 16
n==7
--R 
--R   Compiled code for n has been cleared.
--R   Compiled code for leq has been cleared.
--R   Compiled code for pans1 has been cleared.
--R   Compiled code for phi2 has been cleared.
--R   Compiled code for phi has been cleared.
--R   Compiled code for phi3 has been cleared.
--R   Compiled code for phi1 has been cleared.
--R   Compiled code for pans has been cleared.
--R   1 old definition(s) deleted for function or rule n 
--R                                                                   Type: Void
--E 15

--S 16 of 16
leq
--R 
--R   Compiling body of rule n to compute value of type PositiveInteger 
--R   Compiling body of rule phi to compute value of type Expression 
--R      Integer 
--R   Compiling body of rule phi1 to compute value of type Expression 
--R      Integer 
--R   Compiling body of rule phi2 to compute value of type Expression 
--R      Integer 
--R   Compiling body of rule phi3 to compute value of type Polynomial 
--R      Integer 
--R   Compiling body of rule pans to compute value of type 
--R      UnivariatePolynomial(x,Polynomial Integer) 
--R   Compiling body of rule pans1 to compute value of type List 
--R      Polynomial Integer 
--R   Compiling body of rule leq to compute value of type List List 
--R      Equation Fraction Polynomial Integer 
--R
--R   (16)
--R   [
--R                             2
--R          s G      3s H + s G  + 6s G
--R           0         0     0       0
--R     [s = ---, s = ------------------,
--R       1   3    2          18
--R                              3        2
--R          (9s G + 54s )H + s G  + 18s G  + 72s G
--R             0       0      0        0        0
--R      s = --------------------------------------,
--R       3                    162
--R
--R       s  =
--R        4
--R                  2         2                          4        3         2
--R             27s H  + (18s G  + 378s G + 1296s )H + s G  + 36s G  + 396s G
--R                0         0         0         0      0        0         0
--R           + 
--R             1296s G
--R                  0
--R        /
--R           1944
--R       ,
--R
--R       s  =
--R        5
--R                               2         3          2
--R             (135s G + 2268s )H  + (30s G  + 1350s G  + 16416s G + 38880s )H
--R                  0         0          0          0           0          0
--R           + 
--R                5        4          3          2
--R             s G  + 60s G  + 1188s G  + 9504s G  + 25920s G
--R              0        0          0          0           0
--R        /
--R           29160
--R       ,
--R
--R       s  =
--R        6
--R                   3          2                        2
--R             405s H  + (405s G  + 18468s G + 174960s )H
--R                 0          0           0           0
--R           + 
--R                   4          3           2                                6
--R             (45s G  + 3510s G  + 88776s G  + 777600s G + 1166400s )H + s G
--R                 0          0           0            0            0      0
--R           + 
--R                  5          4           3           2
--R             90s G  + 2628s G  + 27864s G  + 90720s G
--R                0          0           0           0
--R        /
--R           524880
--R       ,
--R
--R       s  =
--R        7
--R                                 3
--R             (2835s G + 91854s )H
--R                   0          0
--R           + 
--R                    3           2                            2
--R             (945s G  + 81648s G  + 2082996s G + 14171760s )H
--R                  0           0             0             0
--R           + 
--R                   5          4            3             2
--R             (63s G  + 7560s G  + 317520s G  + 5554008s G  + 34058880s G)H
--R                 0          0            0             0              0
--R           + 
--R                7         6          5           4             3              2
--R             s G  + 126s G  + 4788s G  + 25272s G  - 1744416s G  - 26827200s G
--R              0         0          0           0             0              0
--R           + 
--R             - 97977600s G
--R                        0
--R        /
--R           11022480
--R       ]
--R     ]
--R                         Type: List List Equation Fraction Polynomial Integer
--E 16
)spool 
)lisp (bye)
 
\end{chunk}
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}

 
