\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{\$SPAD/src/input bug100.input}
\author{Timothy Daly}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
@
This code used to cause an infinite loop that eventually killed Axiom.
The bug exists in the {\tt intef.spad}, in ElementaryIntegration (INTEF),
in the routines {\tt lfextendedint} and {\tt lflimitedint}.

The input
\begin{verbatim}
  integrate((z^a+1)^b,z)
\end{verbatim}
triggers the bug because of line 2 of each function.
Line 2 of these functions used to read:
\begin{verbatim}
      symbolIfCan(k := kmax(l := union(l, varselect(kernels g, x))))
\end{verbatim}

The loop occurs when the call to union causes 
\begin{verbatim}
                     a log(z)
                   %e        
\end{verbatim}
to get added to the list every time. This gives the argument to kmax 
\begin{verbatim}
                 a log(z)
      arg1= [z,%e        ]
\end{verbatim}
and the result being
\begin{verbatim}
        a log(z)
      %e
\end{verbatim}
We keep coming back to process this term, which ends up 
putting the same term back on the list and we loop.
Waldek's solution is to remove the union call. 

<<*>>=
)spool bug100.output
)set message test on
)set message auto off
)clear all
 
--S 1 of 1
integrate((z^a+1)^b,z)
--R
--R           z
--R         ++     a     b
--R   (1)   |   (%I  + 1) d%I
--R        ++
--R                                          Type: Union(Expression Integer,...)
--E 1
@
If we substitute z for %I we get:
\begin{verbatim}
           z
         ++    a     b
         |   (z  + 1) dz
        ++

\end{verbatim}
which is the original input integral.
<<*>>=
)spool 
)lisp (bye)
 
@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}
