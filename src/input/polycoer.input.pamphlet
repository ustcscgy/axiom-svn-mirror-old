\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{\$SPAD/src/input polycoer.input}
\author{Timothy Daly}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{License}
\begin{chunk}{license}
--Copyright The Numerical Algorithms Group Limited 1991.
\end{chunk}
\begin{chunk}{*}
)set break resume
)spool polycoer.output
)set message test on
)set message auto off
)clear all
 
\end{chunk}
This file demonstrates the capabilities of the interpreter to
perform coercions among different polynomial types.
\begin{chunk}{*}
--S 1 of 41
u : UP(x,COMPLEX INT)
--R 
--R                                                                   Type: Void
--E 1

--S 2 of 41
u := (2+3*%i)*x**5 - 7*x**4 +x**2 + 89
--R 
--R
--R                  5     4    2
--R   (2)  (2 + 3%i)x  - 7x  + x  + 89
--R                                Type: UnivariatePolynomial(x,Complex Integer)
--E 2

--S 3 of 41
m : MPOLY([x,y,z],COMPLEX INT)
--R 
--R                                                                   Type: Void
--E 3

--S 4 of 41
m := u
--R 
--R
--R                  5     4    2
--R   (4)  (2 + 3%i)x  - 7x  + x  + 89
--R                        Type: MultivariatePolynomial([x,y,z],Complex Integer)
--E 4

--S 5 of 41
m := m*y - z**2
--R 
--R
--R                    5       4      2          2
--R   (5)  (2 + 3%i)y x  - 7y x  + y x  + 89y - z
--R                        Type: MultivariatePolynomial([x,y,z],Complex Integer)
--E 5

--S 6 of 41
m1 : MPOLY([r,z,t,x,s,y],COMPLEX INT)
--R 
--R                                                                   Type: Void
--E 6

--S 7 of 41
m1 := m
--R 
--R
--R           2               5       4      2
--R   (7)  - z  + (2 + 3%i)y x  - 7y x  + y x  + 89y
--R                  Type: MultivariatePolynomial([r,z,t,x,s,y],Complex Integer)
--E 7

--S 8 of 41
v : DMP([x,y,z],COMPLEX INT)
--R 
--R                                                                   Type: Void
--E 8

--S 9 of 41
v := u
--R 
--R
--R                  5     4    2
--R   (9)  (2 + 3%i)x  - 7x  + x  + 89
--R             Type: DistributedMultivariatePolynomial([x,y,z],Complex Integer)
--E 9

--S 10 of 41
u := v
--R 
--R
--R                   5     4    2
--R   (10)  (2 + 3%i)x  - 7x  + x  + 89
--R                                Type: UnivariatePolynomial(x,Complex Integer)
--E 11

--S 12 of 41
v1 : DMP([r,z,t,x,s,y],COMPLEX INT)
--R 
--R                                                                   Type: Void
--E 12

--S 13 of 41
v1 := v
--R 
--R
--R                   5     4    2
--R   (12)  (2 + 3%i)x  - 7x  + x  + 89
--R       Type: DistributedMultivariatePolynomial([r,z,t,x,s,y],Complex Integer)
--E 13

--S 14 of 41
v := m
--R 
--R
--R                   5      4     2           2
--R   (13)  (2 + 3%i)x y - 7x y + x y + 89y - z
--R             Type: DistributedMultivariatePolynomial([x,y,z],Complex Integer)
--E 14

--S 15 of 41
v1 := m1
--R 
--R
--R            2             5      4     2
--R   (14)  - z  + (2 + 3%i)x y - 7x y + x y + 89y
--R       Type: DistributedMultivariatePolynomial([r,z,t,x,s,y],Complex Integer)
--E 15

)clear all

--S 16 of 41
u : DMP([x,y],INT)
--R 
--R                                                                   Type: Void
--E 16

--S 17 of 41
f : UP(x,UP(y,INT))
--R 
--R                                                                   Type: Void
--E 17

--S 18 of 41
u := x + y
--R 
--R
--R   (3)  x + y
--R                       Type: DistributedMultivariatePolynomial([x,y],Integer)
--E 18

--S 19 of 41
f := u
--R 
--R
--R   (4)  x + y
--R                Type: UnivariatePolynomial(x,UnivariatePolynomial(y,Integer))
--E 19

--S 20 of 41
u := x**2*y**9 - x**2*y**2
--R 
--R
--R         2 9    2 2
--R   (5)  x y  - x y
--R                       Type: DistributedMultivariatePolynomial([x,y],Integer)
--E 20

--S 21 of 41
f := u
--R 
--R
--R          9    2  2
--R   (6)  (y  - y )x
--R                Type: UnivariatePolynomial(x,UnivariatePolynomial(y,Integer))
--E 21

)clear all

--S 22 of 41
u : DMP([z,x,y],INT)
--R 
--R                                                                   Type: Void
--E 22

--S 23 of 41
f : UP(x,DMP([y,z],INT))
--R 
--R                                                                   Type: Void
--E 23

--S 24 of 41
u := x + y + z
--R 
--R
--R   (3)  z + x + y
--R                     Type: DistributedMultivariatePolynomial([z,x,y],Integer)
--E 24

--S 25 of 41
f := u
--R 
--R
--R   (4)  x + y + z
--RType: UnivariatePolynomial(x,DistributedMultivariatePolynomial([y,z],Integer))
--E 25

--S 26 of 41
u := x**2*y - z*x**2 + y*z - x**3*y*z + 3
--R 
--R
--R             3       2          2
--R   (5)  - z x y - z x  + z y + x y + 3
--R                     Type: DistributedMultivariatePolynomial([z,x,y],Integer)
--E 26

--S 27 of 41
f := x**2*y - z*x**2 + y*z - x**3*y*z + 3
--R 
--R
--R               3           2
--R   (6)  - y z x  + (y - z)x  + y z + 3
--RType: UnivariatePolynomial(x,DistributedMultivariatePolynomial([y,z],Integer))
--E 27

--S 28 of 41
f := u
--R 
--R
--R               3           2
--R   (7)  - y z x  + (y - z)x  + y z + 3
--RType: UnivariatePolynomial(x,DistributedMultivariatePolynomial([y,z],Integer))
--E 28

)clear all

--S 29 of 41
u : DMP([x,y,z,w],INT)
--R 
--R                                                                   Type: Void
--E 29

--S 30 of 41
f : UP(w,DMP([y,z],INT))
--R 
--R                                                                   Type: Void
--E 30

--S 31 of 41
u := y**2 - w**5*y**2 - z*w + 3
--R 
--R
--R           2 5    2
--R   (3)  - y w  + y  - z w + 3
--R                   Type: DistributedMultivariatePolynomial([x,y,z,w],Integer)
--E 31

--S 32 of 41
f := y**2 - w**5*y**2 - z*w + 3
--R 
--R
--R           2 5          2
--R   (4)  - y w  - z w + y  + 3
--RType: UnivariatePolynomial(w,DistributedMultivariatePolynomial([y,z],Integer))
--E 32

--S 33 of 41
f := u
--R 
--R
--R           2 5          2
--R   (5)  - y w  - z w + y  + 3
--RType: UnivariatePolynomial(w,DistributedMultivariatePolynomial([y,z],Integer))
--E 33

)clear all

--S 34 of 41
(x1,x2,x3) : DMP([a,b,c,d,e,f],Fraction INT)
--R 
--R                                                                   Type: Void
--E 34

--S 35 of 41
x1 := 2*a + 3*b - c
--R 
--R
--R   (2)  2a + 3b - c
--R      Type: DistributedMultivariatePolynomial([a,b,c,d,e,f],Fraction Integer)
--E 35

--S 36 of 41
x2 := 3 - 3*e + f
--R 
--R
--R   (3)  - 3e + f + 3
--R      Type: DistributedMultivariatePolynomial([a,b,c,d,e,f],Fraction Integer)
--E 36

--S 37 of 41
x3 := a + b + c + d + e + f
--R 
--R
--R   (4)  a + b + c + d + e + f
--R      Type: DistributedMultivariatePolynomial([a,b,c,d,e,f],Fraction Integer)
--E 37

--S 38 of 41
l1 : List DMP([a,b,c,d,e,f],Fraction INT)
--R 
--R                                                                   Type: Void
--E 38

--S 39 of 41
l2 : List UP(f,DMP([a,b,c,d,e],Fraction INT))
--R 
--R                                                                   Type: Void
--E 39

--S 40 of 41
l1 := [x1,x2,x3]
--R 
--R
--R   (7)  [2a + 3b - c,- 3e + f + 3,a + b + c + d + e + f]
--R Type: List DistributedMultivariatePolynomial([a,b,c,d,e,f],Fraction Integer)
--E 40

--S 41 of 41
l2 := l1
--R 
--R
--R   (8)  [2a + 3b - c,f - 3e + 3,f + a + b + c + d + e]
--RType: List UnivariatePolynomial(f,DistributedMultivariatePolynomial([a,b,c,d,e],Fraction Integer))
--E 41
)spool 
)lisp (bye)
 
\end{chunk}
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}

 
