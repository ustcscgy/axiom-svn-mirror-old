\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{\$SPAD/src/input grpthry.input}
\author{Timothy Daly}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{License}
<<license>>=
--Copyright The Numerical Algorithms Group Limited 1991.
@
<<*>>=
)set break resume
)spool grpthry.output
)set message test on
)set message auto off
)clear all
 
--S 1 of 68
x : PERM INT := [[1,3,5],[7,11,9]]
--R 
--R
--R   (1)  (1 3 5)(7 11 9)
--R                                                    Type: Permutation Integer
--E 1

--S 2 of 68
y : PERM INT := [[3,5,7,9]]
--R 
--R
--R   (2)  (3 5 7 9)
--R                                                    Type: Permutation Integer
--E 2

--S 3 of 68
z : PERM INT := [1,3,11]
--R 
--R
--R   (3)  (1 3 11)
--R                                                    Type: Permutation Integer
--E 3

--S 4 of 68
g1 : PERMGRP INT := [ x , y ]
--R 
--R
--R   (4)  <(1 3 5)(7 11 9),(3 5 7 9)>
--R                                               Type: PermutationGroup Integer
--E 4

--S 5 of 68
g2 : PERMGRP INT := [ x , z ]
--R 
--R
--R   (5)  <(1 3 5)(7 11 9),(1 3 11)>
--R                                               Type: PermutationGroup Integer
--E 5

--S 6 of 68
g3 : PERMGRP INT := [ y , z ]
--R 
--R
--R   (6)  <(3 5 7 9),(1 3 11)>
--R                                               Type: PermutationGroup Integer
--E 6

--S 7 of 68
order g1
--R 
--R
--R   (7)  720
--R                                                        Type: PositiveInteger
--E 7

--S 8 of 68
degree g3
--R 
--R
--R   (8)  6
--R                                                        Type: PositiveInteger
--E 8

--S 9 of 68
movedPoints g2
--R 
--R
--R   (9)  {1,3,5,7,9,11}
--R                                                            Type: Set Integer
--E 9

--S 10 of 68
orbit (g1, 3)
--R 
--R
--R   (10)  {1,3,5,7,9,11}
--R                                                            Type: Set Integer
--E 10

--S 11 of 68
orbits g3
--R 
--R
--R   (11)  {{1,3,5,7,9,11}}
--R                                                        Type: Set Set Integer
--E 11

--S 12 of 68
member? ( y , g2 )
--R 
--R
--R   (12)  false
--R                                                                Type: Boolean
--E 12

--S 13 of 68
)sh PERMGRP
--R 
--R PermutationGroup S: SetCategory  is a domain constructor
--R Abbreviation for PermutationGroup is PERMGRP 
--R This constructor is exposed in this frame.
--R Issue )edit bookvol10.3.spad.pamphlet to see algebra source code for PERMGRP 
--R
--R------------------------------- Operations --------------------------------
--R ?<? : (%,%) -> Boolean                ?<=? : (%,%) -> Boolean
--R ?=? : (%,%) -> Boolean                base : % -> List S
--R coerce : List Permutation S -> %      coerce : % -> List Permutation S
--R coerce : % -> OutputForm              degree : % -> NonNegativeInteger
--R hash : % -> SingleInteger             latex : % -> String
--R movedPoints : % -> Set S              orbit : (%,List S) -> Set List S
--R orbit : (%,Set S) -> Set Set S        orbit : (%,S) -> Set S
--R orbits : % -> Set Set S               order : % -> NonNegativeInteger
--R random : % -> Permutation S           ?~=? : (%,%) -> Boolean
--R ?.? : (%,NonNegativeInteger) -> Permutation S
--R generators : % -> List Permutation S
--R initializeGroupForWordProblem : (%,Integer,Integer) -> Void
--R initializeGroupForWordProblem : % -> Void
--R member? : (Permutation S,%) -> Boolean
--R permutationGroup : List Permutation S -> %
--R random : (%,Integer) -> Permutation S
--R strongGenerators : % -> List Permutation S
--R wordInGenerators : (Permutation S,%) -> List NonNegativeInteger
--R wordInStrongGenerators : (Permutation S,%) -> List NonNegativeInteger
--R wordsForStrongGenerators : % -> List List NonNegativeInteger
--R
--E 13

)clear all

--S 14 of 68
ptn9 := partitions 9
--R 
--R
--R   (1)
--R   [[9],[8,1],[7,2],[7,1,1],[6,3],[6,2,1],[6,1,1,1],[5,4],[5,3,1],[5,2,2],...]
--R                                                    Type: Stream List Integer
--E 14

--S 15 of 68
map(dimensionOfIrreducibleRepresentation, ptn9)
--R 
--R
--R   (2)  [1,8,27,28,48,105,56,42,162,120,...]
--R                                              Type: Stream NonNegativeInteger
--E 15

--S 16 of 68
yt := listYoungTableaus [4,2]
--R 
--R
--R   (3)
--R    +0  2  4  5+  +0  2  3  5+  +0  2  3  4+  +0  1  4  5+  +0  1  3  5+
--R   [|          |, |          |, |          |, |          |, |          |,
--R    +1  3  0  0+  +1  4  0  0+  +1  5  0  0+  +2  3  0  0+  +2  4  0  0+
--R    +0  1  3  4+  +0  1  2  5+  +0  1  2  4+  +0  1  2  3+
--R    |          |, |          |, |          |, |          |]
--R    +2  5  0  0+  +3  4  0  0+  +3  5  0  0+  +4  5  0  0+
--R                                                    Type: List Matrix Integer
--E 16

--S 17 of 68
r1 := irreducibleRepresentation([4,2],[1,2,4,5,3,6])
--R 
--R
--R        + 0   - 1  - 1   0    0    0    0    0    1 +
--R        |                                           |
--R        |- 1   0    0    0    0    0    0    0    0 |
--R        |                                           |
--R        | 1    1    1    0    0    0    0    0    0 |
--R        |                                           |
--R        | 0    1    0    0    0    0    0    0   - 1|
--R        |                                           |
--R   (4)  | 0    0    0    0    0    0    1    0    0 |
--R        |                                           |
--R        | 0    0    0    0    1    0    0    0    0 |
--R        |                                           |
--R        | 1    0    0    0    0    0   - 1  - 1   0 |
--R        |                                           |
--R        |- 1  - 1  - 1  - 1  - 1  - 1   0    0    0 |
--R        |                                           |
--R        + 0    0    0    1    0    0    0    0    0 +
--R                                                         Type: Matrix Integer
--E 17

--S 18 of 68
r2 := irreducibleRepresentation([4,2],[3,2,1,5,6,4])
--R 
--R
--R        + 0    0   - 1   0    0    0    0   - 1   0 +
--R        |                                           |
--R        | 1    0    1    0   - 1   0   - 1   0    0 |
--R        |                                           |
--R        | 0    0    0    0    1    0    0    0    0 |
--R        |                                           |
--R        | 0    0    0    0    0    0    0    1    0 |
--R        |                                           |
--R   (5)  |- 1   0    0   - 1   0    0    0    0    0 |
--R        |                                           |
--R        | 0    0    0    0    0    0    1    0    0 |
--R        |                                           |
--R        | 0    0   - 1   0    0   - 1   0   - 1  - 1|
--R        |                                           |
--R        | 0    0    0    0    0    0    0    0    1 |
--R        |                                           |
--R        + 0   - 1   0    0   - 1   0   - 1   0    0 +
--R                                                         Type: Matrix Integer
--E 18

--S 19 of 68
r3 := irreducibleRepresentation([4,2],[4,2,1,3,6,5])
--R 
--R
--R        +0   0    0   0   1    0    1    0    1 +
--R        |                                       |
--R        |0   0    0   0   0    1    0    1    0 |
--R        |                                       |
--R        |0   0    0   1   0    0    0    0    0 |
--R        |                                       |
--R        |0  - 1   0   0  - 1   0   - 1   0    0 |
--R        |                                       |
--R   (6)  |0   0   - 1  0   0   - 1   0   - 1  - 1|
--R        |                                       |
--R        |1   1    1   0   0    0    0    0    0 |
--R        |                                       |
--R        |0   0    0   0   0    0    0    0    1 |
--R        |                                       |
--R        |0   0    0   0   1    0    0    0    0 |
--R        |                                       |
--R        +0   0    0   0   0    1    0    0    0 +
--R                                                         Type: Matrix Integer
--E 19

--S 20 of 68
(r3 = r1*r2) :: Boolean
--R 
--R
--R   (7)  false
--R                                                                Type: Boolean
--E 20

--S 21 of 68
irreducibleRepresentation [4,4,1]
--R 
--R
--R   (8)
--R   [
--R   [
--R     [- 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, - 1, 0, 0, 0, 1, 0, - 1,
--R      0, - 1, - 1, - 1, 0, 1, 1, 0, 0, 0, 0, - 1, 0, - 1, 1, - 1, - 1, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, - 1, 0, 0, 0, 1, 1, 0,
--R      1, 1, 0, - 1, - 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, - 1, 0, - 1, 0, 1,
--R      0, 0, 1, 1, 0, 0, - 1, 0, - 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, - 1, 0, - 1,
--R      - 1, 0, 0, 0, 0, 1, 0, 0, - 1, 0, - 1, - 1, 0, 0, 0, - 1, 1, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, - 1,
--R      - 1, - 1, 0, 0, 1, 0, 0, 0, 0, 0, - 1, - 1, - 1, 1, - 1, - 1, - 1, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 1, 1, 0, 0, 0,
--R      0, - 1, 0, - 1, 1, - 1, - 1, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, 0, 1, 0,
--R      0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, - 1, 0, - 1,
--R      0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, - 1, 0,
--R      - 1, - 1, 0, 0, 0, - 1, 1, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
--R      0, - 1, - 1, - 1, 1, - 1, - 1, - 1, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, - 1, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 1, - 1, - 1, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
--R      0, 0, 0, 0, - 1, 0, 0, 0, - 1, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
--R      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
--R      0, 0, 0, 0, 0, - 1, 0, 0, 0, - 1, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
--R      0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, - 1, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      1, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, - 1]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 1, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 1, - 1, - 1, - 1]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, - 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 1]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, - 1, 0, 0, 0, - 1, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, - 1, 0, 0, 0, - 1, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, - 1, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, - 1]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
--R     ]
--R     ,
--R
--R   [
--R     [- 1, 0, - 1, - 1, 0, 0, 0, - 1, 0, - 1, 1, 0, 0, 1, - 1, 1, 1, - 1, 0, 0,
--R      0, - 1, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0,
--R      - 1, 0, - 1, 0, 0, - 1, - 1, 0, 0, 0, 0, - 1, - 1, - 1, 0, 0, - 1, 0, 0,
--R      0, 0, 0, 0, - 1, - 1, 0, - 2, - 1, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 1,
--R      1, 0]
--R     ,
--R
--R     [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, - 1, - 1, - 1, - 1, 0, 0, 0, 1, 1, 1, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, - 1, - 1, 0, 0, 0, 0, 0,
--R      0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,
--R      1, 1, - 1, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, 0]
--R     ,
--R
--R     [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
--R      1, - 1, 1, 1, - 1, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0,
--R      0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, 0]
--R     ,
--R
--R     [- 1, - 1, 0, 0, 0, - 1, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      1, - 1, - 1, 0, 0, 0, 1, 1, 1, - 1, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, 0,
--R      0, 1, 1, 0, 0, 0, 0, - 1, - 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0,
--R      - 1, - 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0]
--R     ,
--R
--R     [0, 0, - 1, - 1, - 1, 0, 0, - 1, - 1, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      - 1, - 1, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,
--R      - 1, - 1, - 1, - 1, 0, - 1, - 1, 0, 0, 0, 0, - 1, - 1, - 1, - 1, 0, - 1,
--R      - 1, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, - 1, - 1, 0, - 1, - 1, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0]
--R     ,
--R
--R     [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, - 2, - 1, - 1, 1, 0, 1, 1, 0, 1,
--R      1, 0, 1, 0, 0, - 1, - 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1,
--R      0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0]
--R     ,
--R
--R     [- 1, - 1, - 1, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, - 1, - 1, - 1, - 1,
--R      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [- 1, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, - 1, 0, - 1, 0, 0, 0,
--R      0, 0, - 1, 0, - 1, 0, 0, - 1, 0, - 1, 1, 1, - 1, 0, 0, 0, - 1, 0, 0, - 1,
--R      0, 0, - 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
--R     ,
--R
--R     [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, 0, 0, 0, 1, 1, 0, 0, - 1, - 1,
--R      0, 0, 0, 0, 1, 1, 1, - 1, - 1, - 1, - 1, 0, 0, 0, 1, - 1, 0, 0, 0, 0, 0,
--R      0, 0, 0, - 1, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, - 1, 0, 0, 1, 1, 1, 1,
--R      0, 1, 1, 0, - 1, - 1, - 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, - 1, 0, 1,
--R      1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, - 1, - 1, - 1, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, - 1, - 1, - 1, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, - 1, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, 0, 0, 0,
--R      0, 0, 0, 0, 0, - 1, - 1, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
--R      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0,
--R      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0,
--R      0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1,
--R      0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      - 1, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, - 1, 0, 0, 0, 0, 0,
--R      0, 0, - 1, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1,
--R      0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, - 1, 0, 0, 0, - 1, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, - 1, 0, 0, 0, 0,
--R      0, 0, 0, - 1, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      - 1, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, - 1, 0, 0, 0, - 1, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, - 1, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      - 1, 0, 1, - 1, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, - 1, - 1, 0,
--R      0, 0, 0, 0, 1, - 1, 0, 0, 0, - 1, - 1, - 1, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, - 1, 1, 1,
--R      1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, - 1, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, 0,
--R      0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0,
--R      0, - 1, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
--R      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1,
--R      0, 0, - 1, 0, 0, 0, - 1, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
--R      1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0,
--R      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0,
--R      0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1,
--R      0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [- 1, 0, - 1, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, - 1, 0, - 1,
--R      0, 0, - 1, - 1, 0, 0, 0, 0, - 1, - 1, - 1, 0, 0, - 1, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, - 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, - 1, - 1, 0, 0, 0, 0, 0, 0, 0,
--R      0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      - 1, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0,
--R      1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [- 1, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, 0, 0, 1, 1,
--R      0, 0, 0, 0, - 1, - 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, - 1, - 1, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1,
--R      - 1, - 1, 0, - 1, - 1, 0, 0, 0, 0, - 1, - 1, - 1, - 1, 0, - 1, - 1, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, - 1, 0, - 1, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, - 1, - 1, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, - 1, - 1, - 1, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, - 1, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0,
--R      0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      - 1, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, - 1, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, - 1, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
--R      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0,
--R      0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1,
--R      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0,
--R      0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
--R      1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, - 1, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, 0, 0, 0,
--R      1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, - 1, - 1, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1,
--R      - 1, - 1, - 1, 0, - 1, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0,
--R      0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1,
--R      0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, - 1, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
--R      0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, - 1, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1,
--R      - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1,
--R      - 1, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, - 1, 0, 0, - 1, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, - 1, 0, 0, - 1, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, - 1, 0, 0,
--R      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1,
--R      - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, - 1, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0,
--R      - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0,
--R      - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, - 1, - 1, - 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, - 1, - 1, 0, 0, 0, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, - 1, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, - 1, 0, 0, - 1, 0, 0, 0, - 1, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, - 1, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, - 1, 0,
--R      0, 0, 0, 0, 0, - 1, 0, 0, 0, - 1, 0, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1, 0,
--R      0, - 1, 0, 0, 0, - 1, 0, 0, 0, - 1, 0, 0]
--R     ,
--R
--R     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
--R      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, - 1,
--R      0, 0, - 1, 0, 0, 0, - 1, 0, 0, 0, - 1, 0]
--R     ]
--R     ]
--R                                                    Type: List Matrix Integer
--E 21

)clear all

--S 22 of 68
permutationRepresentation [2,3,1,4,6,5,11,10,7,8,9]
--R 
--R
--R        +0  0  1  0  0  0  0  0  0  0  0+
--R        |                               |
--R        |1  0  0  0  0  0  0  0  0  0  0|
--R        |                               |
--R        |0  1  0  0  0  0  0  0  0  0  0|
--R        |                               |
--R        |0  0  0  1  0  0  0  0  0  0  0|
--R        |                               |
--R        |0  0  0  0  0  1  0  0  0  0  0|
--R        |                               |
--R   (1)  |0  0  0  0  1  0  0  0  0  0  0|
--R        |                               |
--R        |0  0  0  0  0  0  0  0  1  0  0|
--R        |                               |
--R        |0  0  0  0  0  0  0  0  0  1  0|
--R        |                               |
--R        |0  0  0  0  0  0  0  0  0  0  1|
--R        |                               |
--R        |0  0  0  0  0  0  0  1  0  0  0|
--R        |                               |
--R        +0  0  0  0  0  0  1  0  0  0  0+
--R                                                         Type: Matrix Integer
--E 22

--S 23 of 68
gm2 := createGenericMatrix 2
--R 
--R
--R        +x     x   +
--R        | 1,1   1,2|
--R   (2)  |          |
--R        |x     x   |
--R        + 2,1   2,2+
--R                                              Type: Matrix Polynomial Integer
--E 23

--S 24 of 68
symmetricTensors (gm2,2)
--R 
--R
--R        +      2          2                       +
--R        |  x          x             x   x         |
--R        |   1,1        1,2           1,1 1,2      |
--R        |                                         |
--R   (3)  |      2          2                       |
--R        |  x          x             x   x         |
--R        |   2,1        2,2           2,1 2,2      |
--R        |                                         |
--R        |2x   x     2x   x     x   x    + x   x   |
--R        +  1,1 2,1    1,2 2,2   1,1 2,2    1,2 2,1+
--R                                              Type: Matrix Polynomial Integer
--E 24

--S 25 of 68
gm3 := createGenericMatrix 3
--R 
--R
--R        +x     x     x   +
--R        | 1,1   1,2   1,3|
--R        |                |
--R   (4)  |x     x     x   |
--R        | 2,1   2,2   2,3|
--R        |                |
--R        |x     x     x   |
--R        + 3,1   3,2   3,3+
--R                                              Type: Matrix Polynomial Integer
--E 25

--S 26 of 68
antisymmetricTensors (gm3,2)
--R 
--R
--R        +x   x    - x   x     x   x    - x   x     x   x    - x   x   +
--R        | 1,1 2,2    1,2 2,1   1,1 2,3    1,3 2,1   1,2 2,3    1,3 2,2|
--R        |                                                             |
--R   (5)  |x   x    - x   x     x   x    - x   x     x   x    - x   x   |
--R        | 1,1 3,2    1,2 3,1   1,1 3,3    1,3 3,1   1,2 3,3    1,3 3,2|
--R        |                                                             |
--R        |x   x    - x   x     x   x    - x   x     x   x    - x   x   |
--R        + 2,1 3,2    2,2 3,1   2,1 3,3    2,3 3,1   2,2 3,3    2,3 3,2+
--R                                              Type: Matrix Polynomial Integer
--E 26

--S 27 of 68
tensorProduct(gm2,gm2)
--R 
--R
--R        +     2                             2  +
--R        | x        x   x     x   x      x      |
--R        |  1,1      1,1 1,2   1,1 1,2    1,2   |
--R        |                                      |
--R        |x   x     x   x     x   x     x   x   |
--R        | 1,1 2,1   1,1 2,2   1,2 2,1   1,2 2,2|
--R   (6)  |                                      |
--R        |x   x     x   x     x   x     x   x   |
--R        | 1,1 2,1   1,2 2,1   1,1 2,2   1,2 2,2|
--R        |                                      |
--R        |     2                             2  |
--R        | x        x   x     x   x      x      |
--R        +  2,1      2,1 2,2   2,1 2,2    2,2   +
--R                                              Type: Matrix Polynomial Integer
--E 27

--S 28 of 68
)sh REP1
--R 
--R RepresentationPackage1 R: Ring  is a package constructor
--R Abbreviation for RepresentationPackage1 is REP1 
--R This constructor is exposed in this frame.
--I Issue )edit /research/research/s2/mnt/fedora5/../../src/algebra/REP1.spad to see algebra source code for REP1 
--R
--R------------------------------- Operations --------------------------------
--R antisymmetricTensors : (Matrix R,PositiveInteger) -> Matrix R if R has commutative *
--R antisymmetricTensors : (List Matrix R,PositiveInteger) -> List Matrix R if R has commutative *
--R createGenericMatrix : NonNegativeInteger -> Matrix Polynomial R
--R permutationRepresentation : (Permutation Integer,Integer) -> Matrix Integer
--R permutationRepresentation : List Integer -> Matrix Integer
--R permutationRepresentation : (List Permutation Integer,Integer) -> List Matrix Integer
--R permutationRepresentation : List List Integer -> List Matrix Integer
--R symmetricTensors : (Matrix R,PositiveInteger) -> Matrix R
--R symmetricTensors : (List Matrix R,PositiveInteger) -> List Matrix R
--R tensorProduct : (Matrix R,Matrix R) -> Matrix R
--R tensorProduct : (List Matrix R,List Matrix R) -> List Matrix R
--R tensorProduct : Matrix R -> Matrix R
--R tensorProduct : List Matrix R -> List Matrix R
--R
--E 28

)clear all

--S 29 of 68
r0 := irreducibleRepresentation [2,2,2,1,1];
--R 
--R
--R                                                    Type: List Matrix Integer
--E 29

--S 30 of 68
r28 := meatAxe (r0::(LIST MATRIX PF 2))
--R 
--R   Fingerprint element in generated algebra is singular
--R     A proper cyclic submodule is found.
--R     Transition matrix computed
--R     The inverse of the transition matrix computed
--R     Now transform the matrices
--R
--R   (2)
--R   [
--R      +0  1  1  1  1  1  1  0  0  1  1  1  0  0+
--R      |                                        |
--R      |1  0  1  1  1  0  0  1  1  1  0  0  1  1|
--R      |                                        |
--R      |1  1  0  1  0  1  0  0  1  0  1  0  0  1|
--R      |                                        |
--R      |1  1  1  0  0  0  1  1  0  0  0  1  1  0|
--R      |                                        |
--R      |1  1  0  0  0  1  1  1  1  1  1  1  1  1|
--R      |                                        |
--R      |1  0  1  0  1  0  1  0  1  1  1  1  0  1|
--R      |                                        |
--R      |1  0  0  1  1  1  0  1  0  1  1  1  1  0|
--R     [|                                        |,
--R      |0  1  1  0  1  1  0  1  0  1  1  0  0  0|
--R      |                                        |
--R      |0  1  0  1  1  0  1  0  1  1  0  1  0  0|
--R      |                                        |
--R      |1  1  0  0  1  0  0  0  0  0  0  0  0  0|
--R      |                                        |
--R      |1  0  1  0  0  1  0  0  0  0  0  0  0  0|
--R      |                                        |
--R      |1  0  0  1  0  0  1  0  0  0  0  0  0  0|
--R      |                                        |
--R      |0  1  1  0  0  0  0  1  0  0  0  0  0  0|
--R      |                                        |
--R      +0  1  0  1  0  0  0  0  1  0  0  0  0  0+
--R      +1  1  1  1  0  0  0  0  0  0  0  0  0  0+
--R      |                                        |
--R      |1  1  1  0  0  0  1  0  0  1  1  0  0  0|
--R      |                                        |
--R      |1  1  1  0  0  0  0  0  1  1  0  0  1  0|
--R      |                                        |
--R      |1  1  1  0  0  0  0  1  1  0  1  0  1  0|
--R      |                                        |
--R      |1  1  1  0  0  0  0  1  0  1  1  1  1  0|
--R      |                                        |
--R      |1  1  1  0  0  1  0  0  0  1  1  0  1  1|
--R      |                                        |
--R      |1  1  1  0  1  0  0  0  0  1  1  0  0  1|
--R      |                                        |]
--R      |1  1  0  0  0  0  0  0  0  0  1  1  1  1|
--R      |                                        |
--R      |1  0  1  0  0  0  0  0  0  1  0  1  0  1|
--R      |                                        |
--R      |0  0  0  1  0  0  1  0  0  1  1  1  1  0|
--R      |                                        |
--R      |0  0  0  1  0  0  0  0  1  1  1  0  1  1|
--R      |                                        |
--R      |0  0  0  1  0  0  0  1  1  1  1  0  0  1|
--R      |                                        |
--R      |0  0  0  0  0  0  1  0  1  0  1  1  1  1|
--R      |                                        |
--R      +0  0  0  0  0  0  1  1  1  1  0  1  0  1+
--R     ,
--R
--R      +1  0  0  0  0  0  0  0  1  1  1  1  1  1+
--R      |                                        |
--R      |0  1  0  0  0  0  0  0  1  1  1  0  0  0|
--R      |                                        |
--R      |0  0  1  0  0  1  1  0  1  0  0  1  0  0|
--R      |                                        |
--R      |0  0  0  1  0  1  0  1  0  1  0  0  1  0|
--R      |                                        |
--R      |0  0  0  0  1  0  1  1  1  1  0  0  0  1|
--R      |                                        |
--R      |0  0  0  0  0  1  1  1  1  1  0  1  1  0|
--R      |                                        |
--R      |0  0  0  0  0  1  1  1  1  0  1  1  0  1|
--R     [|                                        |,
--R      |0  0  0  0  0  1  1  1  0  1  1  0  1  1|
--R      |                                        |
--R      |0  0  0  0  0  1  1  0  1  1  1  1  0  0|
--R      |                                        |
--R      |0  0  0  0  0  1  0  1  1  1  1  0  1  0|
--R      |                                        |
--R      |0  0  0  0  0  0  1  1  1  1  1  1  1  0|
--R      |                                        |
--R      |0  0  0  0  0  0  0  0  0  0  0  0  1  1|
--R      |                                        |
--R      |0  0  0  0  0  0  0  0  0  0  0  1  0  1|
--R      |                                        |
--R      +0  0  0  0  0  0  0  0  0  0  0  0  0  1+
--R      +0  0  1  1  1  1  1  0  1  0  0  0  0  0+
--R      |                                        |
--R      |0  0  1  0  0  0  0  0  0  0  0  0  1  1|
--R      |                                        |
--R      |0  0  0  0  0  0  0  1  0  1  0  0  1  0|
--R      |                                        |
--R      |0  0  0  0  0  0  0  1  0  0  1  0  0  1|
--R      |                                        |
--R      |0  0  1  0  0  0  0  0  0  1  1  0  1  1|
--R      |                                        |
--R      |0  0  0  0  0  0  0  1  1  0  0  1  0  0|
--R      |                                        |
--R      |0  0  0  0  0  0  1  0  0  1  0  1  0  0|
--R      |                                        |]
--R      |1  1  0  0  0  1  0  0  0  0  1  1  0  0|
--R      |                                        |
--R      |0  0  1  1  0  0  1  0  1  0  0  0  1  0|
--R      |                                        |
--R      |1  0  1  0  1  1  0  0  1  0  0  0  0  1|
--R      |                                        |
--R      |1  0  1  1  1  0  0  0  1  0  0  0  1  1|
--R      |                                        |
--R      |0  0  1  1  0  0  1  1  1  1  0  1  1  0|
--R      |                                        |
--R      |0  1  1  0  1  1  0  1  1  0  1  1  0  1|
--R      |                                        |
--R      +0  1  1  1  1  0  0  0  1  1  1  1  1  1+
--R     ]
--R                                          Type: List List Matrix PrimeField 2
--E 30

--S 31 of 68
areEquivalent? (r28.1, r28.2)
--R 
--R   Dimensions of kernels differ
--R
--R   Representations are not equivalent.
--R
--R   (3)  [0]
--R                                                    Type: Matrix PrimeField 2
--E 31

--S 32 of 68
meatAxe r28.2
--R 
--R   Fingerprint element in generated algebra is non-singular
--R   Fingerprint element in generated algebra is singular
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R     We know that all the cyclic submodules generated by all
--R       non-trivial element of the singular matrix under view are
--R       not proper, hence Norton's irreducibility test can be done:
--R     The generated cyclic submodule was not proper
--R     Representation is irreducible, but we don't know
--R       whether it is absolutely irreducible
--R
--R   (4)
--R   [
--R      +1  0  0  0  0  0  0  0  0  0  0  0  0  0+
--R      |                                        |
--R      |0  1  0  0  0  0  0  0  0  0  0  0  0  0|
--R      |                                        |
--R      |0  0  1  0  0  0  0  0  0  0  0  0  0  0|
--R      |                                        |
--R      |0  0  0  1  0  0  0  0  0  0  0  0  0  0|
--R      |                                        |
--R      |0  0  0  0  1  0  0  0  0  0  0  0  0  0|
--R      |                                        |
--R      |0  0  1  1  0  1  1  1  1  1  0  0  0  0|
--R      |                                        |
--R      |0  0  1  0  1  1  1  1  1  0  1  0  0  0|
--R     [|                                        |,
--R      |0  0  0  1  1  1  1  1  0  1  1  0  0  0|
--R      |                                        |
--R      |1  1  1  0  1  1  1  0  1  1  1  0  0  0|
--R      |                                        |
--R      |1  1  0  1  1  1  0  1  1  1  1  0  0  0|
--R      |                                        |
--R      |1  1  0  0  0  0  1  1  1  1  1  0  0  0|
--R      |                                        |
--R      |1  0  1  0  0  1  1  0  1  0  1  0  1  0|
--R      |                                        |
--R      |1  0  0  1  0  1  0  1  0  1  1  1  0  0|
--R      |                                        |
--R      +1  0  0  0  1  0  1  1  0  0  0  1  1  1+
--R      +0  0  0  0  0  0  0  1  0  1  1  0  0  0+
--R      |                                        |
--R      |0  0  0  0  0  0  0  1  0  0  0  0  1  1|
--R      |                                        |
--R      |1  1  0  0  1  0  0  0  1  1  1  1  1  1|
--R      |                                        |
--R      |1  0  0  0  0  0  0  0  1  0  1  1  0  1|
--R      |                                        |
--R      |1  0  0  0  0  0  0  0  0  1  1  0  1  1|
--R      |                                        |
--R      |1  0  0  0  0  0  0  1  0  1  0  0  1  0|
--R      |                                        |
--R      |1  0  0  0  0  0  1  0  1  0  0  1  0  0|
--R      |                                        |]
--R      |0  0  1  1  0  1  0  0  0  0  0  1  1  0|
--R      |                                        |
--R      |1  0  0  0  0  1  0  0  1  1  1  1  1  1|
--R      |                                        |
--R      |0  0  1  0  1  0  1  0  0  0  0  1  0  1|
--R      |                                        |
--R      |0  0  0  1  1  0  0  1  0  0  0  0  1  1|
--R      |                                        |
--R      |0  0  0  0  0  1  1  1  0  0  0  1  1  1|
--R      |                                        |
--R      |0  1  1  0  1  0  0  0  1  0  1  1  0  1|
--R      |                                        |
--R      +0  1  0  1  1  0  0  0  0  1  1  0  1  1+
--R     ]
--R                                          Type: List List Matrix PrimeField 2
--E 32

--S 33 of 68 random generation, FAILURE OK.
isAbsolutelyIrreducible? r28.2
--R 
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra has
--R     one-dimensional kernel
--R     We know that all the cyclic submodules generated by all
--R       non-trivial element of the singular matrix under view are
--R       not proper, hence Norton's irreducibility test can be done:
--R     The generated cyclic submodule was not proper
--R     Representation is absolutely irreducible
--R
--R   (5)  true
--R                                                                Type: Boolean
--E 33

--S 34 of 68
ma := meatAxe r28.1
--R 
--R   Fingerprint element in generated algebra is singular
--R     The generated cyclic submodule was not proper
--R     A proper cyclic submodule is found.
--R     Transition matrix computed
--R     The inverse of the transition matrix computed
--R     Now transform the matrices
--R
--R   (6)
--R     +0  0  0  0  1  0  1  1+ +1  1  1  1  1  1  0  0+
--R     |                      | |                      |
--R     |0  0  0  0  0  1  0  1| |1  0  0  1  1  0  1  0|
--R     |                      | |                      |
--R     |0  0  0  0  0  0  1  1| |0  0  1  1  0  0  1  0|
--R     |                      | |                      |
--R     |0  0  0  0  0  0  0  1| |1  1  0  1  1  1  1  1|
--R   [[|                      |,|                      |],
--R     |1  0  1  0  0  0  0  0| |1  1  1  1  0  0  1  0|
--R     |                      | |                      |
--R     |0  1  0  1  0  0  0  0| |1  0  0  1  1  1  1  1|
--R     |                      | |                      |
--R     |0  0  1  1  0  0  0  0| |0  1  1  0  1  0  1  1|
--R     |                      | |                      |
--R     +0  0  0  1  0  0  0  0+ +1  0  0  1  0  1  0  1+
--R     +0  1  1  0  0  1+ +1  1  0  0  0  0+
--R     |                | |                |
--R     |1  0  1  0  0  1| |1  0  1  1  0  0|
--R     |                | |                |
--R     |1  1  0  0  0  1| |1  0  0  1  0  1|
--R    [|                |,|                |]]
--R     |0  0  0  1  0  0| |1  0  1  1  1  0|
--R     |                | |                |
--R     |0  0  0  0  1  0| |1  0  0  0  1  1|
--R     |                | |                |
--R     +1  1  1  0  0  0+ +0  1  1  1  0  1+
--R                                          Type: List List Matrix PrimeField 2
--E 34

--S 35 of 68 random generation, FAILURE OK.
isAbsolutelyIrreducible? ma.1
--R 
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra has
--R     one-dimensional kernel
--R     We know that all the cyclic submodules generated by all
--R       non-trivial element of the singular matrix under view are
--R       not proper, hence Norton's irreducibility test can be done:
--R     The generated cyclic submodule was not proper
--R     Representation is absolutely irreducible
--R
--R   (7)  true
--R                                                                Type: Boolean
--E 35

--S 36 of 68
isAbsolutelyIrreducible? ma.2
--R 
--R   Random element in generated algebra has
--R     one-dimensional kernel
--R     We know that all the cyclic submodules generated by all
--R       non-trivial element of the singular matrix under view are
--R       not proper, hence Norton's irreducibility test can be done:
--R     The generated cyclic submodule was not proper
--R     Representation is absolutely irreducible
--R
--R   (8)  true
--R                                                                Type: Boolean
--E 36

)clear all

--S 37 of 68
px : PERM PF 29 := cycles [[1,3,5],[7,11,9]]
--R 
--R
--R   (1)  (1 3 5)(7 11 9)
--R                                              Type: Permutation PrimeField 29
--E 37

--S 38 of 68
py : PERM PF 29 := cycles [[3,5,7,9]]
--R 
--R
--R   (2)  (3 5 7 9)
--R                                              Type: Permutation PrimeField 29
--E 38

--S 39 of 68
pz : PERM PF 29 := cycle [1,3,11]
--R 
--R
--R   (3)  (1 3 11)
--R                                              Type: Permutation PrimeField 29
--E 39

--S 40 of 68
px * pz
--R 
--R
--R   (4)  (1 5)(3 9 7 11)
--R                                              Type: Permutation PrimeField 29
--E 40

--S 41 of 68
py ** 3
--R 
--R
--R   (5)  (3 9 7 5)
--R                                              Type: Permutation PrimeField 29
--E 41

--S 42 of 68
inv px
--R 
--R
--R   (6)  (1 5 3)(7 9 11)
--R                                              Type: Permutation PrimeField 29
--E 42

--S 43 of 68
order px
--R 
--R
--R   (7)  3
--R                                                        Type: PositiveInteger
--E 43

--S 44 of 68
movedPoints py
--R 
--R
--R   (8)  {3,5,7,9}
--R                                                      Type: Set PrimeField 29
--E 44

--S 45 of 68
orbit ( pz , 3 )
--R 
--R
--R   (9)  {3,11,1}
--R                                                      Type: Set PrimeField 29
--E 45

--S 46 of 68
eval ( py , 7 )
--R 
--R
--R   (10)  9
--R                                                          Type: PrimeField 29
--E 46

--S 47 of 68
)sh PERM
--R 
--R Permutation S: SetCategory  is a domain constructor
--R Abbreviation for Permutation is PERM 
--R This constructor is exposed in this frame.
--I Issue )edit /research/research/s2/mnt/fedora5/../../src/algebra/PERM.spad to see algebra source code for PERM 
--R
--R------------------------------- Operations --------------------------------
--R ?*? : (%,%) -> %                      ?**? : (%,Integer) -> %
--R ?**? : (%,PositiveInteger) -> %       ?/? : (%,%) -> %
--R ?<? : (%,%) -> Boolean                ?=? : (%,%) -> Boolean
--R 1 : () -> %                           ?^? : (%,Integer) -> %
--R ?^? : (%,PositiveInteger) -> %        coerce : List S -> %
--R coerce : List List S -> %             coerce : % -> OutputForm
--R coerceImages : List S -> %            commutator : (%,%) -> %
--R conjugate : (%,%) -> %                cycle : List S -> %
--R cyclePartition : % -> Partition       cycles : List List S -> %
--R degree : % -> NonNegativeInteger      ?.? : (%,S) -> S
--R eval : (%,S) -> S                     even? : % -> Boolean
--R hash : % -> SingleInteger             inv : % -> %
--R latex : % -> String                   movedPoints : % -> Set S
--R odd? : % -> Boolean                   one? : % -> Boolean
--R orbit : (%,S) -> Set S                order : % -> NonNegativeInteger
--R recip : % -> Union(%,"failed")        sample : () -> %
--R sign : % -> Integer                   sort : List % -> List %
--R ?~=? : (%,%) -> Boolean              
--R ?**? : (%,NonNegativeInteger) -> %
--R ?<=? : (%,%) -> Boolean if S has FINITE or S has ORDSET
--R ?>? : (%,%) -> Boolean if S has FINITE or S has ORDSET
--R ?>=? : (%,%) -> Boolean if S has FINITE or S has ORDSET
--R ?^? : (%,NonNegativeInteger) -> %
--R coerceListOfPairs : List List S -> %
--R coercePreimagesImages : List List S -> %
--R fixedPoints : % -> Set S if S has FINITE
--R listRepresentation : % -> Record(preimage: List S,image: List S)
--R max : (%,%) -> % if S has FINITE or S has ORDSET
--R min : (%,%) -> % if S has FINITE or S has ORDSET
--R numberOfCycles : % -> NonNegativeInteger
--R
--E 47

)clear all

--S 48 of 68
genA6 : List PERM INT := [cycle [1,2,3],cycle [2,3,4,5,6]]
--R 
--R
--R   (1)  [(1 2 3),(2 3 4 5 6)]
--R                                               Type: List Permutation Integer
--E 48

--S 49 of 68
pRA6 := permutationRepresentation (genA6,6)
--R 
--R
--R         +0  0  1  0  0  0+ +1  0  0  0  0  0+
--R         |                | |                |
--R         |1  0  0  0  0  0| |0  0  0  0  0  1|
--R         |                | |                |
--R         |0  1  0  0  0  0| |0  1  0  0  0  0|
--R   (2)  [|                |,|                |]
--R         |0  0  0  1  0  0| |0  0  1  0  0  0|
--R         |                | |                |
--R         |0  0  0  0  1  0| |0  0  0  1  0  0|
--R         |                | |                |
--R         +0  0  0  0  0  1+ +0  0  0  0  1  0+
--R                                                    Type: List Matrix Integer
--E 49

--S 50 of 68
sp0 := meatAxe (pRA6::(List Matrix PF 2))
--R 
--R   Fingerprint element in generated algebra is singular
--R     A proper cyclic submodule is found.
--R     Transition matrix computed
--R     The inverse of the transition matrix computed
--R     Now transform the matrices
--R
--R          +0  0  1  0  0+ +1  0  0  0  0+
--R          |             | |             |
--R          |1  0  0  0  0| |1  1  1  1  1|
--R          |             | |             |
--R   (3)  [[|0  1  0  0  0|,|0  1  0  0  0|],[[1],[1]]]
--R          |             | |             |
--R          |0  0  0  1  0| |0  0  1  0  0|
--R          |             | |             |
--R          +0  0  0  0  1+ +0  0  0  1  0+
--R                                          Type: List List Matrix PrimeField 2
--E 50

--S 51 of 68
sp1 := meatAxe sp0.1
--R 
--R   Fingerprint element in generated algebra is singular
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R     We know that all the cyclic submodules generated by all
--R       non-trivial element of the singular matrix under view are
--R       not proper, hence Norton's irreducibility test can be done:
--R     A proper cyclic submodule is found.
--R     Transition matrix computed
--R     The inverse of the transition matrix computed
--R     Now transform the matrices
--R     Representation is not irreducible and it will be split:
--R
--R                    +0  1  0  0+ +0  1  1  1+
--R                    |          | |          |
--R                    |0  0  1  0| |1  1  0  1|
--R   (4)  [[[1],[1]],[|          |,|          |]]
--R                    |1  0  0  0| |1  1  1  0|
--R                    |          | |          |
--R                    +0  0  0  1+ +1  1  1  1+
--R                                          Type: List List Matrix PrimeField 2
--E 51

--S 52 of 68 random generation, FAILURE OK.
isAbsolutelyIrreducible? sp1.2
--R 
--R   Random element in generated algebra has
--R     one-dimensional kernel
--R     We know that all the cyclic submodules generated by all
--R       non-trivial element of the singular matrix under view are
--R       not proper, hence Norton's irreducibility test can be done:
--R     The generated cyclic submodule was not proper
--R     Representation is absolutely irreducible
--R
--I   (5)  true
--R                                                                Type: Boolean
--E 52

--S 53 of 68
d2211 := irreducibleRepresentation ([2,2,1,1],genA6)
--R 
--R
--R   (6)
--R    +1  0  0  - 1   1    0    0    0    0 + + 0    0   1   0   0  0   1   0  0+
--R    |                                     | |                                 |
--R    |0  1  0   1    0    1    0    0    0 | | 0    0   0   0   1  0  - 1  0  0|
--R    |                                     | |                                 |
--R    |0  0  1   0    1   - 1   0    0    0 | | 0    0   0   0   0  1   1   0  0|
--R    |                                     | |                                 |
--R    |0  0  0  - 1   0    0   - 1   0    0 | | 0    0   0   0   0  0   1   1  0|
--R    |                                     | |                                 |
--R   [|0  0  0   0   - 1   0    0   - 1   0 |,| 0    0   0   0   0  0  - 1  0  1|]
--R    |                                     | |                                 |
--R    |0  0  0   0    0   - 1   0    0   - 1| | 0    0   0   0   0  0   1   0  0|
--R    |                                     | |                                 |
--R    |0  0  0   1    0    0    0    0    0 | |- 1   0   0   0   0  0  - 1  0  0|
--R    |                                     | |                                 |
--R    |0  0  0   0    1    0    0    0    0 | | 0   - 1  0   0   0  0   1   0  0|
--R    |                                     | |                                 |
--R    +0  0  0   0    0    1    0    0    0 + + 0    0   0  - 1  0  0  - 1  0  0+
--R                                                    Type: List Matrix Integer
--E 53

--S 54 of 68
d2211m2 := (d2211::(List Matrix PF 2)); sp2 := meatAxe d2211m2
--R 
--R   Fingerprint element in generated algebra is singular
--R     A proper cyclic submodule is found.
--R     Transition matrix computed
--R     The inverse of the transition matrix computed
--R     Now transform the matrices
--R
--R                                      +1  0  0  0  0+ +1  1  1  0  0+
--R          +1  0  1  1+ +0  0  1  0+   |             | |             |
--R          |          | |          |   |0  1  1  1  1| |0  0  1  1  1|
--R          |0  1  0  1| |1  1  1  1|   |             | |             |
--R   (7)  [[|          |,|          |],[|0  1  1  0  0|,|1  0  0  1  0|]]
--R          |1  1  0  0| |1  0  1  1|   |             | |             |
--R          |          | |          |   |0  1  0  1  0| |0  0  1  0  1|
--R          +0  1  0  0+ +0  1  0  1+   |             | |             |
--R                                      +0  1  1  1  0+ +1  0  0  1  1+
--R                                          Type: List List Matrix PrimeField 2
--E 54

--S 55 of 68 random generation, FAILURE OK.
isAbsolutelyIrreducible? sp2.1
--R 
--R   Random element in generated algebra has
--R     one-dimensional kernel
--R     We know that all the cyclic submodules generated by all
--R       non-trivial element of the singular matrix under view are
--R       not proper, hence Norton's irreducibility test can be done:
--R     The generated cyclic submodule was not proper
--R     Representation is absolutely irreducible
--R
--R   (8)  true
--R                                                                Type: Boolean
--E 55

--S 56 of 68 random generation, FAILURE OK.
areEquivalent? (sp2.1, sp1.2)
--R 
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Dimensions of kernels differ
--R
--R   Representations are not equivalent.
--R
--R   (9)  [0]
--R                                                    Type: Matrix PrimeField 2
--E 56

--S 57 of 68
dA6d16 := tensorProduct(sp2.1,sp1.2); meatAxe dA6d16
--R 
--R   Fingerprint element in generated algebra is non-singular
--R   Fingerprint element in generated algebra is singular
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R   Fingerprint element in generated algebra is non-singular
--R   Fingerprint element in generated algebra is singular
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R   Fingerprint element in generated algebra is singular
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R     We know that all the cyclic submodules generated by all
--R       non-trivial element of the singular matrix under view are
--R       not proper, hence Norton's irreducibility test can be done:
--R     The generated cyclic submodule was not proper
--R     Representation is irreducible, but we don't know
--R       whether it is absolutely irreducible
--R
--R   (10)
--R   [
--R      +0  0  1  0  0  0  0  0  0  0  1  0  0  0  0  0+
--R      |                                              |
--R      |1  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0|
--R      |                                              |
--R      |0  1  0  0  0  0  0  0  0  1  0  0  0  0  0  0|
--R      |                                              |
--R      |0  0  0  1  0  0  0  0  0  0  0  1  0  0  0  0|
--R      |                                              |
--R      |0  0  0  0  0  0  1  0  0  0  1  0  0  0  1  0|
--R      |                                              |
--R      |0  0  0  0  1  0  0  0  1  0  0  0  1  0  0  0|
--R      |                                              |
--R      |0  0  0  0  0  1  0  0  0  1  0  0  0  1  0  0|
--R      |                                              |
--R      |0  0  0  0  0  0  0  1  0  0  0  1  0  0  0  1|
--R     [|                                              |,
--R      |0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0|
--R      |                                              |
--R      |1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0|
--R      |                                              |
--R      |0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0|
--R      |                                              |
--R      |0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0|
--R      |                                              |
--R      |0  0  1  0  0  0  1  0  0  0  0  0  0  0  0  0|
--R      |                                              |
--R      |1  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0|
--R      |                                              |
--R      |0  1  0  0  0  1  0  0  0  0  0  0  0  0  0  0|
--R      |                                              |
--R      +0  0  0  1  0  0  0  1  0  0  0  0  0  0  0  0+
--R      +0  0  0  0  0  1  1  1  0  1  1  1  0  0  0  0+
--R      |                                              |
--R      |0  0  0  0  1  1  1  1  1  1  1  1  0  0  0  0|
--R      |                                              |
--R      |0  0  0  0  1  0  1  1  1  0  1  1  0  0  0  0|
--R      |                                              |
--R      |0  0  0  0  1  1  0  1  1  1  0  1  0  0  0  0|
--R      |                                              |
--R      |0  0  0  0  0  1  1  1  0  0  0  0  0  1  1  1|
--R      |                                              |
--R      |0  0  0  0  1  1  1  1  0  0  0  0  1  1  1  1|
--R      |                                              |
--R      |0  0  0  0  1  0  1  1  0  0  0  0  1  0  1  1|
--R      |                                              |
--R      |0  0  0  0  1  1  0  1  0  0  0  0  1  1  0  1|
--R      |                                              |]
--R      |0  1  1  1  0  1  1  1  0  1  1  1  0  0  0  0|
--R      |                                              |
--R      |1  1  1  1  1  1  1  1  1  1  1  1  0  0  0  0|
--R      |                                              |
--R      |1  0  1  1  1  0  1  1  1  0  1  1  0  0  0  0|
--R      |                                              |
--R      |1  1  0  1  1  1  0  1  1  1  0  1  0  0  0  0|
--R      |                                              |
--R      |0  0  0  0  0  1  1  1  0  1  1  1  0  1  1  1|
--R      |                                              |
--R      |0  0  0  0  1  1  1  1  1  1  1  1  1  1  1  1|
--R      |                                              |
--R      |0  0  0  0  1  0  1  1  1  0  1  1  1  0  1  1|
--R      |                                              |
--R      +0  0  0  0  1  1  0  1  1  1  0  1  1  1  0  1+
--R     ]
--R                                          Type: List List Matrix PrimeField 2
--E 57

--S 58 of 68
isAbsolutelyIrreducible? dA6d16
--R 
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   We have not found a one-dimensional kernel so far,
--R     as we do a random search you could try again
--R
--R   (11)  false
--R                                                                Type: Boolean
--E 58

--S 59 of 68
sp3 := meatAxe (dA6d16 :: (List Matrix FF(2,2)))
--R 
--R   Fingerprint element in generated algebra is non-singular
--R   Fingerprint element in generated algebra is singular
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R   Fingerprint element in generated algebra is non-singular
--R   Fingerprint element in generated algebra is singular
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R   Fingerprint element in generated algebra is singular
--R     The generated cyclic submodule was not proper
--R     The generated cyclic submodule was not proper
--R     A proper cyclic submodule is found.
--R     Transition matrix computed
--R     The inverse of the transition matrix computed
--R     Now transform the matrices
--R
--R   (12)
--R   [
--R      +%A + 1  %A + 1    0       %A      1       %A      %A    %A + 1+
--R      |                                                              |
--R      |  %A      0     %A + 1  %A + 1    1     %A + 1  %A + 1    %A  |
--R      |                                                              |
--R      |  %A    %A + 1    %A      0       1       %A    %A + 1    0   |
--R      |                                                              |
--R      |  0       %A    %A + 1    %A      0       1       1       0   |
--R     [|                                                              |,
--R      |  %A      %A    %A + 1    1     %A + 1    %A      0       %A  |
--R      |                                                              |
--R      |%A + 1    %A    %A + 1    1       %A      0       %A    %A + 1|
--R      |                                                              |
--R      |  1       1       1       0     %A + 1  %A + 1    %A      0   |
--R      |                                                              |
--R      +  0     %A + 1    %A      0       0       %A    %A + 1  %A + 1+
--R      +  0     %A + 1  %A + 1    %A    1     1       0       %A  +
--R      |                                                          |
--R      |%A + 1  %A + 1    1       0     1   %A + 1    1     %A + 1|
--R      |                                                          |
--R      |  %A      0       1       1     %A  %A + 1  %A + 1    0   |
--R      |                                                          |
--R      |  %A      1       0       %A    %A    0       1       %A  |
--R      |                                                          |]
--R      |  1       1       0     %A + 1  0     1       1       0   |
--R      |                                                          |
--R      |  1       %A      1       0     1     0       0       %A  |
--R      |                                                          |
--R      |%A + 1    0       1       1     0     %A    %A + 1    1   |
--R      |                                                          |
--R      +%A + 1    %A      %A    %A + 1  0   %A + 1    %A      0   +
--R     ,
--R
--R      +%A + 1    %A      %A      0       %A      1     %A + 1    0   +
--R      |                                                              |
--R      |%A + 1    1       0     %A + 1    1     %A + 1    1       %A  |
--R      |                                                              |
--R      |  1       1       %A      %A      1       %A      1     %A + 1|
--R      |                                                              |
--R      |  1       0       1     %A + 1  %A + 1    0       %A      1   |
--R     [|                                                              |,
--R      |  1       1       1       0     %A + 1  %A + 1    %A      0   |
--R      |                                                              |
--R      |%A + 1    %A      %A      1     %A + 1    1       1     %A + 1|
--R      |                                                              |
--R      |%A + 1  %A + 1    %A      1       0       1       %A      %A  |
--R      |                                                              |
--R      +  %A      0     %A + 1    0       1       0       1       %A  +
--R      +  1     1     %A    %A + 1    0       %A    %A + 1  %A + 1+
--R      |                                                          |
--R      |%A + 1  0     0       1     %A + 1    1       1     %A + 1|
--R      |                                                          |
--R      |  %A    0     1       0     %A + 1    0     %A + 1    1   |
--R      |                                                          |
--R      |  1     1   %A + 1    %A      %A      %A      1       0   |
--R      |                                                          |]
--R      |  1     %A    0       1       1       %A      1       0   |
--R      |                                                          |
--R      |  1     0     1     %A + 1    0     %A + 1    1     %A + 1|
--R      |                                                          |
--R      |  0     1   %A + 1    1       1     %A + 1  %A + 1    1   |
--R      |                                                          |
--R      +  %A    %A  %A + 1  %A + 1    %A      %A      0       1   +
--R     ]
--R                                      Type: List List Matrix FiniteField(2,2)
--E 59

--S 60 of 68 random generation, FAILURE OK.
isAbsolutelyIrreducible? sp3.1
--R 
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra has
--R     one-dimensional kernel
--R     We know that all the cyclic submodules generated by all
--R       non-trivial element of the singular matrix under view are
--R       not proper, hence Norton's irreducibility test can be done:
--R     The generated cyclic submodule was not proper
--R     Representation is absolutely irreducible
--R
--R   (13)  true
--R                                                                Type: Boolean
--E 60

--S 61 of 68 random generation, FAILURE OK.
isAbsolutelyIrreducible? sp3.2
--R 
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra has
--R     one-dimensional kernel
--R     We know that all the cyclic submodules generated by all
--R       non-trivial element of the singular matrix under view are
--R       not proper, hence Norton's irreducibility test can be done:
--R     The generated cyclic submodule was not proper
--R     Representation is absolutely irreducible
--R
--R   (14)  true
--R                                                                Type: Boolean
--E 61

--S 62 of 68 random generation, FAILURE OK.
areEquivalent? (sp3.1,sp3.2)
--R 
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra does
--R     not have a one-dimensional kernel
--R   Random element in generated algebra has
--R     one-dimensional kernel
--R     There is no isomorphism, as the only possible one
--R       fails to do the necessary base change
--R
--R   Representations are not equivalent.
--R
--R   (15)  [0]
--R                                                Type: Matrix FiniteField(2,2)
--E 62

--S 63 of 68
sp0.2
--R 
--R
--R   (16)  [[1],[1]]
--R                                               Type: List Matrix PrimeField 2
--E 63

--S 64 of 68
sp1.2
--R 
--R
--R          +0  1  0  0+ +0  1  1  1+
--R          |          | |          |
--R          |0  0  1  0| |1  1  0  1|
--R   (17)  [|          |,|          |]
--R          |1  0  0  0| |1  1  1  0|
--R          |          | |          |
--R          +0  0  0  1+ +1  1  1  1+
--R                                               Type: List Matrix PrimeField 2
--E 64

--S 65 of 68
sp2.1
--R 
--R
--R          +1  0  1  1+ +0  0  1  0+
--R          |          | |          |
--R          |0  1  0  1| |1  1  1  1|
--R   (18)  [|          |,|          |]
--R          |1  1  0  0| |1  0  1  1|
--R          |          | |          |
--R          +0  1  0  0+ +0  1  0  1+
--R                                               Type: List Matrix PrimeField 2
--E 65

--S 66 of 68
sp3.1
--R 
--R
--R   (19)
--R    +%A + 1  %A + 1    0       %A      1       %A      %A    %A + 1+
--R    |                                                              |
--R    |  %A      0     %A + 1  %A + 1    1     %A + 1  %A + 1    %A  |
--R    |                                                              |
--R    |  %A    %A + 1    %A      0       1       %A    %A + 1    0   |
--R    |                                                              |
--R    |  0       %A    %A + 1    %A      0       1       1       0   |
--R   [|                                                              |,
--R    |  %A      %A    %A + 1    1     %A + 1    %A      0       %A  |
--R    |                                                              |
--R    |%A + 1    %A    %A + 1    1       %A      0       %A    %A + 1|
--R    |                                                              |
--R    |  1       1       1       0     %A + 1  %A + 1    %A      0   |
--R    |                                                              |
--R    +  0     %A + 1    %A      0       0       %A    %A + 1  %A + 1+
--R    +  0     %A + 1  %A + 1    %A    1     1       0       %A  +
--R    |                                                          |
--R    |%A + 1  %A + 1    1       0     1   %A + 1    1     %A + 1|
--R    |                                                          |
--R    |  %A      0       1       1     %A  %A + 1  %A + 1    0   |
--R    |                                                          |
--R    |  %A      1       0       %A    %A    0       1       %A  |
--R    |                                                          |]
--R    |  1       1       0     %A + 1  0     1       1       0   |
--R    |                                                          |
--R    |  1       %A      1       0     1     0       0       %A  |
--R    |                                                          |
--R    |%A + 1    0       1       1     0     %A    %A + 1    1   |
--R    |                                                          |
--R    +%A + 1    %A      %A    %A + 1  0   %A + 1    %A      0   +
--R                                           Type: List Matrix FiniteField(2,2)
--E 66

--S 67 of 68
sp3.2
--R 
--R
--R   (20)
--R    +%A + 1    %A      %A      0       %A      1     %A + 1    0   +
--R    |                                                              |
--R    |%A + 1    1       0     %A + 1    1     %A + 1    1       %A  |
--R    |                                                              |
--R    |  1       1       %A      %A      1       %A      1     %A + 1|
--R    |                                                              |
--R    |  1       0       1     %A + 1  %A + 1    0       %A      1   |
--R   [|                                                              |,
--R    |  1       1       1       0     %A + 1  %A + 1    %A      0   |
--R    |                                                              |
--R    |%A + 1    %A      %A      1     %A + 1    1       1     %A + 1|
--R    |                                                              |
--R    |%A + 1  %A + 1    %A      1       0       1       %A      %A  |
--R    |                                                              |
--R    +  %A      0     %A + 1    0       1       0       1       %A  +
--R    +  1     1     %A    %A + 1    0       %A    %A + 1  %A + 1+
--R    |                                                          |
--R    |%A + 1  0     0       1     %A + 1    1       1     %A + 1|
--R    |                                                          |
--R    |  %A    0     1       0     %A + 1    0     %A + 1    1   |
--R    |                                                          |
--R    |  1     1   %A + 1    %A      %A      %A      1       0   |
--R    |                                                          |]
--R    |  1     %A    0       1       1       %A      1       0   |
--R    |                                                          |
--R    |  1     0     1     %A + 1    0     %A + 1    1     %A + 1|
--R    |                                                          |
--R    |  0     1   %A + 1    1       1     %A + 1  %A + 1    1   |
--R    |                                                          |
--R    +  %A    %A  %A + 1  %A + 1    %A      %A      0       1   +
--R                                           Type: List Matrix FiniteField(2,2)
--E 67

--S 68 of 68
dA6d16
--R 
--R
--R   (21)
--R    +0  1  0  0  0  0  0  0  0  1  0  0  0  1  0  0+
--R    |                                              |
--R    |0  0  1  0  0  0  0  0  0  0  1  0  0  0  1  0|
--R    |                                              |
--R    |1  0  0  0  0  0  0  0  1  0  0  0  1  0  0  0|
--R    |                                              |
--R    |0  0  0  1  0  0  0  0  0  0  0  1  0  0  0  1|
--R    |                                              |
--R    |0  0  0  0  0  1  0  0  0  0  0  0  0  1  0  0|
--R    |                                              |
--R    |0  0  0  0  0  0  1  0  0  0  0  0  0  0  1  0|
--R    |                                              |
--R    |0  0  0  0  1  0  0  0  0  0  0  0  1  0  0  0|
--R    |                                              |
--R    |0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  1|
--R   [|                                              |,
--R    |0  1  0  0  0  1  0  0  0  0  0  0  0  0  0  0|
--R    |                                              |
--R    |0  0  1  0  0  0  1  0  0  0  0  0  0  0  0  0|
--R    |                                              |
--R    |1  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0|
--R    |                                              |
--R    |0  0  0  1  0  0  0  1  0  0  0  0  0  0  0  0|
--R    |                                              |
--R    |0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0|
--R    |                                              |
--R    |0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0|
--R    |                                              |
--R    |0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0|
--R    |                                              |
--R    +0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0+
--R    +0  0  0  0  0  0  0  0  0  1  1  1  0  0  0  0+
--R    |                                              |
--R    |0  0  0  0  0  0  0  0  1  1  0  1  0  0  0  0|
--R    |                                              |
--R    |0  0  0  0  0  0  0  0  1  1  1  0  0  0  0  0|
--R    |                                              |
--R    |0  0  0  0  0  0  0  0  1  1  1  1  0  0  0  0|
--R    |                                              |
--R    |0  1  1  1  0  1  1  1  0  1  1  1  0  1  1  1|
--R    |                                              |
--R    |1  1  0  1  1  1  0  1  1  1  0  1  1  1  0  1|
--R    |                                              |
--R    |1  1  1  0  1  1  1  0  1  1  1  0  1  1  1  0|
--R    |                                              |
--R    |1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1|
--R    |                                              |]
--R    |0  1  1  1  0  0  0  0  0  1  1  1  0  1  1  1|
--R    |                                              |
--R    |1  1  0  1  0  0  0  0  1  1  0  1  1  1  0  1|
--R    |                                              |
--R    |1  1  1  0  0  0  0  0  1  1  1  0  1  1  1  0|
--R    |                                              |
--R    |1  1  1  1  0  0  0  0  1  1  1  1  1  1  1  1|
--R    |                                              |
--R    |0  0  0  0  0  1  1  1  0  0  0  0  0  1  1  1|
--R    |                                              |
--R    |0  0  0  0  1  1  0  1  0  0  0  0  1  1  0  1|
--R    |                                              |
--R    |0  0  0  0  1  1  1  0  0  0  0  0  1  1  1  0|
--R    |                                              |
--R    +0  0  0  0  1  1  1  1  0  0  0  0  1  1  1  1+
--R                                               Type: List Matrix PrimeField 2
--E 68
)spool 
)lisp (bye)
 
@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}

 
