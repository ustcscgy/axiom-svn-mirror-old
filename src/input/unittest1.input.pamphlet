\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{\$SPAD/src/input unittest1.input}
\author{Timothy Daly}
\maketitle
\begin{abstract}
Unit test the user level commands
\end{abstract}
\eject
\tableofcontents
\eject
<<*>>=
)set break resume
)sys rm -f unittest1.output
)spool unittest1.output
)set mes auto off
)clear all

--S 1 of 47
)with API
--R   )library cannot find the file API.
--E 1

--S 2 of 47
)apropos matrix
--R
--ROperations whose names satisfy the above pattern(s):
--R
--RbezoutMatrix                       createGenericMatrix                
--RcreateMultiplicationMatrix         diagonalMatrix                     
--ReigenMatrix                        firstUncouplingMatrix              
--RgetMultiplicationMatrix            idealiserMatrix                    
--RidentityMatrix                     identitySquareMatrix               
--RintegralDerivationMatrix           integralMatrix                     
--RintegralMatrixAtInfinity           inverseIntegralMatrix              
--RinverseIntegralMatrixAtInfinity    leftTraceMatrix                    
--RlinearMatrix                       mapMatrixIfCan                     
--Rmatrix                             matrixConcat3D                     
--RmatrixDimensions                   matrixGcd                          
--RrectangularMatrix                  rightTraceMatrix                   
--RscalarMatrix                       setsubMatrix!                      
--RsquareMatrix                       subMatrix                          
--RsylvesterMatrix                    traceMatrix                        
--RwronskianMatrix                    zeroMatrix                         
--RzeroSquareMatrix                   
--R   
--R      To get more information about an operation such as squareMatrix ,
--R      issue the command )display op squareMatrix 
--R------------------------------- Categories --------------------------------
--R
--RCategories with names matching patterns:
--R     matrix 
--R
--R FMC      FortranMatrixCategory
--R FMFUN    FortranMatrixFunctionCategory
--R MATCAT   MatrixCategory               RMATCAT  RectangularMatrixCategory
--R SMATCAT  SquareMatrixCategory
--R--------------------------------- Domains ---------------------------------
--R
--RDomains with names matching patterns:
--R     matrix 
--R
--R DHMATRIX DenavitHartenbergMatrix      DPMM     DirectProductMatrixModule
--R IMATRIX  IndexedMatrix                LSQM     LieSquareMatrix
--R M3D      ThreeDimensionalMatrix       MATCAT-  MatrixCategory&
--R MATRIX   Matrix                       RMATCAT- RectangularMatrixCategory&
--R RMATRIX  RectangularMatrix            SMATCAT- SquareMatrixCategory&
--R SQMATRIX SquareMatrix
--R-------------------------------- Packages ---------------------------------
--R
--RPackages with names matching patterns:
--R     matrix 
--R
--R BEZOUT   BezoutMatrix                 CVMP     CoerceVectorMatrixPackage
--R IMATLIN  InnerMatrixLinearAlgebraFunctions
--R IMATQF   InnerMatrixQuotientFieldFunctions
--R LSMP     LinearSystemMatrixPackage    LSMP1    LinearSystemMatrixPackage1
--R MATCAT2  MatrixCategoryFunctions2     MATLIN   MatrixLinearAlgebraFunctions
--R MATSTOR  StorageEfficientMatrixOperations
--R MCDEN    MatrixCommonDenominator      NAGF01   NagMatrixOperationsPackage
--R RMCAT2   RectangularMatrixCategoryFunctions2
--R TRIMAT   TriangularMatrixOperations
--R--------------- System Commands for User Level: development ---------------
--R
--RNo system commands at this level matching patterns:
--R     matrix 
--R
--R------------------------- System Command Synonyms -------------------------
--R
--R   No user-defined synonyms satisfying patterns:
--R       matrix 
--R
--E 2

--S 3 of 47
)what categories set
--R 
--R------------------------------- Categories --------------------------------
--R
--RCategories with names matching patterns:
--R     set 
--R
--R CACHSET  CachableSet                  FSAGG    FiniteSetAggregate
--R MSETAGG  MultisetAggregate
--R NTSCAT   NormalizedTriangularSetCategory
--R OMSAGG   OrderedMultisetAggregate     ORDSET   OrderedSet
--R PSETCAT  PolynomialSetCategory        RSETCAT  RegularTriangularSetCategory
--R SETAGG   SetAggregate                 SETCAT   SetCategory
--R SFRTCAT  SquareFreeRegularTriangularSetCategory
--R SNTSCAT  SquareFreeNormalizedTriangularSetCategory
--R TSETCAT  TriangularSetCategory
--E 3

--S 4 of 47
)what commands set
--R 
--R--------------- System Commands for User Level: development ---------------
--R
--RSystem commands at this level matching patterns:
--R     set 
--R
--Rset    
--R 
--E 4

--S 5 of 47
)what domains set
--R 
--R--------------------------------- Domains ---------------------------------
--R
--RDomains with names matching patterns:
--R     set 
--R
--R FSAGG-   FiniteSetAggregate&          GPOLSET  GeneralPolynomialSet
--R GSTBL    GeneralSparseTable           GTSET    GeneralTriangularSet
--R MKCHSET  MakeCachableSet              MSET     Multiset
--R ORDSET-  OrderedSet&                  OSI      OrdSetInts
--R PSETCAT- PolynomialSetCategory&       QALGSET  QuasiAlgebraicSet
--R REGSET   RegularTriangularSet
--R RSETCAT- RegularTriangularSetCategory&
--R RULESET  Ruleset                      SAOS     SingletonAsOrderedSet
--R SET      Set                          SETAGG-  SetAggregate&
--R SETCAT-  SetCategory&                 SETMN    SetOfMIntegersInOneToN
--R SREGSET  SquareFreeRegularTriangularSet
--R STBL     SparseTable                  TSETCAT- TriangularSetCategory&
--R WUTSET   WuWenTsunTriangularSet
--E 5

--S 6 of 47
)what operations set
--R 
--R
--ROperations whose names satisfy the above pattern(s):
--R
--ROMsetEncoding                                   
--RbasicSet                                        
--RcharacteristicSet                               
--RcrushedSet                                      
--Rfactorset                                       
--RfirstSubsetGray                                 
--RinternalSubPolSet?                              
--RinternalZeroSetSplit                            
--RinvertibleSet                                   
--RmedialSet                                       
--Rminset                                          
--Rmultiset                                        
--RnextSubsetGray                                  
--Roverset?                                        
--Rqsetelt!                                        
--RquasiAlgebraicSet                               
--Rreset                                           
--RresetAttributeButtons                           
--RresetBadValues                                  
--RresetNew                                        
--RresetVariableOrder                              
--RrewriteSetByReducingWithParticularGenerators    
--RrewriteSetWithReduction                         
--RroughBasicSet                                   
--Rruleset                                         
--Rset                                             
--RsetAdaptive                                     
--RsetAdaptive3D                                   
--RsetAttributeButtonStep                          
--RsetButtonValue                                  
--RsetClipValue                                    
--RsetClosed                                       
--RsetColumn!                                      
--RsetCondition!                                   
--RsetDifference                                   
--RsetEmpty!                                       
--RsetEpilogue!                                    
--RsetErrorBound                                   
--RsetFieldInfo                                    
--RsetFormula!                                     
--RsetImagSteps                                    
--RsetIntersection                                 
--RsetLabelValue                                   
--RsetLegalFortranSourceExtensions                 
--RsetMaxPoints                                    
--RsetMaxPoints3D                                  
--RsetMinPoints                                    
--RsetMinPoints3D                                  
--RsetOfMinN                                       
--RsetOrder                                        
--RsetPoly                                         
--RsetPosition                                     
--RsetPredicates                                   
--RsetPrologue!                                    
--RsetProperties                                   
--RsetProperty                                     
--RsetRealSteps                                    
--RsetRow!                                         
--RsetScreenResolution                             
--RsetScreenResolution3D                           
--RsetStatus                                       
--RsetStatus!                                      
--RsetTex!                                         
--RsetTopPredicate                                 
--RsetUnion                                        
--RsetValue!                                       
--RsetVariableOrder                                
--Rsetchildren!                                    
--Rsetelt                                          
--Rsetelt!                                         
--Rsetfirst!                                       
--Rsetlast!                                        
--Rsetleaves!                                      
--Rsetleft!                                        
--Rsetnext!                                        
--Rsetprevious!                                    
--Rsetref                                          
--Rsetrest!                                        
--Rsetright!                                       
--RsetsubMatrix!                                   
--Rsetvalue!                                       
--RstartTableInvSet!                               
--RstopTableInvSet!                                
--RstoseInvertibleSet                              
--RstoseInvertibleSetreg                           
--RstoseInvertibleSetsqfreg                        
--RsubPolSet?                                      
--RsubSet                                          
--RsubTriSet?                                      
--Rsubset?                                         
--RtoseInvertibleSet                               
--RzeroSetSplit                                    
--RzeroSetSplitIntoTriangularSystems               
--R   
--R      To get more information about an operation such as ruleset , 
--R      issue the command )display op ruleset 
--E 6

--S 7 of 47
)what packages set
--R 
--R-------------------------------- Packages ---------------------------------
--R
--RPackages with names matching patterns:
--R     set 
--R
--R FSAGG2   FiniteSetAggregateFunctions2 LAZM3PK  LazardSetSolvingPackage
--R PSETPK   PolynomialSetUtilitiesPackage
--R QALGSET2 QuasiAlgebraicSet2
--R RSDCMPK  RegularSetDecompositionPackage
--R RSETGCD  RegularTriangularSetGcdPackage
--R SFRGCD   SquareFreeRegularTriangularSetGcdPackage
--R SRDCMPK  SquareFreeRegularSetDecompositionPackage
--E 7

--S 8 of 47
)what synonym set
--R 
--R------------------------- System Command Synonyms -------------------------
--R
--R   No user-defined synonyms satisfying patterns:
--R       set 
--R
--E 8

--S 9 of 47
)what things set
--R 
--R
--ROperations whose names satisfy the above pattern(s):
--R
--ROMsetEncoding                                   
--RbasicSet                                        
--RcharacteristicSet                               
--RcrushedSet                                      
--Rfactorset                                       
--RfirstSubsetGray                                 
--RinternalSubPolSet?                              
--RinternalZeroSetSplit                            
--RinvertibleSet                                   
--RmedialSet                                       
--Rminset                                          
--Rmultiset                                        
--RnextSubsetGray                                  
--Roverset?                                        
--Rqsetelt!                                        
--RquasiAlgebraicSet                               
--Rreset                                           
--RresetAttributeButtons                           
--RresetBadValues                                  
--RresetNew                                        
--RresetVariableOrder                              
--RrewriteSetByReducingWithParticularGenerators    
--RrewriteSetWithReduction                         
--RroughBasicSet                                   
--Rruleset                                         
--Rset                                             
--RsetAdaptive                                     
--RsetAdaptive3D                                   
--RsetAttributeButtonStep                          
--RsetButtonValue                                  
--RsetClipValue                                    
--RsetClosed                                       
--RsetColumn!                                      
--RsetCondition!                                   
--RsetDifference                                   
--RsetEmpty!                                       
--RsetEpilogue!                                    
--RsetErrorBound                                   
--RsetFieldInfo                                    
--RsetFormula!                                     
--RsetImagSteps                                    
--RsetIntersection                                 
--RsetLabelValue                                   
--RsetLegalFortranSourceExtensions                 
--RsetMaxPoints                                    
--RsetMaxPoints3D                                  
--RsetMinPoints                                    
--RsetMinPoints3D                                  
--RsetOfMinN                                       
--RsetOrder                                        
--RsetPoly                                         
--RsetPosition                                     
--RsetPredicates                                   
--RsetPrologue!                                    
--RsetProperties                                   
--RsetProperty                                     
--RsetRealSteps                                    
--RsetRow!                                         
--RsetScreenResolution                             
--RsetScreenResolution3D                           
--RsetStatus                                       
--RsetStatus!                                      
--RsetTex!                                         
--RsetTopPredicate                                 
--RsetUnion                                        
--RsetValue!                                       
--RsetVariableOrder                                
--Rsetchildren!                                    
--Rsetelt                                          
--Rsetelt!                                         
--Rsetfirst!                                       
--Rsetlast!                                        
--Rsetleaves!                                      
--Rsetleft!                                        
--Rsetnext!                                        
--Rsetprevious!                                    
--Rsetref                                          
--Rsetrest!                                        
--Rsetright!                                       
--RsetsubMatrix!                                   
--Rsetvalue!                                       
--RstartTableInvSet!                               
--RstopTableInvSet!                                
--RstoseInvertibleSet                              
--RstoseInvertibleSetreg                           
--RstoseInvertibleSetsqfreg                        
--RsubPolSet?                                      
--RsubSet                                          
--RsubTriSet?                                      
--Rsubset?                                         
--RtoseInvertibleSet                               
--RzeroSetSplit                                    
--RzeroSetSplitIntoTriangularSystems               
--R   
--R      To get more information about an operation such as ruleset , 
--R      issue the command )display op ruleset 
--R------------------------------- Categories --------------------------------
--R
--RCategories with names matching patterns:
--R     set 
--R
--R CACHSET  CachableSet                  FSAGG    FiniteSetAggregate
--R MSETAGG  MultisetAggregate
--R NTSCAT   NormalizedTriangularSetCategory
--R OMSAGG   OrderedMultisetAggregate     ORDSET   OrderedSet
--R PSETCAT  PolynomialSetCategory        RSETCAT  RegularTriangularSetCategory
--R SETAGG   SetAggregate                 SETCAT   SetCategory
--R SFRTCAT  SquareFreeRegularTriangularSetCategory
--R SNTSCAT  SquareFreeNormalizedTriangularSetCategory
--R TSETCAT  TriangularSetCategory
--R--------------------------------- Domains ---------------------------------
--R
--RDomains with names matching patterns:
--R     set 
--R
--R FSAGG-   FiniteSetAggregate&          GPOLSET  GeneralPolynomialSet
--R GSTBL    GeneralSparseTable           GTSET    GeneralTriangularSet
--R MKCHSET  MakeCachableSet              MSET     Multiset
--R ORDSET-  OrderedSet&                  OSI      OrdSetInts
--R PSETCAT- PolynomialSetCategory&       QALGSET  QuasiAlgebraicSet
--R REGSET   RegularTriangularSet
--R RSETCAT- RegularTriangularSetCategory&
--R RULESET  Ruleset                      SAOS     SingletonAsOrderedSet
--R SET      Set                          SETAGG-  SetAggregate&
--R SETCAT-  SetCategory&                 SETMN    SetOfMIntegersInOneToN
--R SREGSET  SquareFreeRegularTriangularSet
--R STBL     SparseTable                  TSETCAT- TriangularSetCategory&
--R WUTSET   WuWenTsunTriangularSet
--R-------------------------------- Packages ---------------------------------
--R
--RPackages with names matching patterns:
--R     set 
--R
--R FSAGG2   FiniteSetAggregateFunctions2 LAZM3PK  LazardSetSolvingPackage
--R PSETPK   PolynomialSetUtilitiesPackage
--R QALGSET2 QuasiAlgebraicSet2
--R RSDCMPK  RegularSetDecompositionPackage
--R RSETGCD  RegularTriangularSetGcdPackage
--R SFRGCD   SquareFreeRegularTriangularSetGcdPackage
--R SRDCMPK  SquareFreeRegularSetDecompositionPackage
--R--------------- System Commands for User Level: development ---------------
--R
--RSystem commands at this level matching patterns:
--R     set 
--R
--Rset    
--R 
--R------------------------- System Command Synonyms -------------------------
--R
--R   No user-defined synonyms satisfying patterns:
--R       set 
--R
--E 9

--S 10 of 47
)apropos set
--R 
--R
--ROperations whose names satisfy the above pattern(s):
--R
--ROMsetEncoding                                   
--RbasicSet                                        
--RcharacteristicSet                               
--RcrushedSet                                      
--Rfactorset                                       
--RfirstSubsetGray                                 
--RinternalSubPolSet?                              
--RinternalZeroSetSplit                            
--RinvertibleSet                                   
--RmedialSet                                       
--Rminset                                          
--Rmultiset                                        
--RnextSubsetGray                                  
--Roverset?                                        
--Rqsetelt!                                        
--RquasiAlgebraicSet                               
--Rreset                                           
--RresetAttributeButtons                           
--RresetBadValues                                  
--RresetNew                                        
--RresetVariableOrder                              
--RrewriteSetByReducingWithParticularGenerators    
--RrewriteSetWithReduction                         
--RroughBasicSet                                   
--Rruleset                                         
--Rset                                             
--RsetAdaptive                                     
--RsetAdaptive3D                                   
--RsetAttributeButtonStep                          
--RsetButtonValue                                  
--RsetClipValue                                    
--RsetClosed                                       
--RsetColumn!                                      
--RsetCondition!                                   
--RsetDifference                                   
--RsetEmpty!                                       
--RsetEpilogue!                                    
--RsetErrorBound                                   
--RsetFieldInfo                                    
--RsetFormula!                                     
--RsetImagSteps                                    
--RsetIntersection                                 
--RsetLabelValue                                   
--RsetLegalFortranSourceExtensions                 
--RsetMaxPoints                                    
--RsetMaxPoints3D                                  
--RsetMinPoints                                    
--RsetMinPoints3D                                  
--RsetOfMinN                                       
--RsetOrder                                        
--RsetPoly                                         
--RsetPosition                                     
--RsetPredicates                                   
--RsetPrologue!                                    
--RsetProperties                                   
--RsetProperty                                     
--RsetRealSteps                                    
--RsetRow!                                         
--RsetScreenResolution                             
--RsetScreenResolution3D                           
--RsetStatus                                       
--RsetStatus!                                      
--RsetTex!                                         
--RsetTopPredicate                                 
--RsetUnion                                        
--RsetValue!                                       
--RsetVariableOrder                                
--Rsetchildren!                                    
--Rsetelt                                          
--Rsetelt!                                         
--Rsetfirst!                                       
--Rsetlast!                                        
--Rsetleaves!                                      
--Rsetleft!                                        
--Rsetnext!                                        
--Rsetprevious!                                    
--Rsetref                                          
--Rsetrest!                                        
--Rsetright!                                       
--RsetsubMatrix!                                   
--Rsetvalue!                                       
--RstartTableInvSet!                               
--RstopTableInvSet!                                
--RstoseInvertibleSet                              
--RstoseInvertibleSetreg                           
--RstoseInvertibleSetsqfreg                        
--RsubPolSet?                                      
--RsubSet                                          
--RsubTriSet?                                      
--Rsubset?                                         
--RtoseInvertibleSet                               
--RzeroSetSplit                                    
--RzeroSetSplitIntoTriangularSystems               
--R   
--R      To get more information about an operation such as ruleset , 
--R      issue the command )display op ruleset 
--R------------------------------- Categories --------------------------------
--R
--RCategories with names matching patterns:
--R     set 
--R
--R CACHSET  CachableSet                  FSAGG    FiniteSetAggregate
--R MSETAGG  MultisetAggregate
--R NTSCAT   NormalizedTriangularSetCategory
--R OMSAGG   OrderedMultisetAggregate     ORDSET   OrderedSet
--R PSETCAT  PolynomialSetCategory        RSETCAT  RegularTriangularSetCategory
--R SETAGG   SetAggregate                 SETCAT   SetCategory
--R SFRTCAT  SquareFreeRegularTriangularSetCategory
--R SNTSCAT  SquareFreeNormalizedTriangularSetCategory
--R TSETCAT  TriangularSetCategory
--R--------------------------------- Domains ---------------------------------
--R
--RDomains with names matching patterns:
--R     set 
--R
--R FSAGG-   FiniteSetAggregate&          GPOLSET  GeneralPolynomialSet
--R GSTBL    GeneralSparseTable           GTSET    GeneralTriangularSet
--R MKCHSET  MakeCachableSet              MSET     Multiset
--R ORDSET-  OrderedSet&                  OSI      OrdSetInts
--R PSETCAT- PolynomialSetCategory&       QALGSET  QuasiAlgebraicSet
--R REGSET   RegularTriangularSet
--R RSETCAT- RegularTriangularSetCategory&
--R RULESET  Ruleset                      SAOS     SingletonAsOrderedSet
--R SET      Set                          SETAGG-  SetAggregate&
--R SETCAT-  SetCategory&                 SETMN    SetOfMIntegersInOneToN
--R SREGSET  SquareFreeRegularTriangularSet
--R STBL     SparseTable                  TSETCAT- TriangularSetCategory&
--R WUTSET   WuWenTsunTriangularSet
--R-------------------------------- Packages ---------------------------------
--R
--RPackages with names matching patterns:
--R     set 
--R
--R FSAGG2   FiniteSetAggregateFunctions2 LAZM3PK  LazardSetSolvingPackage
--R PSETPK   PolynomialSetUtilitiesPackage
--R QALGSET2 QuasiAlgebraicSet2
--R RSDCMPK  RegularSetDecompositionPackage
--R RSETGCD  RegularTriangularSetGcdPackage
--R SFRGCD   SquareFreeRegularTriangularSetGcdPackage
--R SRDCMPK  SquareFreeRegularSetDecompositionPackage
--R--------------- System Commands for User Level: development ---------------
--R
--RSystem commands at this level matching patterns:
--R     set 
--R
--Rset    
--R 
--R------------------------- System Command Synonyms -------------------------
--R
--R   No user-defined synonyms satisfying patterns:
--R       set 
--R
--E 10

--S 11 of 47
)prompt
--R---------------------------- The prompt Option ----------------------------
--R
--R Description: set type of input prompt to display
--R
--R The prompt option may be followed by any one of the following:
--R
--R    none
--R    frame
--R    plain
--R -> step 
--R    verbose
--R
--R The current setting is indicated.
--R
--E 11

--S 12 of 47
)version
--R 
--IValue = "Saturday February 21, 2009 at 17:59:27 "
--E 12

--S 13 of 47
)zsys )from )c
--R 
--R 
--R   >> System error:
--I   Cannot open the file /research/test/mnt/fedora10/../../src/interp/TAGS.
--R
--R   Continuing to read the file...
--R
--E 13

--S 14 of 47
)zsys )from )d
--R 
--R 
--R   >> System error:
--I   Cannot open the file /research/test/mnt/fedora10/../../src/interp/TAGS.
--R
--R   Continuing to read the file...
--R
--E 14

--S 15 of 47
)zsys )from )dt
--R 
--R 
--R   >> System error:
--I   Cannot open the file /research/test/mnt/fedora10/../../src/interp/TAGS.
--R
--R   Continuing to read the file...
--R
--E 15

--S 16 of 47
)zsys )from )ct
--R 
--R 
--R   >> System error:
--I   Cannot open the file /research/test/mnt/fedora10/../../src/interp/TAGS.
--R
--R   Continuing to read the file...
--R
--E 16

--S 17 of 47
)zsys )from )ctl
--R 
--R 
--R   >> System error:
--I   Cannot open the file /research/test/mnt/fedora10/../../src/interp/TAGS.
--R
--R   Continuing to read the file...
--R
--E 17

--S 18 of 47
)zsys )from )ec
--R 
--R 
--R   >> System error:
--I   Cannot open the file /research/test/mnt/fedora10/../../src/interp/TAGS.
--R
--R   Continuing to read the file...
--R
--E 18

--S 19 of 47
)zsys )from )ect
--R 
--R 
--R   >> System error:
--I   Cannot open the file /research/test/mnt/fedora10/../../src/interp/TAGS.
--R
--R   Continuing to read the file...
--R
--E 19

--S 20 of 47
)zsys )from )e
--R 
--R 
--R   >> System error:
--I   Cannot open the file /research/test/mnt/fedora10/../../src/interp/TAGS.
--R
--R   Continuing to read the file...
--R
--E 20

--S 21 of 47
)zsys )from )version
--R 
--E 21

--S 22 of 47
)zsys )from )update
--R 
--R 
--R   >> System error:
--R   /UPDATE-1 [or a callee] requires more than one argument.
--R
--R   Continuing to read the file...
--R
--E 22

--S 23 of 47
)zsys )from )patch
--R 
--R 
--R   >> System error:
--R   The function /UPDATE-LIB-1 is undefined.
--R
--R   Continuing to read the file...
--R
--E 23

--S 24 of 47
)zsys )from )there 1
--R 
--R
--R   Unknown option: there     
--R   Available options are c ct e ec ect cls pause update patch compare record 
--R
--E 24

--S 25 of 47
)zsys )from )compare
--R 
--R   An argument is required for compare 
--E 25

--S 26 of 47
)zsys )from )record
--R 
--R   An argument is required for record 
--E 26

--S 27 of 47
)summary
--R 
--E 27

--S 28 of 47
--R)credits
--RAn alphabetical listing of contributors to AXIOM:
--RCyril Alberga          Roy Adler              Christian Aistleitner
--RRichard Anderson       George Andrews         S.J. Atkins
--RHenry Baker            Stephen Balzac         Yurij Baransky
--RDavid R. Barton        Gerald Baumgartner     Gilbert Baumslag
--RJay Belanger           David Bindel           Fred Blair
--RVladimir Bondarenko    Mark Botch
--RAlexandre Bouyer       Peter A. Broadbery     Martin Brock
--RManuel Bronstein       Stephen Buchwald       Florian Bundschuh
--RLuanne Burns           William Burge
--RQuentin Carpent        Robert Caviness        Bruce Char
--ROndrej Certik          Cheekai Chin           David V. Chudnovsky
--RGregory V. Chudnovsky  Josh Cohen             Christophe Conil
--RDon Coppersmith        George Corliss         Robert Corless
--RGary Cornell           Meino Cramer           Claire Di Crescenzo
--RDavid Cyganski
--RTimothy Daly Sr.       Timothy Daly Jr.       James H. Davenport
--RDidier Deshommes       Michael Dewar
--RJean Della Dora        Gabriel Dos Reis       Claire DiCrescendo
--RSam Dooley             Lionel Ducos           Martin Dunstan
--RBrian Dupee            Dominique Duval
--RRobert Edwards         Heow Eide-Goodman      Lars Erickson
--RRichard Fateman        Bertfried Fauser       Stuart Feldman
--RBrian Ford             Albrecht Fortenbacher  George Frances
--RConstantine Frangos    Timothy Freeman        Korrinn Fu
--RMarc Gaetano           Rudiger Gebauer        Kathy Gerber
--RPatricia Gianni        Samantha Goldrich      Holger Gollan
--RTeresa Gomez-Diaz      Laureano Gonzalez-Vega Stephen Gortler
--RJohannes Grabmeier     Matt Grayson           Klaus Ebbe Grue
--RJames Griesmer         Vladimir Grinberg      Oswald Gschnitzer
--RJocelyn Guidry
--RSteve Hague            Satoshi Hamaguchi      Mike Hansen
--RRichard Harke          Vilya Harvey           Martin Hassner
--RArthur S. Hathaway     Dan Hatton             Waldek Hebisch
--RKarl Hegbloom          Ralf Hemmecke          Henderson
--RAntoine Hersen         Gernot Hueber
--RPietro Iglio
--RAlejandro Jakubi       Richard Jenks
--RKai Kaminski           Grant Keady            Tony Kennedy
--RPaul Kosinski          Klaus Kusche           Bernhard Kutzler
--RTim Lahey              Larry Lambe            Franz Lehner
--RFrederic Lehobey       Michel Levaud          Howard Levy
--RLiu Xiaojun            Rudiger Loos           Michael Lucks
--RRichard Luczak
--RCamm Maguire           Francois Maltey        Alasdair McAndrew
--RBob McElrath           Michael McGettrick     Ian Meikle
--RDavid Mentre           Victor S. Miller       Gerard Milmeister
--RMohammed Mobarak       H. Michael Moeller     Michael Monagan
--RMarc Moreno-Maza       Scott Morrison         Joel Moses
--RMark Murray
--RWilliam Naylor         C. Andrew Neff         John Nelder
--RGodfrey Nolan          Arthur Norman          Jinzhong Niu
--RMichael O'Connor       Summat Oemrawsingh     Kostas Oikonomou
--RHumberto Ortiz-Zuazaga
--RJulian A. Padget       Bill Page              Susan Pelzel
--RMichel Petitot         Didier Pinchon         Ayal Pinkus
--RJose Alfredo Portes
--RClaude Quitte
--RArthur C. Ralfs        Norman Ramsey          Anatoly Raportirenko
--RMichael Richardson     Renaud Rioboo          Jean Rivlin
--RNicolas Robidoux       Simon Robinson         Raymond Rogers
--RMichael Rothstein      Martin Rubey
--RPhilip Santas          Alfred Scheerhorn      William Schelter
--RGerhard Schneider      Martin Schoenert       Marshall Schor
--RFrithjof Schulze       Fritz Schwarz          Nick Simicich
--RWilliam Sit            Elena Smirnova         Jonathan Steinbach
--RFabio Stumbo           Christine Sundaresan   Robert Sutor
--RMoss E. Sweedler       Eugene Surowitz
--RMax Tegmark            James Thatcher         Balbir Thomas
--RMike Thomas            Dylan Thurston         Barry Trager
--RThemos T. Tsikas
--RGregory Vanuxem
--RBernhard Wall          Stephen Watt           Jaap Weel
--RJuergen Weiss          M. Weller              Mark Wegman
--RJames Wen              Thorsten Werther       Michael Wester
--RJohn M. Wiley          Berhard Will           Clifton J. Williamson
--RStephen Wilson         Shmuel Winograd        Robert Wisbauer
--RSandra Wityak          Waldemar Wiwianka      Knut Wolf
--RClifford Yapp          David Yun
--RVadim Zhytnikov        Richard Zippel         Evelyn Zoernack
--RBruno Zuercher         Dan Zwillinger
--E 28

--S 29 of 47
)set expose
--R---------------------------- The expose Option ----------------------------
--R
--R Description: control interpreter constructor exposure
--R
--R   The following groups are explicitly exposed in the current frame 
--I      (called frame0 ):
--R                                   basic                                   
--R                                categories                                 
--R                                  naglink                                  
--R                                   anna                                    
--R 
--R   The following constructors are explicitly exposed in the current 
--R      frame:
--R               there are no explicitly exposed constructors                
--R 
--R   The following constructors are explicitly hidden in the current 
--R      frame:
--R                there are no explicitly hidden constructors                
--R 
--R   When )set expose is followed by no arguments, the information you 
--R      now see is displayed. When followed by the initialize argument, 
--R      the exposure group data in the file interp.exposed is read and is
--R      then available. The arguments add and drop are used to add or 
--R      drop exposure groups or explicit constructors from the local 
--R      frame exposure data. Issue
--R                  )set expose add    or    )set expose drop 
--R      for more information.
--E 29

--S 30 of 47
)set expose add
--R----------------------------- The add Option ------------------------------
--R   The following groups are explicitly exposed in the current frame 
--I      (called frame0 ):
--R                                   basic                                   
--R                                categories                                 
--R                                  naglink                                  
--R                                   anna                                    
--R 
--R   The following constructors are explicitly exposed in the current 
--R      frame:
--R               there are no explicitly exposed constructors                
--R 
--R   When )set expose add is followed by no arguments, the information 
--R      you now see is displayed. The arguments group and constructor are
--R      used to specify exposure groups or an explicit constructor to be 
--R      added to the local frame exposure data. Issue
--R                            )set expose add group 
--R      or
--R                         )set expose add constructor 
--R      for more information.
--E 30

--S 31 of 47
)set expose drop
--R----------------------------- The drop Option -----------------------------
--R   The following constructors are explicitly hidden in the current 
--R      frame:
--R                there are no explicitly hidden constructors                
--R 
--R   When )set expose drop is followed by no arguments, the information 
--R      you now see is displayed. The arguments group and constructor are
--R      used to specify exposure groups or an explicit constructor to be 
--R      dropped from the local frame exposure data. Issue
--R                           )set expose drop group 
--R      or
--R                        )set expose drop constructor 
--R      for more information.
--E 31

--S 32 of 47
)set expose add group
--R---------------------------- The group Option -----------------------------
--R   The following groups are explicitly exposed in the current frame 
--I      (called frame0 ):
--R                                   basic                                   
--R                                categories                                 
--R                                  naglink                                  
--R                                   anna                                    
--R 
--R   When )set expose add group is followed by no arguments, the 
--R      information you now see is displayed. Otherwise, the words 
--R      following group must be valid names of exposure groups defined in
--R      interp.exposed . The group all is special: using this group name 
--R      causes all known constructors to be exposed. The known exposure 
--R      group names are:
--R 
--Rbasic         naglink       anna          categories    Hidden        
--Rdefaults      
--E 32

--S 33 of 47
)set expose add constructor
--R------------------------- The constructor Option --------------------------
--R   The following constructors are explicitly exposed in the current 
--R      frame:
--R               there are no explicitly exposed constructors                
--E 33

--S 34 of 47
)set expose drop group
--R---------------------------- The group Option -----------------------------
--R   When followed by one or more exposure group names, this option 
--R      allows you to remove those groups from the local frame exposure 
--R      data.
--R 
--R   The following groups are explicitly exposed in the current frame 
--I      (called frame0 ):
--R                                   basic                                   
--R                                categories                                 
--R                                  naglink                                  
--R                                   anna                                    
--E 34

--S 35 of 47
)set expose drop constructor
--R------------------------- The constructor Option --------------------------
--R   When followed by one or more constructor names, this option allows 
--R      you to explicitly hide constructors in this frame.
--R 
--R   The following constructors are explicitly exposed in the current 
--R      frame:
--R               there are no explicitly exposed constructors                
--R 
--R   The following constructors are explicitly hidden in the current 
--R      frame:
--R                there are no explicitly hidden constructors                
--E 35

--S 36 of 47
)show SQMATRIX
--R SquareMatrix(ndim: NonNegativeInteger,R: Ring)  is a domain constructor
--R Abbreviation for SquareMatrix is SQMATRIX 
--R This constructor is not exposed in this frame.
--R Issue )edit bookvol10.3.spad.pamphlet to see algebra source code for SQMATRIX 
--R
--R------------------------------- Operations --------------------------------
--R ?*? : (R,%) -> %                      ?*? : (%,R) -> %
--R ?*? : (%,%) -> %                      ?*? : (Integer,%) -> %
--R ?*? : (PositiveInteger,%) -> %        ?**? : (%,PositiveInteger) -> %
--R ?+? : (%,%) -> %                      ?-? : (%,%) -> %
--R -? : % -> %                           ?=? : (%,%) -> Boolean
--R D : % -> % if R has DIFRING           D : (%,(R -> R)) -> %
--R 1 : () -> %                           0 : () -> %
--R ?^? : (%,PositiveInteger) -> %        antisymmetric? : % -> Boolean
--R coerce : % -> Matrix R                coerce : R -> %
--R coerce : Integer -> %                 coerce : % -> OutputForm
--R copy : % -> %                         diagonal? : % -> Boolean
--R diagonalMatrix : List R -> %          diagonalProduct : % -> R
--R elt : (%,Integer,Integer) -> R        elt : (%,Integer,Integer,R) -> R
--R empty : () -> %                       empty? : % -> Boolean
--R eq? : (%,%) -> Boolean                hash : % -> SingleInteger
--R latex : % -> String                   listOfLists : % -> List List R
--R map : ((R -> R),%) -> %               map : (((R,R) -> R),%,%) -> %
--R matrix : List List R -> %             maxColIndex : % -> Integer
--R maxRowIndex : % -> Integer            minColIndex : % -> Integer
--R minRowIndex : % -> Integer            ncols : % -> NonNegativeInteger
--R nrows : % -> NonNegativeInteger       one? : % -> Boolean
--R qelt : (%,Integer,Integer) -> R       recip : % -> Union(%,"failed")
--R retract : % -> R                      sample : () -> %
--R scalarMatrix : R -> %                 square? : % -> Boolean
--R squareMatrix : Matrix R -> %          symmetric? : % -> Boolean
--R trace : % -> R                        transpose : % -> %
--R zero? : % -> Boolean                  ?~=? : (%,%) -> Boolean
--R #? : % -> NonNegativeInteger if $ has finiteAggregate
--R ?*? : (DirectProduct(ndim,R),%) -> DirectProduct(ndim,R)
--R ?*? : (%,DirectProduct(ndim,R)) -> DirectProduct(ndim,R)
--R ?*? : (NonNegativeInteger,%) -> %
--R ?**? : (%,Integer) -> % if R has FIELD
--R ?**? : (%,NonNegativeInteger) -> %
--R ?/? : (%,R) -> % if R has FIELD
--R D : (%,NonNegativeInteger) -> % if R has DIFRING
--R D : (%,Symbol) -> % if R has PDRING SYMBOL
--R D : (%,List Symbol) -> % if R has PDRING SYMBOL
--R D : (%,Symbol,NonNegativeInteger) -> % if R has PDRING SYMBOL
--R D : (%,List Symbol,List NonNegativeInteger) -> % if R has PDRING SYMBOL
--R D : (%,(R -> R),NonNegativeInteger) -> %
--R ?^? : (%,NonNegativeInteger) -> %
--R any? : ((R -> Boolean),%) -> Boolean if $ has finiteAggregate
--R characteristic : () -> NonNegativeInteger
--R coerce : Fraction Integer -> % if R has RETRACT FRAC INT
--R column : (%,Integer) -> DirectProduct(ndim,R)
--R convert : % -> InputForm if R has KONVERT INFORM
--R count : (R,%) -> NonNegativeInteger if $ has finiteAggregate and R has SETCAT
--R count : ((R -> Boolean),%) -> NonNegativeInteger if $ has finiteAggregate
--R determinant : % -> R if R has commutative *
--R diagonal : % -> DirectProduct(ndim,R)
--R differentiate : % -> % if R has DIFRING
--R differentiate : (%,NonNegativeInteger) -> % if R has DIFRING
--R differentiate : (%,Symbol) -> % if R has PDRING SYMBOL
--R differentiate : (%,List Symbol) -> % if R has PDRING SYMBOL
--R differentiate : (%,Symbol,NonNegativeInteger) -> % if R has PDRING SYMBOL
--R differentiate : (%,List Symbol,List NonNegativeInteger) -> % if R has PDRING SYMBOL
--R differentiate : (%,(R -> R),NonNegativeInteger) -> %
--R differentiate : (%,(R -> R)) -> %
--R eval : (%,List R,List R) -> % if R has EVALAB R and R has SETCAT
--R eval : (%,R,R) -> % if R has EVALAB R and R has SETCAT
--R eval : (%,Equation R) -> % if R has EVALAB R and R has SETCAT
--R eval : (%,List Equation R) -> % if R has EVALAB R and R has SETCAT
--R every? : ((R -> Boolean),%) -> Boolean if $ has finiteAggregate
--R exquo : (%,R) -> Union(%,"failed") if R has INTDOM
--R inverse : % -> Union(%,"failed") if R has FIELD
--R less? : (%,NonNegativeInteger) -> Boolean
--R map! : ((R -> R),%) -> % if $ has shallowlyMutable
--R member? : (R,%) -> Boolean if $ has finiteAggregate and R has SETCAT
--R members : % -> List R if $ has finiteAggregate
--R minordet : % -> R if R has commutative *
--R more? : (%,NonNegativeInteger) -> Boolean
--R nullSpace : % -> List DirectProduct(ndim,R) if R has INTDOM
--R nullity : % -> NonNegativeInteger if R has INTDOM
--R parts : % -> List R if $ has finiteAggregate
--R rank : % -> NonNegativeInteger if R has INTDOM
--R reducedSystem : Matrix % -> Matrix R
--R reducedSystem : (Matrix %,Vector %) -> Record(mat: Matrix R,vec: Vector R)
--R reducedSystem : (Matrix %,Vector %) -> Record(mat: Matrix Integer,vec: Vector Integer) if R has LINEXP INT
--R reducedSystem : Matrix % -> Matrix Integer if R has LINEXP INT
--R retract : % -> Fraction Integer if R has RETRACT FRAC INT
--R retract : % -> Integer if R has RETRACT INT
--R retractIfCan : % -> Union(R,"failed")
--R retractIfCan : % -> Union(Fraction Integer,"failed") if R has RETRACT FRAC INT
--R retractIfCan : % -> Union(Integer,"failed") if R has RETRACT INT
--R row : (%,Integer) -> DirectProduct(ndim,R)
--R rowEchelon : % -> % if R has EUCDOM
--R size? : (%,NonNegativeInteger) -> Boolean
--R subtractIfCan : (%,%) -> Union(%,"failed")
--R
--E 36

--S 37 of 47
)set expose add constructor SQMATRIX
--I   SquareMatrix is now explicitly exposed in frame frame0 
--E 37

--S 38 of 47
)show SQMATRIX
--R SquareMatrix(ndim: NonNegativeInteger,R: Ring)  is a domain constructor
--R Abbreviation for SquareMatrix is SQMATRIX 
--R This constructor is exposed in this frame.
--R Issue )edit bookvol10.3.spad.pamphlet to see algebra source code for SQMATRIX 
--R
--R------------------------------- Operations --------------------------------
--R ?*? : (R,%) -> %                      ?*? : (%,R) -> %
--R ?*? : (%,%) -> %                      ?*? : (Integer,%) -> %
--R ?*? : (PositiveInteger,%) -> %        ?**? : (%,PositiveInteger) -> %
--R ?+? : (%,%) -> %                      ?-? : (%,%) -> %
--R -? : % -> %                           ?=? : (%,%) -> Boolean
--R D : % -> % if R has DIFRING           D : (%,(R -> R)) -> %
--R 1 : () -> %                           0 : () -> %
--R ?^? : (%,PositiveInteger) -> %        antisymmetric? : % -> Boolean
--R coerce : % -> Matrix R                coerce : R -> %
--R coerce : Integer -> %                 coerce : % -> OutputForm
--R copy : % -> %                         diagonal? : % -> Boolean
--R diagonalMatrix : List R -> %          diagonalProduct : % -> R
--R elt : (%,Integer,Integer) -> R        elt : (%,Integer,Integer,R) -> R
--R empty : () -> %                       empty? : % -> Boolean
--R eq? : (%,%) -> Boolean                hash : % -> SingleInteger
--R latex : % -> String                   listOfLists : % -> List List R
--R map : ((R -> R),%) -> %               map : (((R,R) -> R),%,%) -> %
--R matrix : List List R -> %             maxColIndex : % -> Integer
--R maxRowIndex : % -> Integer            minColIndex : % -> Integer
--R minRowIndex : % -> Integer            ncols : % -> NonNegativeInteger
--R nrows : % -> NonNegativeInteger       one? : % -> Boolean
--R qelt : (%,Integer,Integer) -> R       recip : % -> Union(%,"failed")
--R retract : % -> R                      sample : () -> %
--R scalarMatrix : R -> %                 square? : % -> Boolean
--R squareMatrix : Matrix R -> %          symmetric? : % -> Boolean
--R trace : % -> R                        transpose : % -> %
--R zero? : % -> Boolean                  ?~=? : (%,%) -> Boolean
--R #? : % -> NonNegativeInteger if $ has finiteAggregate
--R ?*? : (DirectProduct(ndim,R),%) -> DirectProduct(ndim,R)
--R ?*? : (%,DirectProduct(ndim,R)) -> DirectProduct(ndim,R)
--R ?*? : (NonNegativeInteger,%) -> %
--R ?**? : (%,Integer) -> % if R has FIELD
--R ?**? : (%,NonNegativeInteger) -> %
--R ?/? : (%,R) -> % if R has FIELD
--R D : (%,NonNegativeInteger) -> % if R has DIFRING
--R D : (%,Symbol) -> % if R has PDRING SYMBOL
--R D : (%,List Symbol) -> % if R has PDRING SYMBOL
--R D : (%,Symbol,NonNegativeInteger) -> % if R has PDRING SYMBOL
--R D : (%,List Symbol,List NonNegativeInteger) -> % if R has PDRING SYMBOL
--R D : (%,(R -> R),NonNegativeInteger) -> %
--R ?^? : (%,NonNegativeInteger) -> %
--R any? : ((R -> Boolean),%) -> Boolean if $ has finiteAggregate
--R characteristic : () -> NonNegativeInteger
--R coerce : Fraction Integer -> % if R has RETRACT FRAC INT
--R column : (%,Integer) -> DirectProduct(ndim,R)
--R convert : % -> InputForm if R has KONVERT INFORM
--R count : (R,%) -> NonNegativeInteger if $ has finiteAggregate and R has SETCAT
--R count : ((R -> Boolean),%) -> NonNegativeInteger if $ has finiteAggregate
--R determinant : % -> R if R has commutative *
--R diagonal : % -> DirectProduct(ndim,R)
--R differentiate : % -> % if R has DIFRING
--R differentiate : (%,NonNegativeInteger) -> % if R has DIFRING
--R differentiate : (%,Symbol) -> % if R has PDRING SYMBOL
--R differentiate : (%,List Symbol) -> % if R has PDRING SYMBOL
--R differentiate : (%,Symbol,NonNegativeInteger) -> % if R has PDRING SYMBOL
--R differentiate : (%,List Symbol,List NonNegativeInteger) -> % if R has PDRING SYMBOL
--R differentiate : (%,(R -> R),NonNegativeInteger) -> %
--R differentiate : (%,(R -> R)) -> %
--R eval : (%,List R,List R) -> % if R has EVALAB R and R has SETCAT
--R eval : (%,R,R) -> % if R has EVALAB R and R has SETCAT
--R eval : (%,Equation R) -> % if R has EVALAB R and R has SETCAT
--R eval : (%,List Equation R) -> % if R has EVALAB R and R has SETCAT
--R every? : ((R -> Boolean),%) -> Boolean if $ has finiteAggregate
--R exquo : (%,R) -> Union(%,"failed") if R has INTDOM
--R inverse : % -> Union(%,"failed") if R has FIELD
--R less? : (%,NonNegativeInteger) -> Boolean
--R map! : ((R -> R),%) -> % if $ has shallowlyMutable
--R member? : (R,%) -> Boolean if $ has finiteAggregate and R has SETCAT
--R members : % -> List R if $ has finiteAggregate
--R minordet : % -> R if R has commutative *
--R more? : (%,NonNegativeInteger) -> Boolean
--R nullSpace : % -> List DirectProduct(ndim,R) if R has INTDOM
--R nullity : % -> NonNegativeInteger if R has INTDOM
--R parts : % -> List R if $ has finiteAggregate
--R rank : % -> NonNegativeInteger if R has INTDOM
--R reducedSystem : Matrix % -> Matrix R
--R reducedSystem : (Matrix %,Vector %) -> Record(mat: Matrix R,vec: Vector R)
--R reducedSystem : (Matrix %,Vector %) -> Record(mat: Matrix Integer,vec: Vector Integer) if R has LINEXP INT
--R reducedSystem : Matrix % -> Matrix Integer if R has LINEXP INT
--R retract : % -> Fraction Integer if R has RETRACT FRAC INT
--R retract : % -> Integer if R has RETRACT INT
--R retractIfCan : % -> Union(R,"failed")
--R retractIfCan : % -> Union(Fraction Integer,"failed") if R has RETRACT FRAC INT
--R retractIfCan : % -> Union(Integer,"failed") if R has RETRACT INT
--R row : (%,Integer) -> DirectProduct(ndim,R)
--R rowEchelon : % -> % if R has EUCDOM
--R size? : (%,NonNegativeInteger) -> Boolean
--R subtractIfCan : (%,%) -> Union(%,"failed")
--R
--E 38

--S 39 of 47
)set expose add
--R----------------------------- The add Option ------------------------------
--R   The following groups are explicitly exposed in the current frame 
--I      (called frame0 ):
--R                                   basic                                   
--R                                categories                                 
--R                                  naglink                                  
--R                                   anna                                    
--R 
--R   The following constructors are explicitly exposed in the current 
--R      frame:
--R                               SquareMatrix                                
--R 
--R   When )set expose add is followed by no arguments, the information 
--R      you now see is displayed. The arguments group and constructor are
--R      used to specify exposure groups or an explicit constructor to be 
--R      added to the local frame exposure data. Issue
--R                            )set expose add group 
--R      or
--R                         )set expose add constructor 
--R      for more information.
--E 39

--S 40 of 47
)set expose drop constructor SQMATRIX
--I   SquareMatrix is now explicitly hidden in frame frame0 
--E 40

--S 41 of 47
)show SQMATRIX
--R SquareMatrix(ndim: NonNegativeInteger,R: Ring)  is a domain constructor
--R Abbreviation for SquareMatrix is SQMATRIX 
--R This constructor is not exposed in this frame.
--R Issue )edit bookvol10.3.spad.pamphlet to see algebra source code for SQMATRIX 
--R
--R------------------------------- Operations --------------------------------
--R ?*? : (R,%) -> %                      ?*? : (%,R) -> %
--R ?*? : (%,%) -> %                      ?*? : (Integer,%) -> %
--R ?*? : (PositiveInteger,%) -> %        ?**? : (%,PositiveInteger) -> %
--R ?+? : (%,%) -> %                      ?-? : (%,%) -> %
--R -? : % -> %                           ?=? : (%,%) -> Boolean
--R D : % -> % if R has DIFRING           D : (%,(R -> R)) -> %
--R 1 : () -> %                           0 : () -> %
--R ?^? : (%,PositiveInteger) -> %        antisymmetric? : % -> Boolean
--R coerce : % -> Matrix R                coerce : R -> %
--R coerce : Integer -> %                 coerce : % -> OutputForm
--R copy : % -> %                         diagonal? : % -> Boolean
--R diagonalMatrix : List R -> %          diagonalProduct : % -> R
--R elt : (%,Integer,Integer) -> R        elt : (%,Integer,Integer,R) -> R
--R empty : () -> %                       empty? : % -> Boolean
--R eq? : (%,%) -> Boolean                hash : % -> SingleInteger
--R latex : % -> String                   listOfLists : % -> List List R
--R map : ((R -> R),%) -> %               map : (((R,R) -> R),%,%) -> %
--R matrix : List List R -> %             maxColIndex : % -> Integer
--R maxRowIndex : % -> Integer            minColIndex : % -> Integer
--R minRowIndex : % -> Integer            ncols : % -> NonNegativeInteger
--R nrows : % -> NonNegativeInteger       one? : % -> Boolean
--R qelt : (%,Integer,Integer) -> R       recip : % -> Union(%,"failed")
--R retract : % -> R                      sample : () -> %
--R scalarMatrix : R -> %                 square? : % -> Boolean
--R squareMatrix : Matrix R -> %          symmetric? : % -> Boolean
--R trace : % -> R                        transpose : % -> %
--R zero? : % -> Boolean                  ?~=? : (%,%) -> Boolean
--R #? : % -> NonNegativeInteger if $ has finiteAggregate
--R ?*? : (DirectProduct(ndim,R),%) -> DirectProduct(ndim,R)
--R ?*? : (%,DirectProduct(ndim,R)) -> DirectProduct(ndim,R)
--R ?*? : (NonNegativeInteger,%) -> %
--R ?**? : (%,Integer) -> % if R has FIELD
--R ?**? : (%,NonNegativeInteger) -> %
--R ?/? : (%,R) -> % if R has FIELD
--R D : (%,NonNegativeInteger) -> % if R has DIFRING
--R D : (%,Symbol) -> % if R has PDRING SYMBOL
--R D : (%,List Symbol) -> % if R has PDRING SYMBOL
--R D : (%,Symbol,NonNegativeInteger) -> % if R has PDRING SYMBOL
--R D : (%,List Symbol,List NonNegativeInteger) -> % if R has PDRING SYMBOL
--R D : (%,(R -> R),NonNegativeInteger) -> %
--R ?^? : (%,NonNegativeInteger) -> %
--R any? : ((R -> Boolean),%) -> Boolean if $ has finiteAggregate
--R characteristic : () -> NonNegativeInteger
--R coerce : Fraction Integer -> % if R has RETRACT FRAC INT
--R column : (%,Integer) -> DirectProduct(ndim,R)
--R convert : % -> InputForm if R has KONVERT INFORM
--R count : (R,%) -> NonNegativeInteger if $ has finiteAggregate and R has SETCAT
--R count : ((R -> Boolean),%) -> NonNegativeInteger if $ has finiteAggregate
--R determinant : % -> R if R has commutative *
--R diagonal : % -> DirectProduct(ndim,R)
--R differentiate : % -> % if R has DIFRING
--R differentiate : (%,NonNegativeInteger) -> % if R has DIFRING
--R differentiate : (%,Symbol) -> % if R has PDRING SYMBOL
--R differentiate : (%,List Symbol) -> % if R has PDRING SYMBOL
--R differentiate : (%,Symbol,NonNegativeInteger) -> % if R has PDRING SYMBOL
--R differentiate : (%,List Symbol,List NonNegativeInteger) -> % if R has PDRING SYMBOL
--R differentiate : (%,(R -> R),NonNegativeInteger) -> %
--R differentiate : (%,(R -> R)) -> %
--R eval : (%,List R,List R) -> % if R has EVALAB R and R has SETCAT
--R eval : (%,R,R) -> % if R has EVALAB R and R has SETCAT
--R eval : (%,Equation R) -> % if R has EVALAB R and R has SETCAT
--R eval : (%,List Equation R) -> % if R has EVALAB R and R has SETCAT
--R every? : ((R -> Boolean),%) -> Boolean if $ has finiteAggregate
--R exquo : (%,R) -> Union(%,"failed") if R has INTDOM
--R inverse : % -> Union(%,"failed") if R has FIELD
--R less? : (%,NonNegativeInteger) -> Boolean
--R map! : ((R -> R),%) -> % if $ has shallowlyMutable
--R member? : (R,%) -> Boolean if $ has finiteAggregate and R has SETCAT
--R members : % -> List R if $ has finiteAggregate
--R minordet : % -> R if R has commutative *
--R more? : (%,NonNegativeInteger) -> Boolean
--R nullSpace : % -> List DirectProduct(ndim,R) if R has INTDOM
--R nullity : % -> NonNegativeInteger if R has INTDOM
--R parts : % -> List R if $ has finiteAggregate
--R rank : % -> NonNegativeInteger if R has INTDOM
--R reducedSystem : Matrix % -> Matrix R
--R reducedSystem : (Matrix %,Vector %) -> Record(mat: Matrix R,vec: Vector R)
--R reducedSystem : (Matrix %,Vector %) -> Record(mat: Matrix Integer,vec: Vector Integer) if R has LINEXP INT
--R reducedSystem : Matrix % -> Matrix Integer if R has LINEXP INT
--R retract : % -> Fraction Integer if R has RETRACT FRAC INT
--R retract : % -> Integer if R has RETRACT INT
--R retractIfCan : % -> Union(R,"failed")
--R retractIfCan : % -> Union(Fraction Integer,"failed") if R has RETRACT FRAC INT
--R retractIfCan : % -> Union(Integer,"failed") if R has RETRACT INT
--R row : (%,Integer) -> DirectProduct(ndim,R)
--R rowEchelon : % -> % if R has EUCDOM
--R size? : (%,NonNegativeInteger) -> Boolean
--R subtractIfCan : (%,%) -> Union(%,"failed")
--R
--E 41

--S 42 of 47
)set expose
--R---------------------------- The expose Option ----------------------------
--R
--R Description: control interpreter constructor exposure
--R
--R   The following groups are explicitly exposed in the current frame 
--I      (called frame0 ):
--R                                   basic                                   
--R                                categories                                 
--R                                  naglink                                  
--R                                   anna                                    
--R 
--R   The following constructors are explicitly exposed in the current 
--R      frame:
--R               there are no explicitly exposed constructors                
--R 
--R   The following constructors are explicitly hidden in the current 
--R      frame:
--R                               SquareMatrix                                
--R 
--R   When )set expose is followed by no arguments, the information you 
--R      now see is displayed. When followed by the initialize argument, 
--R      the exposure group data in the file interp.exposed is read and is
--R      then available. The arguments add and drop are used to add or 
--R      drop exposure groups or explicit constructors from the local 
--R      frame exposure data. Issue
--R                  )set expose add    or    )set expose drop 
--R      for more information.
--E 42

--S 43 of 47
)set expose drop group anna
--I   anna is no longer an exposure group for frame frame0 
--E 43

--S 44 of 47
)set expose
--R---------------------------- The expose Option ----------------------------
--R
--R Description: control interpreter constructor exposure
--R
--R   The following groups are explicitly exposed in the current frame 
--I      (called frame0 ):
--R                                   basic                                   
--R                                categories                                 
--R                                  naglink                                  
--R 
--R   The following constructors are explicitly exposed in the current 
--R      frame:
--R               there are no explicitly exposed constructors                
--R 
--R   The following constructors are explicitly hidden in the current 
--R      frame:
--R                               SquareMatrix                                
--R 
--R   When )set expose is followed by no arguments, the information you 
--R      now see is displayed. When followed by the initialize argument, 
--R      the exposure group data in the file interp.exposed is read and is
--R      then available. The arguments add and drop are used to add or 
--R      drop exposure groups or explicit constructors from the local 
--R      frame exposure data. Issue
--R                  )set expose add    or    )set expose drop 
--R      for more information.
--E 44

--S 45 of 47
)set expose add group
--R---------------------------- The group Option -----------------------------
--R   The following groups are explicitly exposed in the current frame 
--I      (called frame0 ):
--R                                   basic                                   
--R                                categories                                 
--R                                  naglink                                  
--R 
--R   When )set expose add group is followed by no arguments, the 
--R      information you now see is displayed. Otherwise, the words 
--R      following group must be valid names of exposure groups defined in
--R      interp.exposed . The group all is special: using this group name 
--R      causes all known constructors to be exposed. The known exposure 
--R      group names are:
--R 
--Rbasic         naglink       anna          categories    Hidden        
--Rdefaults      
--E 45

--S 46 of 47
)set expose add group anna
--I   anna is now an exposure group for frame frame0 
--E 46

--S 47 of 47
)set expose
--R---------------------------- The expose Option ----------------------------
--R
--R Description: control interpreter constructor exposure
--R
--R   The following groups are explicitly exposed in the current frame 
--I      (called frame0 ):
--R                                   anna                                    
--R                                   basic                                   
--R                                categories                                 
--R                                  naglink                                  
--R 
--R   The following constructors are explicitly exposed in the current 
--R      frame:
--R               there are no explicitly exposed constructors                
--R 
--R   The following constructors are explicitly hidden in the current 
--R      frame:
--R                               SquareMatrix                                
--R 
--R   When )set expose is followed by no arguments, the information you 
--R      now see is displayed. When followed by the initialize argument, 
--R      the exposure group data in the file interp.exposed is read and is
--R      then available. The arguments add and drop are used to add or 
--R      drop exposure groups or explicit constructors from the local 
--R      frame exposure data. Issue
--R                  )set expose add    or    )set expose drop 
--R      for more information.
--E 47

)spool
)lisp (bye)
 
@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}
