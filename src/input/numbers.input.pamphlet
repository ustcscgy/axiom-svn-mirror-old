\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{\$SPAD/src/input numbers.input}
\author{Timothy Daly}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{License}
<<license>>=
--Copyright The Numerical Algorithms Group Limited 1991.
@
<<*>>=
)set break resume
)spool numbers.output
)set message test on
)set message auto off
)clear all

--S 1 of 76
x := factorial(200)
--R 
--R
--R   (1)
--R  7886578673647905035523632139321850622951359776871732632947425332443594499634_
--R   033429203042840119846239041772121389196388302576427902426371050619266249528_
--R   299311134628572707633172373969889439224456214516642402540332918641312274282_
--R   948532775242424075739032403212574055795686602260319041703240623517008587961_
--R   78922222789623703897374720000000000000000000000000000000000000000000000000
--R                                                        Type: PositiveInteger
--E 1

--S 2 of 76
y := 2**90 - 1
--R 
--R
--R   (2)  1237940039285380274899124223
--R                                                        Type: PositiveInteger
--E 2

--S 3 of 76
x + y
--R 
--R
--R   (3)
--R  7886578673647905035523632139321850622951359776871732632947425332443594499634_
--R   033429203042840119846239041772121389196388302576427902426371050619266249528_
--R   299311134628572707633172373969889439224456214516642402540332918641312274282_
--R   948532775242424075739032403212574055795686602260319041703240623517008587961_
--R   78922222789623703897374720000000000000000000001237940039285380274899124223
--R                                                        Type: PositiveInteger
--E 3

--S 4 of 76
x - y
--R 
--R
--R   (4)
--R  7886578673647905035523632139321850622951359776871732632947425332443594499634_
--R   033429203042840119846239041772121389196388302576427902426371050619266249528_
--R   299311134628572707633172373969889439224456214516642402540332918641312274282_
--R   948532775242424075739032403212574055795686602260319041703240623517008587961_
--R   78922222789623703897374719999999999999999999998762059960714619725100875777
--R                                                        Type: PositiveInteger
--E 4

--S 5 of 76
x * y
--R 
--R
--R   (5)
--R  9763111513082929821843631196609502257766429667654140423707949648813338983407_
--R   032918809235547978281276568726017975734913119466356078732929100728088106228_
--R   471338396755093151069532609217447970141651251638848591388190535247585868963_
--R   019469887899504821090561806743717655381133973032509524956986554360537566475_
--R   497856969235918273095211823926950507033823968598425600000000000000000000000_
--R   00000000000000000000000000
--R                                                        Type: PositiveInteger
--E 5

--S 6 of 76
factor(x)
--R 
--R
--R   (6)
--R      197 97 49 32  19  16  11  10  8  6  6  5  4  4  4  3  3  3  2  2  2  2  2
--R     2   3  5  7  11  13  17  19  23 29 31 37 41 43 47 53 59 61 67 71 73 79 83
--R  *
--R       2  2
--R     89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181
--R  *
--R     191 193 197 199
--R                                                       Type: Factored Integer
--E 6

--S 7 of 76
factor(y)
--R 
--R
--R         3
--R   (7)  3 7 11 19 31 73 151 331 631 23311 18837001
--R                                                       Type: Factored Integer
--E 7

)clear all

--S 8 of 76
sqrt(2.0)
--R 
--R
--R   (1)  1.4142135623 730950488
--R                                                                  Type: Float
--E 8

--S 9 of 76
numeric %pi
--R 
--R
--R   (2)  3.1415926535 897932385
--R                                                                  Type: Float
--E 9

--S 10 of 76
exp(1.0)
--R 
--R
--R   (3)  2.7182818284 590452354
--R                                                                  Type: Float
--E 10

--S 11 of 76
exp(sqrt(163.0) * %pi)
--R 
--R
--R   (4)  26253741 2640768743.97
--R                                                                  Type: Float
--E 11

--S 12 of 76
sin(%pi/6.)
--R 
--R
--R   (5)  0.5
--R                                                                  Type: Float
--E 12

)clear all

--S 13 of 76
1/4 - 1/5
--R 
--R
--R         1
--R   (1)  --
--R        20
--R                                                       Type: Fraction Integer
--E 13

--S 14 of 76
f := (x**2 + 1)/(x - 1)
--R 
--R
--R         2
--R        x  + 1
--R   (2)  ------
--R         x - 1
--R                                            Type: Fraction Polynomial Integer
--E 14

--S 15 of 76
g := (x**2 - 3*x + 2)/(x + 2)
--R 
--R
--R         2
--R        x  - 3x + 2
--R   (3)  -----------
--R           x + 2
--R                                            Type: Fraction Polynomial Integer
--E 15

--S 16 of 76
f * g
--R 
--R
--R         3     2
--R        x  - 2x  + x - 2
--R   (4)  ----------------
--R              x + 2
--R                                            Type: Fraction Polynomial Integer
--E 16

)clear all

--S 17 of 76
numeric(%pi, 500)
--R 
--R
--R   (1)
--R  3.1415926535 8979323846 2643383279 5028841971 6939937510 5820974944 592307816
--R  4 0628620899 8628034825 3421170679 8214808651 3282306647 0938446095 505822317
--R  2 5359408128 4811174502 8410270193 8521105559 6446229489 5493038196 442881097
--R  5 6659334461 2847564823 3786783165 2712019091 4564856692 3460348610 454326648
--R  2 1339360726 0249141273 7245870066 0631558817 4881520920 9628292540 917153643
--R  6 7892590360 0113305305 4882046652 1384146951 9415116094 3305727036 575959195
--R  3 0921861173 8193261179 3105118548 0744623799 6274956735 1885752724 891227938
--R  1 830119491
--R                                                                  Type: Float
--E 17

--S 18 of 76
digits 500
--R 
--R
--R   (2)  20
--R                                                        Type: PositiveInteger
--E 18

--S 19 of 76
numeric %pi
--R 
--R
--R   (3)
--R  3.1415926535 8979323846 2643383279 5028841971 6939937510 5820974944 592307816
--R  4 0628620899 8628034825 3421170679 8214808651 3282306647 0938446095 505822317
--R  2 5359408128 4811174502 8410270193 8521105559 6446229489 5493038196 442881097
--R  5 6659334461 2847564823 3786783165 2712019091 4564856692 3460348610 454326648
--R  2 1339360726 0249141273 7245870066 0631558817 4881520920 9628292540 917153643
--R  6 7892590360 0113305305 4882046652 1384146951 9415116094 3305727036 575959195
--R  3 0921861173 8193261179 3105118548 0744623799 6274956735 1885752724 891227938
--R  1 830119491
--R                                                                  Type: Float
--E 19

)clear all

--S 20 of 76
F7 := PF 7
--R 
--R
--R   (1)  PrimeField 7
--R                                                                 Type: Domain
--E 20

--S 21 of 76
F49 := FF(7,2)
--R 
--R
--R   (2)  FiniteField(7,2)
--R                                                                 Type: Domain
--E 21

--S 22 of 76
definingPolynomial()$F49
--R 
--R
--R         2
--R   (3)  ?  + 1
--R                                Type: SparseUnivariatePolynomial PrimeField 7
--E 22

--S 23 of 76
e := random()$F49
--R 
--R
--I   (4)  4%A + 3
--R                                                       Type: FiniteField(7,2)
--E 23

--S 24 of 76
norm e
--R 
--R
--I   (5)  4
--R                                                           Type: PrimeField 7
--E 24

--S 25 of 76
trace e
--R 
--R
--I   (6)  6
--R                                                           Type: PrimeField 7
--E 25

--S 26 of 76
order e
--R 
--R
--I   (7)  24
--R                                                        Type: PositiveInteger
--E 26

--S 27 of 76
allElts := [index(i)$F49 for i in 1..48]
--R 
--R
--R   (8)
--R   [1, 2, 3, 4, 5, 6, %A, %A + 1, %A + 2, %A + 3, %A + 4, %A + 5, %A + 6, 2%A,
--R    2%A + 1, 2%A + 2, 2%A + 3, 2%A + 4, 2%A + 5, 2%A + 6, 3%A, 3%A + 1,
--R    3%A + 2, 3%A + 3, 3%A + 4, 3%A + 5, 3%A + 6, 4%A, 4%A + 1, 4%A + 2,
--R    4%A + 3, 4%A + 4, 4%A + 5, 4%A + 6, 5%A, 5%A + 1, 5%A + 2, 5%A + 3,
--R    5%A + 4, 5%A + 5, 5%A + 6, 6%A, 6%A + 1, 6%A + 2, 6%A + 3, 6%A + 4,
--R    6%A + 5, 6%A + 6]
--R                                                  Type: List FiniteField(7,2)
--E 27

--S 28 of 76
reduce(+,allElts)
--R 
--R
--R   (9)  0
--R                                                       Type: FiniteField(7,2)
--E 28

--S 29 of 76
[order e for e in allElts]
--R 
--R
--R   (10)
--R   [1, 3, 6, 3, 6, 2, 4, 24, 48, 48, 48, 48, 24, 12, 48, 8, 16, 16, 8, 48, 12,
--R    48, 16, 24, 24, 16, 48, 12, 48, 16, 24, 24, 16, 48, 12, 48, 8, 16, 16, 8,
--R    48, 4, 24, 48, 48, 48, 48, 24]
--R                                                   Type: List PositiveInteger
--E 29

--S 30 of 76
u:UP(x, F7) := x**2 + 1
--R 
--R
--R          2
--R   (11)  x  + 1
--R                                   Type: UnivariatePolynomial(x,PrimeField 7)
--E 30

--S 31 of 76
factor u
--R 
--R
--R          2
--R   (12)  x  + 1
--R                          Type: Factored UnivariatePolynomial(x,PrimeField 7)
--E 31

--S 32 of 76
u2:UP(x, F49) := u
--R 
--R
--R          2
--R   (13)  x  + 1
--R                               Type: UnivariatePolynomial(x,FiniteField(7,2))
--E 32

--S 33 of 76
factor u2
--R 
--R
--R   (14)  (x + %A)(x + 6%A)
--R                      Type: Factored UnivariatePolynomial(x,FiniteField(7,2))
--E 33

)clear all
--S 34 of 76
f: NNI -> INT
--R 
--R                                                                   Type: Void
--E 34

--S 35 of 76
f(n) == 2**n - 1
--R 
--R                                                                   Type: Void
--E 35

--S 36 of 76
factor f(7)
--R 
--R   Compiling function f with type NonNegativeInteger -> Integer 
--R
--R   (3)  127
--R                                                       Type: Factored Integer
--E 36

--S 37 of 76
ints := [n for n in 1..]
--R 
--R
--R   (4)  [1,2,3,4,5,6,7,8,9,10,...]
--R                                                 Type: Stream PositiveInteger
--E 37

--S 28 of 76
primes := [x for x in ints | prime? x]
--R 
--R
--R   (5)  [2,3,5,7,11,13,17,19,23,29,...]
--R                                                 Type: Stream PositiveInteger
--E 38

--S 39 of 76
primes.25
--R 
--R
--R   (6)  97
--R                                                        Type: PositiveInteger
--E 39

--S 40 of 76
numbers := [f(n) for n in primes]
--R 
--R
--R   (7)  [3,7,31,127,2047,8191,131071,524287,8388607,536870911,...]
--R                                                         Type: Stream Integer
--E 40

--S 41 of 76
factors := [factor n for n in numbers]
--R 
--R
--R   (8)  [3,7,31,127,23 89,8191,131071,524287,47 178481,233 1103 2089,...]
--R                                                Type: Stream Factored Integer
--E 41

--S 42 of 76
nums := [x for x in numbers | not prime? x]
--R 
--R
--R   (9)
--R   [2047, 8388607, 536870911, 137438953471, 2199023255551, 8796093022207,
--R    140737488355327, 9007199254740991, 576460752303423487,
--R    147573952589676412927, ...]
--R                                                         Type: Stream Integer
--E 42

)clear all

--S 43 of 76
numbers := [n**2 - n + 41 for n in 0..40]
--R 
--R
--R   (1)
--R   [41, 41, 43, 47, 53, 61, 71, 83, 97, 113, 131, 151, 173, 197, 223, 251, 281,
--R    313, 347, 383, 421, 461, 503, 547, 593, 641, 691, 743, 797, 853, 911, 971,
--R    1033, 1097, 1163, 1231, 1301, 1373, 1447, 1523, 1601]
--R                                                           Type: List Integer
--E 43

--S 44 of 76
[factor n for n in numbers]
--R 
--R
--R   (2)
--R   [41, 41, 43, 47, 53, 61, 71, 83, 97, 113, 131, 151, 173, 197, 223, 251, 281,
--R    313, 347, 383, 421, 461, 503, 547, 593, 641, 691, 743, 797, 853, 911, 971,
--R    1033, 1097, 1163, 1231, 1301, 1373, 1447, 1523, 1601]
--R                                                  Type: List Factored Integer
--E 44

)clear all

--S 45 of 76
f := operator 'f
--R 
--R
--R   (1)  f
--R                                                          Type: BasicOperator
--E 45

--S 46 of 76
differentiate(f x,x,7)
--R 
--R
--R         (vii)
--R   (2)  f     (x)
--R
--R                                                     Type: Expression Integer
--E 46

--S 47 of 76
a := roman(1978 - 1965)
--R 
--R
--R   (3)  XIII
--R                                                           Type: RomanNumeral
--E 47

--S 48 of 76
x : UTS(ROMAN,'x,0) := x
--R 
--R
--R   (4)  x
--R                               Type: UnivariateTaylorSeries(RomanNumeral,x,0)
--E 48

--S 49 of 76
recip(1 - x - x**2)
--R 
--R
--R   (5)
--R                 2        3      4         5         6        7          8
--R     I + x + II x  + III x  + V x  + VIII x  + XIII x  + XXI x  + XXXIV x
--R   + 
--R         9           10      11
--R     LV x  + LXXXIX x   + O(x  )
--R                    Type: Union(UnivariateTaylorSeries(RomanNumeral,x,0),...)
--E 49

--S 50 of 76
m : MATRIX FRAC ROMAN
--R 
--R                                                                   Type: Void
--E 50

--S 51 of 76
m := matrix [[1/(i + j) for i in 1..3] for j in 1..3]
--R 
--R
--R        + I    I    I+
--R        |--   ---  --|
--R        |II   III  IV|
--R        |            |
--R        | I    I   I |
--R   (7)  |---  --   - |
--R        |III  IV   V |
--R        |            |
--R        | I    I    I|
--R        |--    -   --|
--R        +IV    V   VI+
--R                                           Type: Matrix Fraction RomanNumeral
--E 51

--S 52 of 76
inverse m
--R 
--R
--R        +LXXII   - CCXL    CLXXX +
--R        |                        |
--R   (8)  |- CCXL    CM     - DCCXX|
--R        |                        |
--R        +CLXXX   - DCCXX    DC   +
--R                                Type: Union(Matrix Fraction RomanNumeral,...)
--E 52

--S 53 of 76
y := factorial 20
--R 
--R
--R   (9)  2432902008176640000
--R                                                        Type: PositiveInteger
--E 53

--S 54 of 76
roman y
--R 
--R
--R   (10)
--R  ((((((((((((((((I))))))))))))))))((((((((((((((((I)))))))))))))))) ((((((((((
--R  (((((I)))))))))))))))(((((((((((((((I)))))))))))))))(((((((((((((((I)))))))))
--R  ))))))(((((((((((((((I))))))))))))))) ((((((((((((((I))))))))))))))((((((((((
--R  ((((I))))))))))))))((((((((((((((I)))))))))))))) (((((((((((((I)))))))))))))(
--R  ((((((((((((I))))))))))))) ((((((((((((I))))))))))))((((((((((((I))))))))))))
--R  ((((((((((((I))))))))))))((((((((((((I))))))))))))((((((((((((I))))))))))))((
--R  ((((((((((I))))))))))))((((((((((((I))))))))))))((((((((((((I))))))))))))((((
--R  ((((((((I)))))))))))) ((((((((((I))))))))))((((((((((I)))))))))) (((((((I))))
--R  )))(((((((I)))))))(((((((I)))))))(((((((I)))))))(((((((I)))))))(((((((I))))))
--R  )(((((((I)))))))(((((((I))))))) ((((((I)))))) (((((I)))))(((((I)))))(((((I)))
--R  ))(((((I)))))(((((I)))))(((((I)))))(((((I))))) ((((I))))((((I))))((((I))))(((
--R  (I))))((((I))))((((I)))) (((I)))(((I)))(((I)))(((I)))(((I)))(((I))) ((I))((I)
--R  )((I))((I))
--R                                                           Type: RomanNumeral
--E 54

)clear all

--S 55 of 76
f: NNI -> INT
--R 
--R                                                                   Type: Void
--E 55

--S 56 of 76
f(n) == 2**(2**n) + 1
--R 
--R                                                                   Type: Void
--E 56

--S 57 of 76
factor f(1)
--R 
--R   Compiling function f with type NonNegativeInteger -> Integer 
--R
--R   (3)  5
--R                                                       Type: Factored Integer
--E 57

--S 58 of 76
factor f(2)
--R 
--R
--R   (4)  17
--R                                                       Type: Factored Integer
--E 58

--S 59 of 76
for n in 1..6 repeat output factor f(n)
--R 
--R   5
--R   17
--R   257
--R   65537
--R   641 6700417
--R   274177 67280421310721
--R                                                                   Type: Void
--E 59

)clear all

--S 60 of 76
exp(%pi * sqrt(163.0))
--R 
--R
--R   (1)
--R  26253741 2640768743.9999999999 9925007259 7198185688 8793538563 3733699086 27
--R  07537410 3782106479 1011860731 2951181346 1860645041 9308388794 9753864044 90
--R  57287144 7719681485 2322432039 1164782914 8864228272 0131178317 0650104522 26
--R  87801444 8417703469 6946335570 7681723887 6810009237 0653951938 6506362757 65
--R  78885582 2394811427 6912100830 8866511072 8471062346 5811298183 0124591328 36
--R  10006498 2665923651 7261788308 6371078645 2195528154 2746651096 1100147250 20
--R  97904639 3817787125 7500980365 7792230643 1216511310 8738059929 8242335584 94
--R  56123995 65
--R                                                                  Type: Float
--E 60

--S 61 of 76
digits 40
--R 
--R
--R   (2)  500
--R                                                        Type: PositiveInteger
--E 61

--S 62 of 76
x := exp(%pi * sqrt(163.0))
--R 
--R
--R   (3)  26253741 2640768743.9999999999 9925007259 76
--R                                                                  Type: Float
--E 62

--S 63 of 76
numeric(1/3, 5)
--R 
--R
--R   (4)  0.33333
--R                                                                  Type: Float
--E 63

--S 64 of 76
numeric(1/3, 60)
--R 
--R
--R   (5)  0.3333333333 3333333333 3333333333 3333333333 3333333333 3333333333
--R                                                                  Type: Float
--E 64

--S 65 of 76
numeric(1/3)
--R 
--R
--R   (6)  0.3333333333 3333333333 3333333333 3333333333
--R                                                                  Type: Float
--E 65

)clear all

--S 66 of 76
61657 ** 10 / 999983 ** 12
--R 
--R
--R   (1)
--R               794006207119672937688869745365148806136551203249
--R   ------------------------------------------------------------------------
--R   999796019072919181341770495558788771223957844095225846167460930641229761
--R                                                       Type: Fraction Integer
--E 66

--S 67 of 76
x := 104348/33215
--R 
--R
--R        104348
--R   (2)  ------
--R         33215
--R                                                       Type: Fraction Integer
--E 67

--S 68 of 76
numeric x
--R 
--R
--R   (3)  3.1415926539 2142104470 8715941592 653921421
--R                                                                  Type: Float
--E 68

--S 69 of 76
numer(x)
--R 
--R
--R   (4)  104348
--R                                                        Type: PositiveInteger
--E 69

--S 70 of 76
denom(x)
--R 
--R
--R   (5)  33215
--R                                                        Type: PositiveInteger
--E 70

--S 71 of 76
factor(numer x) / factor(denom x)
--R 
--R
--R         2
--R        2 19 1373
--R   (6)  ---------
--R        5 7 13 73
--R                                              Type: Fraction Factored Integer
--E 71

)clear all

--S 72 of 76
x := 2/7 :: DECIMAL
--R 
--R
--R          ______
--R   (1)  0.285714
--R                                                       Type: DecimalExpansion
--E 72

--S 73 of 76
y := 13/17 :: DECIMAL
--R 
--R
--R          ________________
--R   (2)  0.7647058823529411
--R                                                       Type: DecimalExpansion
--E 73

--S 74 of 76
x - y
--R 
--R
--R            ________________________________________________
--R   (3)  - 0.478991596638655462184873949579831932773109243697
--R                                                       Type: DecimalExpansion
--E 74

--S 75 of 76
x + y
--R 
--R
--R          ________________________________________________
--R   (4)  1.050420168067226890756302521008403361344537815126
--R                                                       Type: DecimalExpansion
--E 75

--S 76 of 76
x * y
--R 
--R
--R          ________________________________________________
--R   (5)  0.218487394957983193277310924369747899159663865546
--R                                                       Type: DecimalExpansion
--E 76
)spool 
)lisp (bye)
 
@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}

 
