\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{\$SPAD/src/input space3.input}
\author{Timothy Daly}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{License}
<<license>>=
--Copyright The Numerical Algorithms Group Limited 1991.
@
<<*>>=
)set break resume
)spool space3.output
)set message test on
)set message auto off
)clear all
 
@
Test for ThreeSpace domain
<<*>>=
--S 1 of 185
space := create3Space()$(ThreeSpace DoubleFloat)
--R 
--R
--R   (1)  3-Space with 0 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 1

--S 2 of 185
p0 := point [1,1,1]$(Point DoubleFloat)
--R 
--R
--R   (2)  [1.,1.,1.]
--R                                                      Type: Point DoubleFloat
--E 2

--S 3 of 185
p1 := point [1,0,0]$(Point DoubleFloat)
--R 
--R
--R   (3)  [1.,0.,0.]
--R                                                      Type: Point DoubleFloat
--E 3

--S 4 of 185
p2 := point [0,0,0]$(Point DoubleFloat)
--R 
--R
--R   (4)  [0.,0.,0.]
--R                                                      Type: Point DoubleFloat
--E 4

--S 5 of 185
p3 := point [0,1,1]$(Point DoubleFloat)
--R 
--R
--R   (5)  [0.,1.,1.]
--R                                                      Type: Point DoubleFloat
--E 5

--S 6 of 185
closedCurve(space,[p0,p1,p2,p3])
--R 
--R
--R   (6)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 6

--S 7 of 185
closedCurve(space,[[1,1,1],[1,0,0],[0,0,0],[0,1,1]])
--R 
--R
--R   (7)  3-Space with 2 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 7

--S 8 of 185
cspace := closedCurve([p0,p1,p2,p3])$(ThreeSpace DoubleFloat)
--R 
--R
--R   (8)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 8

--S 9 of 185
closedCurve cspace
--R 
--R
--R   (9)  [[1.,1.,1.],[1.,0.,0.],[0.,0.,0.],[0.,1.,1.]]
--R                                                 Type: List Point DoubleFloat
--E 9

)clear all

--S 10 of 185
space := create3Space()$(ThreeSpace DoubleFloat)
--R 
--R
--R   (1)  3-Space with 0 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 10

--S 11 of 185
p0 := point [1,1,1]$(Point DoubleFloat)
--R 
--R
--R   (2)  [1.,1.,1.]
--R                                                      Type: Point DoubleFloat
--E 11

--S 12 of 185
p1 := point [1,0,0]$(Point DoubleFloat)
--R 
--R
--R   (3)  [1.,0.,0.]
--R                                                      Type: Point DoubleFloat
--E 12

--S 13 of 185
p2 := point [0,0,0]$(Point DoubleFloat)
--R 
--R
--R   (4)  [0.,0.,0.]
--R                                                      Type: Point DoubleFloat
--E 13

--S 14 of 185
p3 := point [0,1,1]$(Point DoubleFloat)
--R 
--R
--R   (5)  [0.,1.,1.]
--R                                                      Type: Point DoubleFloat
--E 14

--S 15 of 185
closedCurve(space,[p0,p1,p2,p3])
--R 
--R
--R   (6)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 15

--S 16 of 185
closedCurve? space
--R 
--R
--R   (7)  true
--R                                                                Type: Boolean
--E 16

--S 17 of 185
curve(space,[p0,p1,p2,p3])
--R 
--R
--R   (8)  3-Space with 2 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 17

--S 18 of 185
point(space,p0)
--R 
--R
--R   (9)  3-Space with 3 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 18

--S 19 of 185
components(space)
--R 
--R
--R   (10)
--R   [3-Space with 1 component,3-Space with 1 component,3-Space with 1 component]
--R                                            Type: List ThreeSpace DoubleFloat
--E 19

--S 20 of 185
space1 := create3Space()$(ThreeSpace DoubleFloat)
--R 
--R
--R   (11)  3-Space with 0 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 20

--S 21 of 185
curve(space1,[p0,p1,p2,p3])
--R 
--R
--R   (12)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 21

--S 22 of 185
point(space1,p0)
--R 
--R
--R   (13)  3-Space with 2 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 22

--S 23 of 185
space2 := point(p0)$(ThreeSpace DoubleFloat)
--R 
--R
--R   (14)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 23

--S 24 of 185
space3 := curve[p0,p1,p2]$(ThreeSpace DoubleFloat)
--R 
--R
--R   (15)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 24

--S 25 of 185
composite [space1,space2,space3]
--R 
--R
--R   (16)  3-Space with 4 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 25

--S 26 of 185
curve(space,[p0,p1,p2,p3])
--R 
--R
--R   (17)  3-Space with 4 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 26

--S 27 of 185
point(space,p0)
--R 
--R
--R   (18)  3-Space with 5 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 27

--S 28 of 185
point(space,p1)
--R 
--R
--R   (19)  3-Space with 6 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 28

--S 29 of 185
closedCurve(space,[p0,p1,p2])
--R 
--R
--R   (20)  3-Space with 7 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 29

--S 30 of 185
composite [space1,space2,space3]
--R 
--R
--R   (21)  3-Space with 4 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 30

--S 31 of 185
composites(space)
--R 
--R
--R   (22)  []
--R                                            Type: List ThreeSpace DoubleFloat
--E 31

--S 32 of 185
curve(space,[p0,p1,p2,p3])
--R 
--R
--R   (23)  3-Space with 8 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 32

--S 33 of 185
point(space,p0)
--R 
--R
--R   (24)  3-Space with 9 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 33

--S 34 of 185
space4 := copy space
--R 
--R
--R   (25)  3-Space with 9 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 34

--S 35 of 185
curve(space,[p0,p1,p2])
--R 
--R
--R   (26)  3-Space with 10 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 35

--S 36 of 185
point(space,p0)
--R 
--R
--R   (27)  3-Space with 11 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 36

--S 37 of 185
sub := subspace(space)
--R 
--R
--R   (28)  3-Space with depth of 3 and 11 components
--R                                                Type: SubSpace(3,DoubleFloat)
--E 37

--S 38 of 185
spNew := create3Space(sub)$(ThreeSpace DoubleFloat)
--R 
--R
--R   (29)  3-Space with 11 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 38

--S 39 of 185
curve(space,[p0,p1,p2,p3])
--R 
--R
--R   (30)  3-Space with 12 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 39

--S 40 of 185
curve(space,[[1,1,1],[1,0,0],[0,0,0],[0,1,1]])
--R 
--R
--R   (31)  3-Space with 13 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 40

--S 41 of 185
cspace := curve([p0,p1,p2,p3])$(ThreeSpace DoubleFloat)
--R 
--R
--R   (32)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 41

--S 42 of 185
curve cspace
--R 
--R
--R   (33)  [[1.,1.,1.],[1.,0.,0.],[0.,0.,0.],[0.,1.,1.]]
--R                                                 Type: List Point DoubleFloat
--E 42

)clear all

--S 43 of 185
space := create3Space()$(ThreeSpace DoubleFloat)
--R 
--R
--R   (1)  3-Space with 0 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 43

--S 44 of 185
p0 := point [1,1,1]$(Point DoubleFloat)
--R 
--R
--R   (2)  [1.,1.,1.]
--R                                                      Type: Point DoubleFloat
--E 44

--S 45 of 185
p1 := point [1,0,0]$(Point DoubleFloat)
--R 
--R
--R   (3)  [1.,0.,0.]
--R                                                      Type: Point DoubleFloat
--E 45

--S 46 of 185
p2 := point [0,0,0]$(Point DoubleFloat)
--R 
--R
--R   (4)  [0.,0.,0.]
--R                                                      Type: Point DoubleFloat
--E 46

--S 47 of 185
p3 := point [0,1,1]$(Point DoubleFloat)
--R 
--R
--R   (5)  [0.,1.,1.]
--R                                                      Type: Point DoubleFloat
--E 47

--S 48 of 185
curve(space,[p0,p1,p2,p3])
--R 
--R
--R   (6)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 48

--S 49 of 185
curve? space
--R 
--R
--R   (7)  true
--R                                                                Type: Boolean
--E 49

)clear all

--S 50 of 185
space := create3Space()$(ThreeSpace DoubleFloat)
--R 
--R
--R   (1)  3-Space with 0 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 50

--S 51 of 185
p0 := point [1,1,1]$(Point DoubleFloat)
--R 
--R
--R   (2)  [1.,1.,1.]
--R                                                      Type: Point DoubleFloat
--E 51

--S 52 of 185
p1 := point [1,0,0]$(Point DoubleFloat)
--R 
--R
--R   (3)  [1.,0.,0.]
--R                                                      Type: Point DoubleFloat
--E 52

--S 53 of 185
p2 := point [0,0,0]$(Point DoubleFloat)
--R 
--R
--R   (4)  [0.,0.,0.]
--R                                                      Type: Point DoubleFloat
--E 53

--S 54 of 185
p3 := point [0,1,1]$(Point DoubleFloat)
--R 
--R
--R   (5)  [0.,1.,1.]
--R                                                      Type: Point DoubleFloat
--E 54

--S 55 of 185
closedCurve(space,[p0,p1,p2,p3])
--R 
--R
--R   (6)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 55

--S 56 of 185
curve(space,[p0,p1,p2,p3])
--R 
--R
--R   (7)  3-Space with 2 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 56

--S 57 of 185
point(space,p0)
--R 
--R
--R   (8)  3-Space with 3 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 57

--S 58 of 185
point(space,p3)
--R 
--R
--R   (9)  3-Space with 4 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 58

--S 59 of 185
polygon(space,[p0,p1,p3])
--R 
--R
--R   (10)  3-Space with 5 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 59

--S 60 of 185
polygon(space,[p0,p2,p3])
--R 
--R
--R   (11)  3-Space with 6 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 60

--S 61 of 185
lllip(space)
--R 
--R
--R   (12)  [[[1,2,3,4]],[[5,6,7,8]],[[9]],[[10]],[[11],[12,13]],[[14],[15,16]]]
--R                                      Type: List List List NonNegativeInteger
--E 61

--S 62 of 185
closedCurve(space,[p0,p1,p2,p3])
--R 
--R
--R   (13)  3-Space with 7 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 62

--S 63 of 185
curve(space,[p0,p1,p2,p3])
--R 
--R
--R   (14)  3-Space with 8 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 63

--S 64 of 185
point(space,p0)
--R 
--R
--R   (15)  3-Space with 9 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 64

--S 65 of 185
polygon(space,[p0,p1,p3])
--R 
--R
--R   (16)  3-Space with 10 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 65

--S 66 of 185
llprop(space)
--R 
--R
--R   (17)
--R   [[Component is closed, not solid], [Component is not closed, not solid],
--R    [Component is not closed, not solid], [Component is not closed, not solid],
--R    [Component is not closed, not solid,Component is not closed, not solid],
--R    [Component is not closed, not solid,Component is not closed, not solid],
--R    [Component is closed, not solid], [Component is not closed, not solid],
--R    [Component is not closed, not solid],
--R    [Component is not closed, not solid,Component is not closed, not solid]]
--R                                    Type: List List SubSpaceComponentProperty
--E 66

--S 67 of 185
lprop(space)
--R 
--R
--R   (18)
--R   [Component is not closed, not solid, Component is not closed, not solid,
--R    Component is not closed, not solid, Component is not closed, not solid,
--R    Component is not closed, not solid, Component is not closed, not solid,
--R    Component is not closed, not solid, Component is not closed, not solid,
--R    Component is not closed, not solid, Component is not closed, not solid]
--R                                         Type: List SubSpaceComponentProperty
--E 67

--S 68 of 185
closedCurve(space,[p0,p1,p2,p3])
--R 
--R
--R   (19)  3-Space with 11 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 68

--S 69 of 185
curve(space,[p0,p1,p2,p3])
--R 
--R
--R   (20)  3-Space with 12 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 69

--S 70 of 185
point(space,p0)
--R 
--R
--R   (21)  3-Space with 13 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 70

--S 71 of 185
polygon(space,[p0,p1,p3])
--R 
--R
--R   (22)  3-Space with 14 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 71

--S 72 of 185
lp(space)
--R 
--R
--R   (23)
--R   [[1.,1.,1.], [1.,0.,0.], [0.,0.,0.], [0.,1.,1.], [1.,1.,1.], [1.,0.,0.],
--R    [0.,0.,0.], [0.,1.,1.], [1.,1.,1.], [0.,1.,1.], [1.,1.,1.], [1.,0.,0.],
--R    [0.,1.,1.], [1.,1.,1.], [0.,0.,0.], [0.,1.,1.], [1.,1.,1.], [1.,0.,0.],
--R    [0.,0.,0.], [0.,1.,1.], [1.,1.,1.], [1.,0.,0.], [0.,0.,0.], [0.,1.,1.],
--R    [1.,1.,1.], [1.,1.,1.], [1.,0.,0.], [0.,1.,1.], [1.,1.,1.], [1.,0.,0.],
--R    [0.,0.,0.], [0.,1.,1.], [1.,1.,1.], [1.,0.,0.], [0.,0.,0.], [0.,1.,1.],
--R    [1.,1.,1.], [1.,1.,1.], [1.,0.,0.], [0.,1.,1.]]
--R                                                 Type: List Point DoubleFloat
--E 72

--S 73 of 185
enterPointData(space,[p0,p1,p2,p3])
--R 
--R
--R   (24)  44
--R                                                        Type: PositiveInteger
--E 73

)clear all

--S 74 of 185
space1 := create3Space()$(ThreeSpace DoubleFloat)
--R 
--R
--R   (1)  3-Space with 0 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 74

--S 75 of 185
p0 := point [1,1,1]$(Point DoubleFloat)
--R 
--R
--R   (2)  [1.,1.,1.]
--R                                                      Type: Point DoubleFloat
--E 75

--S 76 of 185
p1 := point [1,0,0]$(Point DoubleFloat)
--R 
--R
--R   (3)  [1.,0.,0.]
--R                                                      Type: Point DoubleFloat
--E 76

--S 77 of 185
p2 := point [0,0,0]$(Point DoubleFloat)
--R 
--R
--R   (4)  [0.,0.,0.]
--R                                                      Type: Point DoubleFloat
--E 77

--S 78 of 185
p3 := point [0,1,1]$(Point DoubleFloat)
--R 
--R
--R   (5)  [0.,1.,1.]
--R                                                      Type: Point DoubleFloat
--E 78

--S 79 of 185
curve(space1,[p0,p1,p2,p3])
--R 
--R
--R   (6)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 79

--S 80 of 185
space2 := copy space1
--R 
--R
--R   (7)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 80

--S 81 of 185
point(space1,p3)
--R 
--R
--R   (8)  3-Space with 2 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 81

--S 82 of 185
space3 := copy space1
--R 
--R
--R   (9)  3-Space with 2 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 82

--S 83 of 185
curve(space3,[p0,p1,p2])
--R 
--R
--R   (10)  3-Space with 3 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 83

--S 84 of 185
newSpace1 := merge [space1,space2,space3]
--R 
--R
--R   (11)  3-Space with 6 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 84

--S 85 of 185
newSpace2 := merge(space2,space3)
--R 
--R
--R   (12)  3-Space with 4 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 85

--S 86 of 185
space := create3Space()$(ThreeSpace DoubleFloat)
--R 
--R
--R   (13)  3-Space with 0 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 86

--S 87 of 185
prop := new()$SubSpaceComponentProperty()
--R 
--R
--R   (14)  Component is not closed, not solid
--R                                              Type: SubSpaceComponentProperty
--E 87

--S 88 of 185
lprop := [prop, prop, prop]
--R 
--R
--R   (15)
--R   [Component is not closed, not solid, Component is not closed, not solid,
--R    Component is not closed, not solid]
--R                                         Type: List SubSpaceComponentProperty
--E 88

--S 89 of 185
mesh(space,[[p0,p1,p2],[p1,p2,p3],[p0,p2,p3]],lprop,prop)
--R 
--R
--R   (16)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 89

--S 90 of 185
mesh(space,[[p0,p1,p2],[p1,p2,p3],[p0,p2,p3]],lprop,prop)
--R 
--R
--R   (17)  3-Space with 2 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 90

--S 91 of 185
mesh(space,[[p0,p1,p2],[p1,p2,p3],[p0,p2,p3]],closed?(prop),closed?(prop))
--R 
--R
--R   (18)  3-Space with 3 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 91

--S 92 of 185
b := close(prop,true)
--R 
--R
--R   (19)  true
--R                                                                Type: Boolean
--E 92

--S 93 of 185
mesh(space,[[p0,p1,p2],[p1,p2,p3],[p0,p2,p3]],b,b)
--R 
--R
--R   (20)  3-Space with 4 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 93

--S 94 of 185
mesh(space,[[p0,p1,p2],[p1,p2,p3],[p0,p2,p3]],closed?(prop),closed?(prop))
--R 
--R
--R   (21)  3-Space with 5 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 94

--S 95 of 185
mesh(space,[[[1,1,1],[1,0,0],[0,0,0]],[[1,0,0],[0,0,0],[0,1,1]],[[1,1,1],[0,0,0],[0,1,1]]],closed?(prop),closed?(prop))
--R 
--R
--R   (22)  3-Space with 6 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 95

--S 96 of 185
mesh(space,[[[1,1,1],[1,0,0],[0,0,0]],[[1,0,0],[0,0,0],[0,1,1]],[[1,1,1],[0,0,0],[0,1,1]]],b,b)
--R 
--R
--R   (23)  3-Space with 7 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 96

)clear all

--S 97 of 185
p0 := point [1,1,1]$(Point DoubleFloat)
--R 
--R
--R   (1)  [1.,1.,1.]
--R                                                      Type: Point DoubleFloat
--E 97

--S 98 of 185
p1 := point [1,0,0]$(Point DoubleFloat)
--R 
--R
--R   (2)  [1.,0.,0.]
--R                                                      Type: Point DoubleFloat
--E 98

--S 99 of 185
p2 := point [0,0,0]$(Point DoubleFloat)
--R 
--R
--R   (3)  [0.,0.,0.]
--R                                                      Type: Point DoubleFloat
--E 99

--S 100 of 185
p3 := point [0,1,1]$(Point DoubleFloat)
--R 
--R
--R   (4)  [0.,1.,1.]
--R                                                      Type: Point DoubleFloat
--E 100

--S 101 of 185
space := mesh([[p0,p1,p2],[p1,p2,p3],[p0,p2,p3]])$(ThreeSpace DoubleFloat)
--R 
--R
--R   (5)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 101

--S 102 of 185
space1 := mesh([[p0,p1,p2],[p1,p2,p3],[p0,p2,p3]],false,false)$(ThreeSpace DoubleFloat)
--R 
--R
--R   (6)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 102

)clear all

--S 103 of 185
p0 := point [1,1,1]$(Point DoubleFloat)
--R 
--R
--R   (1)  [1.,1.,1.]
--R                                                      Type: Point DoubleFloat
--E 103

--S 104 of 185
p1 := point [1,0,0]$(Point DoubleFloat)
--R 
--R
--R   (2)  [1.,0.,0.]
--R                                                      Type: Point DoubleFloat
--E 104

--S 105 of 185
p2 := point [0,0,0]$(Point DoubleFloat)
--R 
--R
--R   (3)  [0.,0.,0.]
--R                                                      Type: Point DoubleFloat
--E 105

--S 106 of 185
p3 := point [0,1,1]$(Point DoubleFloat)
--R 
--R
--R   (4)  [0.,1.,1.]
--R                                                      Type: Point DoubleFloat
--E 106

--S 107 of 185
space := mesh([[p0,p1,p2],[p1,p2,p3],[p0,p2,p3]])$(ThreeSpace DoubleFloat)
--R 
--R
--R   (5)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 107

--S 108 of 185
mesh(space)
--R 
--R
--R   (6)
--R   [[[1.,1.,1.],[0.,0.,0.],[0.,1.,1.]], [[1.,0.,0.],[0.,0.,0.],[0.,1.,1.]],
--R    [[1.,1.,1.],[1.,0.,0.],[0.,0.,0.]]]
--R                                            Type: List List Point DoubleFloat
--E 108

--S 109 of 185
s := mesh([[p0,p1,p2],[p1,p2,p3],[p0,p2,p3]])$(ThreeSpace DoubleFloat)
--R 
--R
--R   (7)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 109

--S 110 of 185
mesh(s)
--R 
--R
--R   (8)
--R   [[[1.,1.,1.],[0.,0.,0.],[0.,1.,1.]], [[1.,0.,0.],[0.,0.,0.],[0.,1.,1.]],
--R    [[1.,1.,1.],[1.,0.,0.],[0.,0.,0.]]]
--R                                            Type: List List Point DoubleFloat
--E 110

--S 111 of 185
space2 := create3Space()$(ThreeSpace DoubleFloat)
--R 
--R
--R   (9)  3-Space with 0 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 111

--S 112 of 185
curve(space2,[p0,p1,p2,p3])
--R 
--R
--R   (10)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 112

--S 113 of 185
mesh?(space2)
--R 
--R
--R   (11)  false
--R                                                                Type: Boolean
--E 113

--S 114 of 185
s1 := mesh([[p0,p1,p2],[p1,p2,p3],[p0,p2,p3]])$(ThreeSpace DoubleFloat)
--R 
--R
--R   (12)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 114

--S 115 of 185
mesh?(s1)
--R 
--R
--R   (13)  true
--R                                                                Type: Boolean
--E 115

--S 116 of 185
i := enterPointData(space2,[p0,p1,p2,p3])::NNI
--R 
--R
--R   (14)  8
--R                                                     Type: NonNegativeInteger
--E 116

--S 117 of 185
modifyPointData(space2,i,p2)
--R 
--R
--R   (15)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 117

--S 118 of 185
point(space2,p0)
--R 
--R
--R   (16)  3-Space with 2 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 118

--S 119 of 185
curve(space2,[p0,p1,p2,p3])
--R 
--R
--R   (17)  3-Space with 3 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 119

--S 120 of 185
numberOfComponents(space2)
--R 
--R
--R   (18)  3
--R                                                        Type: PositiveInteger
--E 120

)clear all

--S 121 of 185
space1 := create3Space()$(ThreeSpace DoubleFloat)
--R 
--R
--R   (1)  3-Space with 0 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 121

--S 122 of 185
numberOfComposites(space1)
--R 
--R
--R   (2)  0
--R                                                     Type: NonNegativeInteger
--E 122

--S 123 of 185
p0 := point [1,1,1]$(Point DoubleFloat)
--R 
--R
--R   (3)  [1.,1.,1.]
--R                                                      Type: Point DoubleFloat
--E 123

--S 124 of 185
p1 := point [1,0,0]$(Point DoubleFloat)
--R 
--R
--R   (4)  [1.,0.,0.]
--R                                                      Type: Point DoubleFloat
--E 124

--S 125 of 185
p2 := point [0,0,0]$(Point DoubleFloat)
--R 
--R
--R   (5)  [0.,0.,0.]
--R                                                      Type: Point DoubleFloat
--E 125

--S 126 of 185
p3 := point [0,1,1]$(Point DoubleFloat)
--R 
--R
--R   (6)  [0.,1.,1.]
--R                                                      Type: Point DoubleFloat
--E 126

--S 127 of 185
curve(space1,[p0,p1,p2,p3])
--R 
--R
--R   (7)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 127

--S 128 of 185
point(space1,p0)
--R 
--R
--R   (8)  3-Space with 2 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 128

--S 129 of 185
space2 := point(p0)$(ThreeSpace DoubleFloat)
--R 
--R
--R   (9)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 129

--S 130 of 185
space3 := curve [p0,p1,p2]$(ThreeSpace DoubleFloat)
--R 
--R
--R   (10)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 130

--S 131 of 185
s := composite [space1,space2,space3]
--R 
--R
--R   (11)  3-Space with 4 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 131

--S 132 of 185
numberOfComposites(s)
--R 
--R
--R   (12)  1
--R                                                        Type: PositiveInteger
--E 132

--S 133 of 185
space := create3Space()$(ThreeSpace DoubleFloat)
--R 
--R
--R   (13)  3-Space with 0 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 133

--S 134 of 185
point(space,p0)
--R 
--R
--R   (14)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 134

--S 135 of 185
curve(space,[p0,p1,p2,p3])
--R 
--R
--R   (15)  3-Space with 2 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 135

--S 136 of 185
closedCurve(space,[p0,p1,p2])
--R 
--R
--R   (16)  3-Space with 3 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 136

--S 137 of 185
objects space
--R 
--R
--R   (17)  [points= 1,curves= 2,polygons= 0,constructs= 0]
--RType: Record(points: NonNegativeInteger,curves: NonNegativeInteger,polygons: NonNegativeInteger,constructs: NonNegativeInteger)
--E 137

)clear all

--S 138 of 185
s := create3Space()$(ThreeSpace DoubleFloat)
--R 
--R
--R   (1)  3-Space with 0 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 138

--S 139 of 185
p := point [1,1,1]$(Point DoubleFloat)
--R 
--R
--R   (2)  [1.,1.,1.]
--R                                                      Type: Point DoubleFloat
--E 139

--S 140 of 185
point(s,p)
--R 
--R
--R   (3)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 140

--S 141 of 185
point(s,[1,1,1])
--R 
--R
--R   (4)  3-Space with 2 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 141

--S 142 of 185
p0 := point [1,0,0]$(Point DoubleFloat)
--R 
--R
--R   (5)  [1.,0.,0.]
--R                                                      Type: Point DoubleFloat
--E 142

--S 143 of 185
point(s,p)
--R 
--R
--R   (6)  3-Space with 3 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 143

--S 144 of 185
i := enterPointData(s,[p0])::NNI
--R 
--R
--R   (7)  4
--R                                                     Type: NonNegativeInteger
--E 144

--S 145 of 185
point(s,i)
--R 
--R
--R   (8)  3-Space with 4 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 145

--S 146 of 185
p := point [1,1,1]$(Point DoubleFloat)
--R 
--R
--R   (9)  [1.,1.,1.]
--R                                                      Type: Point DoubleFloat
--E 146

--S 147 of 185
space := point(p)$(ThreeSpace DoubleFloat)
--R 
--R
--R   (10)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 147

)clear all

--S 148 of 185
s := create3Space()$(ThreeSpace DoubleFloat)
--R 
--R
--R   (1)  3-Space with 0 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 148

--S 149 of 185
p0 := point [1,1,1]$(Point DoubleFloat)
--R 
--R
--R   (2)  [1.,1.,1.]
--R                                                      Type: Point DoubleFloat
--E 149

--S 150 of 185
curve(s,[p0,p0])
--R 
--R
--R   (3)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 150

--S 151 of 185
space1 := point(p0)$(ThreeSpace DoubleFloat)
--R 
--R
--R   (4)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 151

--S 152 of 185
point(space1)
--R 
--R
--R   (5)  [1.,1.,1.]
--R                                                      Type: Point DoubleFloat
--E 152

)clear all

--S 153 of 185
s := create3Space()$(ThreeSpace DoubleFloat)
--R 
--R
--R   (1)  3-Space with 0 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 153

--S 154 of 185
p0 := point [1,1,1]$(Point DoubleFloat)
--R 
--R
--R   (2)  [1.,1.,1.]
--R                                                      Type: Point DoubleFloat
--E 154

--S 155 of 185
curve(s,[p0,p0,p0])
--R 
--R
--R   (3)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 155

--S 156 of 185
point? s
--R 
--R
--R   (4)  false
--R                                                                Type: Boolean
--E 156

--S 157 of 185
space := point(p0)$(ThreeSpace DoubleFloat)
--R 
--R
--R   (5)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 157

--S 158 of 185
point? space
--R 
--R
--R   (6)  true
--R                                                                Type: Boolean
--E 158

)clear all

--S 159 of 185
space := create3Space()$(ThreeSpace DoubleFloat)
--R 
--R
--R   (1)  3-Space with 0 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 159

--S 160 of 185
p0 := point [1,1,1]$(Point DoubleFloat)
--R 
--R
--R   (2)  [1.,1.,1.]
--R                                                      Type: Point DoubleFloat
--E 160

--S 161 of 185
p1 := point [1,0,0]$(Point DoubleFloat)
--R 
--R
--R   (3)  [1.,0.,0.]
--R                                                      Type: Point DoubleFloat
--E 161

--S 162 of 185
p2 := point [0,0,0]$(Point DoubleFloat)
--R 
--R
--R   (4)  [0.,0.,0.]
--R                                                      Type: Point DoubleFloat
--E 162

--S 163 of 185
p3 := point [0,1,1]$(Point DoubleFloat)
--R 
--R
--R   (5)  [0.,1.,1.]
--R                                                      Type: Point DoubleFloat
--E 163

--S 164 of 185
polygon(space,[p0,p1,p2,p3])
--R 
--R
--R   (6)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 164

--S 165 of 185
polygon(space,[[1,1,1],[0,0,-1],[1,0,1]])
--R 
--R
--R   (7)  3-Space with 2 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 165

--S 166 of 185
s := polygon([p0,p1,p2,p3])$(ThreeSpace DoubleFloat)
--R 
--R
--R   (8)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 166

)clear all

--S 167 of 185
space := create3Space()$(ThreeSpace DoubleFloat)
--R 
--R
--R   (1)  3-Space with 0 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 167

--S 168 of 185
p0 := point [1,1,1]$(Point DoubleFloat)
--R 
--R
--R   (2)  [1.,1.,1.]
--R                                                      Type: Point DoubleFloat
--E 168

--S 169 of 185
p1 := point [1,0,0]$(Point DoubleFloat)
--R 
--R
--R   (3)  [1.,0.,0.]
--R                                                      Type: Point DoubleFloat
--E 169

--S 170 of 185
p2 := point [0,0,0]$(Point DoubleFloat)
--R 
--R
--R   (4)  [0.,0.,0.]
--R                                                      Type: Point DoubleFloat
--E 170

--S 171 of 185
p3 := point [0,1,1]$(Point DoubleFloat)
--R 
--R
--R   (5)  [0.,1.,1.]
--R                                                      Type: Point DoubleFloat
--E 171

--S 172 of 185
curve(space,[p0,p1,p2,p3])
--R 
--R
--R   (6)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 172

--S 173 of 185
s := polygon([p0,p1,p2,p3])$(ThreeSpace DoubleFloat)
--R 
--R
--R   (7)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 173

--S 174 of 185
polygon s
--R 
--R
--R   (8)  [[1.,0.,0.],[0.,0.,0.],[0.,1.,1.]]
--R                                                 Type: List Point DoubleFloat
--E 174

)clear all

--S 175 of 185
space := create3Space()$(ThreeSpace DoubleFloat)
--R 
--R
--R   (1)  3-Space with 0 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 175

--S 176 of 185
p0 := point [1,1,1]$(Point DoubleFloat)
--R 
--R
--R   (2)  [1.,1.,1.]
--R                                                      Type: Point DoubleFloat
--E 176

--S 177 of 185
p1 := point [1,0,0]$(Point DoubleFloat)
--R 
--R
--R   (3)  [1.,0.,0.]
--R                                                      Type: Point DoubleFloat
--E 177

--S 178 of 185
p2 := point [0,0,0]$(Point DoubleFloat)
--R 
--R
--R   (4)  [0.,0.,0.]
--R                                                      Type: Point DoubleFloat
--E 178

--S 179 of 185
p3 := point [0,1,1]$(Point DoubleFloat)
--R 
--R
--R   (5)  [0.,1.,1.]
--R                                                      Type: Point DoubleFloat
--E 179

--S 180 of 185
curve(space,[p0,p1,p2,p3])
--R 
--R
--R   (6)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 180

--S 181 of 185
polygon? space
--R 
--R
--R   (7)  false
--R                                                                Type: Boolean
--E 181

--S 182 of 185
s := polygon([p0,p1,p2,p3])$(ThreeSpace DoubleFloat)
--R 
--R
--R   (8)  3-Space with 1 component
--R                                                 Type: ThreeSpace DoubleFloat
--E 182

--S 183 of 185
polygon s
--R 
--R
--R   (9)  [[1.,0.,0.],[0.,0.,0.],[0.,1.,1.]]
--R                                                 Type: List Point DoubleFloat
--E 183

--S 184 of 185
space1 := create3Space()$(ThreeSpace DoubleFloat)
--R 
--R
--R   (10)  3-Space with 0 components
--R                                                 Type: ThreeSpace DoubleFloat
--E 184

--S 185 of 185
sub := subspace(space1)
--R 
--R
--R   (11)  3-Space with depth of 3 and 0 components
--R                                                Type: SubSpace(3,DoubleFloat)
--E 185
)spool 
)lisp (bye)
 
@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}

 
