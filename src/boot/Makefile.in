OUT=${OBJ}/${SYS}/boot
DOC=${MNT}/${SYS}/doc/src/boot
 
LISPSYS= $(axiom_build_bindir)/lisp
BOOTSYS= ${OBJ}/${SYS}/bin/bootsys
LOADSYS= $(axiom_build_bindir)/lisp
SAVESYS= ${OBJ}/${SYS}/bin/bootsys

OBJS1=	"${OUT}/boothdr.$(OBJEXT)" "${OUT}/exports.$(OBJEXT)" \
	"${OUT}/npextras.$(OBJEXT)" "${OUT}/ptyout.$(OBJEXT)" \
	"${OUT}/btincl2.$(OBJEXT)" "${OUT}/btscan2.$(OBJEXT)" \
	"${OUT}/typrops.$(OBJEXT)" "${OUT}/btpile2.$(OBJEXT)" \
	"${OUT}/typars.$(OBJEXT)" "${OUT}/tyextra.$(OBJEXT)" \
	"${OUT}/tytree1.$(OBJEXT)"
OBJS=	${OUT}/boothdr.$(OBJEXT) ${OUT}/exports.$(OBJEXT) \
	${OUT}/npextras.$(OBJEXT) ${OUT}/ptyout.$(OBJEXT) \
	${OUT}/btincl2.$(OBJEXT) ${OUT}/btscan2.$(OBJEXT) \
	${OUT}/typrops.$(OBJEXT) ${OUT}/btpile2.$(OBJEXT) \
	${OUT}/typars.$(OBJEXT) ${OUT}/tyextra.$(OBJEXT) \
	${OUT}/tytree1.$(OBJEXT)
 
BOOTS=ptyout.boot btincl2.boot typrops.boot btpile2.boot \
      typars.boot tyextra.boot trtree1.boot
PROCLAIMS=(load "$(srcdir)/boot-proclaims.lisp")

DEPS=   (load (quote $(patsubst %, "%", $(builddir)/npextras.lisp)))

CMD0=	(progn (mapcar (function (lambda (x) (load  x))) (quote (${OBJS1}))) (system::save-system "${SAVESYS}"))
 

LISP_COMPILE = echo '(progn $(PROCLAIMS) \
			    (compile-file "$<" :output-file "$@") \
			    ($(BYE)))' | $(LISPSYS)

LISP_COMPILE_WITH_DEPS = echo '(progn $(PROCLAIMS) $(DEPS) \
				      (compile-file "$<" :output-file "$@") \
				      ($(BYE)))' | $(LISPSYS)

BOOT_TO_LISP = echo '(progn (boottran::boottocl "$@") ($(BYE)))' \
		| $(BOOTSYS)


subdir = src/boot/

boot_sources = boothdr.boot bootload.lisp btincl2.boot btpile2.boot \
		btscan2.boot exports.lisp npextras.lisp ptyout.boot \
		tyextra.boot typars.boot typrops.boot tytree1.boot

boot_SOURCES = $(addsuffix .pamphlet, $(boot_sources))

pamphlet = Makefile.pamphlet $(boot_SOURCES)
 
# this stanza will create the final bootsys image

all: $(SAVESYS)
	-rm -f stamp
	$(STAMP) stamp
 
${SAVESYS}:	${OBJS} ${LOADSYS}
	@ echo 44 invoking make in `pwd` with parms:
	@ echo SYS= ${SYS} 
	@ echo LSP= ${LSP} 
	@ echo PART= ${PART} 
	@ echo SPAD= ${SPAD} 
	@ echo SRC= ${SRC} 
	@ echo INT= ${INT}
	@ echo OBJ= ${OBJ} 
	@ echo MNT= ${MNT}
	$(mkinstalldirs) ${OBJ}/${SYS}/bin
	@ (cd ${OBJ}/${SYS}/bin ; echo '${CMD0}' | ${LOADSYS} > ${TMP}/trace )
	@ echo 45 ${SAVESYS} created

boot: ${BOOTS}

.PRECIOUS: $(OUT)/%.$(OBJEXT)
.PRECIOUS: $(builddir)/%.lisp

OBJECTS_WITHOUT_DEPS = \
	$(OUT)/boothdr.$(OBJEXT) \
	$(OUT)/exports.$(OBJEXT) \
	$(OUT)/npextras.$(OBJEXT)

$(OBJECTS_WITHOUT_DEPS): $(OUT)/%.$(OBJEXT): $(builddir)/%.lisp
	$(LISP_COMPILE)

$(builddir)/%.lisp: $(srcdir)/%.lisp.pamphlet
	$(axiom_build_document) --tangle $<
.PRECIOUS: $(OUT)/%.$(OBJEXT)
.PRECIOUS: $(builddir)/%.lisp

OBJECTS_WITH_DEPS = \
	$(OUT)/btincl2.$(OBJEXT) \
	$(OUT)/btpile2.$(OBJEXT) \
	$(OUT)/btscan2.$(OBJEXT) \
	$(OUT)/ptyout.$(OBJEXT) \
	$(OUT)/tyextra.$(OBJEXT) \
	$(OUT)/typars.$(OBJEXT) \
	$(OUT)/typrops.$(OBJEXT) \
	$(OUT)/tytree1.$(OBJEXT) 

$(OBJECTS_WITH_DEPS): $(OUT)/%.$(OBJEXT): $(builddir)/%.lisp
	$(LISP_COMPILE_WITH_DEPS)

$(builddir)/%.lisp: $(srcdir)/%.boot.pamphlet
	$(axiom_build_document) --tangle=$*.clisp --output=$*.lisp $<
.PRECIOUS: $(builddir)/%.boot

$(builddir)/%.boot: $(srcdir)/%.boot.pamphlet
	$(axiom_build_document) --tangle $< && \
	$(BOOT_TO_LISP)

mostlyclean-local:

clean-local: mostlyclean-local
	-rm -f $(OBJS)
	-rm -f $(SAVESYS)
	-rm -f *.boot *.lisp

distclean-local: clean-local
	-rm -rf $(OUT)
