\documentclass{article}
\usepackage{axiom}

\title{\File{src/interp/nci.boot} Pamphlet}
\author{Timothy Daly}

\begin{document}
\maketitle

\begin{abstract}
  This file is supposed to define the interface between the
  interpreter and the new compiler.  
\end{abstract}

\tableofcontents
\eject

\section{License}

<<license>>=
-- Copyright (c) 1991-2002, The Numerical ALgorithms Group Ltd.
-- All rights reserved.
--
-- Redistribution and use in source and binary forms, with or without
-- modification, are permitted provided that the following conditions are
-- met:
--
--     - Redistributions of source code must retain the above copyright
--       notice, this list of conditions and the following disclaimer.
--
--     - Redistributions in binary form must reproduce the above copyright
--       notice, this list of conditions and the following disclaimer in
--       the documentation and/or other materials provided with the
--       distribution.
--
--     - Neither the name of The Numerical ALgorithms Group Ltd. nor the
--       names of its contributors may be used to endorse or promote products
--       derived from this software without specific prior written permission.
--
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
-- IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
-- TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
-- PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
-- OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
-- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
-- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

@

\section{The interface}

This file is the result of a Lisp-to-Boot conversion of a Lisp code
that awfully looked like the result of a Boot-to-Lisp translation.
Gabriel Dos~Reis translated that Lisp code back to Boot code.  He also
added the type annotation, taking advantage of capabilities of
the new Boot code translator.

<<*>>=
<<license>>

)package "BOOT"

ncParseAndInterpretString(s) ==
  processInteractive(packageTran parseFromString s, false)

ncParseFromString(s) ==
  zeroOneTran packageTran CATCH("SPAD__READER", parseFromString s)

ncINTERPFILE(file, echo) ==
  $EchoLines := echo
  $ReadingFile := true
  SpadInterpretFile file


ncGetFunction(op, dom, sig) ==
  applyInPackage(function getNCfunction, _
                 [rePackageTran(op, '"boot"), _
                  rePackageTran(dom, '"boot"), _
                  rePackageTran(sig, '"boot")],
                 '"boot")

ncSetCurrentLinc c ==
  setCurrentLine c

applyInPackage(fun, args, package) ==
  _*PACKAGE_* := FIND_-PACKAGE STRING package
  APPLY(fun, args)

clearMacroTable() ==
  $pfMacros := nil

getParserMacros() ==
  $pfMacros

displayParserMacro m ==
  m := ASSQ(m, $pfMacros)
  null m => nil
  pfPrintSrcLines CADDR m

intloopInclude(name, n) ==
  WITH_-OPEN_-FILE(st name, intloopInclude0(st, name, n))

ncloopInclude(name, n) ==
  WITH_-OPEN_-FILE(st name, ncloopInclude0(st, name, n))
@

\end{document}
