\documentclass{article}
\usepackage{axiom}

\title{\File{src/interp/posit.boot} Pamphlet}
\author{The Axiom Team}

\begin{document}
\maketitle
\begin{abstract}
  This file defines abstractions for position in Spad programs.
  It is part of the [[utility]] module.  It requires the
  [[attributed-strucrture]] module.  The abstractions defined here
  are mostly used by the \emph{includer} and the \emph{parser}.
\end{abstract}

\tableofcontents
\eject

\section{License}

<<license>>=
-- Copyright (c) 1991-2002, The Numerical ALgorithms Group Ltd.
-- All rights reserved.
--
-- Redistribution and use in source and binary forms, with or without
-- modification, are permitted provided that the following conditions are
-- met:
--
--     - Redistributions of source code must retain the above copyright
--       notice, this list of conditions and the following disclaimer.
--
--     - Redistributions in binary form must reproduce the above copyright
--       notice, this list of conditions and the following disclaimer in
--       the documentation and/or other materials provided with the
--       distribution.
--
--     - Neither the name of The Numerical ALgorithms Group Ltd. nor the
--       names of its contributors may be used to endorse or promote products
--       derived from this software without specific prior written permission.
--
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
-- IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
-- TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
-- PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
-- OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
-- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
-- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

@
<<*>>=
<<license>>

module '"utility"

-- Depends on the "utility" module
import '"vmlisp"
import '"macros"

-- Depends on the "attributed-structure" module
import '"astr"

)package "BOOT"

@

\section{Line object}

A \emph{line object} represents a line from Spad source file.  There are
several parts to it:
\begin{enumerate}
\item a possibly leading sequence of blank characters:
<<*>>=
-- returns sequence of leading blank characters
lnExtraBlanks lineObject ==
  lineObject.0
@

\item the actual character string that makes up of the line;
<<*>>=
-- returns the actual line as a character string
lnString lineObject ==
  lineObject.1
@

\item a global numbering scheme is used to refer to \emph{logical line}
  lines in a source file.  The global number of a line object differs
  from those of its neigbors only if its leading character is non blank.
<<*>>= 
-- returns the global numbering 
lnGlobalNum lineObject ==
  lineObject.2
 
-- set the global numbering
lnSetGlobalNum(lineObject, num) ==
  lineObject.2 := num
@

\item a local numbering scheme is used to designate the relative
  physical position of a line with respect to its leader.
<<*>>=
-- returns the local numbering
lnLocalNum lineObject ==
  lineObject.3
@

\item the name of the source file the line object is taken from
<<*>>=
-- return the source file name
lnFileName lineObject ==
  (fN := lnFileName? lineObject)  => fN
  ncBug('"there is no file name in %1", [lineObject] )
 
lnFileName? lineObject ==
  NOT PAIRP (fN := lineObject.4)  => NIL
  fN
@
\end{enumerate}

Most line objects are created with all those information set.
The exceptional cases involve the situation where an line
object is created with no knowledge of the source file it
comes from:
<<*>>=
-- Construct a line object from its constituents 
lnCreate(extBl, st, gNo, :optFileStuff) ==
    lNo :=
        num := IFCAR optFileStuff => num
        0
    fN  := IFCAR IFCDR optFileStuff
    [extBl, st, gNo, lNo, fN]
 
lnPlaceOfOrigin lineObject ==
    lineObject.4
 
lnImmediate? lineObject  ==
    not lnFileName? lineObject
@

\section{Position object}

A \emph{position object} represents the notion of location in a particular
line, in a particular file.  This abstraction is primarily used in
the includer, the parser, and the diagnostic machinery.  Absence of
information is indicated by the distinguished object [[$nopos]].
<<*>>=
-- Indicate that the absence of `position information' for a token.
$nopos := ['noposition]

-- returns the distinguished object for `no location known'.
poNoPosition() == 
  $nopos
 
-- true if POS indicates absence of location information.
poNoPosition? pos == 
  EQCAR(pos,'noposition)
 
-- true if this represents a line object. 
-- FIXME: This routines returns an answer based on the
--        structure of its arguments. 
poIsPos? pos ==
  PAIRP pos and PAIRP CAR pos and LENGTH CAR pos = 5
 
-- returns the line object for the line a position object refers to.
poGetLineObject posn ==
  CAR posn
 
-- returns the character at location designated by a position object.
poCharPosn posn == 
  CDR posn
 
-- returns the local line number for a location
poLinePosn posn ==
  lnLocalNum  poGetLineObject posn

-- returns the global line number for a location
poGlobalLinePosn posn ==
  lnGlobalNum poGetLineObject posn
 
-- returns the file name for a location
poFileName posn       ==
  posn => lnFileName poGetLineObject posn
  CAAR posn
 
poFileName? posn       ==
  posn = $nopos => NIL
  lnFileName? poGetLineObject posn
 
poPlaceOfOrigin posn ==
  lnPlaceOfOrigin poGetLineObject posn

-- true for a position object that represents absence of information.
-- FIXME: this appears redundant with poNoPosition?
poNopos? posn ==
  posn = ['noposition]

poPosImmediate? txp==
    poNopos? txp => NIL
    lnImmediate? poGetLineObject txp
 
poImmediate? txp==
    lnImmediate? poGetLineObject txp
 
compareposns(a,b)==
 c:=poGlobalLinePosn a
 d:=poGlobalLinePosn b
 if c=d then poCharPosn a>=poCharPosn b else c>=d

@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}
