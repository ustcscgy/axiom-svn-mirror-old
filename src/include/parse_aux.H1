#ifdef _NO_PROTO
extern void add_dependencies();
extern FILE * find_fp();
extern char * get_input_string();
extern HyperLink * make_link_window();
extern HyperLink * make_paste_window();
extern void make_special_pages();
extern int window_code();
extern int window_equal();
extern char * window_id();
extern void read_ht_db();
extern int get_filename();
extern int is_number();
extern void parser_error();
extern int get_where();
#ifdef _PARSE_AUX_C
static void read_ht_file();
static HyperDocPage * make_special_page();
#endif
#else
extern void add_dependencies(void );
extern FILE * find_fp(FilePosition fp);
extern char * get_input_string(void );
extern HyperLink * make_link_window(TextNode * link_node , int type , int isSubWin);
extern HyperLink * make_paste_window(PasteNode * paste);
extern void make_special_pages(HashTable * pageHashTable);
extern int window_code(Window * w , int size);
extern int window_equal(Window * w1 , Window * w2);
extern char * window_id(Window w);
extern void read_ht_db(HashTable * page_hash , HashTable * macro_hash , HashTable * patch_hash);
extern int get_filename(void);
extern int is_number(char * str);
extern void parser_error(char * str);
extern int get_where(void);
#ifdef _PARSE_AUX_C
static void read_ht_file(HashTable * page_hash , HashTable * macro_hash , HashTable * patch_hash , FILE * db_fp , char * db_file);
static HyperDocPage * make_special_page(int type , char * name);
#endif
#endif 
