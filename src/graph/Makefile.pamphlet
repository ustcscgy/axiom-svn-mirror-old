\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{\$SPAD/src/graph Makefile}
\author{Timothy Daly}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{General Comments}
This directory contains the C source code for the Scratchpad's
graphics. Comments given to the maintenance program refer to 
version numbers. The versions are documented below, starting with
version23.
\begin{verbatim}
version23: (first version after returning from Europe)
   added a $DEVE environment variable - if it exists, the viewport manager 
   tries those executable files first; if it was unsuccessful or, if the 
   $DEVE variable was not defined, the $SPAD variable is used tube.c: 
   changed order of crossedLines(p,q... to crossedLines(q,p... in order to
   use segNum info (which segment of the second polygon the first polygon 
   crosses) and using splitPolygon() rather than splitAndMove()
   tube.c: changed crossedLines() to generalPartialSplit() - an algorithms 
   i hope would work. it is not taken from any literature as all the 
   literature i have looked into and tried out had design flaws or lacked 
   precise specifications (including Foley & van Dam volume I, Newman & 
   Sprouill and others) 
   viewport3D.c: xPts now malloced as a global variable in makeView3D and 
   not freed up at the end. quadMesh is also not freed anymore (shouldn't 
   be as it was changed to a global some time ago).
   made eyeDistance (3D stuff) into a float (from integer)
   added outlineRender (outlineOnOff in actions.h) field. note that this 
   and the previous change both affected the following files:
      view3d/: main.c, process.c, viewport3D.c, spadAction.c, write.c
      viewman/: fun3d.c make3d.c
      viewalone/: spoon3D.c spoonTube.c
      spad/: view3d.spad (viewport3D, makeViewport3D and the Rep)
   3D: ability to write Stellar recognizable data files for Tube types
   spad additions: write(v,fn,listOfTypes)
   fixed perspective, added min/max range of eyeDistance

version24: view3d/tube.c: put in calculations for xmin,xmax,ymin,ymax
   >>> took them out again - doesn't the viewport manager do that?
   polygon list saved if previous render/opaque (hidden surface)
   was completed so that subsequent draws would be faster
   view3d: added NIL(pType) macro which checks for a null pointer
   >>> need same change in view2d (after testing)
   totalShades is now a global variable (to be decremented if color trouble)
   >>> need same change in view2d (after testing)
   cleaning up: added exitWithAck(info,size,i) macro to send spad 
   acknowledge right before exit of a troubled program. this
   should avoid some of the causes of entering spad break loops
   not enough colors could be allocated; now, only a message is given.
   viewman: adding checks for abnormal exits of child processes (from
   people who use the "Cancel" command from the X server).
   deadBaby() and brokenPipe() in the works.
   view3d: hey! there was a bug in the projections: with perspective on,
   it turns out the Z-axis was rotating opposite of the rest of 
   the system...?...
   fixed perspective
   added box (with back face removal)
   function of 2 variables now has it's own substructure, like tube, and
   shares the (now) general hidden surface subroutine used for the
   tube stuff when the perspective is turned on (when perspective is
   off, a simple back to front routine is sufficient and fast but the
   property that allows that is not preserved in the perspective projection)
   seems like (in tube.c) the overlap list property is not preserved (see
   notes) so now, routine needs to check, for polygon i, polygons
   i+1 through N, always.
   affects ALL: added deltaZ to all the stuff 
   (spad, viewman, viewalone, view3d) - though not used yet
   error messages: if the .Xdefault not found (or .Xdefault wasn't defined) 
   then view2d and view3d will a predefined default set of fonts. it that
   still doesn't work, a (more or less useful) error message is displayed
   and an error signal is sent to Scratchpad to prevent a freeze-up situation.
   viewpack.spad (package VIEW) and view2d.spad (domain GRIMAGE) now check for
   lists that contain illegal empty lists (i.e. point list contains nothing).
   warnings are issued for lists containing both legal point lists and empty
   point lists, errors are issued for lists containing nothing but empty lists.
   made spadcolors30.c into an archived library by the name of libColors.a, 
   source file changed to spadcolors.c; makeColors' arguments have changed 
   and now returns the number of colors allocated - not a pointer to the 
   pixel map
   saymem, check, etc. moved to util.c for library archive
   added a view.h file, with macros to be used by all view programs
   monoColor(x) macro (in view.h) replaces spadColors[x] calls in case 
   display is monochromatic (in global variable mono)
   tube.c: connecting of slices - polygon points changed to outline the 
   rectangular regions without the diagonals (may be prettier when outlines 
   are sketched...slightly, if no split occurs).
   clipping model: both against the hither plane as well as with a 
   clipping volume
   viewport3D.c: made polygon list for functions of two variables so
   that it could call the general hidden surface algorithm (in tube.c) as
   well (turns out that back to front property of 3D explicit equations is
   not preserved when viewed with perspective)
   added volume.c, volume.h for the frustrum (perspective), projected clipping
   and clip volume interface
 
version25: 
  view3d: added long jump to address signals that arrive while in the
          XNextEvent call. spadSignalHandler() now calls spadAction()
          if a signal is received.
  view2d: added query button and messages for each graph image
          (viewport2D.c, control.c, process.c)
  view3d: tube.c: improved speed of drawPolygon by creating overlapped
          list for unmoved polygon, and list for moved polygon that
          may be smaller than the entire list. 
          see "Notes on the Depth Sort Algorithm" for strategy, etc.
          tube.c: moved the resetting of the variables relevant to recalc
          from process.c to tube.c (rotated, switchedPerspective, 
          changedEyeDistance)
  GraphImage now supports 2D primitives like point(), component(), addPoint()
  ViewportDefaultsPackage now exports viewXPos() and stuff; all references
  to integers have been replaced by the more restrictive subdomains 
  (e.g. PositiveInteger, NonNegativeInteger)
  ViewportPackage has dwindled to just drawCurves() and graphCurves()
  view2d, view3d: put in more robust signal handling routines so that
  signals from the viewport manager (Scratchpad) are all processed properly.
  the condition where the user is not allowed to use the control panel of the
  viewport that Scratchpad is sending commands to no longer exists!!!! wow!!!
  simultaneous processing without a race condition occuring (sorta) should
  not occur anymore.
  view3d: modification to keepDrawingViewport() so that signals also causes
  a return of no. this allows Scratchpad input files to be indistinguishable
  from interactive commands from a control panel! (that is, drawViewport()
  no longer need to complete the drawing if it was called from Scratchpad.)
  view2d: spadAction(): now only redraws viewport if the info was received for
  a graph image that is being shown
  view2d: fixed up pick/drop hangup problem. the "dodat" variable in process.c
  needed to be reset earlier, and in each separate routine (pick, drop and 
  query) that required sequential button clicks (e.g. 
  "Drop" + graph number "1").
  view2d: added global variable queriedGraph - so that the last queried graph
  will always be the one displayed.
  view2d.spad: default to points off
  added inverse and monochrome fields in .Xdefaults 
  (e.g. view3d*monochrome : on)
  BUG FIXED: clipping of wire mesh for tubes
  view3d.spad: function of three variables for color specifications ==> changes
  in viewman, viewalone, and view3d to accept additional information.
  structure of fun2VarModel in view3d.h changes *** not backwards 
  compatible with version24.
  BUG FOUND: viewport3D.c still drawing the function of 2 variables
  without perspective (painter's algorithm without processing) wrong!
  BUG FIXED: this time, for shur. flipped quadrants II and IV to remedy bug 
  found in painter's algorithm in viewport3D.c.
  tube.c (view3d): changed routine that redraws quickly from the saved up list
  of processed polygons from the hidden surface algorithm so that each polygon

version 26: 
  view3d: switched over to a generalized subspace points definition.
  so far, wire meshes work for existing types. code in viewport3D.c and tube.c
  are replaced by one more general in component.c; size reduced in half. 
  include: modified=[view3d.h] new=[component.h]
  view3d: modified=[viewport3D.c, tube.c] new=[component.c]
  viewman: modified=[fun3d.c, make3d.c]
  representation should also handle future 3D things - like space curves, 
  points and stuff without new data structures.
  NEED: take out unused code
  component.spad there temporarily to handle the new representation on the 
  algebra side point.spad deals with the new representation in more 
  generality on the algebra side
  NEED: interface to rest of algebra world
  view2d: draw dashed line if ticks are too close. view2d: 
  modified=[viewport2D.c]
  coord.spad added for coordinate transformation
  xspadfill.c in the src/ directory for shade dithering in color - affects:
  src: modified=[spadcolors.c, spadcolors.h] new=[xspadfill.c]
  view3d: modified=[globals.h, main.c, tube.c]
  view2d: added tick labels for 2D
  view2d: modified=[viewport2D.c]
  view3d: tube.c replaced by surface.c and project.c
  viewman: for hue and shade fields in 2D, spad is one based and the viewport
  stuff is 0 based. modified=[makeGraph.c]
  --- backed up on tape ---
  replaced sprintf of XGetDefault value with direct assignment since 
  XGetDefault may  return a NULL value which causes sprintf to freak out 
  (xDefault is now pointer to char rather than a character array)
  view2d: modified=[globals.h, main.c]   
  view3d: modified=[globals.h, main.c]   
  BUG FOUND: on the PS2, redraws of hidden surface with saved data (quickList)
  bombs.
  BUG FIXED: no more bombs of quick draws
  view3d: modified=[surface.c (previously, tube.c)]
  put in SIGTERM handlers so that a kill signal to viewman would cause it 
  exit cleanly (that is, kill all the child processes and then exit)
  viewman: modified=[viewman.h, viewman.c, cleanup.c]
  view3d: modified=[main.c]
  view2d: modified=[main.c]
  viewWoman: modified=[viewWoman.c]

version27: 
  3D primitives: added type flag to polygon structure (for 3D primitives) - 
  may or may not actually be used
  include: modified=[tube.c]
  added "#define smwattDefaultToFast" which, when defined, defaults to the 
  simple back-to-front draw rather than the full depth sort processes 
  (click middle button to switch)
  BUG FIXED: title reading in viewalone (to add \0 on top of the \newline 
  fgets reads in)
  viewalone: modified=[spoon2D.c, spoonComp.c]
  points in 3D stored as references (indices) into a pool of points
  include: modified=[tube.h, component.h]
  view3d: modified=[main.c, project.c, surface.c, component.c]
  added (maybe last version...?) window manager override flag in override.h 
  file which sets to true or false (e.g. Presentation Manager may need 
  override=false)
  BUG FIXED: after the 3D stuff saves the ordering of polygons, the quick draw
  misses the last polygon...had to change doNotStopDraw flag to affect the 
  subsequent polygon.
  view3d: modified=[surface.c]
  added a development header file for temporary defines
  include: added=[DEVE.h]
  part II:
  BUG FOUND: 3D color bar goes off the positive end
  BUG FIXED: the color bar error
  view3d: modified=[process.c]
  put XMapWindow after the drawViewport in make3DComponents - fixes the 
  problem of having an empty viewport window come up with no well defined data
  view3d: modified=[component.c]
  view3d: initialize the numOfPolygons and polygons field right before they're
  used (as opposed to whereever i had them before)
  view3d: modified=[component.c]
\end{verbatim}
\section{Directory overview}
\subsection{Environment variables}
DIRS is a list of directories with the suffix {\bf dir}.
DOCS is the same list with {\bf dir} suffix replaced with {\bf document}.
CLNS is the same list with {\bf dir} suffix replaced with {\bf clean}.

Thus if we have a new directory {\bf foo} add it to the {\bf DIRS}
variable as {\bf foodir}. It will automatically be added to {\bf DOCS}
as {\bf foodocument} and {\bf CLNS} as {\bf fooclean}.

These variables are used to drive the make, make document, and
make clean processes, respectively.

<<environment>>=
DIRS=viewmandir gdrawsdir view2ddir view3ddir viewalonedir
DOCS=${DIRS:dir=document} 
CLNS=${DIRS:dir=clean} 

@
\subsection{The viewman directory}
<<viewmandir>>=
viewmandir: ${SRC}/graph/viewman/Makefile
	@ echo 1 making ${SRC}/graph/viewman
	@ mkdir -p ${INT}/graph/viewman
	@ mkdir -p ${OBJ}/${SYS}/graph/viewman
	@ mkdir -p ${OBJ}/${SYS}/lib
	@ mkdir -p ${MNT}/${SYS}/lib
	@ mkdir -p ${MNT}/${SYS}/doc/src/graph
	@(cd viewman ; ${ENV} ${MAKE} )

${SRC}/graph/viewman/Makefile: ${SRC}/graph/viewman/Makefile.pamphlet
	@echo 2 making ${SRC}/graph/viewman/Makefile from ${SRC}/graph/viewman/Makefile.pamphlet
	@( cd viewman ; \
           ${DOCUMENT} ${NOISE} Makefile ; \
	   cp Makefile.dvi ${MNT}/${SYS}/doc/src/graph.viewman.Makefile.dvi )

viewmandocument: ${SRC}/graph/viewman/Makefile
	@echo 3 documenting ${SRC}/graph/viewman
	@( cd viewman ; ${ENV} ${MAKE} document )

viewmanclean: ${SRC}/graph/viewman/Makefile
	@echo 4 cleaning ${SRC}/graph/viewman
	@( cd viewman ; ${ENV} ${MAKE} clean )
	@rm -f ${SRC}/graph/viewman/Makefile
	@rm -f ${SRC}/graph/viewman/Makefile.dvi

@
\subsection{The gdraws directory}
<<gdrawsdir>>=
gdrawsdir: ${SRC}/graph/gdraws/Makefile
	@echo 5 making ${SRC}/graph/gdraws
	@mkdir -p ${INT}/graph/gdraws
	@mkdir -p ${OBJ}/${SYS}/graph/gdraws
	@mkdir -p ${MNT}/${SYS}/lib
	@mkdir -p ${MNT}/${SYS}/lib/graph
	@mkdir -p ${MNT}/${SYS}/doc/src/graph
	@(cd gdraws ; ${ENV} ${MAKE} )

${SRC}/graph/gdraws/Makefile: ${SRC}/graph/gdraws/Makefile.pamphlet
	@echo 6 making ${SRC}/graph/gdraws/Makefile from ${SRC}/graph/gdraws/Makefile.pamphlet
	@( cd gdraws ; \
           ${DOCUMENT} ${NOISE} Makefile ; \
	   cp Makefile.dvi ${MNT}/${SYS}/doc/src/graph.gdraws.Makefile.dvi )

gdrawsdocument: ${SRC}/graph/gdraws/Makefile
	@echo 7 documenting ${SRC}/graph/gdraws
	@( cd gdraws ; ${ENV} ${MAKE} document )

gdrawsclean: ${SRC}/graph/gdraws/Makefile
	@echo 8 cleaning ${SRC}/graph/gdraws
	@( cd gdraws ; ${ENV} ${MAKE} clean )
	@rm -f ${SRC}/graph/gdraws/Makefile
	@rm -f ${SRC}/graph/gdraws/Makefile.dvi

@
\subsection{The view3d directory}
<<view3ddir>>=
view3ddir: ${SRC}/graph/view3d/Makefile
	@echo 9 making ${SRC}/graph/view3d
	@mkdir -p ${OBJ}/${SYS}/graph/view3d
	@mkdir -p ${OBJ}/${SYS}/lib
	@mkdir -p ${OBJ}/${SYS}/graph/gdraws
	@mkdir -p ${MNT}/${SYS}/lib
	@mkdir -p ${MNT}/${SYS}/doc/src/graph
	@(cd ${INT}/graph/view3d ; ${ENV} ${MAKE} )

${SRC}/graph/view3d/Makefile: ${SPD}/books/bookvol8.pamphlet
	@echo 10 making ${SRC}/graph/view3d/Makefile from \
                ${SPD}/books/bookvol8.pamphlet
	@mkdir -p ${INT}/graph/view3d
	@( cd ${INT}/graph/view3d ; \
	  ${TANGLE} -t8 -R"view3d/Makefile" \
                   ${SPD}/books/bookvol8.pamphlet >Makefile )


view3ddocument: ${SRC}/graph/view3d/Makefile
	@echo 11 documenting ${SRC}/graph/view3d
	@( cd view3d ; ${ENV} ${MAKE} document )

view3dclean: ${SRC}/graph/view3d/Makefile
	@echo 12 cleaning ${SRC}/graph/view3d
	@( cd view3d ; ${ENV} ${MAKE} clean )
	@rm -f ${SRC}/graph/view3d/Makefile
	@rm -f ${SRC}/graph/view3d/Makefile.dvi

@
\subsection{The view2d directory}
<<view2ddir>>=
view2ddir: ${INT}/graph/view2d/Makefile
	@echo 13 making bookvol8 view2d
	@mkdir -p ${OBJ}/${SYS}/graph/view2d
	@mkdir -p ${OBJ}/${SYS}/lib
	@mkdir -p ${MNT}/${SYS}/lib
	@mkdir -p ${MNT}/${SYS}/doc/src/graph
	@(cd ${INT}/graph/view2d ; ${ENV} ${MAKE} )

${INT}/graph/view2d/Makefile: ${SPD}/books/bookvol8.pamphlet
	@echo 14 making ${SRC}/graph/view2d/Makefile from \
		${SPD}/books/bookvol8.pamphlet
	@mkdir -p ${INT}/graph/view2d
	@( cd ${INT}/graph/view2d ; \
	  ${TANGLE} -t8 -R"view2d/Makefile" \
                   ${SPD}/books/bookvol8.pamphlet >Makefile )

@
\subsection{The viewalone directory}
<<viewalonedir>>=
viewalonedir: ${SRC}/graph/viewalone/Makefile
	@echo 17 making ${SRC}/graph/viewalone
	@mkdir -p ${INT}/graph/viewalone
	@mkdir -p ${OBJ}/${SYS}/graph/viewalone
	@mkdir -p ${MNT}/${SYS}/bin
	@mkdir -p ${MNT}/${SYS}/doc/src/graph
	@(cd viewalone ; ${ENV} ${MAKE} )

${SRC}/graph/viewalone/Makefile: ${SRC}/graph/viewalone/Makefile.pamphlet
	@echo 18 making ${SRC}/graph/viewalone/Makefile from ${SRC}/graph/viewalone/Makefile.pamphlet
	@( cd viewalone ; \
           ${DOCUMENT} ${NOISE} Makefile ; \
	   cp Makefile.dvi ${MNT}/${SYS}/doc/src/graph.viewalone.Makefile.dvi )

viewalonedocument: ${SRC}/graph/viewalone/Makefile
	@echo 19 documenting ${SRC}/graph/viewalone
	@( cd viewalone ; ${ENV} ${MAKE} document )

viewaloneclean: ${SRC}/graph/viewalone/Makefile
	@echo 20 cleaning ${SRC}/graph/viewalone
	@( cd viewalone ; ${ENV} ${MAKE} clean )
	@rm -f ${SRC}/graph/viewalone/Makefile
	@rm -f ${SRC}/graph/viewalone/Makefile.dvi

@
\section{Documentation}
\subsection{environment variables}
DOC is the directory where we store final documentation.
DOCFILES is the list of documents to create.
<<docenviroment>>=
IN=${SRC}/graph
DOC=${MNT}/${SYS}/doc/src/graph

@
<<*>>=
<<environment>>
<<docenviroment>>

all: ${DIRS} ${DOCFILES} 
	@ echo 24 finished ${IN}

<<viewmandir>>
<<gdrawsdir>>
<<view3ddir>>
<<view2ddir>>
<<viewalonedir>>

clean: ${CLNS}
	@ echo 25 cleaning ${SRC}/graph

document: ${DIRS}
	@ echo 26 documenting graph

@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}
