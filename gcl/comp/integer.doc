
1) b2-call (or anyone who calls inline-arg or inline-args)
   will push an 'avma-bind onto the *control-stack* if it is there
  is not one between where it is and the next tag.   If it did the push,
  then it will pop it off an leaving.   If the 'avma-bind has been changed to 
  'avma-bind-needed then
   a) it will also set the *used-function-saved-avma* to be t if at outer scope
   b) bind *do-restore-avma* to the point in the *control-stack* where we pushed
     to 'avma-bind, for the benefit of unwind-set.
   c)It is an error if the *value* var is of type GEN and the level is outer.

2) Any call to an 'is' fun will cause the most recent 'avma-bind or 'avma-bind-needed
to 'avma-bind-needed

3)  unwind-set if doing a go or return must do the restore to the level appropriate
to the tag, if there is an intervening 'avma-bind-needed in the *control-stack*

If not going to a tag then if *do-restore-avma* is set, then unwind to the
current avma level.  current level is global_saved_avma if there is not an intervening
inner-avma on the stack.

4) entering tagbody, if there is an 'avma-bind on the stack, then push an
'inner-avma and write { GEN Inner_avma= avma; ..}.












