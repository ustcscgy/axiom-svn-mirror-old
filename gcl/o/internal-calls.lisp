(setq all-references (

;;/* for file nfunlink.X */

( "nfunlink.X"
"FEerror"
"FEinvalid_function"
"vpush_extend"
"FEerror"
"vs_overflow"
"ihs_punsh_base"
"ihs_overflow"
"funcall"
"FEerror"
)

;;/* for file alloc.X */

( "alloc.X"
"sgc_quit"
"GBC"
"sgc_start"
"error"
"error"
"alarm"
"terminal_interrupt"
"GBC"
"sgc_count_type"
"call_after_gbc_hook"
"CEerror"
"alarm"
"terminal_interrupt"
"GBC"
"sgc_count_type"
"call_after_gbc_hook"
"CEerror"
"set_up_string_register"
"t_from_type"
"terminal_interrupt"
"insert_contblock"
"GBC"
"CEerror"
"insert_contblock"
"terminal_interrupt"
"GBC"
"FEerror"
"error"
"CEerror"
"getpagesize"
"error"
"bzero"
"getrlimit"
"enter_mark_origin"
"FEerror"
"too_few_arguments"
"too_many_arguments"
"t_from_type"
"FEerror"
"strncmp"
"FEerror"
"check_arg_failed"
"check_arg_failed"
"too_few_arguments"
"too_many_arguments"
"FEerror"
"printf"
"check_arg_failed"
"check_arg_failed"
"too_few_arguments"
"too_many_arguments"
"FEerror"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"fixint"
"FEerror"
"endp1"
"FEerror"
"endp1"
"FEerror"
"getpagesize"
)

;;/* for file array.X */

( "array.X"
"FEwrong_type_argument"
"FEerror"
"FEerror"
"FEerror"
"FEerror"
"FEerror"
"bcopy"
"check_arg_failed"
"FEerror"
"FEerror"
"FEerror"
"FEerror"
"fixint"
"FEerror"
"FEerror"
"FEerror"
"FEerror"
"FEerror"
"FEerror"
"fixnnint"
"FEerror"
"FEerror"
"FEerror"
"fixnnint"
"FEerror"
"too_few_arguments"
"FEerror"
"fixnnint"
"FEerror"
"FEerror"
"check_arg_failed"
"fixnnint"
"FEerror"
"too_few_arguments"
"FEerror"
"fixnnint"
"fixnnint"
"FEwrong_type_argument"
"too_few_arguments"
"FEerror"
"fixnnint"
"fixnnint"
"FEwrong_type_argument"
"check_arg_failed"
"check_arg_failed"
"check_type_array"
"check_arg_failed"
"check_type_array"
"fixnnint"
"FEerror"
"check_arg_failed"
"check_type_array"
"check_arg_failed"
"check_type_array"
"check_arg_failed"
"check_type_array"
"check_arg_failed"
"FEerror"
"illegal_index"
"check_arg_failed"
"FEerror"
"fixnnint"
"illegal_index"
"check_arg_failed"
"check_type_array"
"check_arg_failed"
"check_type_vector"
"FEerror"
"check_arg_failed"
"check_type_vector"
"fixnnint"
"FEerror"
"check_arg_failed"
"FEerror"
"check_arg_failed"
"endp1"
)

;;/* for file assignment.X */

( "assignment.X"
"not_a_symbol"
"FEinvalid_variable"
"endp1"
"endp1"
"FEinvalid_form"
"eval"
"endp1"
"FEinvalid_form"
"eval"
"check_arg_failed"
"not_a_symbol"
"FEinvalid_variable"
"check_arg_failed"
"not_a_symbol"
"FEerror"
"FEerror"
"endp1"
"FEinvalid_form"
"eval"
"check_arg_failed"
"not_a_symbol"
"FEinvalid_variable"
"check_arg_failed"
"not_a_symbol"
"FEerror"
"remf"
"endp1"
"FEinvalid_form"
"setf"
"eval"
"eval"
"eval"
"eval"
"siLputprop"
"eval"
"eval"
"FEerror"
"eval"
"eval"
"FEerror"
"eval"
"eval"
"eval"
"eval"
"eval"
"eval"
"endp1"
"eval"
"eval"
"stack_cons"
"FEerror"
"funcall"
"eval"
"endp1"
"FEtoo_few_argumentsF"
"FEtoo_many_argumentsF"
"eval"
"stack_cons"
"FEerror"
"funcall"
"eval"
"endp1"
"FEtoo_few_argumentsF"
"FEtoo_many_argumentsF"
"eval"
"stack_cons"
"FEerror"
"funcall"
"eval"
"endp1"
"FEtoo_few_argumentsF"
"FEtoo_many_argumentsF"
"eval"
"eval"
"stack_cons"
"FEerror"
"funcall"
"eval"
"endp1"
"FEtoo_few_argumentsF"
"FEtoo_many_argumentsF"
"eval"
"eval"
"stack_cons"
"FEerror"
"funcall"
"eval"
"use_fast_links"
"check_arg_failed"
"enter_mark_origin"
)

;;/* for file backq.X */

( "backq.X"
"FEerror"
"backq_car"
"stack_cons"
"stack_cons"
"stack_cons"
"error"
"stack_cons"
"error"
"stack_cons"
"stack_cons"
"stack_cons"
"stack_cons"
"stack_cons"
"error"
"stack_cons"
"error"
"error"
"FEerror"
"check_arg_failed"
"FEerror"
"stack_cons"
"check_arg_failed"
"enter_mark_origin"
)

;;/* for file bcmp.X */

( "bcmp.X"
)

;;/* for file bcopy.X */

( "bcopy.X"
)

;;/* for file bds.X */

( "bds.X"
)

;;/* for file big.X */

( "big.X"
"cmpii"
"FEerror"
"FEerror"
"FEerror"
"FEwrong_type_argument"
)

;;/* for file bind.X */

( "bind.X"
"bds_overflow"
"FEerror"
"endp1"
"not_a_symbol"
"illegal_lambda"
"endp1"
"not_a_symbol"
"not_a_variable"
"illegal_lambda"
"not_a_symbol"
"illegal_lambda"
"not_a_variable"
"endp1"
"illegal_lambda"
"not_a_symbol"
"not_a_variable"
"keywordp"
"illegal_declare"
"check_arg_failed"
"FEtoo_few_arguments"
"check_arg_failed"
"FEtoo_many_arguments"
"bind_var"
"eval"
"keywordp"
"eval"
"eval"
"illegal_declare"
"check_arg_failed"
"FEerror"
"FEerror"
"endp1"
"illegal_declare"
"not_a_symbol"
"bds_overflow"
"eval"
"bds_overflow"
"eval"
"FEerror"
"keywordp"
"keywordp"
"stack_cons"
"endp1"
"keywordp"
"FEerror"
"bzero"
"FEerror"
"FEerror"
"FEerror"
"enter_mark_origin"
)

;;/* for file bitop.X */

( "bitop.X"
"error"
"error"
"error"
)

;;/* for file block.X */

( "block.X"
"endp1"
"FEtoo_few_argumentsF"
"lex_block_bind"
"frs_overflow"
"eval"
"endp1"
"FEtoo_few_argumentsF"
"FEtoo_many_argumentsF"
"FEerror"
"eval"
"unwind"
"endp1"
"FEtoo_many_argumentsF"
"FEerror"
"eval"
"unwind"
"enter_mark_origin"
)

;;/* for file bzero.X */

( "bzero.X"
)

;;/* for file catch.X */

( "catch.X"
"endp1"
"FEtoo_few_argumentsF"
"eval"
"frs_overflow"
"Fprogn"
"check_arg_failed"
"frs_overflow"
"eval"
"endp1"
"FEtoo_few_argumentsF"
"frs_overflow"
"Fprogn"
"unwind"
"eval"
"Fprogn"
"endp1"
"FEtoo_few_argumentsF"
"FEtoo_many_argumentsF"
"eval"
"FEerror"
"unwind"
)

;;/* for file cfun.X */

( "cfun.X"
"FEerror"
"FEerror"
"check_type"
"error"
"error"
"error"
"not_a_symbol"
"check_type"
"error"
"not_a_symbol"
"check_type"
"error"
"set_key_struct"
"not_a_symbol"
"FEerror"
"not_a_symbol"
"check_arg_failed"
"FEerror"
"endp1"
"check_arg_failed"
)

;;/* for file character.X */

( "character.X"
"check_arg_failed"
"check_type_character"
"check_arg_failed"
"check_type_character"
"check_arg_failed"
"check_type_character"
"check_arg_failed"
"check_type_character"
"check_arg_failed"
"check_type_character"
"check_arg_failed"
"check_type_character"
"check_arg_failed"
"check_type_character"
"too_few_arguments"
"too_many_arguments"
"check_type_character"
"check_type_non_negative_integer"
"check_arg_failed"
"check_type_character"
"too_few_arguments"
"check_type_character"
"too_few_arguments"
"check_type_character"
"too_few_arguments"
"check_type_character"
"too_few_arguments"
"check_type_character"
"too_few_arguments"
"check_type_character"
"too_few_arguments"
"check_type_character"
"check_arg_failed"
"check_arg_failed"
"check_type_character"
"check_arg_failed"
"check_type_character"
"check_arg_failed"
"check_type_character"
"too_few_arguments"
"too_many_arguments"
"check_type_non_negative_integer"
"too_few_arguments"
"too_many_arguments"
"check_type_character"
"check_type_non_negative_integer"
"check_arg_failed"
"check_type_character"
"check_arg_failed"
"check_type_character"
"too_few_arguments"
"too_many_arguments"
"check_type_non_negative_integer"
"check_arg_failed"
"check_type_character"
"check_arg_failed"
"check_type_non_negative_integer"
"check_arg_failed"
"check_type_character"
"check_arg_failed"
"string_equal"
"check_arg_failed"
"check_type_character"
"FEerror"
"check_arg_failed"
"check_type_character"
"FEerror"
"enter_mark_origin"
)

;;/* for file cmpaux.X */

( "cmpaux.X"
"check_arg_failed"
"FEerror"
"FEerror"
"set_VV"
"FEerror"
"FEerror"
"FEerror"
"FEerror"
"FEwrong_type_argument"
"bcopy"
"check_type"
"check_type"
"eval"
"printf"
"fflush"
"printf"
"fflush"
"load"
)

;;/* for file conditional.X */

( "conditional.X"
"endp1"
"FEtoo_few_argumentsF"
"FEtoo_many_argumentsF"
"eval"
"endp1"
"FEerror"
"eval"
"endp1"
"FEtoo_few_argumentsF"
"eval"
"FEerror"
"eql"
"eql"
"endp1"
"FEtoo_few_argumentsF"
"eval"
"endp1"
"FEtoo_few_argumentsF"
"eval"
"enter_mark_origin"
)

;;/* for file earith.X */

( "earith.X"
"divul3"
"integer_quotient_remainder_1"
"number_compare"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
)

;;/* for file error.X */

( "error.X"
"super_funcall"
"keywordp"
"not_a_keyword"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"unwind"
"_flsbuf"
"printf"
"endp1"
"endp1"
"fcalln_general"
"super_funcall"
"enter_mark_origin"
)

;;/* for file eval.X */

( "eval.X"
"check_arg_failed"
"FEerror"
"FEtoo_few_arguments"
"FEtoo_many_arguments"
"FEerror"
"ihs_overflow"
"FEwrong_type_argument"
"FEundefined_function"
"FEinvalid_function"
"ihs_overflow"
"lambda_bind"
"frs_overflow"
"FEwrong_type_argument"
"eval"
"bds_unwind"
"FEerror"
"FEwrong_type_argument"
"FEerror"
"ihs_overflow"
"FEwrong_type_argument"
"FEerror"
"FEwrong_type_argument"
"FEerror"
"ihs_overflow"
"FEwrong_type_argument"
"FEerror"
"FEwrong_type_argument"
"FEerror"
"ihs_overflow"
"FEwrong_type_argument"
"FEerror"
"FEwrong_type_argument"
"FEerror"
"ihs_overflow"
"FEwrong_type_argument"
"FEerror"
"FEwrong_type_argument"
"FEinvalid_function"
"FEundefined_function"
"FEinvalid_function"
"FEundefined_function"
"vs_overflow"
"stack_cons"
"bds_unwind"
"FEunbound_variable"
"FEwrong_type_argument"
"ihs_overflow"
"FEundefined_function"
"macro_expand1"
"ihs_overflow"
"FEwrong_type_argument"
"call_applyhook"
"FEinvalid_function"
"stack_cons"
"too_few_arguments"
"too_few_arguments"
"FEwrong_type_argument"
"check_arg_failed"
"too_few_arguments"
"too_many_arguments"
"bds_unwind"
"too_few_arguments"
"too_many_arguments"
"FEwrong_type_argument"
"bds_unwind"
"check_arg_failed"
"frs_overflow"
"FEerror"
"FEwrong_type_argument"
"FEerror"
"FEerror"
"FEerror"
"enter_mark_origin"
)

;;/* for file fat_string.X */

( "fat_string.X"
"error"
"printf"
"printf"
"printf"
"_flsbuf"
"printf"
"_flsbuf"
"fflush"
"_filbuf"
"printf"
"fflush"
"fread"
"printf"
"_flsbuf"
"fflush"
"fwrite"
"printf"
"_flsbuf"
"_filbuf"
"printf"
"sethash"
"fputc"
"printf"
"fputc"
"printf"
"printf"
"_flsbuf"
"printf"
"_flsbuf"
"FEerror"
"FEerror"
"write_fasd"
"frs_overflow"
"_filbuf"
"FEerror"
"unwind"
"check_type"
"check_type"
"check_type"
"array_allocself"
"file_position"
"fputc"
"printf"
"_flsbuf"
"write_fasd"
"_filbuf"
"FEerror"
"check_type"
"gset"
"clrhash"
"fputc"
"file_position"
"file_position_set"
"printf"
"_flsbuf"
"fputc"
"fputc"
"fputc"
"fputc"
"fputc"
"fputc"
"fputc"
"fputc"
"fputc"
"fputc"
"fputc"
"printf"
"_flsbuf"
"fputc"
"fputc"
"printf"
"_flsbuf"
"fputc"
"fputc"
"printf"
"_flsbuf"
"fputc"
"printf"
"_flsbuf"
"printf"
"_flsbuf"
"printf"
"_flsbuf"
"FEerror"
"printf"
"_flsbuf"
"printf"
"_flsbuf"
"printf"
"_flsbuf"
"FEerror"
"sethash"
"find_sharing"
"Leval"
"bcopy"
"FEerror"
"_filbuf"
"printf"
"printf"
"printf"
"printf"
"pp"
"printf"
"FEerror"
"printf"
"printf"
"printf"
"printf"
"printf"
"printf"
"printf"
"printf"
"siLmake_structure"
"printf"
"printf"
"printf"
"array_allocself"
"printf"
"printf"
"printf"
"printf"
"array_allocself"
"printf"
"princ_str"
"princ_str"
"_filbuf"
"FEerror"
"ungetc"
"readc_stream"
"unreadc_stream"
"unreadc_stream"
"gset"
"close_stream"
"FEerror"
"gset"
"FEerror"
"profil"
"check_arg_failed"
"FEerror"
"perror"
"fread"
"FEerror"
"perror"
"_filbuf"
"fclose"
"check_arg_failed"
"check_type_string"
"strncpy"
"qsort"
"free"
"FEerror"
"FEerror"
"qsort"
"FEerror"
"check_arg_failed"
"printf"
"fflush"
"printf"
"fflush"
"check_arg_failed"
"enter_mark_origin"
)

;;/* for file file.X */

( "file.X"
"error"
"FEerror"
"FEwrong_type_argument"
"error"
"FEwrong_type_argument"
"error"
"FEwrong_type_argument"
"endp1"
"error"
"perm_writable"
"setbuf"
"insert_contblock"
"printf"
"too_long_file_name"
"cannot_open"
"cannot_create"
"fclose"
"FEerror"
"fclose"
"FEerror"
"cannot_create"
"cannot_create"
"cannot_open"
"FEerror"
"cannot_create"
"error"
"FEerror"
"fflush"
"fclose"
"FEwrong_type_argument"
"endp1"
"error"
"closed_stream"
"_filbuf"
"FEwrong_type_argument"
"endp1"
"stream_at_end"
"flush_stream"
"writec_stream"
"cannot_read"
"super_funcall"
"error"
"closed_stream"
"ungetc"
"FEwrong_type_argument"
"endp1"
"super_funcall"
"error"
"FEerror"
"closed_stream"
"_flsbuf"
"FEwrong_type_argument"
"endp1"
"FEerror"
"adjust_displaced"
"cannot_write"
"super_funcall"
"error"
"closed_stream"
"fflush"
"FEwrong_type_argument"
"endp1"
"FEerror"
"super_funcall"
"error"
"closed_stream"
"_filbuf"
"ungetc"
"FEwrong_type_argument"
"endp1"
"error"
"closed_stream"
"ioctl"
"FEwrong_type_argument"
"endp1"
"FEerror"
"error"
"closed_stream"
"FEwrong_type_argument"
"error"
"closed_stream"
"fseek"
"FEwrong_type_argument"
"error"
"closed_stream"
"file_len"
"FEwrong_type_argument"
"error"
"FEwrong_type_argument"
"endp1"
"error"
"check_arg_failed"
"check_type_symbol"
"cannot_write"
"stack_cons"
"cannot_read"
"stack_cons"
"check_arg_failed"
"cannot_read"
"cannot_write"
"check_arg_failed"
"cannot_read"
"cannot_write"
"too_few_arguments"
"too_many_arguments"
"check_type_string"
"FEerror"
"check_arg_failed"
"check_arg_failed"
"FEerror"
"check_arg_failed"
"FEerror"
"check_arg_failed"
"check_arg_failed"
"check_type_stream"
"check_arg_failed"
"check_type_stream"
"check_arg_failed"
"check_type_stream"
"too_few_arguments"
"parse_key"
"check_type_stream"
"too_few_arguments"
"parse_key"
"check_type_or_pathname_string_symbol_stream"
"FEerror"
"too_few_arguments"
"too_many_arguments"
"check_type_stream"
"FEerror"
"check_arg_failed"
"check_type_stream"
"too_few_arguments"
"parse_key"
"check_type_or_pathname_string_symbol_stream"
"string_eq"
"file_exists"
"setupPRINTdefault"
"write_str"
"write_object"
"cleanupPRINT"
"fasload"
"setupPRINTdefault"
"write_str"
"cleanupPRINT"
"bds_unwind"
"setupPRINTdefault"
"write_str"
"write_object"
"cleanupPRINT"
"setupPRINTdefault"
"write_str"
"write_object"
"cleanupPRINT"
"frs_overflow"
"bds_unwind"
"unwind"
"eval"
"setupPRINTdefault"
"write_object"
"write_str"
"cleanupPRINT"
"bds_unwind"
"setupPRINTdefault"
"write_str"
"write_object"
"cleanupPRINT"
"check_arg_failed"
"check_type_stream"
"FEerror"
"check_arg_failed"
"FEerror"
"check_arg_failed"
"check_type_stream"
"FEerror"
"FEerror"
"FEerror"
"FEerror"
"FEerror"
"check_arg_failed"
"FEerror"
"FEerror"
"FEwrong_type_argument"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"fwrite"
"check_arg_failed"
"fread"
"enter_mark_origin"
"enter_mark_origin"
"fread"
"fseek"
)

;;/* for file format.X */

( "format.X"
"fmt_error"
"fmt_error"
"writec_stream"
"fmt_error"
"fmt_ascii"
"fmt_S_expression"
"fmt_decimal"
"fmt_binary"
"fmt_octal"
"fmt_hexadecimal"
"fmt_radix"
"fmt_plural"
"fmt_character"
"fmt_fix_float"
"fmt_exponential_float"
"fmt_general_float"
"fmt_dollars_float"
"fmt_percent"
"fmt_ampersand"
"fmt_bar"
"fmt_tilde"
"fmt_newline"
"fmt_tabulate"
"fmt_asterisk"
"fmt_indirection"
"fmt_case"
"fmt_conditional"
"fmt_iteration"
"fmt_justification"
"fmt_up_and_out"
"fmt_semicolon"
"funcall"
"fmt_error"
"fmt_error"
"fmt_error"
"fmt_error"
"fmt_error"
"fmt_error"
"file_column"
"writestr_stream"
"write_string"
"writec_stream"
"writec_stream"
"write_string"
"file_column"
"writestr_stream"
"write_string"
"writec_stream"
"writec_stream"
"write_string"
"fmt_integer"
"fmt_integer"
"fmt_integer"
"fmt_integer"
"check_type_integer"
"fmt_integer"
"fmt_roman"
"file_column"
"write_object"
"writestr_stream"
"writestr_stream"
"fmt_nonillion"
"writestr_stream"
"check_type_integer"
"FEerror"
"fmt_integer"
"file_column"
"setupPRINTdefault"
"write_object"
"cleanupPRINT"
"writec_stream"
"file_column"
"write_object"
"writec_stream"
"fmt_thousand"
"writec_stream"
"writestr_stream"
"fmt_thousand"
"writec_stream"
"fmt_write_numeral"
"writestr_stream"
"writec_stream"
"fmt_write_ordinal"
"fmt_write_numeral"
"fmt_write_ordinal"
"fmt_write_numeral"
"writec_stream"
"fmt_write_ordinal"
"fmt_write_numeral"
"writestr_stream"
"writestr_stream"
"writec_stream"
"fmt_error"
"eql"
"writec_stream"
"writestr_stream"
"check_type_character"
"writec_stream"
"fmt_error"
"edit_double"
"writec_stream"
"writec_stream"
"writestr_stream"
"writec_stream"
"fmt_exponent1"
"writec_stream"
"fmt_error"
"edit_double"
"writec_stream"
"writec_stream"
"writestr_stream"
"fmt_error"
"edit_double"
"writec_stream"
"fmt_error"
"edit_double"
"writec_stream"
"writec_stream"
"writec_stream"
"writec_stream"
"file_column"
"writec_stream"
"writec_stream"
"writec_stream"
"writec_stream"
"file_column"
"writestr_stream"
"writec_stream"
"writec_stream"
"file_column"
"fmt_error"
"fmt_error"
"fmt_error"
"endp1"
"vs_overflow"
"fmt_error"
"writec_stream"
"writec_stream"
"writec_stream"
"writec_stream"
"fmt_error"
"fmt_error"
"fmt_error"
"fmt_error"
"fmt_error"
"fmt_error"
"fmt_error"
"endp1"
"vs_overflow"
"endp1"
"vs_overflow"
"endp1"
"vs_overflow"
"fmt_error"
"file_column"
"writec_stream"
"writec_stream"
"fmt_error"
"too_few_arguments"
"FEerror"
"check_type_stream"
"check_type_string"
"frs_overflow"
"file_column"
"fmt_error"
"flush_stream"
"unwind"
"FEerror"
"enter_mark_origin"
)

;;/* for file frame.X */

( "frame.X"
"bds_unwind"
)

;;/* for file funlink.X */

( "funlink.X"
"FEinvalid_function"
"ihs_overflow"
"funcall"
"vpush_extend"
"FEinvalid_function"
"vpush_extend"
"ihs_overflow"
"ihs_overflow"
"funcall"
"vpush_extend"
"use_fast_links"
"clean_link_array"
"check_type_array"
"not_a_symbol"
"FEerror"
"FEerror"
"check_type_symbol"
"FEerror"
"FEinvalid_function"
"vs_overflow"
"funcall"
"vs_overflow"
"super_funcall"
"vs_overflow"
"super_funcall"
"FEerror"
"FEerror"
"array_allocself"
"FEerror"
"FEerror"
"FEerror"
"FEerror"
"FEerror"
)

;;/* for file gbc.X */

( "gbc.X"
"error"
"error"
"mark_object"
"mark_contblock"
"mark_contblock"
"adjust_displaced"
"printf"
"adjust_displaced"
"fclose"
"error"
"printf"
"error"
"fprintf"
"fflush"
"clear_stack"
"printf"
"fflush"
"printf"
"fflush"
"mark_c_stack"
"printf"
"_flsbuf"
"fflush"
"insert_contblock"
"printf"
"fflush"
"error"
"sgc_quit"
"printf"
"sgc_count_type"
"sgc_count_writable"
"fflush"
"printf"
"fflush"
"sgc_quit"
"fprintf"
"fflush"
"sgc_mark_phase"
"printf"
"fflush"
"printf"
"fflush"
"sgc_sweep_phase"
"printf"
"fflush"
"printf"
"fflush"
"sgc_contblock_sweep_phase"
"printf"
"printf"
"printf"
"printf"
"fflush"
"sgc_start"
"fprintf"
"fflush"
"sigint"
"check_arg_failed"
"vs_overflow"
"check_arg_failed"
"check_arg_failed"
"sgc_mark_object1"
"sgc_mark_object1"
"adjust_displaced"
"printf"
"adjust_displaced"
"fclose"
"error"
"printf"
"error"
"fprintf"
"fflush"
"clear_stack"
"printf"
"fflush"
"printf"
"fflush"
"printf"
"_flsbuf"
"fflush"
"insert_contblock"
"printf"
"fflush"
"bzero"
"printf"
"fflush"
"add_page_to_freelist"
"printf"
"fflush"
"printf"
"fflush"
"sgc_mprotect"
"mprotect"
"mprotect"
"FEerror"
"check_arg_failed"
"FEerror"
"perror"
)

;;/* for file hash.X */

( "hash.X"
"bzero"
"eql"
"equal"
"extend_hashtable"
"too_few_arguments"
"parse_key"
"FEerror"
"check_arg_failed"
"too_few_arguments"
"too_many_arguments"
"check_type_hash_table"
"check_arg_failed"
"check_type_hash_table"
"check_arg_failed"
"check_type_hash_table"
"check_arg_failed"
"check_type_hash_table"
"check_arg_failed"
"check_type_hash_table"
"check_arg_failed"
"check_arg_failed"
"check_type_hash_table"
)

;;/* for file init_pari.X */

( "init_pari.X"
"FEerror"
"free"
"set_pari_stack"
"malloc"
)

;;/* for file iteration.X */

( "iteration.X"
"lex_block_bind"
"frs_overflow"
"endp1"
"eval"
"eval"
"endp1"
"FEinvalid_form"
"not_a_variable"
"FEerror"
"endp1"
"FEtoo_few_argumentsF"
"FEinvalid_form"
"lex_block_bind"
"frs_overflow"
"eval"
"Ftagbody"
"bds_unwind"
"endp1"
"FEtoo_few_argumentsF"
"FEinvalid_form"
"lex_block_bind"
"frs_overflow"
"eval"
"Ftagbody"
"bds_unwind"
"endp1"
"FEtoo_few_argumentsF"
"FEerror"
"lex_block_bind"
"frs_overflow"
"eval"
"bind_var"
"eval"
"Ftagbody"
"bds_unwind"
"endp1"
"FEtoo_few_argumentsF"
"FEerror"
"lex_block_bind"
"frs_overflow"
"eval"
"FEwrong_type_argument"
"bind_var"
"number_compare"
"eval"
"Ftagbody"
"bds_unwind"
)

;;/* for file let.X */

( "let.X"
"endp1"
"not_a_variable"
"not_a_variable"
"FEerror"
"endp1"
"FEerror"
"Fprogn"
"bds_unwind"
"endp1"
"FEerror"
"Fprogn"
"bds_unwind"
"endp1"
"FEerror"
"eval"
"not_a_variable"
"bind_var"
"Fprogn"
"bds_unwind"
"endp1"
"FEerror"
"eval"
"bind_var"
"Fprogn"
"bds_unwind"
"endp1"
"FEtoo_few_argumentsF"
"FEerror"
"lex_fun_bind"
"Fprogn"
"endp1"
"FEtoo_few_argumentsF"
"FEerror"
"lex_fun_bind"
"Fprogn"
"endp1"
"FEtoo_few_argumentsF"
"FEerror"
"lex_macro_bind"
"Fprogn"
)

;;/* for file lex.X */

( "lex.X"
"endp1"
"endp1"
"eql"
"endp1"
"enter_mark_origin"
)

;;/* for file list.X */

( "list.X"
"eql"
"FEerror"
"FEwrong_type_argument"
"FEwrong_type_argument"
"FEwrong_type_argument"
"FEwrong_type_argument"
"FEwrong_type_argument"
"FEwrong_type_argument"
"FEwrong_type_argument"
"vs_overflow"
"vs_overflow"
"FEwrong_type_argument"
"vs_overflow"
"vs_overflow"
"FEwrong_type_argument"
"check_arg_failed"
"FEwrong_type_argument"
"check_arg_failed"
"FEwrong_type_argument"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"too_few_arguments"
"parse_key"
"frs_overflow"
"unwind"
"check_arg_failed"
"FEwrong_type_argument"
"check_arg_failed"
"FEwrong_type_argument"
"check_arg_failed"
"fixint"
"FEerror"
"FEwrong_type_argument"
"check_arg_failed"
"fixint"
"FEerror"
"FEwrong_type_argument"
"check_arg_failed"
"FEwrong_type_argument"
"too_few_arguments"
"too_few_arguments"
"parse_key"
"check_type_non_negative_integer"
"FEerror"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"FEwrong_type_argument"
"FEwrong_type_argument"
"FEwrong_type_argument"
"check_arg_failed"
"FEwrong_type_argument"
"too_few_arguments"
"too_many_arguments"
"check_type_non_negative_integer"
"FEwrong_type_argument"
"vs_overflow"
"too_few_arguments"
"too_many_arguments"
"check_type_non_negative_integer"
"FEwrong_type_argument"
"check_arg_failed"
"FEwrong_type_argument"
"vs_overflow"
"check_arg_failed"
"check_type_cons"
"check_arg_failed"
"check_type_cons"
"too_few_arguments"
"parse_key"
"frs_overflow"
"unwind"
"too_few_arguments"
"too_few_arguments"
"too_few_arguments"
"parse_key"
"frs_overflow"
"unwind"
"too_few_arguments"
"too_few_arguments"
"FEwrong_type_argument"
"FEerror"
"too_few_arguments"
"parse_key"
"frs_overflow"
"unwind"
"too_few_arguments"
"parse_key"
"frs_overflow"
"unwind"
"too_few_arguments"
"parse_key"
"frs_overflow"
"FEwrong_type_argument"
"unwind"
"too_few_arguments"
"too_few_arguments"
"too_few_arguments"
"parse_key"
"frs_overflow"
"FEwrong_type_argument"
"unwind"
"check_arg_failed"
"FEwrong_type_argument"
"too_few_arguments"
"check_arg_failed"
"too_few_arguments"
"too_many_arguments"
"FEwrong_type_argument"
"FEerror"
"vs_overflow"
"FEerror"
"too_few_arguments"
"parse_key"
"frs_overflow"
"FEwrong_type_argument"
"unwind"
"check_arg_failed"
"FEwrong_type_argument"
"check_arg_failed"
)

;;/* for file macros.X */

( "macros.X"
"check_arg_failed"
"not_a_symbol"
"FEerror"
"endp1"
"FEtoo_few_argumentsF"
"not_a_symbol"
"FEerror"
"super_funcall"
"too_few_arguments"
"too_many_arguments"
"too_few_arguments"
"too_many_arguments"
"super_funcall"
"enter_mark_origin"
)

;;/* for file main.X */

( "main.X"
"setbuf"
"error"
"clear_stack"
"getrlimit"
"set_maxpage"
"bzero"
"sigstack"
"init_interrupt"
"super_funcall"
"multiply_stacks"
"printf"
"fflush"
"initlisp"
"init_init"
"init_interrupt"
"super_funcall"
"sigvec"
"init_alloc"
"init_symbol"
"init_package"
"import"
"export"
"enter_mark_origin"
"NewInit"
"init_typespec"
"init_pari"
"init_number"
"init_character"
"init_file"
"init_read"
"init_bind"
"init_pathname"
"init_print"
"init_GBC"
"init_unixfasl"
"init_unixsys"
"init_unixsave"
"init_alloc_function"
"init_array_function"
"init_character_function"
"init_file_function"
"init_list_function"
"init_package_function"
"init_pathname_function"
"init_predicate_function"
"init_print_function"
"init_read_function"
"init_sequence_function"
"init_socket_function"
"init_structure_function"
"init_string_function"
"init_symbol_function"
"init_typespec_function"
"init_hash"
"init_cfun"
"init_unixfsys"
"init_unixtime"
"init_eval"
"init_lex"
"init_prog"
"init_catch"
"init_block"
"init_macros"
"init_conditional"
"init_reference"
"init_assignment"
"init_multival"
"init_error"
"init_let"
"init_mapfun"
"init_iteration"
"init_toplevel"
"init_cmpaux"
"init_main"
"init_format"
"init_links"
"init_fat_string"
"init_cmac"
"init_interrupt1"
"error"
"FEerror"
"error"
"FEerror"
"error"
"FEerror"
"error"
"FEerror"
"error"
"error"
"FEerror"
"error"
"sgc_quit"
"FEerror"
"printf"
"fflush"
"FEerror"
"too_many_arguments"
"printf"
"check_arg_failed"
"check_arg_failed"
"FEerror"
"check_arg_failed"
"check_type_string"
"FEerror"
"check_arg_failed"
"check_arg_failed"
"FEerror"
"check_arg_failed"
"enter_mark_origin"
"array_allocself"
"bcopy"
"bcopy"
"bcopy"
"bcopy"
"check_arg_failed"
"init_system"
"check_arg_failed"
"check_arg_failed"
"fixint"
"check_arg_failed"
"printf"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"getdomainname"
"yp_unbind"
"GBC"
"brk"
"Lsave"
"enter_mark_origin"
)

;;/* for file mapfun.X */

( "mapfun.X"
"too_few_arguments"
"endp1"
"super_funcall"
"endp1"
"too_few_arguments"
"endp1"
"super_funcall"
"endp1"
"too_few_arguments"
"endp1"
"super_funcall"
"endp1"
"too_few_arguments"
"endp1"
"super_funcall"
"endp1"
"too_few_arguments"
"endp1"
"super_funcall"
"endp1"
"too_few_arguments"
"endp1"
"super_funcall"
"endp1"
)

;;/* for file multival.X */

( "multival.X"
"check_arg_failed"
"endp1"
"endp1"
"FEtoo_few_argumentsF"
"FEtoo_many_argumentsF"
"eval"
"endp1"
"FEtoo_few_argumentsF"
"eval"
"super_funcall"
"endp1"
"FEtoo_few_argumentsF"
"eval"
)

;;/* for file nfunlink.X */

( "nfunlink.X"
"FEerror"
"FEinvalid_function"
"vpush_extend"
"FEerror"
"vs_overflow"
"ihs_punsh_base"
"ihs_overflow"
"funcall"
"FEerror"
)

;;/* for file num_arith.X */

( "num_arith.X"
"FEwrong_type_argument"
"FEwrong_type_argument"
"FEwrong_type_argument"
"FEwrong_type_argument"
"FEwrong_type_argument"
"FEwrong_type_argument"
"FEwrong_type_argument"
"FEwrong_type_argument"
"FEwrong_type_argument"
"FEwrong_type_argument"
"FEwrong_type_argument"
"FEwrong_type_argument"
"FEwrong_type_argument"
"FEwrong_type_argument"
"FEwrong_type_argument"
"FEwrong_type_argument"
"number_zerop"
"zero_divisor"
"number_minusp"
"FEwrong_type_argument"
"number_zerop"
"zero_divisor"
"FEwrong_type_argument"
"zero_divisor"
"number_zerop"
"FEwrong_type_argument"
"number_minusp"
"number_compare"
"check_type_number"
"too_few_arguments"
"check_type_number"
"check_type_number"
"too_few_arguments"
"check_type_number"
"check_arg_failed"
"check_type_number"
"check_arg_failed"
"check_type_number"
"check_arg_failed"
"check_type_number"
"check_type_integer"
"number_minusp"
"too_few_arguments"
"check_type_integer"
"number_minusp"
"number_minusp"
"FEerror"
)

;;/* for file num_co.X */

( "num_co.X"
"too_few_arguments"
"too_many_arguments"
"check_type_float"
"FEwrong_type_argument"
"check_arg_failed"
"check_type_rational"
"check_arg_failed"
"check_type_rational"
"too_few_arguments"
"FEwrong_type_argument"
"too_many_arguments"
"number_zerop"
"integer_quotient_remainder_1"
"number_minusp"
"number_plusp"
"check_type_or_rational_float"
"number_minusp"
"number_compare"
"too_few_arguments"
"FEwrong_type_argument"
"too_many_arguments"
"number_zerop"
"integer_quotient_remainder_1"
"number_plusp"
"number_minusp"
"check_type_or_rational_float"
"number_plusp"
"number_compare"
"too_few_arguments"
"FEwrong_type_argument"
"too_many_arguments"
"integer_quotient_remainder_1"
"check_type_or_rational_float"
"too_few_arguments"
"number_oddp"
"FEwrong_type_argument"
"too_many_arguments"
"check_type_or_rational_float"
"number_compare"
"number_oddp"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_type_float"
"check_arg_failed"
"check_type_float"
"FEerror"
"check_arg_failed"
"check_type_float"
"too_few_arguments"
"too_many_arguments"
"check_type_float"
"check_arg_failed"
"check_type_float"
"check_arg_failed"
"check_type_float"
"check_arg_failed"
"check_type_float"
"too_few_arguments"
"too_many_arguments"
"check_type_or_rational_float"
"check_arg_failed"
"check_type_number"
"check_arg_failed"
"check_type_number"
"enter_mark_origin"
)

;;/* for file num_comp.X */

( "num_comp.X"
"cmpii"
"number_zerop"
"FEwrong_type_argument"
"too_few_arguments"
"check_type_number"
"too_few_arguments"
"check_type_number"
"too_few_arguments"
"check_type_or_rational_float"
"too_few_arguments"
"check_type_or_rational_float"
"too_few_arguments"
"check_type_or_rational_float"
)

;;/* for file num_log.X */

( "num_log.X"
"too_few_arguments"
"gcopy_to_big"
"FEwrong_type_argument"
"FEwrong_type_argument"
"check_type_integer"
"check_type_integer"
"check_type_integer"
"check_type_integer"
"check_arg_failed"
"check_type_integer"
"fixint"
"FEerror"
"check_arg_failed"
"check_type_integer"
"check_arg_failed"
"check_type_integer"
"FEerror"
"check_arg_failed"
"check_type_integer"
"check_arg_failed"
"FEwrong_type_argument"
"check_arg_failed"
"siLmake_vector"
"siLmake_pure_array"
"fixint"
"FEerror"
"FEerror"
)

;;/* for file num_pred.X */

( "num_pred.X"
"FEwrong_type_argument"
"FEwrong_type_argument"
"FEwrong_type_argument"
"FEwrong_type_argument"
"FEwrong_type_argument"
"check_arg_failed"
"check_type_number"
"check_arg_failed"
"check_type_or_rational_float"
"check_arg_failed"
"check_type_or_rational_float"
"check_arg_failed"
"check_type_integer"
"check_arg_failed"
"check_type_integer"
"enter_mark_origin"
)

;;/* for file num_rand.X */

( "num_rand.X"
"number_compare"
"FEwrong_type_argument"
"FEerror"
"time"
"FEwrong_type_argument"
"check_arg_failed"
"check_type_random_state"
"check_arg_failed"
"check_arg_failed"
)

;;/* for file num_sfun.X */

( "num_sfun.X"
"FEwrong_type_argument"
"FEwrong_type_argument"
"number_zerop"
"number_plusp"
"FEerror"
"number_minusp"
"number_plusp"
"number_evenp"
"number_zerop"
"FEerror"
"number_minusp"
"FEwrong_type_argument"
"number_zerop"
"FEerror"
"number_minusp"
"FEwrong_type_argument"
"FEerror"
"FEwrong_type_argument"
"FEwrong_type_argument"
"number_zerop"
"FEerror"
"check_arg_failed"
"check_type_number"
"check_arg_failed"
"check_type_number"
"too_few_arguments"
"check_type_number"
"check_type_number"
"too_many_arguments"
"check_arg_failed"
"check_type_number"
"check_arg_failed"
"check_type_number"
"check_arg_failed"
"check_type_number"
"check_arg_failed"
"check_type_number"
"too_few_arguments"
"check_type_number"
"check_type_or_rational_float"
"too_many_arguments"
"enter_mark_origin"
)

;;/* for file number.X */

( "number.X"
"FEerror"
"FEerror"
"number_zerop"
"FEerror"
"number_minusp"
"enter_mark_origin"
"init_num_pred"
"init_num_comp"
"init_num_arith"
"init_num_co"
"init_num_log"
"init_num_sfun"
"init_num_rand"
)

;;/* for file package.X */

( "package.X"
"string_equal"
"pack_hash"
"package_already"
"endp1"
"no_package"
"endp1"
"package_already"
"use_package"
"equal"
"package_already"
"endp1"
"FEwrong_type_argument"
"string_equal"
"no_package"
"FEerror"
"bcmp"
"bcmp"
"member_eq"
"member_eq"
"FEerror"
"delete_eq"
"import"
"FEerror"
"member_eq"
"delete_eq"
"FEerror"
"delete_eq"
"FEerror"
"member_eq"
"member_eq"
"delete_eq"
"no_package"
"FEerror"
"member_eq"
"no_package"
"delete_eq"
"too_few_arguments"
"parse_key"
"check_type_or_string_symbol"
"too_few_arguments"
"parse_key"
"check_type_or_string_symbol"
"check_arg_failed"
"check_arg_failed"
"check_type_package"
"check_arg_failed"
"too_few_arguments"
"too_many_arguments"
"check_type_or_string_symbol"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"stack_cons"
"too_few_arguments"
"too_many_arguments"
"check_type_string"
"too_few_arguments"
"too_many_arguments"
"check_type_string"
"too_few_arguments"
"too_many_arguments"
"check_type_symbol"
"too_few_arguments"
"too_many_arguments"
"endp1"
"check_type_symbol"
"too_few_arguments"
"too_many_arguments"
"endp1"
"check_type_symbol"
"too_few_arguments"
"too_many_arguments"
"endp1"
"check_type_symbol"
"too_few_arguments"
"too_many_arguments"
"endp1"
"check_type_symbol"
"too_few_arguments"
"too_many_arguments"
"endp1"
"check_type_symbol"
"too_few_arguments"
"too_many_arguments"
"endp1"
"check_type_package"
"too_few_arguments"
"too_many_arguments"
"endp1"
"check_type_package"
"check_arg_failed"
"check_type_package"
"FEerror"
"check_arg_failed"
"check_type_package"
"FEerror"
"FEerror"
"FEerror"
"check_type_package"
"check_arg_failed"
"enter_mark_origin"
)

;;/* for file pathname.X */

( "pathname.X"
"stack_cons"
"FEerror"
"endp1"
"FEerror"
"FEerror"
"check_arg_failed"
"check_type_or_pathname_string_symbol_stream"
"too_few_arguments"
"parse_key"
"check_type_or_pathname_string_symbol_stream"
"get_string_start_end"
"FEerror"
"FEerror"
"FEerror"
"too_few_arguments"
"too_many_arguments"
"check_type_or_pathname_string_symbol_stream"
"too_few_arguments"
"parse_key"
"check_arg_failed"
"check_arg_failed"
"check_type_or_pathname_string_symbol_stream"
"check_arg_failed"
"check_type_or_pathname_string_symbol_stream"
"check_arg_failed"
"check_type_or_pathname_string_symbol_stream"
"check_arg_failed"
"check_type_or_pathname_string_symbol_stream"
"check_arg_failed"
"check_type_or_pathname_string_symbol_stream"
"check_arg_failed"
"check_type_or_pathname_string_symbol_stream"
"check_arg_failed"
"check_type_or_pathname_string_symbol_stream"
"check_arg_failed"
"check_type_or_pathname_string_symbol_stream"
"check_arg_failed"
"check_type_or_pathname_string_symbol_stream"
"check_arg_failed"
"check_type_or_pathname_string_symbol_stream"
"too_few_arguments"
"too_many_arguments"
"check_type_or_pathname_string_symbol_stream"
"equalp"
)

;;/* for file predicate.X */

( "predicate.X"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"big_compare"
"check_arg_failed"
"string_eq"
"check_arg_failed"
"number_compare"
"char_equal"
"check_arg_failed"
"endp1"
"eval"
"eval"
"endp1"
"eval"
"eval"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
)

;;/* for file print.X */

( "print.X"
"flush_queue"
"FEerror"
"file_column"
"writec_stream"
"writec_stream"
"file_column"
"FEerror"
"writec_stream"
"writec_stream"
"write_decimal1"
"FEerror"
"alarm"
"terminal_interrupt"
"frs_overflow"
"bds_unwind"
"unwind"
"digit_weight"
"big_zerop"
"vs_overflow"
"digit_weight"
"div_int_big"
"error"
"FEerror"
"potential_number_p"
"fixint"
"error"
"FEwrong_type_argument"
"error"
"vs_overflow"
"FEwrong_type_argument"
"FEerror"
"FEerror"
"FEerror"
"FEerror"
"flush_stream"
"FEwrong_type_argument"
"writec_stream"
"digitp"
"too_few_arguments"
"parse_key"
"FEerror"
"flush_stream"
"too_few_arguments"
"too_many_arguments"
"too_few_arguments"
"too_many_arguments"
"too_few_arguments"
"too_many_arguments"
"check_type_stream"
"writec_stream"
"flush_stream"
"too_few_arguments"
"too_many_arguments"
"too_few_arguments"
"too_many_arguments"
"check_type_character"
"check_type_stream"
"writec_stream"
"too_few_arguments"
"parse_key"
"get_string_start_end"
"check_type_string"
"check_type_stream"
"writec_stream"
"flush_stream"
"too_few_arguments"
"parse_key"
"get_string_start_end"
"check_type_string"
"check_type_stream"
"writec_stream"
"flush_stream"
"too_few_arguments"
"too_many_arguments"
"too_few_arguments"
"too_many_arguments"
"check_type_stream"
"file_column"
"writec_stream"
"flush_stream"
"too_few_arguments"
"too_many_arguments"
"check_type_stream"
"flush_stream"
"too_few_arguments"
"too_many_arguments"
"check_type_stream"
"flush_stream"
"too_few_arguments"
"too_many_arguments"
"check_type_stream"
"check_arg_failed"
"FEerror"
"check_type_stream"
"writec_stream"
"error"
"enter_mark_origin"
"FEerror"
"FEerror"
"flush_stream"
"FEerror"
"writec_stream"
"flush_stream"
"check_type_string"
"check_type_stream"
"writec_stream"
"flush_stream"
"check_type_stream"
"writestr_stream"
"check_type_stream"
"writec_stream"
"flush_stream"
"writec_stream"
"flush_stream"
)

;;/* for file prog.X */

( "prog.X"
"endp1"
"lex_tag_bind"
"frs_overflow"
"eql"
"FEerror"
"eval"
"endp1"
"FEtoo_few_argumentsF"
"lex_block_bind"
"frs_overflow"
"let_var_list"
"bds_unwind"
"endp1"
"FEtoo_few_argumentsF"
"lex_block_bind"
"frs_overflow"
"let_var_list"
"bds_unwind"
"endp1"
"FEtoo_few_argumentsF"
"FEtoo_many_argumentsF"
"FEerror"
"unwind"
"endp1"
"FEtoo_few_argumentsF"
"eval"
"not_a_symbol"
"FEerror"
"Fprogn"
"bds_unwind"
"endp1"
"eval"
"endp1"
"FEtoo_few_argumentsF"
"eval"
"endp1"
"FEtoo_few_argumentsF"
"eval"
)

;;/* for file read.X */

( "read.X"
"FEerror"
"FEerror"
"readc_stream"
"FEwrong_type_argument"
"unreadc_stream"
"readc_stream"
"readc_stream"
"frs_overflow"
"FEerror"
"FEerror"
"unwind"
"frs_overflow"
"unwind"
"frs_overflow"
"unwind"
"vs_overflow"
"_filbuf"
"end_of_stream"
"stream_at_end"
"end_of_stream"
"readc_stream"
"super_funcall"
"FEerror"
"too_long_token"
"_filbuf"
"stream_at_end"
"readc_stream"
"readc_stream"
"stream_at_end"
"end_of_stream"
"readc_stream"
"FEerror"
"FEerror"
"FEerror"
"FEerror"
"check_arg_failed"
"FEerror"
"readc_stream"
"digitp"
"mul_int_big"
"add_int_big"
"FEerror"
"mul_int_big"
"add_int_big"
"digitp"
"mul_int_big"
"add_int_big"
"readc_stream"
"too_long_string"
"_filbuf"
"stream_at_end"
"readc_stream"
"check_arg_failed"
"check_arg_failed"
"FEerror"
"readc_stream"
"digitp"
"super_funcall"
"check_arg_failed"
"stack_cons"
"check_arg_failed"
"check_arg_failed"
"_filbuf"
"stream_at_end"
"readc_stream"
"check_arg_failed"
"extra_argument"
"readc_stream"
"FEerror"
"contains_sharp_comma"
"check_type_number"
"check_arg_failed"
"FEerror"
"string_equal"
"check_arg_failed"
"extra_argument"
"stack_cons"
"check_arg_failed"
"unreadc_stream"
"backq_car"
"FEerror"
"endp1"
"vs_overflow"
"stack_cons"
"vs_overflow"
"FEerror"
"check_arg_failed"
"stream_at_end"
"readc_stream"
"vs_overflow"
"FEerror"
"error"
"extra_argument"
"readc_stream"
"too_long_token"
"stream_at_end"
"end_of_stream"
"check_arg_failed"
"extra_argument"
"check_arg_failed"
"extra_argument"
"check_arg_failed"
"extra_argument"
"check_arg_failed"
"extra_argument"
"extra_argument"
"FEerror"
"extra_argument"
"FEerror"
"extra_argument"
"FEerror"
"check_arg_failed"
"FEerror"
"FEerror"
"check_arg_failed"
"FEerror"
"eql"
"check_arg_failed"
"FEerror"
"eql"
"check_arg_failed"
"extra_argument"
"readc_stream"
"FEerror"
"check_arg_failed"
"extra_argument"
"check_arg_failed"
"extra_argument"
"FEerror"
"FEerror"
"too_few_arguments"
"too_many_arguments"
"check_type_stream"
"end_of_stream"
"too_few_arguments"
"too_many_arguments"
"check_type_stream"
"stream_at_end"
"readc_stream"
"end_of_stream"
"too_few_arguments"
"too_many_arguments"
"check_type_character"
"check_type_stream"
"frs_overflow"
"unwind"
"too_few_arguments"
"too_many_arguments"
"check_type_stream"
"stream_at_end"
"end_of_stream"
"_filbuf"
"readc_stream"
"too_long_string"
"too_few_arguments"
"too_many_arguments"
"check_type_stream"
"stream_at_end"
"end_of_stream"
"readc_stream"
"too_few_arguments"
"too_many_arguments"
"check_type_character"
"check_type_stream"
"too_few_arguments"
"too_many_arguments"
"check_type_stream"
"stream_at_end"
"end_of_stream"
"readc_stream"
"stream_at_end"
"readc_stream"
"end_of_stream"
"check_type_character"
"stream_at_end"
"readc_stream"
"char_eq"
"end_of_stream"
"too_few_arguments"
"too_many_arguments"
"check_type_stream"
"listen_stream"
"too_few_arguments"
"too_many_arguments"
"check_type_stream"
"listen_stream"
"readc_stream"
"too_few_arguments"
"too_many_arguments"
"check_type_stream"
"listen_stream"
"readc_stream"
"too_few_arguments"
"parse_key"
"check_type_string"
"get_string_start_end"
"FEerror"
"too_few_arguments"
"too_many_arguments"
"check_type_stream"
"stream_at_end"
"end_of_stream"
"readc_stream"
"stream_at_end"
"readc_stream"
"stream_at_end"
"readc_stream"
"too_few_arguments"
"too_many_arguments"
"check_type_readtable"
"check_type_readtable"
"check_arg_failed"
"too_few_arguments"
"too_many_arguments"
"check_type_character"
"check_type_readtable"
"too_few_arguments"
"too_many_arguments"
"check_type_character"
"check_type_readtable"
"too_few_arguments"
"too_many_arguments"
"check_type_character"
"check_type_readtable"
"too_few_arguments"
"too_many_arguments"
"check_type_character"
"check_type_readtable"
"too_few_arguments"
"too_many_arguments"
"check_type_character"
"check_type_readtable"
"FEerror"
"too_few_arguments"
"too_many_arguments"
"check_type_character"
"check_type_readtable"
"FEerror"
"digitp"
"check_arg_failed"
"check_type_string"
"check_arg_failed"
"FEerror"
"enter_mark_origin"
"init_backq"
"frs_overflow"
"readc_stream"
"vs_overflow"
"system_error"
"unwind"
)

;;/* for file reference.X */

( "reference.X"
"check_arg_failed"
"not_a_symbol"
"FEinvalid_function"
"FEundefined_function"
"check_arg_failed"
"not_a_symbol"
"stack_cons"
"FEundefined_function"
"stack_cons"
"endp1"
"FEtoo_few_argumentsF"
"FEtoo_many_argumentsF"
"endp1"
"FEtoo_few_argumentsF"
"FEtoo_many_argumentsF"
"FEundefined_function"
"FEinvalid_function"
"check_arg_failed"
"not_a_symbol"
"FEunbound_variable"
"check_arg_failed"
"not_a_symbol"
"check_arg_failed"
"not_a_symbol"
"check_arg_failed"
"not_a_symbol"
)

;;/* for file run_process.X */

( "run_process.X"
"malloc"
"FEerror"
"bzero"
"bcopy"
"socket"
"FEerror"
"connect"
"close"
"FEerror"
"getpid"
"ioctl"
"FEerror"
"FEerror"
"setup_stream_buffer"
"check_arg_failed"
"socketpair"
"FEerror"
"setup_stream_buffer"
"FEerror"
"fork"
"close"
"dup"
"fprintf"
"execvp"
"fflush"
"object_to_string"
)

;;/* for file sequence.X */

( "sequence.X"
"check_arg_failed"
"fixint"
"FEerror"
"FEwrong_type_argument"
"FEerror"
"FEerror"
"check_arg_failed"
"fixint"
"FEerror"
"FEwrong_type_argument"
"FEerror"
"FEerror"
"too_few_arguments"
"too_many_arguments"
"fixnnint"
"FEwrong_type_argument"
"vs_overflow"
"stack_cons"
"array_allocself"
"FEerror"
"check_arg_failed"
"FEwrong_type_argument"
"check_arg_failed"
"check_arg_failed"
"FEwrong_type_argument"
"array_allocself"
"check_arg_failed"
"FEwrong_type_argument"
)

;;/* for file sfasl.X */

( "sfasl.X"
"printf"
"fflush"
"printf"
"fflush"
"coerce_to_filename"
"fread"
"FEerror"
"fseek"
"_filbuf"
"ungetc"
"build_symbol_table"
"get_extra_bss"
"relocate_symbols"
"close_stream"
"free"
"call_init"
"printf"
"fwrite"
"fclose"
"set_symbol_address"
"fprintf"
"fflush"
"FEerror"
"printf"
"fflush"
"getpid"
"coerce_to_filename"
"system"
"FEerror"
"read_special_symbols"
"unlink"
"qsort"
)

;;/* for file string.X */

( "string.X"
"FEerror"
"check_arg_failed"
"check_type_string"
"illegal_index"
"check_arg_failed"
"check_type_string"
"illegal_index"
"check_type_character"
"FEerror"
"too_few_arguments"
"parse_key"
"too_few_arguments"
"parse_key"
"too_few_arguments"
"parse_key"
"too_few_arguments"
"parse_key"
"too_few_arguments"
"parse_key"
"endp1"
"FEerror"
"Lstring_trim0"
"Lstring_trim0"
"Lstring_trim0"
"check_arg_failed"
"too_few_arguments"
"parse_key"
"too_few_arguments"
"parse_key"
"check_type_string"
"check_arg_failed"
)

;;/* for file structure.X */

( "structure.X"
"FEerror"
"FEerror"
"FEwrong_type_argument"
"FEwrong_type_argument"
"FEerror"
"FEwrong_type_argument"
"FEerror"
"check_arg_failed"
"endp1"
"stack_cons"
"too_few_arguments"
"FEerror"
"bzero"
"too_few_arguments"
"FEwrong_type_argument"
"bcopy"
"check_arg_failed"
"FEwrong_type_argument"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"FEerror"
"endp1"
"check_arg_failed"
"FEerror"
"endp1"
"check_arg_failed"
"check_arg_failed"
"FEwrong_type_argument"
"get_aelttype"
"get_aelttype"
)

;;/* for file symbol.X */

( "symbol.X"
"pack_hash"
"string_eq"
"pack_hash"
"string_eq"
"error"
"pack_hash"
"string_eq"
"FEunbound_variable"
"FEerror"
"not_a_symbol"
"FEerror"
"not_a_symbol"
"not_a_symbol"
"endp1"
"odd_plist"
"not_a_symbol"
"too_few_arguments"
"too_many_arguments"
"check_type_symbol"
"check_arg_failed"
"check_type_symbol"
"check_arg_failed"
"check_type_symbol"
"too_few_arguments"
"too_many_arguments"
"check_arg_failed"
"endp1"
"odd_plist"
"FEerror"
"check_arg_failed"
"check_arg_failed"
"check_type_string"
"too_few_arguments"
"too_many_arguments"
"check_type_symbol"
"too_few_arguments"
"too_many_arguments"
"check_type_non_negative_integer"
"too_few_arguments"
"too_many_arguments"
"check_type_string"
"check_type_package"
"check_arg_failed"
"check_type_symbol"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_arg_failed"
"check_type_symbol"
"check_arg_failed"
"check_type_symbol"
"FEerror"
"enter_mark_origin"
"enter_mark_origin"
)

;;/* for file toplevel.X */

( "toplevel.X"
"endp1"
"FEtoo_few_argumentsF"
"FEerror"
"not_a_symbol"
"check_arg_failed"
"check_type_symbol"
"FEerror"
"check_arg_failed"
"check_type_symbol"
"FEerror"
"endp1"
"FEtoo_few_argumentsF"
"FEinvalid_form"
"eval"
"FEerror"
"Fprogn"
"endp1"
"FEtoo_few_argumentsF"
"FEtoo_many_argumentsF"
"eval"
"FEerror"
"FEwrong_type_argument"
"FEerror"
"FEwrong_type_argument"
"enter_mark_origin"
)

;;/* for file typespec.X */

( "typespec.X"
"FEerror"
"check_arg_failed"
"error"
"enter_mark_origin"
)

;;/* for file unixfasl.X */

( "unixfasl.X"
"coerce_to_filename"
"getpid"
"system"
"FEerror"
"setbuf"
"fread"
"fclose"
"fseek"
"close_stream"
"printf"
"error"
"unlink"
"call_init"
"check_arg_failed"
"check_type_or_pathname_string_symbol_stream"
"check_type_string"
"bds_unwind"
)

;;/* for file unixfsys.X */

( "unixfsys.X"
"bcopy"
"getuid"
"FEerror"
"FEerror"
"bcopy"
"chdir"
"FEerror"
"chdir"
"strcat"
"system"
"check_arg_failed"
"check_type_or_pathname_string_symbol_stream"
"check_arg_failed"
"check_type_or_pathname_string_symbol_stream"
"check_type_or_Pathname_string_symbol"
"rename"
"FEerror"
"check_arg_failed"
"check_type_or_pathname_string_symbol_stream"
"unlink"
"FEerror"
"check_arg_failed"
"check_type_or_pathname_string_symbol_stream"
"check_arg_failed"
"check_type_or_pathname_string_symbol_stream"
"check_arg_failed"
"check_type_or_pathname_string_symbol_stream"
"too_many_arguments"
"getuid"
"check_arg_failed"
"check_type_or_pathname_string_symbol_stream"
"strcat"
"strcat"
"setbuf"
"_filbuf"
"pclose"
"stack_cons"
"check_arg_failed"
"check_type_or_pathname_string_symbol_stream"
"chdir"
"FEerror"
)

;;/* for file unixint.X */

( "unixint.X"
"terminal_interrupt"
"fprintf"
"fflush"
"gcl_signal"
"gcl_signal"
"gcl_signal"
"alarm"
"gcl_signal"
"FEerror"
"error"
"FEerror"
"check_arg_failed"
"gcl_signal"
"check_arg_failed"
"gcl_signal"
"gcl_signal"
)

;;/* for file unixsave.X */

( "unixsave.X"
"fread"
"fwrite"
"fread"
"fwrite"
"fprintf"
"setbuf"
"fclose"
"unlink"
"fprintf"
"fread"
"fwrite"
"fseek"
"check_arg_failed"
"check_type_or_pathname_string_symbol_stream"
"coerce_to_filename"
"_cleanup"
)

;;/* for file unixsys.X */

( "unixsys.X"
"check_arg_failed"
"check_type_string"
"FEerror"
"system"
)

;;/* for file unixtime.X */

( "unixtime.X"
"check_arg_failed"
"time"
"check_arg_failed"
"check_type_or_rational_float"
"number_minusp"
"FEerror"
"Lround"
"sleep"
"check_arg_failed"
"check_arg_failed"
"gettimeofday"
"ftime"
)

;;/* for file user_init.X */

( "user_init.X"
)
))
