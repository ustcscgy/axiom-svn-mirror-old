
october 22, 1995

===============
Question:
On my dec alpha-osf1 and irix 5 can i save an image with compiled functions?

Answer:

These two systems use the o/fasldlsym.c module, which uses the system
call dl_open to do the loading of object files, from dynamic
libraries.  While this provides fast loading of .o files into a
running image we do not know where those objects are located, or how
to save an image once they are loaded.  So in short the answer is NO,
not at the moment..  These unixes no longer support the simple old 'ld
-A' option which let one build a .o and read it into memory where one
wanted.

If you have a large system with a lot of preinitialization code, you COULD build
an image in the same manner the actual lisp itself is built.   Ie essentially
add more files to the main link.   si::save-system does work, it just wont work
after you dynamically load in .o files. 

I do this for the build of maxima (in version >= maxima-5.1).  Look at
the files maxima-5.1/src/{makefile,sysinit.lsp}.  Basically you need
to compile your files with the :system-p t flag, so that an init
function for each file based on the file name is produced.  Then you
have to arrange for those init functions to be called at startup, then
you save as is done in building the lisp.

=============
Question:
Are tcl 7.4 and tk 4.0 compatible with gcl 2.2.

Answer: Not really.  Some things will work but others wont.  The demos
in the demos directory certainly wont all work, they are based on tk
3.6.  They presumably could be rewritten based on their newer
counterparts.  I do not know of what other changes are necessary...
In some sense the separation between gcl and tcl/tk is fairly complete
so in PRINCIPLE the changes required should only be those to user
code, caused by changes to the tk library.  One would need to add
perhaps some new calls to def-widget, eg in tkl.lisp adding

(def-widget listbox)

if 'listbox' were a new widget type.

(def-control send)
(def-control raise)

if 'send' or 'control' were new functions..

Also one should update the gcl-tk info stuff from the using
gcl-2.2/elisp/man1-to-texi.el you can also use

You can use gcl-2.2/gcl-tk/convert.el as a start on using emacs to
convert other (tcl/tk 4.0) code to lisp, to have their new demos in lisp
for testing purposes.

============
Question: Is there a port to mach 10 on the mac.

Answer:
Not yet.  This would be good..   Emacs is ported there.  I dont know if it
saves itself however...i had heard it does not.  I believe they are using the 
macintosh native executable format....

===========

















