LBINDIR=/public/bin
#defs for the makefiles

# hp900/3XX
OFLAG	=  -O
ODIR_DEBUG= -O 



# for rel 7
# ODIR_DEBUG= -O -DDBEGIN=0x40000000


LIBS= -lm
SHELL=/bin/sh

# .IGNORE:


CC = cc -Wl,-B,immediate -DVOL=volatile
CC = cc -DVOL=volatile +DA1.1 +DS1.1
#CC = gcc -DVOL=volatile 

# make ld happy by putting some nulls 
NULLFILE = ../h/twelve_null

# If you have gcc use 
# CC = gcc -msoft-float -DVOL=volatile -I$(GCLDIR)/o
# CC = mygcc -DVOL=volatile   -msingle-code-quad

LIBS	=  -lm -lc
#end gcc

# Use static libraries.

# for when we bring the data down to regular space
LDCC = cc -Wl,-n -Wl,-a,archive -Wl,-D0x800000
LDCC = cc  -Wl,-a,archive
#LDCC = gcc  -static

# LDCC = cc -Wl,-a,archive 
# in rel 8.01 -a archive uses the regular .a libraries (previous default).
# LDCC = ${CC} -Wl,-a,archive
# for rel 7 use LDCC = cc



CFLAGS	= -c $(DEFS)  -I../h $(SYMTAB)

# in versions of HP-UX before 6.01, where the ld -A option was not
# available, you can use spp to build a file to link with.
# SPP=spp

# The fast loading currently works for ATT and BSD with 68000 or 386
# architectures.  Unless you have these, leave these undefined.
# RSYM	= rsym
# SFASL	= $(ODIR)/sfasl.o

# This function will be run before dumping.
# When using SFASL it is good to have (si::build-symbol-table)
# INITFORM=(si::build-symbol-table)
 
# for our special gcc we want some flags.  for cc you can delete this.
# INITFORM=(setq compiler::*cc* "$(CC)  -mcall-ble")
# If using ordinary cc or ordinary gcc use:
INITFORM=

# Use symbolic links
SYMB=-s

# You should try to compile mpi.c with gcc, since there
# are gcc assembler macros which give a large speedup.
# The following will do that, but you may not be able to
# link a gcc object with ordinary cc objects (depending on 
# whether 'gas' was used)
# MPFILES=${MPDIR}/mpi-gcc.o ${MPDIR}/libmport.a

# if there is no gcc use:
MPFILES=${MPDIR}/mpi.o ${MPDIR}/libmport.a









