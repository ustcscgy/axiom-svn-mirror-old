OUT=${OBJ}/${SYS}/bin

stamp-gcldir:
	@echo 1 building ${LSP} ${GCLVERSION}
	@$(ENV) $(MAKE) $(GCLVERSION)dir

# Rules for building GCL from Axiom distribution.
gcl-2.6.8predir: 
	@tar -zxf ${ZIPS}/${GCLVERSION}.tgz
	@(cd ${GCLVERSION}/h ; \
	  echo 3 applying EXTRAS patch to h/linux.defs ; \
	  ${PATCH} <${SPD}/zips/${GCLVERSION}.h.linux.defs.patch )
	@(echo 4 setup ini files for EXTRAS patch ; \
	  touch ${OBJ}/${SYS}/lib/cfuns-c.ini ; \
	  touch ${OBJ}/${SYS}/lib/sockio-c.ini )
	@(cd ${GCLVERSION}/unixport ; \
	  echo 6 applying libspad.a patch to unixport/makefile ; \
	  ${PATCH} <${SPD}/zips/${GCLVERSION}.unixport.makefile.patch )
	@(cd ${GCLVERSION}/unixport ; \
	  echo 7 applying toploop patch to unixport/init_gcl.lsp ; \
	  ${PATCH} <${SPD}/zips/${GCLVERSION}.unixport.init_gcl.lsp.in.patch )
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 26 copy gcl_collectfn.lsp to ${OBJ}/${SYS}/lsp/collectfn.lsp ; \
	  cp gcl_collectfn.lsp ${OBJ}/${SYS}/lsp/collectfn.lsp )
	@(cd ${GCLVERSION}/lsp ; \
	  echo 27 copy sys-proclaim.lisp to ${OBJ}/${SYS}/lsp/sys-proclaim.lisp ; \
	  cp sys-proclaim.lisp ${OBJ}/${SYS}/lsp/sys-proclaim.lisp )
	@(cd ${GCLVERSION} ; \
	./configure --disable-xgcl ${GCLOPTS} ; \
	${ENV} ${MAKE} ; \
	echo '(progn (load "cmpnew/gcl_collectfn.lsp") (load "lsp/sys-proclaim.lisp") (compiler::emit-fn t) (system::save-system "${OUT}/lisp"))' | unixport/saved_gcl )
	$(STAMP) stamp-gcldir


# Rules for preparing system-installed GCL for use within Axiom.
gcl-systemdir: 
	echo '(compiler::link nil "${OUT}/lisp" (format nil "(progn (let ((*load-path* (cons ~S *load-path*))(si::*load-types* ~S)) (compiler::emit-fn t))(when (fboundp (quote si::sgc-on)) (si::sgc-on t))(setq compiler::*default-system-p* t))" si::*system-directory* (quote (list ".lsp"))) "${OBJ}/${SYS}/lib/cfuns-c.o ${OBJ}/${SYS}/lib/sockio-c.o ${OBJ}/${SYS}/lib/libspad.a")' | gcl
	@echo 23 finished gcl build on `date` | tee > stamp-gcldir

ccldir: $(builddir)/ccl/Makefile
	@echo 14 building CCL
	@mkdir -p ${INT}/ccl
	@mkdir -p ${OBJ}/${SYS}/ccl
	@( cd ccl ; ${ENV} ${MAKE} )

document:
	@echo 16 making docs in ${LSP}
	@mkdir -p ${INT}/doc/lsp/ccl
	@( cd ccl ; ${ENV} ${MAKE} document )

clean:
	@echo 17 cleaning ${LSP}/ccl
	@( cd ccl ; ${ENV} ${MAKE} clean )

