GCLVERSION = gcl-2.6.8pre
OUT = $(axiom_build_bindir)

subdir = lsp/

pamphlets = Makefile.pamphlet

build_libdir = $(abs_top_builddir)/src/lib

lisp_DEPENDENCIES = $(build_libdir)/cfuns-c.o \
		    $(build_libdir)/sockio-c.o \
		    $(build_libdir)/libspad.a

all: all-ax

all-ax: $(OUT)/lisp

# Rules for building GCL from Axiom distribution.

$(GCLVERSION):
	$(TAR) -zxf $(axiom_optional_srcdir)/${GCLVERSION}.tgz

$(axiom_build_bindir)/gcl: $(GCLVERSION)
	(cd ${GCLVERSION} && \
	./configure --prefix=$(axiom_builddir) --disable-xgcl ${GCLOPTS} && \
	${ENV} $(MAKE) && $(ENV) $(MAKE) install)

# Create a fresh image for building Boot
$(OUT)/lisp: $(GCL) $(lisp_DEPENDENCIES) $(OUT)
	echo '(compiler::link nil "${OUT}/lisp" ' \
              ' (format nil "(progn (let ((*load-path* (cons ~S *load-path*))'\
                                        ' (si::*load-types* ~S))' \
                                       ' (compiler::emit-fn t))' \
                                  ' (when (fboundp (quote si::sgc-on))' \
                                        ' (si::sgc-on t))' \
                                  ' (setq compiler::*default-system-p* t))"' \
                      ' si::*system-directory* (quote (list ".lsp")))' \
               ' "$(build_libdir)/cfuns-c.o' \
               '  $(build_libdir)/sockio-c.o' \
               '  $(build_libdir)/libspad.a")' \
            | $(GCL)

$(OUT):
	$(mkinstalldirs) $@


ccldir: $(builddir)/ccl/Makefile
	@echo 14 building CCL
	@mkdir -p ${INT}/ccl
	@mkdir -p ${OBJ}/${SYS}/ccl
	@( cd ccl ; ${ENV} ${MAKE} )

# Build GCL takes quite a while, so we don't remove the
# diretcory in mostlyclean.  Rather, we do that in clean.
mostlyclean-local:

clean-local: mostlyclean
	-rm -rf $(GCLVERSION)
	-rm -f $(OUT)/lisp
	-rm -f $(axiom_build_bindir)/gcl
	-rm -rf $(axiom_builddir)/lib/$(GCLVERSION)

distclean-local: clean-local
	-rm -f Makefile
