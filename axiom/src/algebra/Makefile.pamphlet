\documentclass{article}
\usepackage{../../src/scripts/tex/axiom}
\begin{document}
\title{\$SPAD/src/algebra Makefile}
\author{Timothy Daly}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{Adding new algebra}
This is a complex process by its very nature. Developers and Maintainers
who undertake the process need to understand quite a lot of detail. The
ultimate steps to add algebra are tedious but simple. Note that only
algebra code that gets shipped with the system needs to undergo this
process. User code can be compiled once the distributed algebra exists
and does not need either this Makefile or this installation process.

NOTE: If you add new algebra to this file you must also update 
[[src/algebra/exposed.lsp.pamphlet]] otherwise the new algebra
won't be loaded by the interpreter when needed.

Since understanding is the key to making correct changes to this file
I'll work on explaining the details of why things need to exist. 

The first idea that you need to understand is the overall process
of adding algebra code. Lets assume that you have a brand new spad
file, called [[foo.spad]] containing a simple domain [[BAR]]. The
steps in the process of adding this file are:
\begin{enumerate}
\item Find out where the algebra code lives in the lattice.

You do this by 
\begin{enumerate}
\item starting a new interpsys session
\item collecting all the names of the algebra files BAR requires
\item determining which layer each of the required files resides
\item determine the highest layer (e.g. 14) that contains the required files
\end{enumerate}

\item insert the documentation into the next layer (e.g. 15)
\item insert the [[${OUT}/BAR.o]] file into the layer's file list
\item create a new subsection for the [[foo.spad]] file
\item add a stanza to extract [[foo.spad]] from [[foo.spad.pamphlet]]
\item add a stanza to extract [[foo.dvi]] from [[foo.spad.pamphlet]]
\item add a stanza to compile [[foo.spad]] to get [[BAR.lsp]]
\item add a stanza to compile [[BAR.lsp]] to get [[BAR.o]]
\item add a stanza to copy [[BAR.o]] to the final algebra directory 
\item add the 5 chunk names into the default Makefile section
\end{enumerate}

\section{Rebuilding the algebra from scratch}
Compile order is important. Here we try to define the ordered lattice
of spad file dependencies. However this is, in reality, a graph rather
than a lattice. In order to break cycles in this graph we explicitly
cache a few of the intermediate generated lisp code for certain files.
These are marked throughout (both here and in the various pamphlet
files) with the word {\bf BOOTSTRAP}.

If we take a cycle such as {\bf RING} we discover that in order to
compile the spad code we must load the compiled definition of {\bf RING}.
In this case we must compile the cached lisp code before we try to 
compile the spad file.

The cycle for {\bf SETCAT} is longer consisting of: {\bf SETCAT} needs
{\bf SINT} needs {\bf UFD} needs {\bf GCDDOM} needs {\bf COMRING} needs
{\bf RING} needs {\bf RNG} needs {\bf ABELGRP} needs {\bf CABMON} needs
{\bf ABELMON} needs {\bf ABELSG} needs {\bf SETCAT}.

It is highly recommended that you try to become a developer of Axiom
and read the archived mailing lists before you decide to change a
cached file. In the fullness of time we will rewrite the whole algebra
structure into a proper lattice if possible. Alternatively we'll
reimplement the compiler to handle graphs. Or deeply adopt the
extensible domains. Whatever we do will be much discussed (and cause
much disgust) around the campfire. If you come up with a brilliant
plan that gets adopted we'll even inscribe your name on a log and add
it to the fire.

In the code that follows we find the categories, packages and domains
that compile with no dependencies and call this set ``layer 0''. Next
we find the categories, packages and domains that will compile using
only ``layer 0'' code and call this ``layer 1''. We walk up the
lattice in this fashion adding layers. Note that at layer 3 this
process runs into cycles and we create the ``layer 3 bootstrap''
stanzas before continuing upward.

I used to have code that would automatically generate this lattice but
it got lost in the move from IBM to NAG. The current information was
hand generated during the coding of this Makefile.  Except for the
bootstrap files most of the stanzas have the dependency graph encoded
in the precondition lists for each makefile stanza. Thus we can see
that building the package {\bf ANY1} requires the category {\bf TYPE}.

\begin{verbatim}
${MID}/ANY1.NRLIB: ${OUT}/TYPE.o ${MID}/ANY1.spad
\end{verbatim}

This information also exists in the comments before each layer.
Ordinary users of Axiom won't need to know this. However developers
of the standard system should strive to keep this information up to
date and correct. The spad compiler will tell you this information
as part of the compile.

Once we reach the point in the lattice where all of the individual
categories, domains and packages in each spad file have been compiled
we can start building the system directly from the whole spad code
files rather than the individual domains.

\section{The Algebra Lattice Layers}
\subsection{Layer 0 Bootstrap}
\subsubsection{Completed spad files}
\begin{verbatim}
si.spad.pamphlet (INS SINT)

\end{verbatim}
Note well that none of the algebra stanzas should include these
files in the preconditions otherwise we have an infinite compile
loop. These files are originally bootstrapped from lisp code
when we build the system for the first time but they are
forcibly recompiled at the end of the build so they reflect
current code (just in case someone changes the spad code but
does not re-cache the generated lisp). If you add these files
as preconditions (note that they are all in the {\bf MID} 
directory rather than the {\bf OUT} directory like everything
else) then the final recompile will invalidate all of the
rest of the algebra targets which will get rebuilt again causing
these targets to be out of date. The rest of the loop is left
up to the student.

The bootstrap process works because first we ask for the compiled
lisp code stanzas (the [[${MID}/BAR.o]] files), THEN we ask for
the final algebra code stanzas (the [[${OUT}/BAR.o]] files). This
is a very subtle point so think it through carefully. Notice that
this is the only layer calling for [[${MID}]] files. All other 
layers call for [[${OUT}]] files. If you break this the world
will no longer compile so don't change it if you don't understand it.

\begin{verbatim}
LAYER0BOOTSTRAP=${OUT}/XPR.o 
\end{verbatim}

<<layer0 bootstrap>>=
LAYER0BOOTSTRAP=\
  ${MID}/ABELGRP.o  ${MID}/ABELGRP-.o ${MID}/ABELMON.o  ${MID}/ABELMON-.o \
  ${MID}/ABELSG.o   ${MID}/ABELSG-.o  ${MID}/ALAGG.o    ${MID}/BOOLEAN.o  \
  ${MID}/CABMON.o   ${MID}/CHAR.o     ${MID}/CLAGG.o    ${MID}/CLAGG-.o   \
  ${MID}/COMRING.o  ${MID}/DFLOAT.o   ${MID}/DIFRING.o  ${MID}/DIFRING-.o \
  ${MID}/DIVRING.o  ${MID}/DIVRING-.o ${MID}/ENTIRER.o  ${MID}/ES.o       \
  ${MID}/ES-.o      ${MID}/EUCDOM.o   ${MID}/EUCDOM-.o  ${MID}/FFIELDC.o  \
  ${MID}/FFIELDC-.o ${MID}/FPS.o      ${MID}/FPS-.o     ${MID}/GCDDOM.o   \
  ${MID}/GCDDOM-.o  ${MID}/HOAGG.o    ${MID}/HOAGG-.o   ${MID}/ILIST.o    \
  ${MID}/INS.o      ${MID}/INS-.o     ${MID}/INT.o      ${MID}/INTDOM.o   \
  ${MID}/INTDOM-.o  ${MID}/ISTRING.o  ${MID}/LIST.o     ${MID}/LNAGG.o    \
  ${MID}/LNAGG-.o   ${MID}/LSAGG.o    ${MID}/LSAGG-.o   ${MID}/MONOID.o   \
  ${MID}/MONOID-.o  ${MID}/MTSCAT.o   ${MID}/NNI.o      ${MID}/OINTDOM.o  \
  ${MID}/ORDRING.o  ${MID}/ORDRING-.o ${MID}/OUTFORM.o  ${MID}/PI.o       \
  ${MID}/PRIMARR.o  ${MID}/POLYCAT.o  ${MID}/POLYCAT-.o ${MID}/PSETCAT.o  \
  ${MID}/PSETCAT-.o ${MID}/QFCAT.o    ${MID}/QFCAT-.o   ${MID}/RCAGG.o    \
  ${MID}/RCAGG-.o   ${MID}/REF.o      ${MID}/RING.o     ${MID}/RING-.o    \
  ${MID}/RNG.o      ${MID}/RNS.o      ${MID}/RNS-.o     ${MID}/SETAGG.o   \
  ${MID}/SETAGG-.o  ${MID}/SETCAT.o   ${MID}/SETCAT-.o  ${MID}/SINT.o     \
  ${MID}/STAGG.o    ${MID}/STAGG-.o   ${MID}/SYMBOL.o   ${MID}/TSETCAT.o  \
  ${MID}/TSETCAT-.o ${MID}/UFD.o      ${MID}/UFD-.o     ${MID}/ULSCAT.o   \
  ${MID}/UPOLYC.o   ${MID}/UPOLYC-.o  ${MID}/URAGG.o    ${MID}/URAGG-.o   \
  ${MID}/VECTOR.o

@
<<layer0 copy>>=
LAYER0COPY=\
  ${OUT}/ABELGRP.o  ${OUT}/ABELGRP-.o ${OUT}/ABELMON.o  ${OUT}/ABELMON-.o \
  ${OUT}/ABELSG.o   ${OUT}/ABELSG-.o  ${OUT}/ALAGG.o    ${OUT}/BOOLEAN.o  \
  ${OUT}/CABMON.o   ${OUT}/CHAR.o     ${OUT}/CLAGG.o    ${OUT}/CLAGG-.o   \
  ${OUT}/COMRING.o  ${OUT}/DFLOAT.o   ${OUT}/DIFRING.o  ${OUT}/DIFRING-.o \
  ${OUT}/DIVRING.o  ${OUT}/DIVRING-.o ${OUT}/ENTIRER.o  ${OUT}/ES.o       \
  ${OUT}/ES-.o      ${OUT}/EUCDOM.o   ${OUT}/EUCDOM-.o  ${OUT}/FFIELDC.o  \
  ${OUT}/FFIELDC-.o ${OUT}/FPS.o      ${OUT}/FPS-.o     ${OUT}/GCDDOM.o   \
  ${OUT}/GCDDOM-.o  ${OUT}/HOAGG.o    ${OUT}/HOAGG-.o   ${OUT}/ILIST.o    \
  ${OUT}/INS.o      ${OUT}/INS-.o     ${OUT}/INT.o      ${OUT}/INTDOM.o   \
  ${OUT}/INTDOM-.o  ${OUT}/ISTRING.o  ${OUT}/LIST.o     ${OUT}/LNAGG.o    \
  ${OUT}/LNAGG-.o   ${OUT}/LSAGG.o    ${OUT}/LSAGG-.o   ${OUT}/MONOID.o   \
  ${OUT}/MONOID-.o  ${OUT}/MTSCAT.o   ${OUT}/NNI.o      ${OUT}/OINTDOM.o  \
  ${OUT}/ORDRING.o  ${OUT}/ORDRING-.o ${OUT}/OUTFORM.o  ${OUT}/PI.o       \
  ${OUT}/PRIMARR.o  ${OUT}/POLYCAT.o  ${OUT}/POLYCAT-.o ${OUT}/PSETCAT.o  \
  ${OUT}/PSETCAT-.o ${OUT}/QFCAT.o    ${OUT}/QFCAT-.o   ${OUT}/RCAGG.o    \
  ${OUT}/RCAGG-.o   ${OUT}/REF.o      ${OUT}/RING.o     ${OUT}/RING-.o    \
  ${OUT}/RNG.o      ${OUT}/RNS.o      ${OUT}/RNS-.o     ${OUT}/SETAGG.o   \
  ${OUT}/SETAGG-.o  ${OUT}/SETCAT.o   ${OUT}/SETCAT-.o  ${OUT}/SINT.o     \
  ${OUT}/STAGG.o    ${OUT}/STAGG-.o   ${OUT}/SYMBOL.o   ${OUT}/TSETCAT.o  \
  ${OUT}/TSETCAT-.o ${OUT}/UFD.o      ${OUT}/UFD-.o     ${OUT}/ULSCAT.o   \
  ${OUT}/UPOLYC.o   ${OUT}/UPOLYC-.o  ${OUT}/URAGG.o    ${OUT}/URAGG-.o   \
  ${OUT}/VECTOR.o

@
\subsection{Layer 0}
\subsubsection{Completed spad files}
\begin{verbatim}
attreg.spad.pamphlet  (ATTREG)
dhmatrix.spad.pamphlet (DHMATRIX)
omcat.spad.pamphlet   (OM)
print.spad.pamphlet   (PRINT)
ptranfn.spad.pamphlet (PTRANFN)
system.spad.pamphlet  (MSYSCMD)
\end{verbatim}

<<layer0>>= 
LAYER0=\
  ${OUT}/AHYP.o    ${OUT}/ATTREG.o  ${OUT}/CFCAT.o   ${OUT}/ELTAB.o    \
  ${OUT}/KOERCE.o  ${OUT}/KONVERT.o ${OUT}/MSYSCMD.o ${OUT}/ODEIFTBL.o \
  ${OUT}/OM.o      ${OUT}/OMCONN.o  ${OUT}/OMDEV.o   ${OUT}/OUT.o      \
  ${OUT}/PRIMCAT.o ${OUT}/PRINT.o   ${OUT}/PTRANFN.o ${OUT}/SPFCAT.o   \
  ${OUT}/TYPE.o 

@
\subsection{Layer 1}
\subsubsection{Completed spad files}
\begin{verbatim}
ituple.spad.pamphlet   (ITFUN2 ITFUN3 ITUPLE)
mkrecord.spad.pamphlet (MKRECORD)
pcurve.spad.pamphlet   (PPCURVE PSCURVE)
coerce.spad.pamphlet   (TYPE KOERCE KONVERT RETRACT)
\end{verbatim}

<<layer1>>=
LAYER1=\
  ${OUT}/ANY1.o     ${OUT}/COMBOPC.o  ${OUT}/DROPT1.o   ${OUT}/EQ2.o      \
  ${OUT}/FORTCAT.o  ${OUT}/ITFUN2.o   ${OUT}/ITFUN3.o   ${OUT}/ITUPLE.o   \
  ${OUT}/MKBCFUNC.o ${OUT}/MKRECORD.o ${OUT}/MKUCFUNC.o ${OUT}/NONE1.o    \
  ${OUT}/PATAB.o    ${OUT}/PLOT1.o    ${OUT}/PPCURVE.o  ${OUT}/PSCURVE.o  \
  ${OUT}/REAL.o     ${OUT}/RESLATC.o  ${OUT}/RETRACT.o  ${OUT}/RETRACT-.o \
  ${OUT}/SEGBIND2.o ${OUT}/SEGCAT.o   ${OUT}/STREAM1.o  ${OUT}/STREAM2.o  \
  ${OUT}/STREAM3.o 

@
\subsection{Layer 2}
\subsubsection{Completed spad files}

<<layer2>>=
LAYER2=\
  ${OUT}/FMC.o   ${OUT}/FMFUN.o   ${OUT}/FORTFN.o  ${OUT}/FVC.o  \
  ${OUT}/FVFUN.o ${OUT}/INTRET.o  ${OUT}/SEGXCAT.o 

@
\subsection{Layer 3}
\subsubsection{Completed spad files}
\begin{verbatim}
grdef.spad.pamphlet (GRDEF)
\end{verbatim}

<<layer3>>=
LAYER3=\
  ${OUT}/AGG.o   ${OUT}/AGG-.o  ${OUT}/BASTYPE.o ${OUT}/BASTYPE-.o \
  ${OUT}/GRDEF.o ${OUT}/LIST3.o ${OUT}/MKFUNC.o

@
\begin{verbatim}
\subsubsection{Completed spad files}
\begin{verbatim}
annacat.spad.pamphlet (NIPROB ODEPROB PDEPROB OPTPROB NUMINT ODECAT PDECAT
                       OPTCAT)
color.spad.pamphlet (COLOR PALETTE)
mappkg.spad.pamphlet (MAPHACK1 MAPHACK2 MAPHACK3 MAPPKG1 MAPPKG2 MAPPKG3)
paramete.spad.pamphlet (PARPCURV PARPC2 PARSCURV PARSC2 PARSURF PARSU2
suchthat.spad.pamphlet (SUCH)
ystream.spad.pamphlet (YSTREAM)
\end{verbatim}

<<layer4>>=
LAYER4=\
  ${OUT}/ANON.o     ${OUT}/COLOR.o    ${OUT}/COMM.o     ${OUT}/COMPPROP.o \
  ${OUT}/ELTAGG.o   ${OUT}/ELTAGG-.o  ${OUT}/ESCONT1.o  ${OUT}/EXIT.o     \
  ${OUT}/FAMONC.o   ${OUT}/FILECAT.o  ${OUT}/FINITE.o   ${OUT}/FNCAT.o    \
  ${OUT}/FORMULA1.o ${OUT}/IDPC.o     ${OUT}/IEVALAB.o  ${OUT}/IEVALAB-.o \
  ${OUT}/INTBIT.o   ${OUT}/LMODULE.o  ${OUT}/LOGIC.o    ${OUT}/LOGIC-.o   \
  ${OUT}/MAPHACK1.o ${OUT}/MAPHACK2.o ${OUT}/MAPHACK3.o ${OUT}/MAPPKG1.o  \
  ${OUT}/MAPPKG2.o  ${OUT}/MAPPKG3.o  ${OUT}/MONAD.o    ${OUT}/MONAD-.o   \
  ${OUT}/NIPROB.o   ${OUT}/NONE.o     ${OUT}/NUMINT.o   ${OUT}/ODECAT.o   \
  ${OUT}/ODEPROB.o  ${OUT}/OMENC.o    ${OUT}/ONECOMP2.o ${OUT}/OPTCAT.o   \
  ${OUT}/OPTPROB.o  ${OUT}/ORDSET.o   ${OUT}/ORDSET-.o  ${OUT}/PALETTE.o  \
  ${OUT}/PARPCURV.o ${OUT}/PARPC2.o   ${OUT}/PARSCURV.o ${OUT}/PARSC2.o   \
  ${OUT}/PARSURF.o  ${OUT}/PARSU2.o   ${OUT}/PATMAB.o   ${OUT}/PATRES2.o  \
  ${OUT}/PATTERN1.o ${OUT}/PDECAT.o   ${OUT}/PDEPROB.o  ${OUT}/REPSQ.o    \
  ${OUT}/REPDB.o    ${OUT}/RFDIST.o   ${OUT}/RIDIST.o   ${OUT}/RMODULE.o  \
  ${OUT}/SEXCAT.o   ${OUT}/SGROUP.o   ${OUT}/SGROUP-.o  ${OUT}/SPACEC.o   \
  ${OUT}/SPLNODE.o  ${OUT}/STEP.o     ${OUT}/SUCH.o     ${OUT}/TEX1.o     \
  ${OUT}/UDVO.o     ${OUT}/YSTREAM.o

@
\subsection{Layer 5}
\subsubsection{Completed spad files}
\begin{verbatim}
equation1.spad.pamphlet (EVALAB IEVALAB)
\end{verbatim}

<<layer5>>=
LAYER5=\
  ${OUT}/ATRIG.o    ${OUT}/ATRIG-.o   ${OUT}/BMODULE.o  ${OUT}/CACHSET.o  \
  ${OUT}/CHARNZ.o   ${OUT}/CHARZ.o    ${OUT}/DVARCAT.o  ${OUT}/DVARCAT-.o \
  ${OUT}/ELEMFUN.o  ${OUT}/ELEMFUN-.o ${OUT}/ESTOOLS2.o ${OUT}/EVALAB.o   \
  ${OUT}/EVALAB-.o  ${OUT}/FCOMP.o    ${OUT}/FEVALAB.o  ${OUT}/FEVALAB-.o \
  ${OUT}/FPATMAB.o  ${OUT}/GROUP.o    ${OUT}/GROUP-.o   ${OUT}/IDPAM.o    \
  ${OUT}/IDPO.o     ${OUT}/INCRMAPS.o ${OUT}/IXAGG.o    ${OUT}/IXAGG-.o   \
  ${OUT}/KERNEL2.o  ${OUT}/LALG.o     ${OUT}/LALG-.o    ${OUT}/LINEXP.o   \
  ${OUT}/MODMONOM.o ${OUT}/MONADWU.o  ${OUT}/MONADWU-.o ${OUT}/MRF2.o     \
  ${OUT}/NARNG.o    ${OUT}/NARNG-.o   ${OUT}/NSUP2.o    ${OUT}/OASGP.o    \
  ${OUT}/ODVAR.o    ${OUT}/OPQUERY.o  ${OUT}/ORDFIN.o   ${OUT}/ORDMON.o   \
  ${OUT}/PATMATCH.o ${OUT}/PERMCAT.o  ${OUT}/PDRING.o   ${OUT}/PDRING-.o  \
  ${OUT}/SDVAR.o    ${OUT}/SUP2.o     ${OUT}/TRIGCAT.o  ${OUT}/TRIGCAT-.o \
  ${OUT}/ULS2.o     ${OUT}/UP2.o

@
\subsection{Layer6}
\subsubsection{Completed spad files}
\begin{verbatim}
fmod.spad.pamphlet (ZMOD)
sortpak.spad.pamphlet (SORTPAK)
\end{verbatim}

<<layer6>>=
LAYER6=\
  ${OUT}/AUTOMOR.o  ${OUT}/BGAGG.o   ${OUT}/BGAGG-.o   ${OUT}/BRAGG.o    \
  ${OUT}/BRAGG-.o   ${OUT}/CARTEN2.o ${OUT}/CHARPOL.o  ${OUT}/COMPLEX2.o \
  ${OUT}/DIFEXT.o   ${OUT}/DIFEXT-.o ${OUT}/DLAGG.o    ${OUT}/ELAGG.o    \
  ${OUT}/ELAGG-.o   ${OUT}/ES1.o     ${OUT}/ES2.o      ${OUT}/GRMOD.o    \
  ${OUT}/GRMOD-.o   ${OUT}/HYPCAT.o  ${OUT}/HYPCAT-.o  ${OUT}/MKCHSET.o  \
  ${OUT}/MODRING.o  ${OUT}/MODULE.o  ${OUT}/MODULE-.o  ${OUT}/NASRING.o  \
  ${OUT}/NASRING-.o ${OUT}/OAMON.o   ${OUT}/SORTPAK.o  ${OUT}/ZMOD.o

@
\subsection{Layer7}
\subsubsection{Completed spad files}
\begin{verbatim}
\end{verbatim}

<<layer7>>=
LAYER7=\
  ${OUT}/ALGEBRA.o ${OUT}/ALGEBRA-.o ${OUT}/BTCAT.o  ${OUT}/BTCAT-.o \
  ${OUT}/FMCAT.o   ${OUT}/IDPOAM.o   ${OUT}/IFAMON.o ${OUT}/GRALG.o  \
  ${OUT}/GRALG-.o  ${OUT}/OCAMON.o   ${OUT}/PRQAGG.o ${OUT}/QUAGG.o  \
  ${OUT}/SKAGG.o 

@
\subsection{Layer8}
\subsubsection{Completed spad files}
\begin{verbatim}
card.spad.pamphlet (CARD)
fortcat.spad.pamphlet (FORTFN FMC FORTCAT FVC FMTC FMFUN FVFUN)
\end{verbatim}

<<layer8>>=
LAYER8=\
  ${OUT}/BSTREE.o  ${OUT}/BTOURN.o   ${OUT}/CARD.o    ${OUT}/DRAWHACK.o \
  ${OUT}/DQAGG.o   ${OUT}/FACTFUNC.o ${OUT}/FMTC.o    ${OUT}/FR2.o      \
  ${OUT}/FRAC2.o   ${OUT}/FRUTIL.o   ${OUT}/ITAYLOR.o ${OUT}/MLO.o      \
  ${OUT}/NAALG.o   ${OUT}/NAALG-.o   ${OUT}/OAGROUP.o ${OUT}/OAMONS.o   \
  ${OUT}/OP.o      ${OUT}/ORDCOMP2.o ${OUT}/PID.o     ${OUT}/RANDSRC.o  \
  ${OUT}/UNISEG2.o ${OUT}/XALG.o 

@
\subsection{Layer9}
\subsubsection{Completed spad files}
\begin{verbatim}
degred.spad.pamphlet (DEGRED)
indexedp.spad.pamphlet (IDPC IDPO IDPAM IDPOAM  IDPOAMS IDPAG)
product.spad.pamphlet (PRODUCT)
retract.spad.pamphlet (RETRACT FRETRCT RATRET)
sf.spad.pamphlet (REAL RADCAT RNS FPS DFLOAT)
\end{verbatim}

<<layer9>>=
LAYER9=\
  ${OUT}/AMR.o      ${OUT}/AMR-.o     ${OUT}/DEGRED.o  ${OUT}/DLP.o      \
  ${OUT}/EAB.o      ${OUT}/ESTOOLS1.o ${OUT}/FAGROUP.o ${OUT}/FAMONOID.o \
  ${OUT}/FIELD.o    ${OUT}/FIELD-.o   ${OUT}/FLAGG.o   ${OUT}/FLAGG-.o   \
  ${OUT}/FLINEXP.o  ${OUT}/FLINEXP-.o ${OUT}/FRETRCT.o ${OUT}/FRETRCT-.o \
  ${OUT}/FSERIES.o  ${OUT}/FT.o       ${OUT}/IDPAG.o   ${OUT}/IDPOAMS.o  \
  ${OUT}/INFINITY.o ${OUT}/LA.o       ${OUT}/OMLO.o    ${OUT}/ORTHPOL.o  \
  ${OUT}/PRODUCT.o  ${OUT}/PADICCT.o  ${OUT}/PMPRED.o  ${OUT}/PMASS.o    \
  ${OUT}/PTFUNC2.o  ${OUT}/RADCAT.o   ${OUT}/RADCAT-.o ${OUT}/RATRET.o   \
  ${OUT}/RADUTIL.o  ${OUT}/UPXS2.o    ${OUT}/XFALG.o   ${OUT}/ZLINDEP.o

@
\subsection{Layer10}
\subsubsection{Completed spad files}
\begin{verbatim}
complet.spad.pamphlet (ORDCOMP ORDCOMP2 ONECOMP ONECOMP2 INFINITY)
cra.spad.pamphlet (CRAPACK)
defaults.spad.pamphlet (REPSQ REPDB FLASORT)
drawpak.spad.pamphlet (DRAWCX)
free.spad.pamphlet (LMOPS FMONOID FGROUP FAMONC IFAMON FAMONOID FAGROUP)
fourier.spad.pamphlet (FCOMP FSERIES)
functions.spad.pamphlet (BFUNCT)
mesh.spad.pamphlet (MESH)
moebius.spad.pamphlet (MOEBIUS)
mring.spad.pamphlet (MRING MRF2)
opalg.spad.pamphlet (MODOP OP)
partperm.spad.pamphlet (PARTPERM)
pgrobner.spad.pamphlet (PGROEB)
plottool.spad.pamphlet (PLOTTOOL)
setorder.spad.pamphlet (UDPO UDVO)
sttaylor.spad.pamphlet (STTAYLOR)
tableau.spad.pamphlet (TABLBUMP TABLEAU)
viewpack.spad.pamphlet (VIEW)
\end{verbatim}

<<layer10>>=
LAYER10=\
  ${OUT}/A1AGG.o    ${OUT}/A1AGG-.o   ${OUT}/ARR2CAT.o  ${OUT}/ARR2CAT-.o \
  ${OUT}/ASP34.o    ${OUT}/BBTREE.o   ${OUT}/BFUNCT.o   ${OUT}/BPADIC.o   \
  ${OUT}/BTREE.o    ${OUT}/CRAPACK.o  ${OUT}/DEQUEUE.o  ${OUT}/DLIST.o    \
  ${OUT}/DRAWCX.o   ${OUT}/D01GBFA.o  ${OUT}/D02EJFA.o  ${OUT}/D03FAFA.o  \
  ${OUT}/DRAWPT.o   ${OUT}/FAMR.o     ${OUT}/FAMR-.o    ${OUT}/FLASORT.o  \
  ${OUT}/FLAGG2.o   ${OUT}/FGROUP.o   ${OUT}/FM.o       ${OUT}/FM1.o      \
  ${OUT}/FPC.o      ${OUT}/FPC-.o     ${OUT}/FMONOID.o  ${OUT}/INDE.o     \
  ${OUT}/IPADIC.o   ${OUT}/IROOT.o    ${OUT}/IR2.o      ${OUT}/LEXP.o     \
  ${OUT}/LIECAT.o   ${OUT}/LIECAT-.o  ${OUT}/LIST2.o    ${OUT}/LIST2MAP.o \
  ${OUT}/LMOPS.o    ${OUT}/LZSTAGG.o  ${OUT}/LZSTAGG-.o ${OUT}/MAGMA.o    \
  ${OUT}/MESH.o     ${OUT}/MOEBIUS.o  ${OUT}/MODFIELD.o ${OUT}/MODOP.o    \
  ${OUT}/MRING.o    ${OUT}/MTHING.o   ${OUT}/NCNTFRAC.o ${OUT}/NCODIV.o   \
  ${OUT}/NUMTUBE.o  ${OUT}/ODR.o      ${OUT}/OFMONOID.o ${OUT}/ONECOMP.o  \
  ${OUT}/ORDCOMP.o  ${OUT}/OREPCAT.o  ${OUT}/OREPCAT-.o ${OUT}/OWP.o      \
  ${OUT}/PADIC.o    ${OUT}/PATTERN2.o ${OUT}/PATLRES.o  ${OUT}/PARTPERM.o \
  ${OUT}/PBWLB.o    ${OUT}/PENDTREE.o ${OUT}/PGE.o      ${OUT}/PGROEB.o   \
  ${OUT}/PINTERP.o  ${OUT}/PLOTTOOL.o ${OUT}/PFR.o      ${OUT}/PMDOWN.o   \
  ${OUT}/PRTITION.o ${OUT}/PMINS.o    ${OUT}/PMLSAGG.o  ${OUT}/PMTOOLS.o  \
  ${OUT}/PSCAT.o    ${OUT}/PSCAT-.o   ${OUT}/QFORM.o    ${OUT}/QUEUE.o    \
  ${OUT}/SCACHE.o   ${OUT}/SEG.o      ${OUT}/SEG2.o     ${OUT}/SEXOF.o    \
  ${OUT}/STACK.o    ${OUT}/STTAYLOR.o ${OUT}/TABLBUMP.o ${OUT}/TABLEAU.o  \
  ${OUT}/TOPSP.o    ${OUT}/TRANFUN.o  ${OUT}/TRANFUN-.o ${OUT}/TUBE.o     \
  ${OUT}/UDPO.o     ${OUT}/UNISEG.o   ${OUT}/VIEW.o     ${OUT}/VSPACE.o   \
  ${OUT}/VSPACE-.o  ${OUT}/XPOLYC.o   ${OUT}/XPR.o

@
\subsection{Layer11}
\subsubsection{Completed spad files}
\begin{verbatim}
array1.spad.pamphlet (PRIMARR PRIMARR2 TUPLE IFARRAY FARRAY IARRAY1 ARRAY1
                      ARRAY12)
bags.spad.pamphlet (STACK ASTACK QUEUE DEQUEUE HEAP)
combinat.spad.pamphlet (COMBINAT)
ffx.spad.pamphlet (IRREDFFX)
galutil.spad.pamphlet (GALUTIL)
matstor.spad.pamphlet (MATSTOR)
ore.spad.pamphlet (OREPCAT APPLYORE AUTOMOR OREPCTO ORESUP OREUP)
plot3d.spad.pamphlet (PLOT3D)
prtition.spad.pamphlet (PRTITION SYMPOLY)
stream.spad.pamphlet (LZSTAGG CSTTOOLS STREAM STREAM1 STREAM2 STREAM3)
trigcat.spad.pamphlet (ELEMFUN AHYP ATRIG HYPCAT TRANFUN TRIGCAT PRIMCAT
                       LFCAT CFCAT SPFCAT)
xlpoly.spad.pamphlet (MAGMA LWORD LIECAT FLALG XEXPPKG LPOLY PBWLB XPBWPOLY
                      LEXP)
xpoly.spad.pamphlet (OFMONOID FMCAT FM1 XALG XFALG XPOLYC XPR XDPOLY XRPOLY
                     XPOLY)
\end{verbatim}

<<layer11>>=
LAYER11=\
  ${OUT}/APPLYORE.o ${OUT}/ARRAY1.o   ${OUT}/ARRAY12.o  ${OUT}/ARRAY2.o   \
  ${OUT}/ASTACK.o   ${OUT}/BTAGG.o    ${OUT}/BTAGG-.o   ${OUT}/COMBINAT.o \
  ${OUT}/CSTTOOLS.o ${OUT}/D01FCFA.o  ${OUT}/E04MBFA.o  ${OUT}/FARRAY.o   \
  ${OUT}/FLALG.o    ${OUT}/GALUTIL.o  ${OUT}/HEAP.o     ${OUT}/IARRAY1.o  \
  ${OUT}/IARRAY2.o  ${OUT}/IFARRAY.o  ${OUT}/INTCAT.o   ${OUT}/INTHEORY.o \
  ${OUT}/IRREDFFX.o ${OUT}/LFCAT.o    ${OUT}/LODOCAT.o  ${OUT}/LODOCAT-.o \
  ${OUT}/LWORD.o    ${OUT}/MATCAT.o   ${OUT}/MATCAT-.o  ${OUT}/MATSTOR.o  \
  ${OUT}/ORESUP.o   ${OUT}/OREPCTO.o  ${OUT}/OREUP.o    ${OUT}/PLOT3D.o   \
  ${OUT}/PR.o       ${OUT}/PREASSOC.o ${OUT}/PRIMARR2.o ${OUT}/REDORDER.o \
  ${OUT}/SRAGG.o    ${OUT}/SRAGG-.o   ${OUT}/STREAM.o   ${OUT}/SYMPOLY.o  \
  ${OUT}/TS.o       ${OUT}/TUPLE.o    ${OUT}/UPSCAT.o   ${OUT}/UPSCAT-.o  \
  ${OUT}/VECTCAT.o  ${OUT}/VECTCAT-.o ${OUT}/XDPOLY.o   ${OUT}/XEXPPKG.o  \
  ${OUT}/XF.o       ${OUT}/XF-.o      ${OUT}/XPBWPOLY.o ${OUT}/XPOLY.o    \
  ${OUT}/XRPOLY.o

@
\subsection{Layer12}
\subsubsection{Completed spad files}
\begin{verbatim}
\end{verbatim}

<<layer12>>=
LAYER12=\
 ${OUT}/BITS.o    ${OUT}/DIRPROD2.o ${OUT}/IMATRIX.o  ${OUT}/IVECTOR.o \
 ${OUT}/LPOLY.o   ${OUT}/LSMP.o     ${OUT}/LSMP1.o    ${OUT}/MATCAT2.o \
 ${OUT}/PTCAT.o   ${OUT}/STRICAT.o  ${OUT}/TRIMAT.o 

@
\subsection{Layer13}
\end{verbatim}
\subsubsection{Completed spad files}
\begin{verbatim}
carten.spad.pamphlet (GRMOD GRALG CARTEN CARTEN2)
catdef.spad.pamphlet (ABELGRP ABELMON ABELSG ALGEBRA BASTYPE BMODULE CABMON
                      CHARNZ CHARZ COMRING DIFRING DIFEXT DIVRING ENTIRER
                      EUCDOM FIELD FINITE FLINEXP GCDDOM GROUP INTDOM LMODULE
                      LINEXP MODULE MONOID OAGROUP OAMON OAMONS OASGP OCAMON
                      ORDFIN OINTDOM ORDMON ORDRING ORDSET PDRING PFECAT PID
                      RMODULE RING RNG SGROUP SETCAT STEP UFD VSPACE)
clifford.spad.pamphlet (QFORM CLIF)
clip.spad.pamphlet (CLIP)
coordsys.spad.pamphlet (COORDSYS)
dhmatrix.spad.pamphlet (DHMATRIX)
d02routine.spad.pamphlet (D02BBFA D02BHFA D02CJFA D02EJFA)
ffpoly2.spad.pamphlet (FFPOLY2)
irsn.spad.pamphlet (IRSN)
numode.spad.pamphlet (NUMODE)
numquad.spad.pamphlet (NUMQUAD)
perman.spad.pamphlet (GRAY PERMAN)
pseudolin.spad.pamphlet (PSEUDLIN)
rep2.spad.pamphlet (REP2)
sex.spad.pamphlet (SEXCAT SEXOF SEX)
solvedio.spad.pamphlet (DIOSP)
\end{verbatim}

<<layer13>>=
LAYER13=\
  ${OUT}/ASSOCEQ.o  ${OUT}/CARTEN.o   ${OUT}/CLIF.o     ${OUT}/CLIP.o     \
  ${OUT}/COORDSYS.o ${OUT}/DBASE.o    ${OUT}/DHMATRIX.o ${OUT}/DIOSP.o    \
  ${OUT}/DIRPCAT.o  ${OUT}/DIRPCAT-.o ${OUT}/D02BBFA.o  ${OUT}/D02BHFA.o  \
  ${OUT}/D02CJFA.o  ${OUT}/FAXF.o     ${OUT}/FAXF-.o    ${OUT}/FFPOLY2.o  \
  ${OUT}/FNLA.o     ${OUT}/GRAY.o     ${OUT}/HB.o       ${OUT}/IRSN.o     \
  ${OUT}/MCALCFN.o  ${OUT}/MHROWRED.o ${OUT}/NUMODE.o   ${OUT}/NUMQUAD.o  \
  ${OUT}/ODESYS.o   ${OUT}/ODETOOLS.o ${OUT}/ORDFUNS.o  ${OUT}/PERMAN.o   \
  ${OUT}/PFECAT.o   ${OUT}/PFECAT-.o  ${OUT}/POINT.o    ${OUT}/PSEUDLIN.o \
  ${OUT}/PTPACK.o   ${OUT}/REP2.o     ${OUT}/SETMN.o    ${OUT}/SEX.o      \
  ${OUT}/STRING.o   ${OUT}/SYMFUNC.o  ${OUT}/VECTOR2.o

@
\subsection{Layer14}
\subsubsection{Completed spad files}
\begin{verbatim}
allfact.spad.pamphlet (MRATFAC MPRFF MPCPF GENMFACT RFFACTOR SUPFRACF)
array2.spad.pamphlet (ARR2CAT IIARRAY2 IARRAY2 ARRAY2)
bezout.spad.pamphlet (BEZOUT)
boolean.spad.pamphlet (REF LOGIC BOOLEAN IBITS BITS)
brill.spad.pamphlet (BRILL)
cden.spad.pamphlet (ICDEN CDEN UPCDEN MCDEN)
contfrac.spad.pamphlet (CONTFRAC NCNTFRAC)
cycles.spad.pamphlet (CYCLES EVALCYC)
cyclotom.spad.pamphlet (CYCLOTOM)
ddfact.spad.pamphlet (DDFACT)
equation2.spad.pamphlet (EQ EQ2 FEVALAB)
error.spad.pamphlet (ERROR)
facutil.spad.pamphlet (FACUTIL PUSHVAR)
ffcat.spad.pamphlet (FPC XF FAXF DLP FFIELDC FFSLPE)
fff.spad.pamphlet (FFF)
ffhom.spad.pamphlet (FFHOM)
ffpoly.spad.pamphlet (FFPOLY)
fname.spad.pamphlet (FNCAT FNAME)
formula.spad.pamphlet (FORMULA FORMULA1)
fraction.spad.pamphlet (LO LA QFCAT QFCAT2 FRAC LPEFRAC FRAC2)
galfactu.spad.pamphlet (GALFACTU)
galpolyu.spad.pamphlet (GALPOLYU)
gb.spad.pamphlet (GB)
gbeuclid.spad.pamphlet (GBEUCLID)
gbintern.spad.pamphlet (GBINTERN)
gdirprod.spad.pamphlet (ORDFUNS ODP HDP SHDP)
geneez.spad.pamphlet (GENEEZ)
ghensel.spad.pamphlet (GHENSEL)
gpgcd.spad.pamphlet (GENPGCD)
gpol.spad.pamphlet (LAUPOL)
groebf.spad.pamphlet (GBF)
groebsol.spad.pamphlet (GROEBSOL)
intrf.spad.pamphlet (SUBRESP MONOTOOL INTHERTR INTTR INTRAT INTRF)
idecomp.spad.pamphlet (IDECOMP)
leadcdet.spad.pamphlet (LEADCDET)
lindep.spad.pamphlet (LINDEP ZLINDEP)
lingrob.spad.pamphlet (LGROBP)
listgcd.spad.pamphlet (HEUGCD)
matfuns.spad.pamphlet (IMATLIN MATCAT2 RMCAT2 IMATQF MATLIN)
mfinfact.spad.pamphlet (MFINFACT)
mlift.spad.pamphlet (MLIST)
moddfact.spad.pamphlet (MDDFACT)
modmon.spad.pamphlet (MODMON)
modring.spad.pamphlet (MODRING EMR MODFIELD)
mts.spad.pamphlet (SMTS TS)
multsqfr.spad.pamphlet (MULTSQFR)
newpoint.spad.pamphlet (PTCAT POINT COMPPROP SUBSPACE PTPACK PTFUNC2)
numtheor.spad.pamphlet (INTHEORY PNTHEORY)
npcoef.spad.pamphlet (NPCOEF)
omdev.spad.pamphlet (OMENC OMDEV OMCONN OMPKG)
omserver.spad.pamphlet (OMSERVER)
padic.spad.pamphlet (PADICCT IPADIC PADIC BPADIC PADICRC PADICRAT BPADICRT)
pdecomp.spad.pamphlet (PCOMP PDECOMP)
pfbr.spad.pamphlet (PFBRU PFBR)
pfr.spad.pamphlet (PFR PFRPAC)
pgcd.spad.pamphlet (PGCD)
pinterp.spad.pamphlet (PINTERPA PINTERP)
pleqn.spad.pamphlet (PLEQN)
poltopol.spad.pamphlet (MPC2 MPC3 POLTOPOL)
poly.spad.pamphlet (FM PR SUP SUP2 UP UP2 POLY2UP UPSQFREE PSQFR UPMP)
polycat.spad.pamphlet (AMR FAMR POLYCAT POLYLIFT UPOLYC UPOLYC2 COMMUPC)
prs.spad.pamphlet (PRS)
radix.spad.pamphlet (RADIX BINARY DECIMAL HEXADEC RADUTIL)
ratfact.spad.pamphlet (RATFACT)
rderf.spad.pamphlet (RDETR)
realzero.spad.pamphlet (REAL0)
real0q.spad.pamphlet (REAL0Q)
resring.spad.pamphlet (RESRING)
rf.spad.pamphlet (POLYCATQ RF)
solvefor.spad.pamphlet (SOLVEFOR)
solvelin.spad.pamphlet (LSMP LSMP1 LSPP)
smith.spad.pamphlet (SMITH)
sttf.spad.pamphlet (STTF STTFNC)
sturm.spad.pamphlet (SHP)
sum.spad.pamphlet (ISUMP GOSPER SUMRF)
tex.spad.pamphlet (TEX)
tree.spad.pamphlet (TREE BTCAT BTREE BSTREE BTOURN BBTREE PENDTREE)
twofact.spad.pamphlet (NORMRETR TWOFACT)
unifact.spad.pamphlet (UNIFACT)
updecomp.spad.pamphlet (UPDECOMP)
updivp.spad.pamphlet (UPDIVP)
viewDef.spad.pamphlet (VIEWDEF)
vector.spad.pamphlet (VECTCAT IVECTOR VECTOR VECTOR2 DIRPCAT DIRPROD DIRPROD2)
view2D.spad.pamphlet (GRIMAGE VIEW2D)
void.spad.pamphlet (VOID EXIT)
weier.spad.pamphlet (WEIER)
wtpol.spad.pamphlet (WP OWP)
\end{verbatim}

<<layer14>>=
LAYER14=\
  ${OUT}/ASP1.o     ${OUT}/ASP10.o    ${OUT}/ASP24.o    ${OUT}/ASP4.o     \
  ${OUT}/ASP50.o    ${OUT}/ASP6.o     ${OUT}/ASP73.o    ${OUT}/BALFACT.o  \
  ${OUT}/BEZOUT.o   ${OUT}/BINARY.o   ${OUT}/BINFILE.o  ${OUT}/BOUNDZRO.o \
  ${OUT}/BPADICRT.o ${OUT}/BRILL.o    ${OUT}/CDEN.o     ${OUT}/CHVAR.o    \
  ${OUT}/COMMUPC.o  ${OUT}/CONTFRAC.o ${OUT}/CVMP.o     ${OUT}/CYCLOTOM.o \
  ${OUT}/CYCLES.o   ${OUT}/DDFACT.o   ${OUT}/DECIMAL.o  ${OUT}/DIOPS.o    \
  ${OUT}/DIOPS-.o   ${OUT}/DIRPROD.o  ${OUT}/DISPLAY.o  ${OUT}/DMP.o      \
  ${OUT}/DPMO.o     ${OUT}/DPOLCAT.o  ${OUT}/DPOLCAT-.o ${OUT}/D01AJFA.o  \
  ${OUT}/D01AKFA.o  ${OUT}/D01ALFA.o  ${OUT}/D01AMFA.o  ${OUT}/D01APFA.o  \
  ${OUT}/D01AQFA.o  ${OUT}/EMR.o      ${OUT}/EQ.o       ${OUT}/ERROR.o    \
  ${OUT}/EVALCYC.o  ${OUT}/E04DGFA.o  ${OUT}/E04FDFA.o  ${OUT}/E04GCFA.o  \
  ${OUT}/E04JAFA.o  ${OUT}/FACUTIL.o  ${OUT}/FF.o       ${OUT}/FFCG.o     \
  ${OUT}/FFCGX.o    ${OUT}/FFHOM.o    ${OUT}/FFNB.o     ${OUT}/FFNBX.o    \
  ${OUT}/FFPOLY.o   ${OUT}/FFX.o      ${OUT}/FFSLPE.o   ${OUT}/FGLMICPK.o \
  ${OUT}/FILE.o     ${OUT}/FINAALG.o  ${OUT}/FINAALG-.o ${OUT}/FINRALG.o  \
  ${OUT}/FINRALG-.o ${OUT}/FFF.o      ${OUT}/FLOATRP.o  ${OUT}/FNAME.o    \
  ${OUT}/FOP.o      ${OUT}/FORMULA.o  ${OUT}/FORT.o     ${OUT}/FRAC.o     \
  ${OUT}/FTEM.o     ${OUT}/GENEEZ.o   ${OUT}/GENMFACT.o ${OUT}/GENPGCD.o  \
  ${OUT}/GALFACTU.o ${OUT}/GALPOLYU.o ${OUT}/GB.o       ${OUT}/GBEUCLID.o \
  ${OUT}/GBF.o      ${OUT}/GBINTERN.o ${OUT}/GHENSEL.o  ${OUT}/GMODPOL.o  \
  ${OUT}/GOSPER.o   ${OUT}/GRIMAGE.o  ${OUT}/GROEBSOL.o ${OUT}/HDMP.o     \
  ${OUT}/HDP.o      ${OUT}/HEXADEC.o  ${OUT}/HEUGCD.o   ${OUT}/IBPTOOLS.o \
  ${OUT}/IFF.o      ${OUT}/IBITS.o    ${OUT}/ICARD.o    ${OUT}/ICDEN.o    \
  ${OUT}/IDECOMP.o  ${OUT}/IIARRAY2.o ${OUT}/IMATLIN.o  ${OUT}/IMATQF.o   \
  ${OUT}/INMODGCD.o ${OUT}/INNMFACT.o ${OUT}/INPSIGN.o  ${OUT}/INTHERTR.o \
  ${OUT}/INTRAT.o   ${OUT}/INTRF.o    ${OUT}/INTSLPE.o  ${OUT}/INTTR.o    \
  ${OUT}/ISUMP.o    ${OUT}/LAUPOL.o   ${OUT}/LEADCDET.o ${OUT}/LGROBP.o   \
  ${OUT}/LIMITRF.o  ${OUT}/LINDEP.o   ${OUT}/LO.o       ${OUT}/LPEFRAC.o  \
  ${OUT}/LSPP.o     ${OUT}/MATLIN.o   ${OUT}/MCDEN.o    ${OUT}/MDDFACT.o  \
  ${OUT}/MFINFACT.o ${OUT}/MFLOAT.o   ${OUT}/MINT.o     ${OUT}/MLIFT.o    \
  ${OUT}/MMAP.o     ${OUT}/MODMON.o   ${OUT}/MONOTOOL.o ${OUT}/MPCPF.o    \
  ${OUT}/MPC2.o     ${OUT}/MPC3.o     ${OUT}/MPOLY.o    ${OUT}/MPRFF.o    \
  ${OUT}/MRATFAC.o  ${OUT}/MULTSQFR.o ${OUT}/NORMRETR.o ${OUT}/NPCOEF.o   \
  ${OUT}/NSUP.o     ${OUT}/NTPOLFN.o  ${OUT}/ODP.o      ${OUT}/ODEPRIM.o  \
  ${OUT}/ODEPRRIC.o ${OUT}/OMPKG.o    ${OUT}/OMSERVER.o ${OUT}/PADEPAC.o  \
  ${OUT}/PADICRAT.o ${OUT}/PADICRC.o  ${OUT}/PCOMP.o    ${OUT}/PDECOMP.o  \
  ${OUT}/PF.o       ${OUT}/PFBR.o     ${OUT}/PFBRU.o    ${OUT}/PFOTOOLS.o \
  ${OUT}/PFRPAC.o   ${OUT}/PGCD.o     ${OUT}/PINTERPA.o ${OUT}/PLEQN.o    \
  ${OUT}/PMPLCAT.o  ${OUT}/PMQFCAT.o  ${OUT}/PNTHEORY.o ${OUT}/POLUTIL.o  \
  ${OUT}/POLTOPOL.o ${OUT}/POLYCATQ.o ${OUT}/POLYLIFT.o ${OUT}/POLYROOT.o \
  ${OUT}/POLY2.o    ${OUT}/POLY2UP.o  ${OUT}/PRS.o      ${OUT}/PSQFR.o    \
  ${OUT}/PUSHVAR.o  ${OUT}/QALGSET.o  ${OUT}/QFCAT2.o   ${OUT}/RADIX.o    \
  ${OUT}/RATFACT.o  ${OUT}/RCFIELD.o  ${OUT}/RCFIELD-.o ${OUT}/RDETR.o    \
  ${OUT}/RDETRS.o   ${OUT}/REAL0.o    ${OUT}/REAL0Q.o   ${OUT}/REALSOLV.o \
  ${OUT}/RESRING.o  ${OUT}/RETSOL.o   ${OUT}/RF.o       ${OUT}/RFFACTOR.o \
  ${OUT}/RMATCAT.o  ${OUT}/RMATCAT-.o ${OUT}/RRCC.o     ${OUT}/RRCC-.o    \
  ${OUT}/SCPKG.o    ${OUT}/SHDP.o     ${OUT}/SHP.o      ${OUT}/SIGNRF.o   \
  ${OUT}/SMITH.o    ${OUT}/SMP.o      ${OUT}/SMTS.o     ${OUT}/SOLVEFOR.o \
  ${OUT}/SPLTREE.o  ${OUT}/STINPROD.o ${OUT}/STTFNC.o   ${OUT}/SUBRESP.o  \
  ${OUT}/SUMRF.o    ${OUT}/SUP.o      ${OUT}/SUPFRACF.o ${OUT}/TANEXP.o   \
  ${OUT}/TEMUTL.o   ${OUT}/TEX.o      ${OUT}/TEXTFILE.o ${OUT}/TREE.o     \
  ${OUT}/TWOFACT.o  ${OUT}/UNIFACT.o  ${OUT}/UP.o       ${OUT}/UPCDEN.o   \
  ${OUT}/UPDECOMP.o ${OUT}/UPDIVP.o   ${OUT}/UPMP.o     ${OUT}/UPOLYC2.o  \
  ${OUT}/UPXSCAT.o  ${OUT}/UPSQFREE.o ${OUT}/VIEWDEF.o  ${OUT}/VIEW2D.o   \
  ${OUT}/VOID.o     ${OUT}/WEIER.o    ${OUT}/WP.o

@
\subsection{Layer15}
\subsubsection{Completed spad files}
\begin{verbatim}
dpolcat.spad.pamphlet (DVARCAT ODVAR SDVAR DPOLCAT DSMP ODPOL SDPOL)
matcat.spad.pamphlet (MATCAT RMATCAT SMATCAT)
plot.spad.pamphlet (PLOT PLOT1)
\end{verbatim}

<<layer15>>=
LAYER15=\
  ${OUT}/DIAGG.o   ${OUT}/DIAGG-.o   ${OUT}/DSMP.o     ${OUT}/EXPUPXS.o \
  ${OUT}/FRAMALG.o ${OUT}/FRAMALG-.o ${OUT}/MDAGG.o    ${OUT}/ODPOL.o   \
  ${OUT}/PLOT.o    ${OUT}/RMCAT2.o   ${OUT}/ROIRC.o    ${OUT}/SDPOL.o   \
  ${OUT}/SMATCAT.o ${OUT}/SMATCAT-.o ${OUT}/TUBETOOL.o ${OUT}/UPXSCCA.o \
  ${OUT}/UPXSCCA-.o

@
\subsection{Layer16}
\subsubsection{Completed spad files}
\begin{verbatim}
efupxs.spad.pamphlet (EFUPXS)
lodop.spad.pamphlet (MLO OMLO NCODIV ODR DPMO DPMM)
space.spad.pamphlet (SPACEC SPACE3 TOPSP)
\end{verbatim}

<<layer16>>=
LAYER16=\
  ${OUT}/DPMM.o     ${OUT}/EFUPXS.o  ${OUT}/FFINTBAS.o ${OUT}/FRIDEAL.o  \
  ${OUT}/FRIDEAL2.o ${OUT}/FRMOD.o   ${OUT}/FSAGG.o    ${OUT}/FSAGG-.o   \
  ${OUT}/IBATOOL.o  ${OUT}/INTFACT.o ${OUT}/KDAGG.o    ${OUT}/KDAGG-.o   \
  ${OUT}/MSETAGG.o  ${OUT}/MONOGEN.o ${OUT}/MONOGEN-.o ${OUT}/NFINTBAS.o \
  ${OUT}/SPACE3.o 

@
\subsection{Layer17}
\subsubsection{Completed spad files}
\begin{verbatim}
algext.spad.pamphlet (SAE)
aggcat.spad.pamphlet (AGG HOAGG CLAGG BGAGG SKAGG QUAGG DQAGG PRQAGG DIOPS
                      DIAGG MDAGG SETAGG FSAGG MSETAGG OMSAGG KDAGG ELTAB
                      ELTAGG ISAGG TBAGG RCAGG BRAGG DLAGG URAGG STAGG LNAGG
                      FLAGG A1AGG ELAGG LSAGG ALAGG SRAGG BTAGG ITAGG) 
aggcat2.spad.pamphlet (FLAGG2 FSAGG2)
galfact.spad.pamphlet (GALFACT)
intfact.spad.pamphlet (PRIMES IROOT INTFACT)
padiclib.spad.pamphlet (IBPTOOLS IBACHIN PWFFINTB)
perm.spad.pamphlet (PERMCAT PERM)
permgrps.spad.pamphlet (PERMGRP PGE)
random.spad.pamphlet (RANDSRC RDIST INTBIT RIDIST RFDIST)
sgcf.spad.pamphlet (SGCF)
string.spad.pamphlet (CHAR CCLASS ISTRING STRING STRICAT)
view3D.spad.pamphlet (VIEW3D)
\end{verbatim}

<<layer17>>=
LAYER17=\
  ${OUT}/CCLASS.o  ${OUT}/FSAGG2.o  ${OUT}/GALFACT.o ${OUT}/IALGFACT.o \
  ${OUT}/IBACHIN.o ${OUT}/NORMMA.o  ${OUT}/ODERED.o  ${OUT}/OMSAGG.o   \
  ${OUT}/PERM.o    ${OUT}/PERMGRP.o ${OUT}/PRIMES.o  ${OUT}/PWFFINTB.o \
  ${OUT}/RDIST.o   ${OUT}/SAE.o     ${OUT}/SAEFACT.o ${OUT}/SAERFFC.o  \
  ${OUT}/SGCF.o    ${OUT}/TBAGG.o   ${OUT}/TBAGG-.o  ${OUT}/VIEW3D.o 

@
\subsection{Layer18}
\subsubsection{Completed spad files}
\begin{verbatim}
d01Package.spad.pamphlet (INTPACK)
list.spad.pamphlet (ILIST LIST LIST2 LIST3 LIST2MAP ALIST)
pf.spad.pamphlet (IPF PF)
table.spad.pamphlet (HASHTBL INTABL TABLE EQTBL STRTBL GSTBL STBL)
\end{verbatim}

<<layer18>>=
LAYER18=\
  ${OUT}/ALIST.o   ${OUT}/EQTBL.o   ${OUT}/GSTBL.o   ${OUT}/HASHTBL.o \
  ${OUT}/INTABL.o  ${OUT}/INTFTBL.o ${OUT}/INTPACK.o ${OUT}/IPF.o     \
  ${OUT}/KAFILE.o  ${OUT}/PATRES.o  ${OUT}/STBL.o    ${OUT}/STRTBL.o  \
  ${OUT}/TABLE.o   ${OUT}/TBCMPPK.o 

@
\subsection{Layer19}
\subsubsection{Completed spad files}
\begin{verbatim}
acplot.spad.pamphlet (REALSOLV ACPLOT)
alql.spad.pamphlet (DLIST ICARD DBASE QEQUAT MTHING OPQUERY)
any.spad.pamphlet (NONE NONE1 ANY ANY1)
c02.spad.pamphlet (NAGC02)
c05.spad.pamphlet (NAGC05)
c06.spad.pamphlet (NAGC06)
d01routine.spad.pamphlet (D01AJFA D01AKFA D01AMFA D01APFA D01AQFA D01ALFA 
                          D01ANFA D01ASFA D01GBFA D01FCFA)
d02Package.spad.pamphlet (ODEPACK)
d03agents.spad.pamphlet (D03AGNT)
d03Package.spad.pamphlet (PDEPACK)
drawopt.spad.pamphlet (DROPT DROPT1 DROPT0)
eigen.spad.pamphlet (EP CHARPOL)
e01.spad.pamphlet (NAGE01)
e02.spad.pamphlet (NAGE02)
e04.spad.pamphlet (NAGE04)
e04agents.spad.pamphlet (E04AGNT)
e04Package.spad.pamphlet (OPTPACK)
ffcg.spad.pamphlet (FFCGP FFCGX FFCG)
ffp.spad.pamphlet (FFP FFX IFF FF)
files.spad.pamphlet (FILECAT FILE TEXTFILE BINFILE KAFILE LIB)
float.spad.pamphlet (FLOAT)
fnla.spad.pamphlet (OSI COMM HB FNLA)
fortpak.spad.pamphlet (FCPAK1 NAGSP FORT FOP TEMUTL MCALCFN)
forttyp.spad.pamphlet (FST FT SYMTAB SYMS)
fparfrac.spad.pamphlet (FPARFRAC)
fr.spad.pamphlet (FR FRUTIL FR2)
f07.spad.pamphlet (NAGF07)
gdpoly.spad.pamphlet (GDMP DMP HDMP)
ideal.spad.pamphlet (IDEAL)
intaux.spad.pamphlet (IR IR2)
intclos.spad.pamphlet (TRIMAT IBATOOL FFINTBAS WFFINTBS NFINTBAS)
integer.spad.pamphlet (INTSLPE INT NNI PI ROMAN)
kl.spad.pamphlet (CACHSET SCACHE MKCHSET KERNEL KERNEL2)
lmdict.spad.pamphlet (LMDICT)
matrix.spad.pamphlet (IMATRIX MATRIX RMATRIX SQMATRIX)
misc.spad.pamphlet (SAOS)
mkfunc.spad.pamphlet (INFORM INFORM1 MKFUNC MKUCFUNC MKBCFUNC MKFLCFN)
modgcd.spad.pamphlet (INMODGCD)
mset.spad.pamphlet (MSET)
multpoly.spad.pamphlet (POLY POLY2 MPOLY SMP INDE)
naalgc.spad.pamphlet (MONAD MONADWU NARNG NASRING NAALG FINAALG FRNAALG)
newdata.spad.pamphlet (IPRNTPK TBCMPPK SPLNODE SPLTREE)
omerror.spad.pamphlet (OMERRK OMERR)
op.spad.pamphlet (BOP BOP1 COMMONOP)
out.spad.pamphlet (OUT SPECOUT DISPLAY)
outform.spad.pamphlet (NUMFMT OUTFORM)
patmatch1.spad.pamphlet (PATRES PATRES2 PATLRES PATMAB FPATMAB PMSYM PMKERNEL
                         PMDOWN PMTOOLS PMLSAGG)
pattern.spad.pamphlet (PATTERN PATTERN1 PATTERN2 PATAB)
pscat.spad.pamphlet (PSCAT UPSCAT UTSCAT ULSCAT UPXSCAT MTSCAT)
qalgset.spad.pamphlet (QALGSET QALGSET2)
reclos.spad.pamphlet (POLUTIL RRCC RCFIELD ROIRC RECLOS)
rep1.spad.pamphlet (REP1)
routines.spad.pamphlet (ROUTINE ATTRBUT)
s.spad.pamphlet (NAGS)
seg.spad.pamphlet (SEGCAT SEGXCAT SEG SEG2 SEGBIND SETBIND2 UNISEG UNISEG2
                   INCRMAPS)
sets.spad.pamphlet (SET)
sups.spad.pamphlet (ISUPS)
syssolp.spad.pamphlet (SYSSOLP)
variable.spad.pamphlet (OVAR VARIABLE RULECOLD FUNCTION ANON)
\end{verbatim}

<<layer19>>=
LAYER19=\
  ${OUT}/ACF.o      ${OUT}/ACF-.o     ${OUT}/ACPLOT.o   ${OUT}/ANTISYM.o \
  ${OUT}/ANY.o      ${OUT}/ASP12.o    ${OUT}/ASP27.o    ${OUT}/ASP28.o   \
  ${OUT}/ASP33.o    ${OUT}/ASP49.o    ${OUT}/ASP55.o    ${OUT}/ASP7.o    \
  ${OUT}/ASP78.o    ${OUT}/ASP8.o     ${OUT}/ASP9.o     ${OUT}/ATTRBUT.o \
  ${OUT}/BOP.o      ${OUT}/BOP1.o     ${OUT}/COMMONOP.o ${OUT}/COMPCAT.o \
  ${OUT}/COMPCAT-.o ${OUT}/DRAW.o     ${OUT}/DRAWCFUN.o ${OUT}/DROPT.o   \
  ${OUT}/DROPT0.o   ${OUT}/D01ANFA.o  ${OUT}/D01ASFA.o  ${OUT}/D03AGNT.o \
  ${OUT}/EP.o       ${OUT}/E04AGNT.o  ${OUT}/FCPAK1.o   ${OUT}/FEXPR.o   \
  ${OUT}/FFCAT.o    ${OUT}/FFCAT-.o   ${OUT}/FFCGP.o    ${OUT}/FFNBP.o   \
  ${OUT}/FFP.o      ${OUT}/FLOAT.o    ${OUT}/FPARFRAC.o ${OUT}/FR.o      \
  ${OUT}/FRNAALG.o  ${OUT}/FRNAALG-.o ${OUT}/FS.o       ${OUT}/FS-.o     \
  ${OUT}/FST.o      ${OUT}/FUNCTION.o ${OUT}/GDMP.o     ${OUT}/HACKPI.o  \
  ${OUT}/IDEAL.o    ${OUT}/INFORM.o   ${OUT}/INFORM1.o  ${OUT}/IPRNTPK.o \
  ${OUT}/IR.o       ${OUT}/ISUPS.o    ${OUT}/KERNEL.o   ${OUT}/LIB.o     \
  ${OUT}/LMDICT.o   ${OUT}/LODOOPS.o  ${OUT}/MATRIX.o   ${OUT}/MKFLCFN.o \
  ${OUT}/MSET.o     ${OUT}/M3D.o      ${OUT}/NAGC02.o   ${OUT}/NAGC05.o  \
  ${OUT}/NAGC06.o   ${OUT}/NAGD03.o   ${OUT}/NAGE01.o   ${OUT}/NAGE02.o  \
  ${OUT}/NAGE04.o   ${OUT}/NAGF07.o   ${OUT}/NAGS.o     ${OUT}/NAGSP.o   \
  ${OUT}/NREP.o     ${OUT}/NUMFMT.o   ${OUT}/OC.o       ${OUT}/OC-.o     \
  ${OUT}/ODEPACK.o  ${OUT}/ODERAT.o   ${OUT}/OMERR.o    ${OUT}/OMERRK.o  \
  ${OUT}/OPTPACK.o  ${OUT}/OSI.o      ${OUT}/PATTERN.o  ${OUT}/OVAR.o    \
  ${OUT}/PMKERNEL.o ${OUT}/PMSYM.o    ${OUT}/POLY.o     ${OUT}/PRIMELT.o \
  ${OUT}/QALGSET2.o ${OUT}/QEQUAT.o   ${OUT}/RECLOS.o   ${OUT}/REP1.o    \
  ${OUT}/RESULT.o   ${OUT}/QUATCAT.o  ${OUT}/QUATCAT-.o ${OUT}/RFFACT.o  \
  ${OUT}/RMATRIX.o  ${OUT}/ROMAN.o    ${OUT}/ROUTINE.o  ${OUT}/RPOLCAT.o \
  ${OUT}/RPOLCAT-.o ${OUT}/RULECOLD.o ${OUT}/SAOS.o     ${OUT}/SEGBIND.o \
  ${OUT}/SET.o      ${OUT}/SPECOUT.o  ${OUT}/SQMATRIX.o ${OUT}/SWITCH.o  \
  ${OUT}/SYMS.o     ${OUT}/SYMTAB.o   ${OUT}/SYSSOLP.o  ${OUT}/UTSCAT.o  \
  ${OUT}/UTSCAT-.o  ${OUT}/VARIABLE.o ${OUT}/WFFINTBS.o 


@
\subsection{Layer20}
\subsubsection{Completed spad files}
\begin{verbatim}
algfact.spad.pamphlet (IALGFACT SAEFACT RFFACT SAERFFC ALGFACT)
algfunc.spad.pamphlet (ACF ACFS AF)
asp.spad.pamphlet (ASP1 ASP10 ASP12 ASP19 ASP20 ASP24 ASP27 ASP28 ASP29 ASP30
                   ASP31 ASP33 ASP34 ASP35 ASP4 ASP41 ASP42 ASP49 ASP50 ASP55
                   ASP6 ASP7 ASP73 ASP74 ASP77 ASP78 ASP8 ASP80 ASP9)
constant.spad.pamphlet (IAN AN)
cmplxrt.spad.pamphlet (CMPLXRT)
crfp.spad.pamphlet (CRFP)
curve.spad.pamphlet (FFCAT MMAP FFCAT2 CHAVAR RDFF ALGFF)
derham.spad.pamphlet (LALG EAB ANTISYM DERHAM)
draw.spad.pamphlet (DRAWCFUN DRAW DRAWCURV DRAWPT)
d01.spad.pamphlet (NAGD01)
efstruc.spad.pamphlet (SYMFUNC TANEXP EFSTRUC ITRIGMNP TRIGMNIP CTRIGMNP)
elemntry.spad.pamphlet (EF)
elfuts.spad.pamphlet (ELFUTS)
expexpan.spad.pamphlet (EXPUPXS UPXSSING EXPEXPAN)
exprode.spad.pamphlet (EXPRODE)
e04routine.spad.pamphlet (E04DFGA E04FDFA E04GCFA E04JAFA E04MBFA E04NAFA 
                          E04UCFA)
f01.spad.pamphlet (NAGF01)
f02.spad.pamphlet (NAGF02)
f04.spad.pamphlet (NAGF04)
fortmac.spad.pamphlet (MINT MFLOAT MCMPLX)
fortran.spad.pamphlet (RESULT FC FORTRAN M3D SFORT SWITCH FTEM FEXPR)
fspace.spad.pamphlet (ES ES1 ES2 FS FS2)
fs2ups.spad.pamphlet (FS2UPS)
funcpkgs.spad.pamphlet (FSUPFACT)
gaussfac.spad.pamphlet (GAUSSFAC)
gaussian.spad.pamphlet (COMPCAT COMPLPAT CPMATCH COMPLEX COMPLEX2 COMPFACT
                        CINTSLPE)
generic.spad.pamphlet (GCNAALG CVMP)
genufact.spad.pamphlet (GENUFACT)
genups.spad.pamphlet (GENUPS)
infprod.spad.pamphlet (STINPROD INFPROD0 INPRODPF INPRODFF)
intaf.spad.pamphlet (INTG0 INTPAF INTAF)
intalg.spad.pamphlet (DBLRESP INTHERAL INTALG)
intef.spad.pamphlet (INTEF)
intpm.spad.pamphlet (INTPM)
kovacic.spad.pamphlet (KOVACIC)
lie.spad.pamphlet (LIE JORDAN LSQM)
liouv.spad.pamphlet (LF)
lodof.spad.pamphlet (SETMN PREASSOC ASSOCEQ LODOF)
manip.spad.pamphlet (FACTFUNC POLYROOT ALGMANIP SIMPAN TRMANIP)
multfact.spad.pamphlet (INNMFACT MULTFACT ALGMFACT)
naalg.spad.pamphlet (ALGSC SCPKG ALGPKG FRNAAF2)
newpoly.spad.pamphlet (NSUP NSUP2 RPOLCAT NSMP)
nlinsol.spad.pamphlet (RETSOL NLINSOL)
numeigen.spad.pamphlet (IFSPRMELT.oNEP NREP NCEP)
numeric.spad.pamphlet (NUMERIC DRAWHACK)
numsolve.spad.pamphlet (INFSP FLOATRP FLOATCP)
oct.spad.pamphlet (OC OCT OCTCT2)
odealg.spad.pamphlet (ODESYS ODERED ODEPAL)
openmath.spad.pamphlet (OMEXPR)
pade.spad.pamphlet (PADEPAC PADE)
patmatch2.spad.pamphlet (PMINS PMQFCAT PMPLCT PMFS PATMATCH)
pfo.spad.pamphlet (FORDER RDIV PFOTOOLS PFOQ FSRED PFO)
polset.spad.pamphlet (PSETCAT GPOLSET)
primelt.spad.pamphlet (PRIMELT FSPRMELT)
quat.spad.pamphlet (QUATCAT QUAT QUATCT2)
rdeef.spad.pamphlet (INTTOOLS RDEEF)
rdesys.spad.pamphlet (RDETRS RDEEFS)
riccati.spad.pamphlet (ODEPRRIC ODERTRIC)
rule.spad.pamphlet (RULE APPRULE RULESET)
sign.spad.pamphlet (TOOLSIGN INPSIGN SIGNRF LIMITRF)
special.spad.pamphlet (DFSFUN ORTHPOL NTPOLFN)
suts.spad.pamphlet (SUTS)
tools.spad.pamphlet (ESTOOLS ESTOOLS1 ESTOOLS2)
triset.spad.pamphlet (TSETCAT GTSET PSETPK)
tube.spad.pamphlet (TUBE TUBETOOL EXPRTUBE NUMTUBE)
utsode.spad.pamphlet (UTSODE)
\end{verbatim}

<<layer20>>=
LAYER20=\
  ${OUT}/ACFS.o     ${OUT}/ACFS-.o    ${OUT}/AF.o       ${OUT}/ALGFACT.o  \
  ${OUT}/ALGFF.o    ${OUT}/ALGMANIP.o ${OUT}/ALGMFACT.o ${OUT}/ALGPKG.o   \
  ${OUT}/ALGSC.o    ${OUT}/AN.o       ${OUT}/APPRULE.o  ${OUT}/ASP19.o    \
  ${OUT}/ASP20.o    ${OUT}/ASP30.o    ${OUT}/ASP31.o    ${OUT}/ASP35.o    \
  ${OUT}/ASP41.o    ${OUT}/ASP42.o    ${OUT}/ASP74.o    ${OUT}/ASP77.o    \
  ${OUT}/ASP80.o    ${OUT}/CINTSLPE.o ${OUT}/COMPFACT.o ${OUT}/COMPLEX.o  \
  ${OUT}/COMPLPAT.o ${OUT}/CMPLXRT.o  ${OUT}/CPMATCH.o  ${OUT}/CRFP.o     \
  ${OUT}/CTRIGMNP.o ${OUT}/D01WGTS.o  ${OUT}/D02AGNT.o  ${OUT}/D03EEFA.o  \
  ${OUT}/DBLRESP.o  ${OUT}/DERHAM.o   ${OUT}/DFSFUN.o   ${OUT}/DRAWCURV.o \
  ${OUT}/E04NAFA.o  ${OUT}/E04UCFA.o  ${OUT}/EF.o       ${OUT}/EFSTRUC.o  \
  ${OUT}/ELFUTS.o   ${OUT}/ESTOOLS.o  ${OUT}/EXPEXPAN.o ${OUT}/EXPRODE.o  \
  ${OUT}/EXPRTUBE.o ${OUT}/EXPR2.o    ${OUT}/FC.o       ${OUT}/FDIVCAT.o  \
  ${OUT}/FDIVCAT-.o ${OUT}/FDIV2.o    ${OUT}/FFCAT2.o   ${OUT}/FLOATCP.o  \
  ${OUT}/FORDER.o   ${OUT}/FORTRAN.o  ${OUT}/FSRED.o    ${OUT}/FSUPFACT.o \
  ${OUT}/FRNAAF2.o  ${OUT}/FSPECF.o   ${OUT}/FS2.o      ${OUT}/FS2UPS.o   \
  ${OUT}/GAUSSFAC.o ${OUT}/GCNAALG.o  ${OUT}/GENUFACT.o ${OUT}/GENUPS.o   \
  ${OUT}/GTSET.o    ${OUT}/GPOLSET.o  ${OUT}/IAN.o      ${OUT}/INEP.o     \
  ${OUT}/INFPROD0.o ${OUT}/INFSP.o    ${OUT}/INPRODFF.o ${OUT}/INPRODPF.o \
  ${OUT}/INTAF.o    ${OUT}/INTALG.o   ${OUT}/INTEF.o    ${OUT}/INTG0.o    \
  ${OUT}/INTHERAL.o ${OUT}/INTPAF.o   ${OUT}/INTPM.o    ${OUT}/INTTOOLS.o \
  ${OUT}/ITRIGMNP.o ${OUT}/JORDAN.o   ${OUT}/KOVACIC.o  ${OUT}/LF.o       \
  ${OUT}/LIE.o      ${OUT}/LODOF.o    ${OUT}/LSQM.o     ${OUT}/OMEXPR.o   \
  ${OUT}/MCMPLX.o   ${OUT}/MULTFACT.o ${OUT}/NAGD01.o   ${OUT}/NAGD02.o   \
  ${OUT}/NAGF01.o   ${OUT}/NAGF02.o   ${OUT}/NAGF04.o   ${OUT}/NCEP.o     \
  ${OUT}/NLINSOL.o  ${OUT}/NSMP.o     ${OUT}/NUMERIC.o  ${OUT}/OCT.o      \
  ${OUT}/OCTCT2.o   ${OUT}/ODEPAL.o   ${OUT}/ODERTRIC.o ${OUT}/PADE.o     \
  ${OUT}/PAN2EXPR.o ${OUT}/PDEPACK.o  ${OUT}/PFO.o      ${OUT}/PFOQ.o     \
  ${OUT}/PICOERCE.o ${OUT}/PMASSFS.o  ${OUT}/PMFS.o     ${OUT}/PMPREDFS.o \
  ${OUT}/PSETPK.o   ${OUT}/QUAT.o     ${OUT}/QUATCT2.o  ${OUT}/RADFF.o    \
  ${OUT}/RDEEF.o    ${OUT}/RDEEFS.o   ${OUT}/RDIV.o     ${OUT}/RSETCAT.o  \
  ${OUT}/RSETCAT-.o ${OUT}/RULE.o     ${OUT}/RULESET.o  ${OUT}/SIMPAN.o   \
  ${OUT}/SFORT.o    ${OUT}/SOLVESER.o ${OUT}/SUMFS.o    ${OUT}/SUTS.o     \
  ${OUT}/TOOLSIGN.o ${OUT}/TRIGMNIP.o ${OUT}/TRMANIP.o  ${OUT}/ULSCCAT.o  \
  ${OUT}/ULSCCAT-.o ${OUT}/UPXSSING.o ${OUT}/UTSODE.o   ${OUT}/UTSODETL.o \
  ${OUT}/UTS2.o     ${OUT}/WUTSET.o 
    
@
\subsection{Layer21}
\subsubsection{Completed spad files}
\begin{verbatim}
cont.spad.pamphlet (ESCONT ESCONT1)
ddfact.spad.pamphlet (DDFACT)
defintef.spad.pamphlet (DEFINTEF)
defintrf.spad.pamphlet (DFINTTLS DEFINTRF)
divisor.spad.pamphlet (FRIDEAL FRIDEAL2 MHROWRED FRMOD FDIVCAT HELLFDIV FDIV
                       FDIV2)
d01transform.spad.pamphlet (D01TRNS)
efuls.spad.pamphlet (EFULS)
expr.spad.pamphlet (EXPR PAN2EXPR EXPR2 PMPREDFS PMASSFS PMPRED PMASS HACKPI
                    PICOERCE)
expr2ups.spad.pamphlet (EXPR2UPS)
fs2expxp.spad.pamphlet (FS2EXPXP)
gseries.spad.pamphlet (GSERIES)
integrat.spad.pamphlet (FSCINT FSINT)
irexpand.spad.pamphlet (IR2F IRRF2F)
laplace.spad.pamphlet (LAPLACE INVLAPLA)
laurent.spad.pamphlet (ULSCCAT ULSCONS ULS USL2)
nlode.spad.pamphlet (NODE1)
oderf.spad.pamphlet (BALFACT BOUNDZRO ODEPRIM UTSODETL ODERAT ODETOOLS ODEINT
                     ODECONST)
puiseux.spad.pamphlet (UPXSCCA UPXSCONS UPXS UPXS2)
radeigen.spad.pamphlet (REP)
solverad.spad.pamphlet (SOLVERAD)
suls.spad.pamphlet (SULS)
supxs.spad.pamphlet (SUPXS)
taylor.spad.pamphlet (ITAYLOR UTS UTS2)
\end{verbatim}

<<layer21>>=
LAYER21=\
  ${OUT}/DEFINTEF.o ${OUT}/DFINTTLS.o ${OUT}/DEFINTRF.o ${OUT}/D01TRNS.o  \
  ${OUT}/EFULS.o    ${OUT}/ESCONT.o   ${OUT}/EXPR.o     ${OUT}/EXPR2UPS.o \
  ${OUT}/FDIV.o     ${OUT}/FSCINT.o   ${OUT}/FSINT.o    ${OUT}/FS2EXPXP.o \
  ${OUT}/GSERIES.o  ${OUT}/HELLFDIV.o ${OUT}/INVLAPLA.o ${OUT}/IR2F.o     \
  ${OUT}/IRRF2F.o   ${OUT}/LAPLACE.o  ${OUT}/LIMITPS.o  ${OUT}/LODEEF.o   \
  ${OUT}/NODE1.o    ${OUT}/ODECONST.o ${OUT}/ODEINT.o   ${OUT}/REP.o      \
  ${OUT}/SOLVERAD.o ${OUT}/SULS.o     ${OUT}/SUPXS.o    ${OUT}/ULS.o      \
  ${OUT}/ULSCONS.o  ${OUT}/UPXS.o     ${OUT}/UPXSCONS.o ${OUT}/UTS.o

@
\subsection{Layer22}
\subsubsection{Completed spad files}
\begin{verbatim}
asp.spad.pamphlet (ASP29)
combfunc.spad.pamphlet (COMBF)
d01agents.spad.pamphlet (D01AGNT SNTSCAT)
ffnb.spad.pamphlet (INBFF)
limitps.spad.pamphlet (SIGNEF)
lodo.spad.pamphlet (LODO LODO1 LODO2)
newpoint.spad.pamphlet (SUBSPACE)
nregset.spad.pamphlet (NTSCAT)
primelt.spad.pamphlet (FSPRMELT)
regset.spad.pamphlet (REGSET RSETGCD RSDCMPK)
sregset.spad.pamphlet (SFRTCAT SRDCMPK SREGSET)
sttf.spad.pamphlet (STTF)
transsolve.spad.pamphlet (SOLVETRA)
zerodim.spad.pamphlet (RGCHAIN ZDSOLVE)
\end{verbatim}
\subsection{Layer21}
<<layer22>>=
LAYER22=\
  ${OUT}/ASP29.o    ${OUT}/COMBF.o    ${OUT}/D01AGNT.o  ${OUT}/FSPRMELT.o \
  ${OUT}/INBFF.o    ${OUT}/LODO.o     ${OUT}/LODO1.o    ${OUT}/LODO2.o    \
  ${OUT}/NTSCAT.o   ${OUT}/REGSET.o   ${OUT}/RGCHAIN.o  ${OUT}/RSETGCD.o  \
  ${OUT}/RSDCMPK.o  ${OUT}/SFRTCAT.o  ${OUT}/SIGNEF.o   ${OUT}/SNTSCAT.o  \
  ${OUT}/SOLVETRA.o ${OUT}/SRDCMPK.o  ${OUT}/SREGSET.o  ${OUT}/STTF.o     \
  ${OUT}/SUBSPACE.o ${OUT}/ZDSOLVE.o

@
\subsubsection{Final layer spad files}
These files have not yet been fully analyzed for dependencies but
have added in alphabetical order in this final layer. This
ordering is apparently adequate.

These files all depend on layer22.
\begin{verbatim}
algcat.spad.pamphlet (CPIMA)
nregset.spad.pamphlet (NORMPK)
nsregset.spad.pamphlet (LAZM3PK)
regset.spad.pamphlet (QCMPACK)
sregset.spad.pamphlet (SFRGCD SFQCMPK)
zerodim.spad.pamphlet (LEXTRIPK IRURPK RURPK)
\end{verbatim}

<<layer23>>=
LAYER23=\
  ${OUT}/CPIMA.o    ${OUT}/IRURPK.o   ${OUT}/LAZM3PK.o  ${OUT}/LEXTRIPK.o \
  ${OUT}/NORMPK.o   ${OUT}/QCMPACK.o  ${OUT}/RURPK.o    ${OUT}/SFRGCD.o   \
  ${OUT}/SFQCMPK.o  ${OUT}/INTRVL.o   ${OUT}/ODEEF.o

@
\subsubsection{User Layer for newly added algebra}
Rather than classify newly created algebra into the existing type lattice
we add it here.
<<USERLAYER>>=
USERLAYER=\
  ${OUT}/RINTERP.o
@
\subsection{Order}
The final order of the layers is determined here.
<<order>>=
ORDER=\
  ${LAYER0BOOTSTRAP}     ${LAYER0}  ${LAYER1}  ${LAYER2}  ${LAYER3}  \
  ${LAYER4}   ${LAYER5}  ${LAYER6}  ${LAYER7}  ${LAYER8}  ${LAYER9}  \
  ${LAYER10}  ${LAYER11} ${LAYER12} ${LAYER13} ${LAYER14} ${LAYER15} \
  ${LAYER16}  ${LAYER17} ${LAYER18} ${LAYER19} ${LAYER20} ${LAYER21} \
  ${LAYER22}  ${LAYER23} ${USERLAYER} ${LAYER0COPY}

@
\section{Broken Files}
These files are Aldor files
\begin{verbatim}
axtimer.as Timer
iviews.as  InventorRenderPackage IVREND
ffrac.as   FormalFraction FORMAL
iviews.as  InventorViewPort IVVIEW
iviews.as  InventorDataSink IVDATA
herm.as    PackedHermitianSequence PACKED
nsfip.as   NagSpecialFunctionsInterfacePackage NAGSPE
nrc.as     NagResultChecks NAGRES
nqip.as    NagQuadratureInterfacePackage NAGQUA
noptip.as  NagOptimizationInterfacePackage NAGOPT
nepip.as   NagEigenInterfacePackage NAGEIG
ndftip.as  NagDiscreteFourierTransformInterfacePackage NAGDIS
\end{verbatim}

These domains are referenced but don't exist
\begin{verbatim}
OBJECT
\end{verbatim}

\section{The Environment}
\subsection{The working directories}
We define 5 directories for this build. The {\bf IN} directory
contains the pamphlet files for the algebra. These are expanded
into the {\bf MID} directory as either .spad or .as files. The
.spad files are compiled by the native spad internal compiler.
The .as files are compiled using the Aldor compiler. The output
of the compilation has two purposes. Part of the information is
used to build various database files (daase files). The other
part is executable code which is placed in the 
{\bf OUT} directory. When invoked as ``make document'' we
construct the .dvi files in the {\bf DOC} directory.

The [[OUTSRC=${MNT}/${SYS}/src/algebra]] subdirectory contains the 
algebra source files extracted from the pamphlet files. These sources 
allow the end user to change the algebra if needed.

<<environment>>=
IN=${SRC}/algebra
MID=${INT}/algebra
OUT=${MNT}/${SYS}/algebra
DOC=${MNT}/${SYS}/doc/src/algebra
OUTSRC=${MNT}/${SYS}/src/algebra

@
\subsection{The depsys variable}
The {\bf depsys} image is the compile-time environment for boot and lisp
files.
<<environment>>=
DEPSYS=${OBJ}/${SYS}/bin/depsys

@
\subsection{The interpsys variable}
The {\bf interpsys} image is the compile-time environment for algebra
files.
<<environment>>=
INTERPSYS=${OBJ}/${SYS}/bin/interpsys

@
\subsection{The SPADFILES list}
Note that we have excluded {\bf mlift.spad.jhd} from this list.
We need to figure out which mlift.spad to keep.
<<environment>>=
SPADFILES= \
 ${OUTSRC}/acplot.spad ${OUTSRC}/aggcat2.spad ${OUTSRC}/aggcat.spad \
 ${OUTSRC}/algcat.spad ${OUTSRC}/algext.spad ${OUTSRC}/algfact.spad \
 ${OUTSRC}/algfunc.spad ${OUTSRC}/allfact.spad ${OUTSRC}/alql.spad \
 ${OUTSRC}/annacat.spad ${OUTSRC}/any.spad ${OUTSRC}/array1.spad \
 ${OUTSRC}/array2.spad ${OUTSRC}/asp.spad ${OUTSRC}/attreg.spad \
 ${OUTSRC}/bags.spad ${OUTSRC}/bezout.spad ${OUTSRC}/boolean.spad \
 ${OUTSRC}/brill.spad \
 ${OUTSRC}/c02.spad ${OUTSRC}/c05.spad ${OUTSRC}/c06.spad \
 ${OUTSRC}/card.spad ${OUTSRC}/carten.spad ${OUTSRC}/catdef.spad \
 ${OUTSRC}/cden.spad ${OUTSRC}/clifford.spad ${OUTSRC}/clip.spad \
 ${OUTSRC}/cmplxrt.spad ${OUTSRC}/coerce.spad ${OUTSRC}/color.spad \
 ${OUTSRC}/combfunc.spad ${OUTSRC}/combinat.spad ${OUTSRC}/complet.spad \
 ${OUTSRC}/constant.spad ${OUTSRC}/contfrac.spad ${OUTSRC}/cont.spad \
 ${OUTSRC}/coordsys.spad ${OUTSRC}/cra.spad ${OUTSRC}/crfp.spad \
 ${OUTSRC}/curve.spad ${OUTSRC}/cycles.spad ${OUTSRC}/cyclotom.spad \
 ${OUTSRC}/d01agents.spad ${OUTSRC}/d01Package.spad \
 ${OUTSRC}/d01routine.spad ${OUTSRC}/d01.spad ${OUTSRC}/d01transform.spad \
 ${OUTSRC}/d01weights.spad ${OUTSRC}/d02agents.spad \
 ${OUTSRC}/d02Package.spad ${OUTSRC}/d02routine.spad ${OUTSRC}/d02.spad \
 ${OUTSRC}/d03agents.spad ${OUTSRC}/d03Package.spad \
 ${OUTSRC}/d03routine.spad ${OUTSRC}/d03.spad ${OUTSRC}/ddfact.spad \
 ${OUTSRC}/defaults.spad ${OUTSRC}/defintef.spad ${OUTSRC}/defintrf.spad \
 ${OUTSRC}/degred.spad ${OUTSRC}/derham.spad ${OUTSRC}/dhmatrix.spad \
 ${OUTSRC}/divisor.spad ${OUTSRC}/dpolcat.spad ${OUTSRC}/drawopt.spad \
 ${OUTSRC}/drawpak.spad ${OUTSRC}/draw.spad \
 ${OUTSRC}/e01.spad ${OUTSRC}/e02.spad ${OUTSRC}/e04agents.spad \
 ${OUTSRC}/e04Package.spad ${OUTSRC}/e04routine.spad ${OUTSRC}/e04.spad \
 ${OUTSRC}/efstruc.spad ${OUTSRC}/efuls.spad ${OUTSRC}/efupxs.spad \
 ${OUTSRC}/eigen.spad ${OUTSRC}/elemntry.spad ${OUTSRC}/elfuts.spad \
 ${OUTSRC}/equation1.spad ${OUTSRC}/equation2.spad ${OUTSRC}/error.spad \
 ${OUTSRC}/expexpan.spad ${OUTSRC}/expr2ups.spad \
 ${OUTSRC}/exprode.spad ${OUTSRC}/expr.spad \
 ${OUTSRC}/f01.spad ${OUTSRC}/f02.spad ${OUTSRC}/f04.spad \
 ${OUTSRC}/f07.spad ${OUTSRC}/facutil.spad ${OUTSRC}/ffcat.spad \
 ${OUTSRC}/ffcg.spad ${OUTSRC}/fff.spad ${OUTSRC}/ffhom.spad \
 ${OUTSRC}/ffnb.spad ${OUTSRC}/ffpoly2.spad ${OUTSRC}/ffpoly.spad \
 ${OUTSRC}/ffp.spad ${OUTSRC}/ffx.spad \
 ${OUTSRC}/files.spad ${OUTSRC}/float.spad ${OUTSRC}/fmod.spad \
 ${OUTSRC}/fname.spad ${OUTSRC}/fnla.spad ${OUTSRC}/formula.spad \
 ${OUTSRC}/fortcat.spad ${OUTSRC}/fortmac.spad ${OUTSRC}/fortpak.spad \
 ${OUTSRC}/fortran.spad ${OUTSRC}/forttyp.spad ${OUTSRC}/fourier.spad \
 ${OUTSRC}/fparfrac.spad ${OUTSRC}/fraction.spad ${OUTSRC}/free.spad \
 ${OUTSRC}/fr.spad ${OUTSRC}/fs2expxp.spad ${OUTSRC}/fs2ups.spad \
 ${OUTSRC}/fspace.spad ${OUTSRC}/funcpkgs.spad ${OUTSRC}/functions.spad \
 ${OUTSRC}/galfact.spad ${OUTSRC}/galfactu.spad ${OUTSRC}/galpolyu.spad \
 ${OUTSRC}/galutil.spad ${OUTSRC}/gaussfac.spad ${OUTSRC}/gaussian.spad \
 ${OUTSRC}/gbeuclid.spad ${OUTSRC}/gbintern.spad ${OUTSRC}/gb.spad \
 ${OUTSRC}/gdirprod.spad ${OUTSRC}/gdpoly.spad ${OUTSRC}/geneez.spad \
 ${OUTSRC}/generic.spad ${OUTSRC}/genufact.spad ${OUTSRC}/genups.spad \
 ${OUTSRC}/ghensel.spad ${OUTSRC}/gpgcd.spad ${OUTSRC}/gpol.spad \
 ${OUTSRC}/grdef.spad ${OUTSRC}/groebf.spad ${OUTSRC}/groebsol.spad \
 ${OUTSRC}/gseries.spad \
 ${OUTSRC}/ideal.spad ${OUTSRC}/idecomp.spad ${OUTSRC}/indexedp.spad \
 ${OUTSRC}/infprod.spad ${OUTSRC}/intaf.spad ${OUTSRC}/intalg.spad \
 ${OUTSRC}/intaux.spad ${OUTSRC}/intclos.spad ${OUTSRC}/intef.spad \
 ${OUTSRC}/integer.spad ${OUTSRC}/integrat.spad \
 ${OUTSRC}/interval.spad \
 ${OUTSRC}/intfact.spad ${OUTSRC}/intpm.spad \
 ${OUTSRC}/intrf.spad \
 ${OUTSRC}/irexpand.spad \
 ${OUTSRC}/irsn.spad ${OUTSRC}/ituple.spad \
 ${OUTSRC}/kl.spad ${OUTSRC}/kovacic.spad \
 ${OUTSRC}/laplace.spad ${OUTSRC}/laurent.spad ${OUTSRC}/leadcdet.spad \
 ${OUTSRC}/lie.spad ${OUTSRC}/limitps.spad ${OUTSRC}/lindep.spad \
 ${OUTSRC}/lingrob.spad ${OUTSRC}/liouv.spad ${OUTSRC}/listgcd.spad \
 ${OUTSRC}/list.spad ${OUTSRC}/lmdict.spad ${OUTSRC}/lodof.spad \
 ${OUTSRC}/lodop.spad ${OUTSRC}/lodo.spad \
 ${OUTSRC}/manip.spad ${OUTSRC}/mappkg.spad ${OUTSRC}/matcat.spad \
 ${OUTSRC}/matfuns.spad ${OUTSRC}/matrix.spad ${OUTSRC}/matstor.spad \
 ${OUTSRC}/mesh.spad ${OUTSRC}/mfinfact.spad ${OUTSRC}/misc.spad \
 ${OUTSRC}/mkfunc.spad ${OUTSRC}/mkrecord.spad \
 ${OUTSRC}/mlift.spad ${OUTSRC}/moddfact.spad ${OUTSRC}/modgcd.spad \
 ${OUTSRC}/modmonom.spad ${OUTSRC}/modmon.spad ${OUTSRC}/modring.spad \
 ${OUTSRC}/moebius.spad ${OUTSRC}/mring.spad ${OUTSRC}/mset.spad \
 ${OUTSRC}/mts.spad ${OUTSRC}/multfact.spad ${OUTSRC}/multpoly.spad \
 ${OUTSRC}/multsqfr.spad \
 ${OUTSRC}/naalgc.spad ${OUTSRC}/naalg.spad \
 ${OUTSRC}/newdata.spad ${OUTSRC}/newpoint.spad \
 ${OUTSRC}/newpoly.spad ${OUTSRC}/nlinsol.spad ${OUTSRC}/nlode.spad \
 ${OUTSRC}/npcoef.spad \
 ${OUTSRC}/nregset.spad \
 ${OUTSRC}/nsregset.spad ${OUTSRC}/numeigen.spad ${OUTSRC}/numeric.spad \
 ${OUTSRC}/numode.spad ${OUTSRC}/numquad.spad ${OUTSRC}/numsolve.spad \
 ${OUTSRC}/numtheor.spad \
 ${OUTSRC}/oct.spad ${OUTSRC}/odealg.spad ${OUTSRC}/odeef.spad \
 ${OUTSRC}/oderf.spad ${OUTSRC}/omcat.spad ${OUTSRC}/omdev.spad \
 ${OUTSRC}/omerror.spad ${OUTSRC}/omserver.spad ${OUTSRC}/opalg.spad \
 ${OUTSRC}/openmath.spad ${OUTSRC}/op.spad ${OUTSRC}/ore.spad \
 ${OUTSRC}/outform.spad ${OUTSRC}/out.spad \
 ${OUTSRC}/pade.spad ${OUTSRC}/padiclib.spad ${OUTSRC}/padic.spad \
 ${OUTSRC}/paramete.spad ${OUTSRC}/partperm.spad ${OUTSRC}/patmatch1.spad \
 ${OUTSRC}/patmatch2.spad ${OUTSRC}/pattern.spad ${OUTSRC}/pcurve.spad \
 ${OUTSRC}/pdecomp.spad ${OUTSRC}/perman.spad ${OUTSRC}/permgrps.spad \
 ${OUTSRC}/perm.spad ${OUTSRC}/pfbr.spad ${OUTSRC}/pfo.spad \
 ${OUTSRC}/pfr.spad ${OUTSRC}/pf.spad ${OUTSRC}/pgcd.spad \
 ${OUTSRC}/pgrobner.spad ${OUTSRC}/pinterp.spad ${OUTSRC}/pleqn.spad \
 ${OUTSRC}/plot3d.spad ${OUTSRC}/plot.spad ${OUTSRC}/plottool.spad \
 ${OUTSRC}/polset.spad ${OUTSRC}/poltopol.spad ${OUTSRC}/polycat.spad \
 ${OUTSRC}/poly.spad ${OUTSRC}/primelt.spad ${OUTSRC}/print.spad \
 ${OUTSRC}/product.spad ${OUTSRC}/prs.spad ${OUTSRC}/prtition.spad \
 ${OUTSRC}/pscat.spad ${OUTSRC}/pseudolin.spad ${OUTSRC}/ptranfn.spad \
 ${OUTSRC}/puiseux.spad \
 ${OUTSRC}/qalgset.spad ${OUTSRC}/quat.spad \
 ${OUTSRC}/radeigen.spad ${OUTSRC}/radix.spad ${OUTSRC}/random.spad \
 ${OUTSRC}/ratfact.spad ${OUTSRC}/rdeef.spad ${OUTSRC}/rderf.spad \
 ${OUTSRC}/rdesys.spad ${OUTSRC}/real0q.spad ${OUTSRC}/realzero.spad \
 ${OUTSRC}/reclos.spad ${OUTSRC}/regset.spad ${OUTSRC}/rep1.spad \
 ${OUTSRC}/rep2.spad ${OUTSRC}/resring.spad ${OUTSRC}/retract.spad \
 ${OUTSRC}/rf.spad ${OUTSRC}/riccati.spad ${OUTSRC}/rinterp.spad \
 ${OUTSRC}/routines.spad \
 ${OUTSRC}/rule.spad \
 ${OUTSRC}/seg.spad ${OUTSRC}/setorder.spad ${OUTSRC}/sets.spad \
 ${OUTSRC}/sex.spad ${OUTSRC}/sf.spad ${OUTSRC}/sgcf.spad \
 ${OUTSRC}/sign.spad ${OUTSRC}/si.spad ${OUTSRC}/smith.spad \
 ${OUTSRC}/solvedio.spad ${OUTSRC}/solvefor.spad ${OUTSRC}/solvelin.spad \
 ${OUTSRC}/solverad.spad ${OUTSRC}/sortpak.spad ${OUTSRC}/space.spad \
 ${OUTSRC}/special.spad ${OUTSRC}/sregset.spad ${OUTSRC}/s.spad \
 ${OUTSRC}/stream.spad ${OUTSRC}/string.spad ${OUTSRC}/sttaylor.spad \
 ${OUTSRC}/sttf.spad ${OUTSRC}/sturm.spad ${OUTSRC}/suchthat.spad \
 ${OUTSRC}/suls.spad ${OUTSRC}/sum.spad ${OUTSRC}/sups.spad \
 ${OUTSRC}/supxs.spad ${OUTSRC}/suts.spad ${OUTSRC}/symbol.spad \
 ${OUTSRC}/syssolp.spad ${OUTSRC}/system.spad \
 ${OUTSRC}/tableau.spad ${OUTSRC}/table.spad ${OUTSRC}/taylor.spad \
 ${OUTSRC}/tex.spad ${OUTSRC}/tools.spad ${OUTSRC}/transsolve.spad \
 ${OUTSRC}/tree.spad ${OUTSRC}/trigcat.spad ${OUTSRC}/triset.spad \
 ${OUTSRC}/tube.spad ${OUTSRC}/twofact.spad \
 ${OUTSRC}/unifact.spad ${OUTSRC}/updecomp.spad ${OUTSRC}/updivp.spad \
 ${OUTSRC}/utsode.spad \
 ${OUTSRC}/variable.spad ${OUTSRC}/vector.spad ${OUTSRC}/view2D.spad \
 ${OUTSRC}/view3D.spad ${OUTSRC}/viewDef.spad ${OUTSRC}/viewpack.spad \
 ${OUTSRC}/void.spad \
 ${OUTSRC}/weier.spad ${OUTSRC}/wtpol.spad \
 ${OUTSRC}/xlpoly.spad ${OUTSRC}/xpoly.spad \
 ${OUTSRC}/ystream.spad \
 ${OUTSRC}/zerodim.spad

@
\subsection{The ALDORFILES list}
<<environment>>=
ALDORFILES= \
 ${MID}/axtimer.as \
 ${MID}/ffrac.as \
 ${MID}/herm.as \
 ${MID}/interval.as \
 ${MID}/invnode.as ${MID}/invrender.as \
 ${MID}/invtypes.as ${MID}/invutils.as \
 ${MID}/iviews.as \
 ${MID}/ndftip.as \
 ${MID}/nepip.as \
 ${MID}/noptip.as ${MID}/nqip.as \
 ${MID}/nrc.as ${MID}/nsfip.as 

@
\subsection{The DOCFILES list}
<<environment>>=
DOCFILES= \
 ${DOC}/acplot.spad.dvi ${DOC}/aggcat2.spad.dvi ${DOC}/aggcat.spad.dvi \
 ${DOC}/algcat.spad.dvi ${DOC}/algext.spad.dvi ${DOC}/algfact.spad.dvi \
 ${DOC}/algfunc.spad.dvi ${DOC}/allfact.spad.dvi ${DOC}/alql.spad.dvi \
 ${DOC}/annacat.spad.dvi ${DOC}/any.spad.dvi ${DOC}/array1.spad.dvi \
 ${DOC}/array2.spad.dvi ${DOC}/asp.spad.dvi ${DOC}/attreg.spad.dvi \
 ${DOC}/axtimer.as.dvi \
 ${DOC}/bags.spad.dvi ${DOC}/bezout.spad.dvi ${DOC}/boolean.spad.dvi \
 ${DOC}/brill.spad.dvi \
 ${DOC}/c02.spad.dvi ${DOC}/c05.spad.dvi ${DOC}/c06.spad.dvi \
 ${DOC}/card.spad.dvi ${DOC}/carten.spad.dvi ${DOC}/catdef.spad.dvi \
 ${DOC}/cden.spad.dvi ${DOC}/clifford.spad.dvi ${DOC}/clip.spad.dvi \
 ${DOC}/cmplxrt.spad.dvi ${DOC}/coerce.spad.dvi ${DOC}/color.spad.dvi \
 ${DOC}/combfunc.spad.dvi ${DOC}/combinat.spad.dvi ${DOC}/complet.spad.dvi \
 ${DOC}/constant.spad.dvi ${DOC}/contfrac.spad.dvi ${DOC}/cont.spad.dvi \
 ${DOC}/coordsys.spad.dvi ${DOC}/cra.spad.dvi ${DOC}/crfp.spad.dvi \
 ${DOC}/curve.spad.dvi ${DOC}/cycles.spad.dvi ${DOC}/cyclotom.spad.dvi \
 ${DOC}/d01agents.spad.dvi ${DOC}/d01Package.spad.dvi \
 ${DOC}/d01routine.spad.dvi ${DOC}/d01.spad.dvi ${DOC}/d01transform.spad.dvi \
 ${DOC}/d01weights.spad.dvi ${DOC}/d02agents.spad.dvi \
 ${DOC}/d02Package.spad.dvi ${DOC}/d02routine.spad.dvi ${DOC}/d02.spad.dvi \
 ${DOC}/d03agents.spad.dvi ${DOC}/d03Package.spad.dvi \
 ${DOC}/d03routine.spad.dvi ${DOC}/d03.spad.dvi ${DOC}/ddfact.spad.dvi \
 ${DOC}/defaults.spad.dvi ${DOC}/defintef.spad.dvi ${DOC}/defintrf.spad.dvi \
 ${DOC}/degred.spad.dvi ${DOC}/derham.spad.dvi ${DOC}/dhmatrix.spad.dvi \
 ${DOC}/divisor.spad.dvi ${DOC}/dpolcat.spad.dvi ${DOC}/drawopt.spad.dvi \
 ${DOC}/drawpak.spad.dvi ${DOC}/draw.spad.dvi \
 ${DOC}/e01.spad.dvi ${DOC}/e02.spad.dvi ${DOC}/e04agents.spad.dvi \
 ${DOC}/e04Package.spad.dvi ${DOC}/e04routine.spad.dvi ${DOC}/e04.spad.dvi \
 ${DOC}/efstruc.spad.dvi ${DOC}/efuls.spad.dvi ${DOC}/efupxs.spad.dvi \
 ${DOC}/eigen.spad.dvi ${DOC}/elemntry.spad.dvi ${DOC}/elfuts.spad.dvi \
 ${DOC}/equation1.spad.dvi ${DOC}/equation2.spad.dvi ${DOC}/error.spad.dvi \
 ${DOC}/expexpan.spad.dvi ${DOC}/exposed.lsp.dvi ${DOC}/expr2ups.spad.dvi \
 ${DOC}/exprode.spad.dvi ${DOC}/expr.spad.dvi \
 ${DOC}/f01.spad.dvi ${DOC}/f02.spad.dvi ${DOC}/f04.spad.dvi \
 ${DOC}/f07.spad.dvi ${DOC}/facutil.spad.dvi ${DOC}/ffcat.spad.dvi \
 ${DOC}/ffcg.spad.dvi ${DOC}/fff.spad.dvi ${DOC}/ffhom.spad.dvi \
 ${DOC}/ffnb.spad.dvi ${DOC}/ffpoly2.spad.dvi ${DOC}/ffpoly.spad.dvi \
 ${DOC}/ffp.spad.dvi ${DOC}/ffrac.as.dvi ${DOC}/ffx.spad.dvi \
 ${DOC}/files.spad.dvi ${DOC}/float.spad.dvi ${DOC}/fmod.spad.dvi \
 ${DOC}/fname.spad.dvi ${DOC}/fnla.spad.dvi ${DOC}/formula.spad.dvi \
 ${DOC}/fortcat.spad.dvi ${DOC}/fortmac.spad.dvi ${DOC}/fortpak.spad.dvi \
 ${DOC}/fortran.spad.dvi ${DOC}/forttyp.spad.dvi ${DOC}/fourier.spad.dvi \
 ${DOC}/fparfrac.spad.dvi ${DOC}/fraction.spad.dvi ${DOC}/free.spad.dvi \
 ${DOC}/fr.spad.dvi ${DOC}/fs2expxp.spad.dvi ${DOC}/fs2ups.spad.dvi \
 ${DOC}/fspace.spad.dvi ${DOC}/funcpkgs.spad.dvi ${DOC}/functions.spad.dvi \
 ${DOC}/galfact.spad.dvi ${DOC}/galfactu.spad.dvi ${DOC}/galpolyu.spad.dvi \
 ${DOC}/galutil.spad.dvi ${DOC}/gaussfac.spad.dvi ${DOC}/gaussian.spad.dvi \
 ${DOC}/gbeuclid.spad.dvi ${DOC}/gbintern.spad.dvi ${DOC}/gb.spad.dvi \
 ${DOC}/gdirprod.spad.dvi ${DOC}/gdpoly.spad.dvi ${DOC}/geneez.spad.dvi \
 ${DOC}/generic.spad.dvi ${DOC}/genufact.spad.dvi ${DOC}/genups.spad.dvi \
 ${DOC}/ghensel.spad.dvi ${DOC}/gpgcd.spad.dvi ${DOC}/gpol.spad.dvi \
 ${DOC}/grdef.spad.dvi ${DOC}/groebf.spad.dvi ${DOC}/groebsol.spad.dvi \
 ${DOC}/gseries.spad.dvi \
 ${DOC}/herm.as.dvi \
 ${DOC}/ideal.spad.dvi ${DOC}/idecomp.spad.dvi ${DOC}/indexedp.spad.dvi \
 ${DOC}/infprod.spad.dvi ${DOC}/intaf.spad.dvi ${DOC}/intalg.spad.dvi \
 ${DOC}/intaux.spad.dvi ${DOC}/intclos.spad.dvi ${DOC}/intef.spad.dvi \
 ${DOC}/integer.spad.dvi ${DOC}/integrat.spad.dvi \
 ${DOC}/interval.as.dvi ${DOC}/interval.spad.dvi \
 ${DOC}/intfact.spad.dvi ${DOC}/intpm.spad.dvi \
 ${DOC}/intrf.spad.dvi ${DOC}/invnode.as.dvi ${DOC}/invrender.as.dvi \
 ${DOC}/invtypes.as.dvi ${DOC}/invutils.as.dvi ${DOC}/irexpand.spad.dvi \
 ${DOC}/irsn.spad.dvi ${DOC}/ituple.spad.dvi ${DOC}/iviews.as.dvi \
 ${DOC}/kl.spad.dvi ${DOC}/kovacic.spad.dvi \
 ${DOC}/laplace.spad.dvi ${DOC}/laurent.spad.dvi ${DOC}/leadcdet.spad.dvi \
 ${DOC}/lie.spad.dvi ${DOC}/limitps.spad.dvi ${DOC}/lindep.spad.dvi \
 ${DOC}/lingrob.spad.dvi ${DOC}/liouv.spad.dvi ${DOC}/listgcd.spad.dvi \
 ${DOC}/list.spad.dvi ${DOC}/lmdict.spad.dvi ${DOC}/lodof.spad.dvi \
 ${DOC}/lodop.spad.dvi ${DOC}/lodo.spad.dvi \
 ${DOC}/manip.spad.dvi ${DOC}/mappkg.spad.dvi ${DOC}/matcat.spad.dvi \
 ${DOC}/matfuns.spad.dvi ${DOC}/matrix.spad.dvi ${DOC}/matstor.spad.dvi \
 ${DOC}/mesh.spad.dvi ${DOC}/mfinfact.spad.dvi ${DOC}/misc.spad.dvi \
 ${DOC}/mkfunc.spad.dvi ${DOC}/mkrecord.spad.dvi ${DOC}/mlift.spad.jhd.dvi \
 ${DOC}/mlift.spad.dvi ${DOC}/moddfact.spad.dvi ${DOC}/modgcd.spad.dvi \
 ${DOC}/modmonom.spad.dvi ${DOC}/modmon.spad.dvi ${DOC}/modring.spad.dvi \
 ${DOC}/moebius.spad.dvi ${DOC}/mring.spad.dvi ${DOC}/mset.spad.dvi \
 ${DOC}/mts.spad.dvi ${DOC}/multfact.spad.dvi ${DOC}/multpoly.spad.dvi \
 ${DOC}/multsqfr.spad.dvi \
 ${DOC}/naalgc.spad.dvi ${DOC}/naalg.spad.dvi ${DOC}/ndftip.as.dvi \
 ${DOC}/nepip.as.dvi ${DOC}/newdata.spad.dvi ${DOC}/newpoint.spad.dvi \
 ${DOC}/newpoly.spad.dvi ${DOC}/nlinsol.spad.dvi ${DOC}/nlode.spad.dvi \
 ${DOC}/noptip.as.dvi ${DOC}/npcoef.spad.dvi ${DOC}/nqip.as.dvi \
 ${DOC}/nrc.as.dvi ${DOC}/nregset.spad.dvi ${DOC}/nsfip.as.dvi \
 ${DOC}/nsregset.spad.dvi ${DOC}/numeigen.spad.dvi ${DOC}/numeric.spad.dvi \
 ${DOC}/numode.spad.dvi ${DOC}/numquad.spad.dvi ${DOC}/numsolve.spad.dvi \
 ${DOC}/numtheor.spad.dvi \
 ${DOC}/oct.spad.dvi ${DOC}/odealg.spad.dvi ${DOC}/odeef.spad.dvi \
 ${DOC}/oderf.spad.dvi ${DOC}/omcat.spad.dvi ${DOC}/omdev.spad.dvi \
 ${DOC}/omerror.spad.dvi ${DOC}/omserver.spad.dvi ${DOC}/opalg.spad.dvi \
 ${DOC}/openmath.spad.dvi ${DOC}/op.spad.dvi ${DOC}/ore.spad.dvi \
 ${DOC}/outform.spad.dvi ${DOC}/out.spad.dvi \
 ${DOC}/pade.spad.dvi ${DOC}/padiclib.spad.dvi ${DOC}/padic.spad.dvi \
 ${DOC}/paramete.spad.dvi ${DOC}/partperm.spad.dvi ${DOC}/patmatch1.spad.dvi \
 ${DOC}/patmatch2.spad.dvi ${DOC}/pattern.spad.dvi ${DOC}/pcurve.spad.dvi \
 ${DOC}/pdecomp.spad.dvi ${DOC}/perman.spad.dvi ${DOC}/permgrps.spad.dvi \
 ${DOC}/perm.spad.dvi ${DOC}/pfbr.spad.dvi ${DOC}/pfo.spad.dvi \
 ${DOC}/pfr.spad.dvi ${DOC}/pf.spad.dvi ${DOC}/pgcd.spad.dvi \
 ${DOC}/pgrobner.spad.dvi ${DOC}/pinterp.spad.dvi ${DOC}/pleqn.spad.dvi \
 ${DOC}/plot3d.spad.dvi ${DOC}/plot.spad.dvi ${DOC}/plottool.spad.dvi \
 ${DOC}/polset.spad.dvi ${DOC}/poltopol.spad.dvi ${DOC}/polycat.spad.dvi \
 ${DOC}/poly.spad.dvi ${DOC}/primelt.spad.dvi ${DOC}/print.spad.dvi \
 ${DOC}/product.spad.dvi ${DOC}/prs.spad.dvi ${DOC}/prtition.spad.dvi \
 ${DOC}/pscat.spad.dvi ${DOC}/pseudolin.spad.dvi ${DOC}/ptranfn.spad.dvi \
 ${DOC}/puiseux.spad.dvi \
 ${DOC}/qalgset.spad.dvi ${DOC}/quat.spad.dvi \
 ${DOC}/radeigen.spad.dvi ${DOC}/radix.spad.dvi ${DOC}/random.spad.dvi \
 ${DOC}/ratfact.spad.dvi ${DOC}/rdeef.spad.dvi ${DOC}/rderf.spad.dvi \
 ${DOC}/rdesys.spad.dvi ${DOC}/real0q.spad.dvi ${DOC}/realzero.spad.dvi \
 ${DOC}/reclos.spad.dvi ${DOC}/regset.spad.dvi ${DOC}/rep1.spad.dvi \
 ${DOC}/rep2.spad.dvi ${DOC}/resring.spad.dvi ${DOC}/retract.spad.dvi \
 ${DOC}/rf.spad.dvi ${DOC}/riccati.spad.dvi ${DOC}/rinterp.spad.dvi \
 ${DOC}/routines.spad.dvi \
 ${DOC}/rule.spad.dvi \
 ${DOC}/seg.spad.dvi ${DOC}/setorder.spad.dvi ${DOC}/sets.spad.dvi \
 ${DOC}/sex.spad.dvi ${DOC}/sf.spad.dvi ${DOC}/sgcf.spad.dvi \
 ${DOC}/sign.spad.dvi ${DOC}/si.spad.dvi ${DOC}/smith.spad.dvi \
 ${DOC}/solvedio.spad.dvi ${DOC}/solvefor.spad.dvi ${DOC}/solvelin.spad.dvi \
 ${DOC}/solverad.spad.dvi ${DOC}/sortpak.spad.dvi ${DOC}/space.spad.dvi \
 ${DOC}/special.spad.dvi ${DOC}/sregset.spad.dvi ${DOC}/s.spad.dvi \
 ${DOC}/stream.spad.dvi ${DOC}/string.spad.dvi ${DOC}/sttaylor.spad.dvi \
 ${DOC}/sttf.spad.dvi ${DOC}/sturm.spad.dvi ${DOC}/suchthat.spad.dvi \
 ${DOC}/suls.spad.dvi ${DOC}/sum.spad.dvi ${DOC}/sups.spad.dvi \
 ${DOC}/supxs.spad.dvi ${DOC}/suts.spad.dvi ${DOC}/symbol.spad.dvi \
 ${DOC}/syssolp.spad.dvi ${DOC}/system.spad.dvi \
 ${DOC}/tableau.spad.dvi ${DOC}/table.spad.dvi ${DOC}/taylor.spad.dvi \
 ${DOC}/tex.spad.dvi ${DOC}/tools.spad.dvi ${DOC}/transsolve.spad.dvi \
 ${DOC}/tree.spad.dvi ${DOC}/trigcat.spad.dvi ${DOC}/triset.spad.dvi \
 ${DOC}/tube.spad.dvi ${DOC}/twofact.spad.dvi \
 ${DOC}/unifact.spad.dvi ${DOC}/updecomp.spad.dvi ${DOC}/updivp.spad.dvi \
 ${DOC}/utsode.spad.dvi \
 ${DOC}/variable.spad.dvi ${DOC}/vector.spad.dvi ${DOC}/view2D.spad.dvi \
 ${DOC}/view3D.spad.dvi ${DOC}/viewDef.spad.dvi ${DOC}/viewpack.spad.dvi \
 ${DOC}/void.spad.dvi \
 ${DOC}/weier.spad.dvi ${DOC}/wtpol.spad.dvi \
 ${DOC}/xlpoly.spad.dvi ${DOC}/xpoly.spad.dvi \
 ${DOC}/ystream.spad.dvi \
 ${DOC}/zerodim.spad.dvi

@
\section{The Makefile Stanzas}
Subsections within this section are organized by the [[spad]] pamphlet.
A [[spad]] pamphlet can contain many Axiom [[categories]], [[domains]], and
[[packages]]. 

For the purpose of explanation we assume that the pamphlet file is 
named [[foo.spad.pamphlet]]. It contains the domains [[BAR]], [[BAX]],
and [[BAZ]]. Thus there will be a subsection named [[foo.spad]].

Since pamphlet files (e.g. [[foo.spad.pamphlet]] contain a spad file
(e.g. [[foo.spad]]) it follows that
every subsection contains a Makefile stanza that extract the [[foo.spad]]
file using [[notangle]].

Since pamphlet files are intended as documents it follows that each
subsection contains a Makefile stanza that extracts a [[dvi]] file
using [[noweave]].

For each domain in [[foo.spad]] we will have either 3, 5, or 9
Makefile stanzas related to that domain. Note that the items in each
stanzas are actually explained in reverse order from the way they are 
listed in the code. Since Makefiles are rule based programs the order
does not matter. The reason the stanzas are listed in what appears to
be reverse order is that we are following a ``pull'' model of rule
based programming. We specify the end-state desired (the final [[.o]]
file in the algebra directory) and backward-derive rules that achieve
that state. Thus you can read the Makefile stanzas starting with the
final state and deriving the previous required state. If this doesn't
make sense to you and you don't understand the ``pull'' model of
rule based programming don't worry about it. Just be aware that they
are listed in a logical order and that [[make]] doesn't care.

A 3 stanza group exists for the normal code case. The stanzas perform
the functions:
\begin{enumerate}
\item extract the domain [[BAR.spad]] from the spad file [[foo.spad]]
\item compile the extracted [[BAR.spad]] domain
\item copy the compiled [[BAR.o]] file to the final algebra directory
\end{enumerate}

Once we go beyond the normal case we have a few things that vary.

First, we could have a category that has default implementation code.
Compiling this category will generate files with a trailing [[-]] sign.
So, for instances, you'll see [[BAR]] and [[BAR-]] code generated when
compiling [[BAR.spad]]. This is the first cause of a 5 stanza group.

A 5 stanza group for this case performs the following functions:
\begin{enumerate}
\item extract the domain [[BAR]] from the spad file [[foo.spad]]
\item compile the extracted [[BAR]] domain
\item copy the compiled [[BAR.o]] to the final algebra directory
\item compile the extracted [[BAR]] domain (to get [[BAR-.o]])
\item copy the compiled [[BAR-.o]] to the final algebra directory
\end{enumerate}

Notice the subtle point of step four above. In order to get the
[[BAR-.o]] file we need to compile [[BAR]]. Step four will only
happen if the [[BAR-.o]] file gets erased and the [[BAR.o]] file
still exists. It is skipped during a normal build. It is required,
however, to cover the case where there are lost files in the
intermediate directory ([[BAR-.o]]) that represent a partial
build. Step four will recover from that case.

The second reason for a 5 stanza group is that
we could have a category, domain, or package that is in
the ``bootstrap'' list. Bootstrap spad files contain their generated
lisp code in special sections. The way bootstrapping works is that
we extract the lisp code and compile it rather than extracting the
spad code. We do this because we need the domain to exist before we
can compile the domain. Some domains depend on themselves directly.
Some domains depend on themselves thru a long chain of other domains.
In either case we can't compile the domain until it exists so we
cache the generated lisp code and, when we need to bootstrap the
domain, we compile the raw lisp rather than the spad.

This will only happen when the system is built from scratch. Once
the system has been built the bootstrap code is no longer executed
and these algebra files will appear as normal algebra files. That
means that once the system has been built once only the last three
rules will ever be executed. The first two rules happen when the
system is built from scratch.

A 5 stanza group for this case performs the following functions:
\begin{enumerate}
\item extract the lisp [[BAR.lsp]] from the pamphlet [[foo.spad.pamphlet]]
\item compile and copy the bootstrap lisp to the final algebra directory
\item extract the bootstrap [[BAR.lsp]] from the spad file [[foo.spad]]
\item compile the extracted [[BAR]] domain
\item copy the compiled [[BAR]] to the final algebra directory
\end{enumerate}

The subtle point here occurs in the first item. The bootstrap code
group (in the [[layer0 bootstrap]] code chunk above) asks for the
compiled [[.o]] files in the [[${MID}]] directory. Essentially this
code group calls for intermediate compiled files. This triggers the
bootstrap stanzas (items 1 and 2 above). All of the other layer 
chunks ask for compiled code in the [[${OUT}]] directory which is
the final algebra directory. 

The bootstrap process works because first we ask for the compiled
lisp code stanzas (the [[${MID}/BAR.o]] files), THEN we ask for
the final algebra code stanzas (the [[${OUT}/BAR.o]] files). This
is a very subtle point so think it through carefully. The layer0
bootstrap list is the only file list that calls for [[${MID}]]
files. All other layers ask for [[${OUT}]] files. Make sure you
understand this before you change things. If you break it the
world will no longer compile.

So we have a 3 stanza group for normal files, a 3+2 (5) stanza
group for normal files with default code, and a 3+2 (5) stanza
group for normal files that need to be bootstrapped. There is
another combination that occurs, namely bootstrap code that
also contains default code which gives a 3+2+2+2 (9) stanza case.
(see TSETCAT for an example. Be sure to read the items in reverse order).

A 9 stanza group for this case performs the following functions:
\begin{enumerate}
\item extract the bootstrap [[BAR.lsp]] from the [[foo.spad.pamphlet]]
\item compile the bootstrap [[BAR.lsp]] and copy to the intermediate directory
\item extract the bootstrap [[BAR-.lsp]] from the [[foo.spad.pamphlet]]
\item compile the bootstrap [[BAR-.lsp]] and copy to intermediate directory
\item extract the spad [[BAR.spad]] from the pamphlet [[foo.spad.pamphlet]]
\item compile the extracted [[BAR.spad]] domain (to get [[BAR.o]])
\item copy the [[BAR.o]] to the final algebra directory
\item compile the extracted [[BAR.spad]] domain (to get [[BAR-.o]])
\item copy the [[BAR-.o]] to the final algebra directory
\end{enumerate}

As you can see this is just the combination of the two possible 5
stanza case. We just have to deal with the [[BAR-]] both in regular
and bootstrap files. The first four stanzas will only happen when
the system is built from scratch. Once the system is built these
four rules no longer apply and these stanzas effectively act like
the 5 stanza rules above.

I'm sure all of this seems confusing but it is very stylized code.
Basically you need to figure out which kind of stanza group you need,
copy an existing stanza group, and do a correct renaming of the parts.
The decision tree looks something like:
\begin{verbatim}
IF (you have a regular spad domain)
 THEN use a 3 stanza form (see YSTREAM)
IF (you have a default spad domain (it generates [[-]] files)) AND
   (it does not require bootstrapping)
 THEN use the first 5 stanza form explained above (see LIECAT)
IF (you have a normal spad domain) AND
   (it requires bootstrapping)
 THEN use the second 5 stanza form explained above (see VECTOR)
IF (you have a default spad domain (it generates [[-]] files)) AND
   (it requires bootstrapping)
 THEN use the 9 stanza form explained above (see TSETCAT)
\end{verbatim}
 

\subsection{acplot.spad \cite{1}}
<<acplot.spad (SPAD from IN)>>=
${OUTSRC}/acplot.spad: ${IN}/acplot.spad.pamphlet
	@ echo 1 making ${OUTSRC}/acplot.spad from ${IN}/acplot.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/acplot.spad.pamphlet >acplot.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ACPLOT.o (O from NRLIB)>>=
${OUT}/ACPLOT.o: ${MID}/ACPLOT.NRLIB
	@ echo 2-19 making ${OUT}/ACPLOT.o from ${MID}/ACPLOT.NRLIB
	@ cp ${MID}/ACPLOT.NRLIB/code.o ${OUT}/ACPLOT.o

@
<<ACPLOT.NRLIB (NRLIB from MID)>>=
${MID}/ACPLOT.NRLIB: ${MID}/ACPLOT.spad
	@ echo 3 making ${MID}/ACPLOT.NRLIB from ${MID}/ACPLOT.spad
	@ (cd ${MID} ; 	echo ')co ACPLOT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ACPLOT.spad (SPAD from IN)>>=
${MID}/ACPLOT.spad: ${IN}/acplot.spad.pamphlet
	@ echo 4 making ${MID}/ACPLOT.spad from ${IN}/acplot.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ACPLOT.NRLIB ; \
	${TANGLE} -R"domain ACPLOT PlaneAlgebraicCurvePlot" ${IN}/acplot.spad.pamphlet >ACPLOT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<REALSOLV.o (O from NRLIB)>>=
${OUT}/REALSOLV.o: ${MID}/REALSOLV.NRLIB
	@ echo 5-14 making ${OUT}/REALSOLV.o from ${MID}/REALSOLV.NRLIB
	@ cp ${MID}/REALSOLV.NRLIB/code.o ${OUT}/REALSOLV.o

@
<<REALSOLV.NRLIB (NRLIB from MID)>>=
${MID}/REALSOLV.NRLIB: ${MID}/REALSOLV.spad
	@ echo 6 making ${MID}/REALSOLV.NRLIB from ${MID}/REALSOLV.spad
	@ (cd ${MID} ; 	echo ')co REALSOLV.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<REALSOLV.spad (SPAD from IN)>>=
${MID}/REALSOLV.spad: ${IN}/acplot.spad.pamphlet
	@ echo 7 making ${MID}/REALSOLV.spad from ${IN}/acplot.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf REALSOLV.NRLIB ; \
	${TANGLE} -R"package REALSOLV RealSolvePackage" ${IN}/acplot.spad.pamphlet >REALSOLV.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<acplot.spad.dvi (DOC from IN)>>=
${DOC}/acplot.spad.dvi: ${IN}/acplot.spad.pamphlet ${DOC}/axiom.sty
	@ echo 8 making ${DOC}/acplot.spad.dvi from ${IN}/acplot.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/acplot.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} acplot.spad ; \
	rm -f ${DOC}/acplot.spad.pamphlet ; \
	rm -f ${DOC}/acplot.spad.tex ; \
	rm -f ${DOC}/acplot.spad )

@
\subsection{aggcat2.spad \cite{1}}
<<aggcat2.spad (SPAD from IN)>>=
${OUTSRC}/aggcat2.spad: ${IN}/aggcat2.spad.pamphlet
	@ echo 9 making ${OUTSRC}/aggcat2.spad from ${IN}/aggcat2.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/aggcat2.spad.pamphlet >aggcat2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FLAGG2.o (O from NRLIB)>>=
${OUT}/FLAGG2.o: ${MID}/FLAGG2.NRLIB
	@ echo 10-10 making ${OUT}/FLAGG2.o from ${MID}/FLAGG2.NRLIB
	@ cp ${MID}/FLAGG2.NRLIB/code.o ${OUT}/FLAGG2.o

@
<<FLAGG2.NRLIB (NRLIB from MID)>>=
${MID}/FLAGG2.NRLIB: ${OUT}/BASTYPE.o ${OUT}/KOERCE.o ${MID}/FLAGG2.spad
	@ echo 11 making ${MID}/FLAGG2.NRLIB from ${MID}/FLAGG2.spad
	@ (cd ${MID} ; 	echo ')co FLAGG2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FLAGG2.spad (SPAD from IN)>>=
${MID}/FLAGG2.spad: ${IN}/aggcat2.spad.pamphlet
	@ echo 12 making ${MID}/FLAGG2.spad from ${IN}/aggcat2.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FLAGG2.NRLIB ; \
	${TANGLE} -R"package FLAGG2 FiniteLinearAggregateFunctions2" ${IN}/aggcat2.spad.pamphlet >FLAGG2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FSAGG2.o (O from NRLIB)>>=
${OUT}/FSAGG2.o: ${MID}/FSAGG2.NRLIB
	@ echo 13-17 making ${OUT}/FSAGG2.o from ${MID}/FSAGG2.NRLIB
	@ cp ${MID}/FSAGG2.NRLIB/code.o ${OUT}/FSAGG2.o

@
<<FSAGG2.NRLIB (NRLIB from MID)>>=
${MID}/FSAGG2.NRLIB: ${OUT}/BASTYPE.o ${OUT}/KOERCE.o ${MID}/FSAGG2.spad
	@ echo 14 making ${MID}/FSAGG2.NRLIB from ${MID}/FSAGG2.spad
	@ (cd ${MID} ; 	echo ')co FSAGG2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FSAGG2.spad (SPAD from IN)>>=
${MID}/FSAGG2.spad: ${IN}/aggcat2.spad.pamphlet
	@ echo 15 making ${MID}/FSAGG2.spad from ${IN}/aggcat2.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FSAGG2.NRLIB ; \
	${TANGLE} -R"package FSAGG2 FiniteSetAggregateFunctions2" ${IN}/aggcat2.spad.pamphlet >FSAGG2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<aggcat2.spad.dvi (DOC from IN)>>=
${DOC}/aggcat2.spad.dvi: ${IN}/aggcat2.spad.pamphlet ${DOC}/axiom.sty
	@ echo 160 making ${DOC}/aggcat2.spad.dvi from ${IN}/aggcat2.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/aggcat2.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} aggcat2.spad ; \
	rm -f ${DOC}/aggcat2.spad.pamphlet ; \
	rm -f ${DOC}/aggcat2.spad.tex ; \
	rm -f ${DOC}/aggcat2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
\subsection{aggcat.spad \cite{1}}
<<aggcat.spad (SPAD from IN)>>=
${OUTSRC}/aggcat.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 17 making ${OUTSRC}/aggcat.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/aggcat.spad.pamphlet >aggcat.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ALAGG.o (O from NRLIB)>>=
${OUT}/ALAGG.o: ${MID}/ALAGG.NRLIB
	@ echo 18-0c making ${OUT}/ALAGG.o from ${MID}/ALAGG.NRLIB
	@ cp ${MID}/ALAGG.NRLIB/code.o ${OUT}/ALAGG.o

@
<<ALAGG.NRLIB (NRLIB from MID)>>=
${MID}/ALAGG.NRLIB: ${MID}/ALAGG.spad
	@ echo 19 making ${MID}/ALAGG.NRLIB from ${MID}/ALAGG.spad
	@ (cd ${MID} ; 	echo ')co ALAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ALAGG.spad (SPAD from IN)>>=
${MID}/ALAGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 20 making ${MID}/ALAGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ALAGG.NRLIB ; \
	${TANGLE} -R"category ALAGG AssociationListAggregate" ${IN}/aggcat.spad.pamphlet >ALAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ALAGG.o (BOOTSTRAP from MID)>>=
${MID}/ALAGG.o: ${MID}/ALAGG.lsp
	@ echo 21-0b making ${MID}/ALAGG.o from ${MID}/ALAGG.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "ALAGG.lsp" :output-file "ALAGG.o"))' | ${DEPSYS} )
	@ cp ${MID}/ALAGG.o ${OUT}/ALAGG.o

@
<<ALAGG.lsp (LISP from IN)>>=
${MID}/ALAGG.lsp: ${IN}/aggcat.spad.pamphlet
	@ echo 22 making ${MID}/ALAGG.lsp from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ALAGG.NRLIB ; \
	rm -rf ${OUT}/ALAGG.o ; \
	${TANGLE} -R"ALAGG.lsp BOOTSTRAP" ${IN}/aggcat.spad.pamphlet >ALAGG.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<A1AGG-.o (O from NRLIB)>>=
${OUT}/A1AGG-.o: ${MID}/A1AGG.NRLIB
	@ echo 23-10 making ${OUT}/A1AGG-.o from ${MID}/A1AGG-.NRLIB
	@ cp ${MID}/A1AGG-.NRLIB/code.o ${OUT}/A1AGG-.o

@
<<A1AGG-.NRLIB (NRLIB from MID)>>=
${MID}/A1AGG-.NRLIB: ${MID}/A1AGG.spad 
	@ echo 24 making ${MID}/A1AGG-.NRLIB from ${MID}/A1AGG.spad
	@ (cd ${MID} ; 	echo ')co A1AGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<A1AGG.o (O from NRLIB)>>=
${OUT}/A1AGG.o: ${MID}/A1AGG.NRLIB
	@ echo 25-10 making ${OUT}/A1AGG.o from ${MID}/A1AGG.NRLIB
	@ cp ${MID}/A1AGG.NRLIB/code.o ${OUT}/A1AGG.o

@
<<A1AGG.NRLIB (NRLIB from MID)>>=
${MID}/A1AGG.NRLIB: ${MID}/A1AGG.spad
	@ echo 26 making ${MID}/A1AGG.NRLIB from ${MID}/A1AGG.spad
	@ (cd ${MID} ; 	echo ')co A1AGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<A1AGG.spad (SPAD from IN)>>=
${MID}/A1AGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 27 making ${MID}/A1AGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf A1AGG.NRLIB ; \
	${TANGLE} -R"category A1AGG OneDimensionalArrayAggregate" ${IN}/aggcat.spad.pamphlet >A1AGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<AGG-.o (O from NRLIB)>>=
${OUT}/AGG-.o: ${MID}/AGG.NRLIB
	@ echo 28-3 making ${OUT}/AGG-.o from ${MID}/AGG-.NRLIB
	@ cp ${MID}/AGG-.NRLIB/code.o ${OUT}/AGG-.o

@
<<AGG-.NRLIB (NRLIB from MID)>>=
${MID}/AGG-.NRLIB: ${MID}/AGG.spad 
	@ echo 29 making ${MID}/AGG-.NRLIB from ${MID}/AGG.spad
	@ (cd ${MID} ; 	echo ')co AGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<AGG.o (O from NRLIB)>>=
${OUT}/AGG.o: ${MID}/AGG.NRLIB
	@ echo 30-3 making ${OUT}/AGG.o from ${MID}/AGG.NRLIB
	@ cp ${MID}/AGG.NRLIB/code.o ${OUT}/AGG.o

@
<<AGG.NRLIB (NRLIB from MID)>>=
${MID}/AGG.NRLIB: ${MID}/AGG.spad
	@ echo 31 making ${MID}/AGG.NRLIB from ${MID}/AGG.spad
	@ (cd ${MID} ; 	echo ')co AGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<AGG.spad (SPAD from IN)>>=
${MID}/AGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 32 making ${MID}/AGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf AGG.NRLIB ; \
	${TANGLE} -R"category AGG Aggregate" ${IN}/aggcat.spad.pamphlet >AGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BGAGG-.o (O from NRLIB)>>=
${OUT}/BGAGG-.o: ${MID}/BGAGG.NRLIB
	@ echo 33-6 making ${OUT}/BGAGG-.o from ${MID}/BGAGG-.NRLIB
	@ cp ${MID}/BGAGG-.NRLIB/code.o ${OUT}/BGAGG-.o

@
<<BGAGG-.NRLIB (NRLIB from MID)>>=
${MID}/BGAGG-.NRLIB: ${MID}/BGAGG.spad 
	@ echo 34 making ${MID}/BGAGG-.NRLIB from ${MID}/BGAGG.spad
	@ (cd ${MID} ; 	echo ')co BGAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BGAGG.o (O from NRLIB)>>=
${OUT}/BGAGG.o: ${MID}/BGAGG.NRLIB
	@ echo 35-6 making ${OUT}/BGAGG.o from ${MID}/BGAGG.NRLIB
	@ cp ${MID}/BGAGG.NRLIB/code.o ${OUT}/BGAGG.o

@
<<BGAGG.NRLIB (NRLIB from MID)>>=
${MID}/BGAGG.NRLIB: ${MID}/BGAGG.spad
	@ echo 36 making ${MID}/BGAGG.NRLIB from ${MID}/BGAGG.spad
	@ (cd ${MID} ; 	echo ')co BGAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BGAGG.spad (SPAD from IN)>>=
${MID}/BGAGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 37 making ${MID}/BGAGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf BGAGG.NRLIB ; \
	${TANGLE} -R"category BGAGG BagAggregate" ${IN}/aggcat.spad.pamphlet >BGAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BRAGG-.o (O from NRLIB)>>=
${OUT}/BRAGG-.o: ${MID}/BRAGG.NRLIB
	@ echo 38-6 making ${OUT}/BRAGG-.o from ${MID}/BRAGG-.NRLIB
	@ cp ${MID}/BRAGG-.NRLIB/code.o ${OUT}/BRAGG-.o

@
<<BRAGG-.NRLIB (NRLIB from MID)>>=
${MID}/BRAGG-.NRLIB: ${MID}/BRAGG.spad 
	@ echo 39 making ${MID}/BRAGG-.NRLIB from ${MID}/BRAGG.spad
	@ (cd ${MID} ; 	echo ')co BRAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BRAGG.o (O from NRLIB)>>=
${OUT}/BRAGG.o: ${MID}/BRAGG.NRLIB
	@ echo 40-6 making ${OUT}/BRAGG.o from ${MID}/BRAGG.NRLIB
	@ cp ${MID}/BRAGG.NRLIB/code.o ${OUT}/BRAGG.o

@
<<BRAGG.NRLIB (NRLIB from MID)>>=
${MID}/BRAGG.NRLIB: ${MID}/BRAGG.spad
	@ echo 41 making ${MID}/BRAGG.NRLIB from ${MID}/BRAGG.spad
	@ (cd ${MID} ; 	echo ')co BRAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BRAGG.spad (SPAD from IN)>>=
${MID}/BRAGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 42 making ${MID}/BRAGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf BRAGG.NRLIB ; \
	${TANGLE} -R"category BRAGG BinaryRecursiveAggregate" ${IN}/aggcat.spad.pamphlet >BRAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BTAGG-.o (O from NRLIB)>>=
${OUT}/BTAGG-.o: ${MID}/BTAGG.NRLIB
	@ echo 43-11 making ${OUT}/BTAGG-.o from ${MID}/BTAGG-.NRLIB
	@ cp ${MID}/BTAGG-.NRLIB/code.o ${OUT}/BTAGG-.o

@
<<BTAGG-.NRLIB (NRLIB from MID)>>=
${MID}/BTAGG-.NRLIB: ${MID}/BTAGG.spad 
	@ echo 44 making ${MID}/BTAGG-.NRLIB from ${MID}/BTAGG.spad
	@ (cd ${MID} ; 	echo ')co BTAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BTAGG.o (O from NRLIB)>>=
${OUT}/BTAGG.o: ${MID}/BTAGG.NRLIB
	@ echo 45-11 making ${OUT}/BTAGG.o from ${MID}/BTAGG.NRLIB
	@ cp ${MID}/BTAGG.NRLIB/code.o ${OUT}/BTAGG.o

@
<<BTAGG.NRLIB (NRLIB from MID)>>=
${MID}/BTAGG.NRLIB: ${MID}/BTAGG.spad
	@ echo 46 making ${MID}/BTAGG.NRLIB from ${MID}/BTAGG.spad
	@ (cd ${MID} ; 	echo ')co BTAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BTAGG.spad (SPAD from IN)>>=
${MID}/BTAGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 47 making ${MID}/BTAGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf BTAGG.NRLIB ; \
	${TANGLE} -R"category BTAGG BitAggregate" ${IN}/aggcat.spad.pamphlet >BTAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CLAGG-.o (O from NRLIB)>>=
${OUT}/CLAGG-.o: ${MID}/CLAGG.NRLIB
	@ echo 48-0c making ${OUT}/CLAGG-.o from ${MID}/CLAGG-.NRLIB
	@ cp ${MID}/CLAGG-.NRLIB/code.o ${OUT}/CLAGG-.o

@
<<CLAGG-.NRLIB (NRLIB from MID)>>=
${MID}/CLAGG-.NRLIB: ${MID}/CLAGG.spad 
	@ echo 49 making ${MID}/CLAGG-.NRLIB from ${MID}/CLAGG.spad
	@ (cd ${MID} ; 	echo ')co CLAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CLAGG.o (O from NRLIB)>>=
${OUT}/CLAGG.o: ${MID}/CLAGG.NRLIB
	@ echo 50-0c making ${OUT}/CLAGG.o from ${MID}/CLAGG.NRLIB
	@ cp ${MID}/CLAGG.NRLIB/code.o ${OUT}/CLAGG.o

@
<<CLAGG.NRLIB (NRLIB from MID)>>=
${MID}/CLAGG.NRLIB: ${MID}/CLAGG.spad
	@ echo 51 making ${MID}/CLAGG.NRLIB from ${MID}/CLAGG.spad
	@ (cd ${MID} ; 	echo ')co CLAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CLAGG.spad (SPAD from IN)>>=
${MID}/CLAGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 52 making ${MID}/CLAGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CLAGG.NRLIB ; \
	${TANGLE} -R"category CLAGG Collection" ${IN}/aggcat.spad.pamphlet >CLAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CLAGG-.o (BOOTSTRAP from MID)>>=
${MID}/CLAGG-.o: ${MID}/CLAGG-.lsp 
	@ echo 53-0b making ${MID}/CLAGG-.o from ${MID}/CLAGG-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "CLAGG-.lsp" :output-file "CLAGG-.o"))' | ${DEPSYS} )
	@ cp ${MID}/CLAGG-.o ${OUT}/CLAGG-.o

@
<<CLAGG-.lsp (LISP from IN)>>=
${MID}/CLAGG-.lsp: ${IN}/aggcat.spad.pamphlet
	@ echo 54 making ${MID}/CLAGG-.lsp from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CLAGG-.NRLIB ; \
	rm -rf ${OUT}/CLAGG-.o ; \
	${TANGLE} -R"CLAGG-.lsp BOOTSTRAP" ${IN}/aggcat.spad.pamphlet >CLAGG-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CLAGG.o (BOOTSTRAP from MID)>>=
${MID}/CLAGG.o: ${MID}/CLAGG.lsp 
	@ echo 55-0b making ${MID}/CLAGG.o from ${MID}/CLAGG.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "CLAGG.lsp" :output-file "CLAGG.o"))' | ${DEPSYS} )
	@ cp ${MID}/CLAGG.o ${OUT}/CLAGG.o

@
<<CLAGG.lsp (LISP from IN)>>=
${MID}/CLAGG.lsp: ${IN}/aggcat.spad.pamphlet
	@ echo 56 making ${MID}/CLAGG.lsp from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CLAGG.NRLIB ; \
	rm -rf ${OUT}/CLAGG.o ; \
	${TANGLE} -R"CLAGG.lsp BOOTSTRAP" ${IN}/aggcat.spad.pamphlet >CLAGG.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DIAGG-.o (O from NRLIB)>>=
${OUT}/DIAGG-.o: ${MID}/DIAGG.NRLIB
	@ echo 57-15 making ${OUT}/DIAGG-.o from ${MID}/DIAGG-.NRLIB
	@ cp ${MID}/DIAGG-.NRLIB/code.o ${OUT}/DIAGG-.o

@
<<DIAGG-.NRLIB (NRLIB from MID)>>=
${MID}/DIAGG-.NRLIB: ${MID}/DIAGG.spad 
	@ echo 58 making ${MID}/DIAGG-.NRLIB from ${MID}/DIAGG.spad
	@ (cd ${MID} ; 	echo ')co DIAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DIAGG.o (O from NRLIB)>>=
${OUT}/DIAGG.o: ${MID}/DIAGG.NRLIB
	@ echo 59-15 making ${OUT}/DIAGG.o from ${MID}/DIAGG.NRLIB
	@ cp ${MID}/DIAGG.NRLIB/code.o ${OUT}/DIAGG.o

@
<<DIAGG.NRLIB (NRLIB from MID)>>=
${MID}/DIAGG.NRLIB: ${MID}/DIAGG.spad
	@ echo 60 making ${MID}/DIAGG.NRLIB from ${MID}/DIAGG.spad
	@ (cd ${MID} ; 	echo ')co DIAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DIAGG.spad (SPAD from IN)>>=
${MID}/DIAGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 61 making ${MID}/DIAGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DIAGG.NRLIB ; \
	${TANGLE} -R"category DIAGG Dictionary" ${IN}/aggcat.spad.pamphlet >DIAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DIOPS-.o (O from NRLIB)>>=
${OUT}/DIOPS-.o: ${MID}/DIOPS.NRLIB
	@ echo 62-14 making ${OUT}/DIOPS-.o from ${MID}/DIOPS-.NRLIB
	@ cp ${MID}/DIOPS-.NRLIB/code.o ${OUT}/DIOPS-.o

@
<<DIOPS-.NRLIB (NRLIB from MID)>>=
${MID}/DIOPS-.NRLIB: ${MID}/DIOPS.spad 
	@ echo 63 making ${MID}/DIOPS-.NRLIB from ${MID}/DIOPS.spad
	@ (cd ${MID} ; 	echo ')co DIOPS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DIOPS.o (O from NRLIB)>>=
${OUT}/DIOPS.o: ${MID}/DIOPS.NRLIB
	@ echo 64-14 making ${OUT}/DIOPS.o from ${MID}/DIOPS.NRLIB
	@ cp ${MID}/DIOPS.NRLIB/code.o ${OUT}/DIOPS.o

@
<<DIOPS.NRLIB (NRLIB from MID)>>=
${MID}/DIOPS.NRLIB: ${MID}/DIOPS.spad
	@ echo 65 making ${MID}/DIOPS.NRLIB from ${MID}/DIOPS.spad
	@ (cd ${MID} ; 	echo ')co DIOPS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DIOPS.spad (SPAD from IN)>>=
${MID}/DIOPS.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 66 making ${MID}/DIOPS.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DIOPS.NRLIB ; \
	${TANGLE} -R"category DIOPS DictionaryOperations" ${IN}/aggcat.spad.pamphlet >DIOPS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DLAGG.o (O from NRLIB)>>=
${OUT}/DLAGG.o: ${MID}/DLAGG.NRLIB
	@ echo 67-6 making ${OUT}/DLAGG.o from ${MID}/DLAGG.NRLIB
	@ cp ${MID}/DLAGG.NRLIB/code.o ${OUT}/DLAGG.o

@
<<DLAGG.NRLIB (NRLIB from MID)>>=
${MID}/DLAGG.NRLIB: ${MID}/DLAGG.spad
	@ echo 68 making ${MID}/DLAGG.NRLIB from ${MID}/DLAGG.spad
	@ (cd ${MID} ; 	echo ')co DLAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DLAGG.spad (SPAD from IN)>>=
${MID}/DLAGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 69 making ${MID}/DLAGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DLAGG.NRLIB ; \
	${TANGLE} -R"category DLAGG DoublyLinkedAggregate" ${IN}/aggcat.spad.pamphlet >DLAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DQAGG.o (O from NRLIB)>>=
${OUT}/DQAGG.o: ${MID}/DQAGG.NRLIB
	@ echo 70-8 making ${OUT}/DQAGG.o from ${MID}/DQAGG.NRLIB
	@ cp ${MID}/DQAGG.NRLIB/code.o ${OUT}/DQAGG.o

@
<<DQAGG.NRLIB (NRLIB from MID)>>=
${MID}/DQAGG.NRLIB: ${MID}/DQAGG.spad
	@ echo 71 making ${MID}/DQAGG.NRLIB from ${MID}/DQAGG.spad
	@ (cd ${MID} ; 	echo ')co DQAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DQAGG.spad (SPAD from IN)>>=
${MID}/DQAGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 72 making ${MID}/DQAGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DQAGG.NRLIB ; \
	${TANGLE} -R"category DQAGG DequeueAggregate" ${IN}/aggcat.spad.pamphlet >DQAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ELAGG-.o (O from NRLIB)>>=
${OUT}/ELAGG-.o: ${MID}/ELAGG.NRLIB
	@ echo 73-6 making ${OUT}/ELAGG-.o from ${MID}/ELAGG-.NRLIB
	@ cp ${MID}/ELAGG-.NRLIB/code.o ${OUT}/ELAGG-.o

@
<<ELAGG-.NRLIB (NRLIB from MID)>>=
${MID}/ELAGG-.NRLIB: ${MID}/ELAGG.spad 
	@ echo 74 making ${MID}/ELAGG-.NRLIB from ${MID}/ELAGG.spad
	@ (cd ${MID} ; 	echo ')co ELAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ELAGG.o (O from NRLIB)>>=
${OUT}/ELAGG.o: ${MID}/ELAGG.NRLIB
	@ echo 75-6 making ${OUT}/ELAGG.o from ${MID}/ELAGG.NRLIB
	@ cp ${MID}/ELAGG.NRLIB/code.o ${OUT}/ELAGG.o

@
<<ELAGG.NRLIB (NRLIB from MID)>>=
${MID}/ELAGG.NRLIB: ${MID}/ELAGG.spad
	@ echo 76 making ${MID}/ELAGG.NRLIB from ${MID}/ELAGG.spad
	@ (cd ${MID} ; 	echo ')co ELAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ELAGG.spad (SPAD from IN)>>=
${MID}/ELAGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 77 making ${MID}/ELAGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ELAGG.NRLIB ; \
	${TANGLE} -R"category ELAGG ExtensibleLinearAggregate" ${IN}/aggcat.spad.pamphlet >ELAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ELTAB.o (O from NRLIB)>>=
${OUT}/ELTAB.o: ${MID}/ELTAB.NRLIB
	@ echo 78-0 making ${OUT}/ELTAB.o from ${MID}/ELTAB.NRLIB
	@ cp ${MID}/ELTAB.NRLIB/code.o ${OUT}/ELTAB.o

@
<<ELTAB.NRLIB (NRLIB from MID)>>=
${MID}/ELTAB.NRLIB: ${MID}/ELTAB.spad
	@ echo 79 making ${MID}/ELTAB.NRLIB from ${MID}/ELTAB.spad
	@ (cd ${MID} ; 	echo ')co ELTAB.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ELTAB.spad (SPAD from IN)>>=
${MID}/ELTAB.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 80 making ${MID}/ELTAB.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ELTAB.NRLIB ; \
	${TANGLE} -R"category ELTAB Eltable" ${IN}/aggcat.spad.pamphlet >ELTAB.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ELTAGG-.o (O from NRLIB)>>=
${OUT}/ELTAGG-.o: ${MID}/ELTAGG.NRLIB
	@ echo 81-4 making ${OUT}/ELTAGG-.o from ${MID}/ELTAGG-.NRLIB
	@ cp ${MID}/ELTAGG-.NRLIB/code.o ${OUT}/ELTAGG-.o

@
<<ELTAGG-.NRLIB (NRLIB from MID)>>=
${MID}/ELTAGG-.NRLIB:  ${MID}/ELTAGG.spad 
	@ echo 82 making ${MID}/ELTAGG-.NRLIB from ${MID}/ELTAGG.spad
	@ (cd ${MID} ; 	echo ')co ELTAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ELTAGG.o (O from NRLIB)>>=
${OUT}/ELTAGG.o: ${MID}/ELTAGG.NRLIB
	@ echo 83-4 making ${OUT}/ELTAGG.o from ${MID}/ELTAGG.NRLIB
	@ cp ${MID}/ELTAGG.NRLIB/code.o ${OUT}/ELTAGG.o

@
<<ELTAGG.NRLIB (NRLIB from MID)>>=
${MID}/ELTAGG.NRLIB: ${MID}/ELTAGG.spad
	@ echo 84 making ${MID}/ELTAGG.NRLIB from ${MID}/ELTAGG.spad
	@ (cd ${MID} ; 	echo ')co ELTAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ELTAGG.spad (SPAD from IN)>>=
${MID}/ELTAGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 85 making ${MID}/ELTAGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ELTAGG.NRLIB ; \
	${TANGLE} -R"category ELTAGG EltableAggregate" ${IN}/aggcat.spad.pamphlet >ELTAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FLAGG-.o (O from NRLIB)>>=
${OUT}/FLAGG-.o: ${MID}/FLAGG.NRLIB
	@ echo 86-9 making ${OUT}/FLAGG-.o from ${MID}/FLAGG-.NRLIB
	@ cp ${MID}/FLAGG-.NRLIB/code.o ${OUT}/FLAGG-.o

@
<<FLAGG-.NRLIB (NRLIB from MID)>>=
${MID}/FLAGG-.NRLIB: ${MID}/FLAGG.spad 
	@ echo 87 making ${MID}/FLAGG-.NRLIB from ${MID}/FLAGG.spad
	@ (cd ${MID} ; 	echo ')co FLAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FLAGG.o (O from NRLIB)>>=
${OUT}/FLAGG.o: ${MID}/FLAGG.NRLIB
	@ echo 88-9 making ${OUT}/FLAGG.o from ${MID}/FLAGG.NRLIB
	@ cp ${MID}/FLAGG.NRLIB/code.o ${OUT}/FLAGG.o

@
<<FLAGG.NRLIB (NRLIB from MID)>>=
${MID}/FLAGG.NRLIB: ${MID}/FLAGG.spad
	@ echo 89 making ${MID}/FLAGG.NRLIB from ${MID}/FLAGG.spad
	@ (cd ${MID} ; 	echo ')co FLAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FLAGG.spad (SPAD from IN)>>=
${MID}/FLAGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 90 making ${MID}/FLAGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FLAGG.NRLIB ; \
	${TANGLE} -R"category FLAGG FiniteLinearAggregate" ${IN}/aggcat.spad.pamphlet >FLAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FSAGG-.o (O from NRLIB)>>=
${OUT}/FSAGG-.o: ${MID}/FSAGG.NRLIB
	@ echo 91-16 making ${OUT}/FSAGG-.o from ${MID}/FSAGG-.NRLIB
	@ cp ${MID}/FSAGG-.NRLIB/code.o ${OUT}/FSAGG-.o

@
<<FSAGG-.NRLIB (NRLIB from MID)>>=
${MID}/FSAGG-.NRLIB: ${MID}/FSAGG.spad 
	@ echo 92 making ${MID}/FSAGG-.NRLIB from ${MID}/FSAGG.spad
	@ (cd ${MID} ; 	echo ')co FSAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FSAGG.o (O from NRLIB)>>=
${OUT}/FSAGG.o: ${MID}/FSAGG.NRLIB
	@ echo 93-16 making ${OUT}/FSAGG.o from ${MID}/FSAGG.NRLIB
	@ cp ${MID}/FSAGG.NRLIB/code.o ${OUT}/FSAGG.o

@
<<FSAGG.NRLIB (NRLIB from MID)>>=
${MID}/FSAGG.NRLIB: ${MID}/FSAGG.spad
	@ echo 94 making ${MID}/FSAGG.NRLIB from ${MID}/FSAGG.spad
	@ (cd ${MID} ; 	echo ')co FSAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FSAGG.spad (SPAD from IN)>>=
${MID}/FSAGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 95 making ${MID}/FSAGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FSAGG.NRLIB ; \
	${TANGLE} -R"category FSAGG FiniteSetAggregate" ${IN}/aggcat.spad.pamphlet >FSAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MSETAGG.o (O from NRLIB)>>=
${OUT}/MSETAGG.o: ${MID}/MSETAGG.NRLIB
	@ echo 96-16 making ${OUT}/MSETAGG.o from ${MID}/MSETAGG.NRLIB
	@ cp ${MID}/MSETAGG.NRLIB/code.o ${OUT}/MSETAGG.o

@
<<MSETAGG.NRLIB (NRLIB from MID)>>=
${MID}/MSETAGG.NRLIB: ${MID}/MSETAGG.spad
	@ echo 97 making ${MID}/MSETAGG.NRLIB from ${MID}/MSETAGG.spad
	@ (cd ${MID} ; 	echo ')co MSETAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MSETAGG.spad (SPAD from IN)>>=
${MID}/MSETAGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 98 making ${MID}/MSETAGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MSETAGG.NRLIB ; \
	${TANGLE} -R"category MSETAGG MultisetAggregate" ${IN}/aggcat.spad.pamphlet >MSETAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<HOAGG-.o (O from NRLIB)>>=
${OUT}/HOAGG-.o: ${MID}/HOAGG.NRLIB
	@ echo 99-0c making ${OUT}/HOAGG-.o from ${MID}/HOAGG-.NRLIB
	@ cp ${MID}/HOAGG-.NRLIB/code.o ${OUT}/HOAGG-.o

@
<<HOAGG-.NRLIB (NRLIB from MID)>>=
${MID}/HOAGG-.NRLIB: ${MID}/HOAGG.spad 
	@ echo 100 making ${MID}/HOAGG-.NRLIB from ${MID}/HOAGG.spad
	@ (cd ${MID} ; 	echo ')co HOAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<HOAGG.o (O from NRLIB)>>=
${OUT}/HOAGG.o: ${MID}/HOAGG.NRLIB
	@ echo 101-0c making ${OUT}/HOAGG.o from ${MID}/HOAGG.NRLIB
	@ cp ${MID}/HOAGG.NRLIB/code.o ${OUT}/HOAGG.o

@
<<HOAGG.NRLIB (NRLIB from MID)>>=
${MID}/HOAGG.NRLIB: ${MID}/HOAGG.spad
	@ echo 102 making ${MID}/HOAGG.NRLIB from ${MID}/HOAGG.spad
	@ (cd ${MID} ; 	echo ')co HOAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<HOAGG.spad (SPAD from IN)>>=
${MID}/HOAGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 103 making ${MID}/HOAGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf HOAGG.NRLIB ; \
	${TANGLE} -R"category HOAGG HomogeneousAggregate" ${IN}/aggcat.spad.pamphlet >HOAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<HOAGG-.o (BOOTSTRAP from MID)>>=
${MID}/HOAGG-.o: ${MID}/HOAGG-.lsp 
	@ echo 104-0b making ${MID}/HOAGG-.o from ${MID}/HOAGG-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "HOAGG-.lsp" :output-file "HOAGG-.o"))' | ${DEPSYS} )
	@ cp ${MID}/HOAGG-.o ${OUT}/HOAGG-.o

@
<<HOAGG-.lsp (LISP from IN)>>=
${MID}/HOAGG-.lsp: ${IN}/aggcat.spad.pamphlet
	@ echo 105 making ${MID}/HOAGG-.lsp from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf HOAGG-.NRLIB ; \
	rm -rf ${OUT}/HOAGG-.o ; \
	${TANGLE} -R"HOAGG-.lsp BOOTSTRAP" ${IN}/aggcat.spad.pamphlet >HOAGG-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<HOAGG.o (BOOTSTRAP from MID)>>=
${MID}/HOAGG.o: ${MID}/HOAGG.lsp 
	@ echo 106-0b making ${MID}/HOAGG.o from ${MID}/HOAGG.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "HOAGG.lsp" :output-file "HOAGG.o"))' | ${DEPSYS} )
	@ cp ${MID}/HOAGG.o ${OUT}/HOAGG.o

@
<<HOAGG.lsp (LISP from IN)>>=
${MID}/HOAGG.lsp: ${IN}/aggcat.spad.pamphlet
	@ echo 107 making ${MID}/HOAGG.lsp from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf HOAGG.NRLIB ; \
	rm -rf ${OUT}/HOAGG.o ; \
	${TANGLE} -R"HOAGG.lsp BOOTSTRAP" ${IN}/aggcat.spad.pamphlet >HOAGG.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IXAGG-.o (O from NRLIB)>>=
${OUT}/IXAGG-.o: ${MID}/IXAGG.NRLIB
	@ echo 108-5 making ${OUT}/IXAGG-.o from ${MID}/IXAGG-.NRLIB
	@ cp ${MID}/IXAGG-.NRLIB/code.o ${OUT}/IXAGG-.o

@
<<IXAGG-.NRLIB (NRLIB from MID)>>=
${MID}/IXAGG-.NRLIB: ${MID}/IXAGG.spad 
	@ echo 109 making ${MID}/IXAGG-.NRLIB from ${MID}/IXAGG.spad
	@ (cd ${MID} ; 	echo ')co IXAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IXAGG.o (O from NRLIB)>>=
${OUT}/IXAGG.o: ${MID}/IXAGG.NRLIB
	@ echo 110-5 making ${OUT}/IXAGG.o from ${MID}/IXAGG.NRLIB
	@ cp ${MID}/IXAGG.NRLIB/code.o ${OUT}/IXAGG.o

@
<<IXAGG.NRLIB (NRLIB from MID)>>=
${MID}/IXAGG.NRLIB: ${MID}/IXAGG.spad
	@ echo 111 making ${MID}/IXAGG.NRLIB from ${MID}/IXAGG.spad
	@ (cd ${MID} ; 	echo ')co IXAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IXAGG.spad (SPAD from IN)>>=
${MID}/IXAGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 112 making ${MID}/IXAGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IXAGG.NRLIB ; \
	${TANGLE} -R"category IXAGG IndexedAggregate" ${IN}/aggcat.spad.pamphlet >IXAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<KDAGG-.o (O from NRLIB)>>=
${OUT}/KDAGG-.o: ${MID}/KDAGG.NRLIB
	@ echo 113-16 making ${OUT}/KDAGG-.o from ${MID}/KDAGG-.NRLIB
	@ cp ${MID}/KDAGG-.NRLIB/code.o ${OUT}/KDAGG-.o

@
<<KDAGG-.NRLIB (NRLIB from MID)>>=
${MID}/KDAGG-.NRLIB: ${MID}/KDAGG.spad 
	@ echo 114 making ${MID}/KDAGG-.NRLIB from ${MID}/KDAGG.spad
	@ (cd ${MID} ; 	echo ')co KDAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<KDAGG.o (O from NRLIB)>>=
${OUT}/KDAGG.o: ${MID}/KDAGG.NRLIB
	@ echo 115-16 making ${OUT}/KDAGG.o from ${MID}/KDAGG.NRLIB
	@ cp ${MID}/KDAGG.NRLIB/code.o ${OUT}/KDAGG.o

@
<<KDAGG.NRLIB (NRLIB from MID)>>=
${MID}/KDAGG.NRLIB: ${MID}/KDAGG.spad
	@ echo 116 making ${MID}/KDAGG.NRLIB from ${MID}/KDAGG.spad
	@ (cd ${MID} ; 	echo ')co KDAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<KDAGG.spad (SPAD from IN)>>=
${MID}/KDAGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 117 making ${MID}/KDAGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf KDAGG.NRLIB ; \
	${TANGLE} -R"category KDAGG KeyedDictionary" ${IN}/aggcat.spad.pamphlet >KDAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LSAGG-.o (O from NRLIB)>>=
${OUT}/LSAGG-.o: ${MID}/LSAGG.NRLIB
	@ echo 118-0c making ${OUT}/LSAGG-.o from ${MID}/LSAGG-.NRLIB
	@ cp ${MID}/LSAGG-.NRLIB/code.o ${OUT}/LSAGG-.o

@
<<LSAGG-.NRLIB (NRLIB from MID)>>=
${MID}/LSAGG-.NRLIB: ${MID}/LSAGG.spad 
	@ echo 119 making ${MID}/LSAGG-.NRLIB from ${MID}/LSAGG.spad
	@ (cd ${MID} ; 	echo ')co LSAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LSAGG.o (O from NRLIB)>>=
${OUT}/LSAGG.o: ${MID}/LSAGG.NRLIB
	@ echo 120-0c making ${OUT}/LSAGG.o from ${MID}/LSAGG.NRLIB
	@ cp ${MID}/LSAGG.NRLIB/code.o ${OUT}/LSAGG.o

@
<<LSAGG.NRLIB (NRLIB from MID)>>=
${MID}/LSAGG.NRLIB: ${MID}/LSAGG.spad
	@ echo 121 making ${MID}/LSAGG.NRLIB from ${MID}/LSAGG.spad
	@ (cd ${MID} ; 	echo ')co LSAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LSAGG.spad (SPAD from IN)>>=
${MID}/LSAGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 122 making ${MID}/LSAGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LSAGG.NRLIB ; \
	${TANGLE} -R"category LSAGG ListAggregate" ${IN}/aggcat.spad.pamphlet >LSAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LSAGG-.o (BOOTSTRAP from MID)>>=
${MID}/LSAGG-.o: ${MID}/LSAGG-.lsp 
	@ echo 123-0b making ${MID}/LSAGG-.o from ${MID}/LSAGG-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "LSAGG-.lsp" :output-file "LSAGG-.o"))' | ${DEPSYS} )
	@ cp ${MID}/LSAGG-.o ${OUT}/LSAGG-.o

@
<<LSAGG-.lsp (LISP from IN)>>=
${MID}/LSAGG-.lsp: ${IN}/aggcat.spad.pamphlet
	@ echo 124 making ${MID}/LSAGG-.lsp from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LSAGG-.NRLIB ; \
	rm -rf ${OUT}/LSAGG-.o ; \
	${TANGLE} -R"LSAGG-.lsp BOOTSTRAP" ${IN}/aggcat.spad.pamphlet >LSAGG-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LSAGG.o (BOOTSTRAP from MID)>>=
${MID}/LSAGG.o: ${MID}/LSAGG.lsp 
	@ echo 125-0b making ${MID}/LSAGG.o from ${MID}/LSAGG.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "LSAGG.lsp" :output-file "LSAGG.o"))' | ${DEPSYS} )
	@ cp ${MID}/LSAGG.o ${OUT}/LSAGG.o

@
<<LSAGG.lsp (LISP from IN)>>=
${MID}/LSAGG.lsp: ${IN}/aggcat.spad.pamphlet
	@ echo 126 making ${MID}/LSAGG.lsp from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LSAGG.NRLIB ; \
	rm -rf ${OUT}/LSAGG.o ; \
	${TANGLE} -R"LSAGG.lsp BOOTSTRAP" ${IN}/aggcat.spad.pamphlet >LSAGG.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LNAGG-.o (O from NRLIB)>>=
${OUT}/LNAGG-.o: ${MID}/LNAGG.NRLIB
	@ echo 127-0c making ${OUT}/LNAGG-.o from ${MID}/LNAGG-.NRLIB
	@ cp ${MID}/LNAGG-.NRLIB/code.o ${OUT}/LNAGG-.o

@
<<LNAGG-.NRLIB (NRLIB from MID)>>=
${MID}/LNAGG-.NRLIB: ${MID}/LNAGG.spad 
	@ echo 128 making ${MID}/LNAGG-.NRLIB from ${MID}/LNAGG.spad
	@ (cd ${MID} ; 	echo ')co LNAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LNAGG.o (O from NRLIB)>>=
${OUT}/LNAGG.o: ${MID}/LNAGG.NRLIB
	@ echo 129-0c making ${OUT}/LNAGG.o from ${MID}/LNAGG.NRLIB
	@ cp ${MID}/LNAGG.NRLIB/code.o ${OUT}/LNAGG.o

@
<<LNAGG.NRLIB (NRLIB from MID)>>=
${MID}/LNAGG.NRLIB: ${MID}/LNAGG.spad
	@ echo 130 making ${MID}/LNAGG.NRLIB from ${MID}/LNAGG.spad
	@ (cd ${MID} ; 	echo ')co LNAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LNAGG.spad (SPAD from IN)>>=
${MID}/LNAGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 131 making ${MID}/LNAGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LNAGG.NRLIB ; \
	${TANGLE} -R"category LNAGG LinearAggregate" ${IN}/aggcat.spad.pamphlet >LNAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LNAGG-.o (BOOTSTRAP from MID)>>=
${MID}/LNAGG-.o: ${MID}/LNAGG-.lsp 
	@ echo 132-0b making ${MID}/LNAGG-.o from ${MID}/LNAGG-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "LNAGG-.lsp" :output-file "LNAGG-.o"))' | ${DEPSYS} )
	@ cp ${MID}/LNAGG-.o ${OUT}/LNAGG-.o

@
<<LNAGG-.lsp (LISP from IN)>>=
${MID}/LNAGG-.lsp: ${IN}/aggcat.spad.pamphlet
	@ echo 133 making ${MID}/LNAGG-.lsp from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LNAGG-.NRLIB ; \
	rm -rf ${OUT}/LNAGG-.o ; \
	${TANGLE} -R"LNAGG-.lsp BOOTSTRAP" ${IN}/aggcat.spad.pamphlet >LNAGG-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LNAGG.o (BOOTSTRAP from MID)>>=
${MID}/LNAGG.o: ${MID}/LNAGG.lsp 
	@ echo 134-0b making ${MID}/LNAGG.o from ${MID}/LNAGG.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "LNAGG.lsp" :output-file "LNAGG.o"))' | ${DEPSYS} )
	@ cp ${MID}/LNAGG.o ${OUT}/LNAGG.o

@
<<LNAGG.lsp (LISP from IN)>>=
${MID}/LNAGG.lsp: ${IN}/aggcat.spad.pamphlet
	@ echo 135 making ${MID}/LNAGG.lsp from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LNAGG.NRLIB ; \
	rm -rf ${OUT}/LNAGG.o ; \
	${TANGLE} -R"LNAGG.lsp BOOTSTRAP" ${IN}/aggcat.spad.pamphlet >LNAGG.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MDAGG.o (O from NRLIB)>>=
${OUT}/MDAGG.o: ${MID}/MDAGG.NRLIB
	@ echo 136-15 making ${OUT}/MDAGG.o from ${MID}/MDAGG.NRLIB
	@ cp ${MID}/MDAGG.NRLIB/code.o ${OUT}/MDAGG.o

@
<<MDAGG.NRLIB (NRLIB from MID)>>=
${MID}/MDAGG.NRLIB: ${MID}/MDAGG.spad
	@ echo 137 making ${MID}/MDAGG.NRLIB from ${MID}/MDAGG.spad
	@ (cd ${MID} ; 	echo ')co MDAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MDAGG.spad (SPAD from IN)>>=
${MID}/MDAGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 138 making ${MID}/MDAGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MDAGG.NRLIB ; \
	${TANGLE} -R"category MDAGG MultiDictionary" ${IN}/aggcat.spad.pamphlet >MDAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OMSAGG.o (O from NRLIB)>>=
${OUT}/OMSAGG.o: ${MID}/OMSAGG.NRLIB
	@ echo 139-17 making ${OUT}/OMSAGG.o from ${MID}/OMSAGG.NRLIB
	@ cp ${MID}/OMSAGG.NRLIB/code.o ${OUT}/OMSAGG.o

@
<<OMSAGG.NRLIB (NRLIB from MID)>>=
${MID}/OMSAGG.NRLIB: ${MID}/OMSAGG.spad
	@ echo 140 making ${MID}/OMSAGG.NRLIB from ${MID}/OMSAGG.spad
	@ (cd ${MID} ; 	echo ')co OMSAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OMSAGG.spad (SPAD from IN)>>=
${MID}/OMSAGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 141 making ${MID}/OMSAGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OMSAGG.NRLIB ; \
	${TANGLE} -R"category OMSAGG OrderedMultisetAggregate" ${IN}/aggcat.spad.pamphlet >OMSAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PRQAGG.o (O from NRLIB)>>=
${OUT}/PRQAGG.o: ${MID}/PRQAGG.NRLIB
	@ echo 142-7 making ${OUT}/PRQAGG.o from ${MID}/PRQAGG.NRLIB
	@ cp ${MID}/PRQAGG.NRLIB/code.o ${OUT}/PRQAGG.o

@
<<PRQAGG.NRLIB (NRLIB from MID)>>=
${MID}/PRQAGG.NRLIB: ${MID}/PRQAGG.spad
	@ echo 143 making ${MID}/PRQAGG.NRLIB from ${MID}/PRQAGG.spad
	@ (cd ${MID} ; 	echo ')co PRQAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PRQAGG.spad (SPAD from IN)>>=
${MID}/PRQAGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 144 making ${MID}/PRQAGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PRQAGG.NRLIB ; \
	${TANGLE} -R"category PRQAGG PriorityQueueAggregate" ${IN}/aggcat.spad.pamphlet >PRQAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<QUAGG.o (O from NRLIB)>>=
${OUT}/QUAGG.o: ${MID}/QUAGG.NRLIB
	@ echo 145-7 making ${OUT}/QUAGG.o from ${MID}/QUAGG.NRLIB
	@ cp ${MID}/QUAGG.NRLIB/code.o ${OUT}/QUAGG.o

@
<<QUAGG.NRLIB (NRLIB from MID)>>=
${MID}/QUAGG.NRLIB: ${MID}/QUAGG.spad
	@ echo 146 making ${MID}/QUAGG.NRLIB from ${MID}/QUAGG.spad
	@ (cd ${MID} ; 	echo ')co QUAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<QUAGG.spad (SPAD from IN)>>=
${MID}/QUAGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 147 making ${MID}/QUAGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf QUAGG.NRLIB ; \
	${TANGLE} -R"category QUAGG QueueAggregate" ${IN}/aggcat.spad.pamphlet >QUAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RCAGG-.o (O from NRLIB)>>=
${OUT}/RCAGG-.o: ${MID}/RCAGG.NRLIB
	@ echo 148-0c making ${OUT}/RCAGG-.o from ${MID}/RCAGG-.NRLIB
	@ cp ${MID}/RCAGG-.NRLIB/code.o ${OUT}/RCAGG-.o

@
<<RCAGG-.NRLIB (NRLIB from MID)>>=
${MID}/RCAGG-.NRLIB: ${MID}/RCAGG.spad 
	@ echo 149 making ${MID}/RCAGG-.NRLIB from ${MID}/RCAGG.spad
	@ (cd ${MID} ; 	echo ')co RCAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RCAGG.o (O from NRLIB)>>=
${OUT}/RCAGG.o: ${MID}/RCAGG.NRLIB
	@ echo 150-0c making ${OUT}/RCAGG.o from ${MID}/RCAGG.NRLIB
	@ cp ${MID}/RCAGG.NRLIB/code.o ${OUT}/RCAGG.o

@
<<RCAGG.NRLIB (NRLIB from MID)>>=
${MID}/RCAGG.NRLIB: ${MID}/RCAGG.spad
	@ echo 151 making ${MID}/RCAGG.NRLIB from ${MID}/RCAGG.spad
	@ (cd ${MID} ; 	echo ')co RCAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RCAGG.spad (SPAD from IN)>>=
${MID}/RCAGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 152 making ${MID}/RCAGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RCAGG.NRLIB ; \
	${TANGLE} -R"category RCAGG RecursiveAggregate" ${IN}/aggcat.spad.pamphlet >RCAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RCAGG-.o (BOOTSTRAP from MID)>>=
${MID}/RCAGG-.o: ${MID}/RCAGG-.lsp 
	@ echo 153-0b making ${MID}/RCAGG-.o from ${MID}/RCAGG-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "RCAGG-.lsp" :output-file "RCAGG-.o"))' | ${DEPSYS} )
	@ cp ${MID}/RCAGG-.o ${OUT}/RCAGG-.o

@
<<RCAGG-.lsp (LISP from IN)>>=
${MID}/RCAGG-.lsp: ${IN}/aggcat.spad.pamphlet
	@ echo 154 making ${MID}/RCAGG-.lsp from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RCAGG-.NRLIB ; \
	rm -rf ${OUT}/RCAGG-.o ; \
	${TANGLE} -R"RCAGG-.lsp BOOTSTRAP" ${IN}/aggcat.spad.pamphlet >RCAGG-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RCAGG.o (BOOTSTRAP from MID)>>=
${MID}/RCAGG.o: ${MID}/RCAGG.lsp 
	@ echo 155-0b making ${MID}/RCAGG.o from ${MID}/RCAGG.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "RCAGG.lsp" :output-file "RCAGG.o"))' | ${DEPSYS} )
	@ cp ${MID}/RCAGG.o ${OUT}/RCAGG.o

@
<<RCAGG.lsp (LISP from IN)>>=
${MID}/RCAGG.lsp: ${IN}/aggcat.spad.pamphlet
	@ echo 156 making ${MID}/RCAGG.lsp from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RCAGG.NRLIB ; \
	rm -rf ${OUT}/RCAGG.o ; \
	${TANGLE} -R"RCAGG.lsp BOOTSTRAP" ${IN}/aggcat.spad.pamphlet >RCAGG.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SETAGG-.o (O from NRLIB)>>=
${OUT}/SETAGG-.o: ${MID}/SETAGG.NRLIB
	@ echo 157-0c making ${OUT}/SETAGG-.o from ${MID}/SETAGG-.NRLIB
	@ cp ${MID}/SETAGG-.NRLIB/code.o ${OUT}/SETAGG-.o

@
<<SETAGG-.NRLIB (NRLIB from MID)>>=
${MID}/SETAGG-.NRLIB: ${MID}/SETAGG.spad 
	@ echo 158 making ${MID}/SETAGG-.NRLIB from ${MID}/SETAGG.spad
	@ (cd ${MID} ; 	echo ')co SETAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SETAGG.o (O from NRLIB)>>=
${OUT}/SETAGG.o: ${MID}/SETAGG.NRLIB
	@ echo 159-0c making ${OUT}/SETAGG.o from ${MID}/SETAGG.NRLIB
	@ cp ${MID}/SETAGG.NRLIB/code.o ${OUT}/SETAGG.o

@
<<SETAGG.NRLIB (NRLIB from MID)>>=
${MID}/SETAGG.NRLIB: ${MID}/SETAGG.spad
	@ echo 160 making ${MID}/SETAGG.NRLIB from ${MID}/SETAGG.spad
	@ (cd ${MID} ; 	echo ')co SETAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SETAGG.spad (SPAD from IN)>>=
${MID}/SETAGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 161 making ${MID}/SETAGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SETAGG.NRLIB ; \
	${TANGLE} -R"category SETAGG SetAggregate" ${IN}/aggcat.spad.pamphlet >SETAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SETAGG-.o (BOOTSTRAP from MID)>>=
${MID}/SETAGG-.o: ${MID}/SETAGG-.lsp 
	@ echo 162-0b making ${MID}/SETAGG-.o from ${MID}/SETAGG-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "SETAGG-.lsp" :output-file "SETAGG-.o"))' | ${DEPSYS} )
	@ cp ${MID}/SETAGG-.o ${OUT}/SETAGG-.o

@
<<SETAGG-.lsp (LISP from IN)>>=
${MID}/SETAGG-.lsp: ${IN}/aggcat.spad.pamphlet
	@ echo 163 making ${MID}/SETAGG-.lsp from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SETAGG-.NRLIB ; \
	rm -rf ${OUT}/SETAGG-.o ; \
	${TANGLE} -R"SETAGG-.lsp BOOTSTRAP" ${IN}/aggcat.spad.pamphlet >SETAGG-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SETAGG.o (BOOTSTRAP from MID)>>=
${MID}/SETAGG.o: ${MID}/SETAGG.lsp 
	@ echo 164-0b making ${MID}/SETAGG.o from ${MID}/SETAGG.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "SETAGG.lsp" :output-file "SETAGG.o"))' | ${DEPSYS} )
	@ cp ${MID}/SETAGG.o ${OUT}/SETAGG.o

@
<<SETAGG.lsp (LISP from IN)>>=
${MID}/SETAGG.lsp: ${IN}/aggcat.spad.pamphlet
	@ echo 165 making ${MID}/SETAGG.lsp from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SETAGG.NRLIB ; \
	rm -rf ${OUT}/SETAGG.o ; \
	${TANGLE} -R"SETAGG.lsp BOOTSTRAP" ${IN}/aggcat.spad.pamphlet >SETAGG.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SKAGG.o (O from NRLIB)>>=
${OUT}/SKAGG.o: ${MID}/SKAGG.NRLIB
	@ echo 166-7 making ${OUT}/SKAGG.o from ${MID}/SKAGG.NRLIB
	@ cp ${MID}/SKAGG.NRLIB/code.o ${OUT}/SKAGG.o

@
<<SKAGG.NRLIB (NRLIB from MID)>>=
${MID}/SKAGG.NRLIB: ${MID}/SKAGG.spad
	@ echo 167 making ${MID}/SKAGG.NRLIB from ${MID}/SKAGG.spad
	@ (cd ${MID} ; 	echo ')co SKAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SKAGG.spad (SPAD from IN)>>=
${MID}/SKAGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 168 making ${MID}/SKAGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SKAGG.NRLIB ; \
	${TANGLE} -R"category SKAGG StackAggregate" ${IN}/aggcat.spad.pamphlet >SKAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SRAGG-.o (O from NRLIB)>>=
${OUT}/SRAGG-.o: ${MID}/SRAGG.NRLIB
	@ echo 169-11 making ${OUT}/SRAGG-.o from ${MID}/SRAGG-.NRLIB
	@ cp ${MID}/SRAGG-.NRLIB/code.o ${OUT}/SRAGG-.o

@
<<SRAGG-.NRLIB (NRLIB from MID)>>=
${MID}/SRAGG-.NRLIB: ${MID}/SRAGG.spad 
	@ echo 170 making ${MID}/SRAGG-.NRLIB from ${MID}/SRAGG.spad
	@ (cd ${MID} ; 	echo ')co SRAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SRAGG.o (O from NRLIB)>>=
${OUT}/SRAGG.o: ${MID}/SRAGG.NRLIB
	@ echo 171-11 making ${OUT}/SRAGG.o from ${MID}/SRAGG.NRLIB
	@ cp ${MID}/SRAGG.NRLIB/code.o ${OUT}/SRAGG.o

@
<<SRAGG.NRLIB (NRLIB from MID)>>=
${MID}/SRAGG.NRLIB: ${MID}/SRAGG.spad
	@ echo 172 making ${MID}/SRAGG.NRLIB from ${MID}/SRAGG.spad
	@ (cd ${MID} ; 	echo ')co SRAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SRAGG.spad (SPAD from IN)>>=
${MID}/SRAGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 173 making ${MID}/SRAGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SRAGG.NRLIB ; \
	${TANGLE} -R"category SRAGG StringAggregate" ${IN}/aggcat.spad.pamphlet >SRAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STAGG-.o (O from NRLIB)>>=
${OUT}/STAGG-.o: ${MID}/STAGG.NRLIB
	@ echo 174-0c making ${OUT}/STAGG-.o from ${MID}/STAGG-.NRLIB
	@ cp ${MID}/STAGG-.NRLIB/code.o ${OUT}/STAGG-.o

@
<<STAGG-.NRLIB (NRLIB from MID)>>=
${MID}/STAGG-.NRLIB: ${MID}/STAGG.spad 
	@ echo 175 making ${MID}/STAGG-.NRLIB from ${MID}/STAGG.spad
	@ (cd ${MID} ; 	echo ')co STAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STAGG.o (O from NRLIB)>>=
${OUT}/STAGG.o: ${MID}/STAGG.NRLIB
	@ echo 176-0c making ${OUT}/STAGG.o from ${MID}/STAGG.NRLIB
	@ cp ${MID}/STAGG.NRLIB/code.o ${OUT}/STAGG.o

@
<<STAGG.NRLIB (NRLIB from MID)>>=
${MID}/STAGG.NRLIB: ${MID}/STAGG.spad
	@ echo 177 making ${MID}/STAGG.NRLIB from ${MID}/STAGG.spad
	@ (cd ${MID} ; 	echo ')co STAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STAGG.spad (SPAD from IN)>>=
${MID}/STAGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 178 making ${MID}/STAGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf STAGG.NRLIB ; \
	${TANGLE} -R"category STAGG StreamAggregate" ${IN}/aggcat.spad.pamphlet >STAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STAGG-.o (BOOTSTRAP from MID)>>=
${MID}/STAGG-.o: ${MID}/STAGG-.lsp 
	@ echo 179-0b making ${MID}/STAGG-.o from ${MID}/STAGG-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "STAGG-.lsp" :output-file "STAGG-.o"))' | ${DEPSYS} )
	@ cp ${MID}/STAGG-.o ${OUT}/STAGG-.o

@
<<STAGG-.lsp (LISP from IN)>>=
${MID}/STAGG-.lsp: ${IN}/aggcat.spad.pamphlet
	@ echo 180 making ${MID}/STAGG-.lsp from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf STAGG-.NRLIB ; \
	rm -rf ${OUT}/STAGG-.o ; \
	${TANGLE} -R"STAGG-.lsp BOOTSTRAP" ${IN}/aggcat.spad.pamphlet >STAGG-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STAGG.o (BOOTSTRAP from MID)>>=
${MID}/STAGG.o: ${MID}/STAGG.lsp 
	@ echo 181-0b making ${MID}/STAGG.o from ${MID}/STAGG.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "STAGG.lsp" :output-file "STAGG.o"))' | ${DEPSYS} )
	@ cp ${MID}/STAGG.o ${OUT}/STAGG.o

@
<<STAGG.lsp (LISP from IN)>>=
${MID}/STAGG.lsp: ${IN}/aggcat.spad.pamphlet
	@ echo 182 making ${MID}/STAGG.lsp from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf STAGG.NRLIB ; \
	rm -rf ${OUT}/STAGG.o ; \
	${TANGLE} -R"STAGG.lsp BOOTSTRAP" ${IN}/aggcat.spad.pamphlet >STAGG.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TBAGG-.o (O from NRLIB)>>=
${OUT}/TBAGG-.o: ${MID}/TBAGG.NRLIB
	@ echo 183-17 making ${OUT}/TBAGG-.o from ${MID}/TBAGG-.NRLIB
	@ cp ${MID}/TBAGG-.NRLIB/code.o ${OUT}/TBAGG-.o

@
<<TBAGG-.NRLIB (NRLIB from MID)>>=
${MID}/TBAGG-.NRLIB: ${MID}/TBAGG.spad 
	@ echo 184 making ${MID}/TBAGG-.NRLIB from ${MID}/TBAGG.spad
	@ (cd ${MID} ; 	echo ')co TBAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TBAGG.o (O from NRLIB)>>=
${OUT}/TBAGG.o: ${MID}/TBAGG.NRLIB
	@ echo 185-17 making ${OUT}/TBAGG.o from ${MID}/TBAGG.NRLIB
	@ cp ${MID}/TBAGG.NRLIB/code.o ${OUT}/TBAGG.o

@
<<TBAGG.NRLIB (NRLIB from MID)>>=
${MID}/TBAGG.NRLIB: ${MID}/TBAGG.spad
	@ echo 186 making ${MID}/TBAGG.NRLIB from ${MID}/TBAGG.spad
	@ (cd ${MID} ; 	echo ')co TBAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TBAGG.spad (SPAD from IN)>>=
${MID}/TBAGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 187 making ${MID}/TBAGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf TBAGG.NRLIB ; \
	${TANGLE} -R"category TBAGG TableAggregate" ${IN}/aggcat.spad.pamphlet >TBAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<URAGG-.o (O from NRLIB)>>=
${OUT}/URAGG-.o: ${MID}/URAGG.NRLIB
	@ echo 188-0c making ${OUT}/URAGG-.o from ${MID}/URAGG-.NRLIB
	@ cp ${MID}/URAGG-.NRLIB/code.o ${OUT}/URAGG-.o

@
<<URAGG-.NRLIB (NRLIB from MID)>>=
${MID}/URAGG-.NRLIB: ${MID}/URAGG.spad 
	@ echo 189 making ${MID}/URAGG-.NRLIB from ${MID}/URAGG.spad
	@ (cd ${MID} ; 	echo ')co URAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<URAGG.o (O from NRLIB)>>=
${OUT}/URAGG.o: ${MID}/URAGG.NRLIB
	@ echo 190-0c making ${OUT}/URAGG.o from ${MID}/URAGG.NRLIB
	@ cp ${MID}/URAGG.NRLIB/code.o ${OUT}/URAGG.o

@
<<URAGG.NRLIB (NRLIB from MID)>>=
${MID}/URAGG.NRLIB: ${MID}/URAGG.spad
	@ echo 191 making ${MID}/URAGG.NRLIB from ${MID}/URAGG.spad
	@ (cd ${MID} ; 	echo ')co URAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<URAGG.spad (SPAD from IN)>>=
${MID}/URAGG.spad: ${IN}/aggcat.spad.pamphlet
	@ echo 192 making ${MID}/URAGG.spad from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf URAGG.NRLIB ; \
	${TANGLE} -R"category URAGG UnaryRecursiveAggregate" ${IN}/aggcat.spad.pamphlet >URAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<URAGG-.o (BOOTSTRAP from MID)>>=
${MID}/URAGG-.o: ${MID}/URAGG-.lsp 
	@ echo 193-0b making ${MID}/URAGG-.o from ${MID}/URAGG-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "URAGG-.lsp" :output-file "URAGG-.o"))' | ${DEPSYS} )
	@ cp ${MID}/URAGG-.o ${OUT}/URAGG-.o

@
<<URAGG-.lsp (LISP from IN)>>=
${MID}/URAGG-.lsp: ${IN}/aggcat.spad.pamphlet
	@ echo 194 making ${MID}/URAGG-.lsp from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf URAGG-.NRLIB ; \
	rm -rf ${OUT}/URAGG-.o ; \
	${TANGLE} -R"URAGG-.lsp BOOTSTRAP" ${IN}/aggcat.spad.pamphlet >URAGG-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<URAGG.o (BOOTSTRAP from MID)>>=
${MID}/URAGG.o: ${MID}/URAGG.lsp 
	@ echo 195-0b making ${MID}/URAGG.o from ${MID}/URAGG.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "URAGG.lsp" :output-file "URAGG.o"))' | ${DEPSYS} )
	@ cp ${MID}/URAGG.o ${OUT}/URAGG.o

@
<<URAGG.lsp (LISP from IN)>>=
${MID}/URAGG.lsp: ${IN}/aggcat.spad.pamphlet
	@ echo 196 making ${MID}/URAGG.lsp from ${IN}/aggcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf URAGG.NRLIB ; \
	rm -rf ${OUT}/URAGG.o ; \
	${TANGLE} -R"URAGG.lsp BOOTSTRAP" ${IN}/aggcat.spad.pamphlet >URAGG.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<aggcat.spad.dvi (DOC from IN)>>=
${DOC}/aggcat.spad.dvi: ${IN}/aggcat.spad.pamphlet ${DOC}/axiom.sty
	@ echo 197 making ${DOC}/aggcat.spad.dvi from ${IN}/aggcat.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/aggcat.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} aggcat.spad ; \
	rm -f ${DOC}/aggcat.spad.pamphlet ; \
	rm -f ${DOC}/aggcat.spad.tex ; \
	rm -f ${DOC}/aggcat.spad )

@
\subsection{algcat.spad \cite{1}}
<<algcat.spad (SPAD from IN)>>=
${OUTSRC}/algcat.spad: ${IN}/algcat.spad.pamphlet
	@ echo 198 making ${OUTSRC}/algcat.spad from ${IN}/algcat.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/algcat.spad.pamphlet >algcat.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CPIMA.o (O from NRLIB)>>=
${OUT}/CPIMA.o: ${MID}/CPIMA.NRLIB
	@ echo 199-23 making ${OUT}/CPIMA.o from ${MID}/CPIMA.NRLIB
	@ cp ${MID}/CPIMA.NRLIB/code.o ${OUT}/CPIMA.o

@
<<CPIMA.NRLIB (NRLIB from MID)>>=
${MID}/CPIMA.NRLIB: ${MID}/CPIMA.spad
	@ echo 200 making ${MID}/CPIMA.NRLIB from ${MID}/CPIMA.spad
	@ (cd ${MID} ; 	echo ')co CPIMA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CPIMA.spad (SPAD from IN)>>=
${MID}/CPIMA.spad: ${IN}/algcat.spad.pamphlet
	@ echo 201 making ${MID}/CPIMA.spad from ${IN}/algcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CPIMA.NRLIB ; \
	${TANGLE} -R"package CPIMA CharacteristicPolynomialInMonogenicalAlgebra" ${IN}/algcat.spad.pamphlet >CPIMA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FINRALG-.o (O from NRLIB)>>=
${OUT}/FINRALG-.o: ${MID}/FINRALG.NRLIB
	@ echo 202-14 making ${OUT}/FINRALG-.o from ${MID}/FINRALG-.NRLIB
	@ cp ${MID}/FINRALG-.NRLIB/code.o ${OUT}/FINRALG-.o

@
<<FINRALG-.NRLIB (NRLIB from MID)>>=
${MID}/FINRALG-.NRLIB: ${MID}/FINRALG.spad 
	@ echo 203 making ${MID}/FINRALG-.NRLIB from ${MID}/FINRALG.spad
	@ (cd ${MID} ; 	echo ')co FINRALG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FINRALG.o (O from NRLIB)>>=
${OUT}/FINRALG.o: ${MID}/FINRALG.NRLIB
	@ echo 204-14 making ${OUT}/FINRALG.o from ${MID}/FINRALG.NRLIB
	@ cp ${MID}/FINRALG.NRLIB/code.o ${OUT}/FINRALG.o

@
<<FINRALG.NRLIB (NRLIB from MID)>>=
${MID}/FINRALG.NRLIB: ${MID}/FINRALG.spad
	@ echo 205 making ${MID}/FINRALG.NRLIB from ${MID}/FINRALG.spad
	@ (cd ${MID} ; 	echo ')co FINRALG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FINRALG.spad (SPAD from IN)>>=
${MID}/FINRALG.spad: ${IN}/algcat.spad.pamphlet
	@ echo 206 making ${MID}/FINRALG.spad from ${IN}/algcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FINRALG.NRLIB ; \
	${TANGLE} -R"category FINRALG FiniteRankAlgebra" ${IN}/algcat.spad.pamphlet >FINRALG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FRAMALG-.o (O from NRLIB)>>=
${OUT}/FRAMALG-.o: ${MID}/FRAMALG.NRLIB
	@ echo 207-15 making ${OUT}/FRAMALG-.o from ${MID}/FRAMALG-.NRLIB
	@ cp ${MID}/FRAMALG-.NRLIB/code.o ${OUT}/FRAMALG-.o

@
<<FRAMALG-.NRLIB (NRLIB from MID)>>=
${MID}/FRAMALG-.NRLIB: ${MID}/FRAMALG.spad 
	@ echo 208 making ${MID}/FRAMALG-.NRLIB from ${MID}/FRAMALG.spad
	@ (cd ${MID} ; 	echo ')co FRAMALG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FRAMALG.o (O from NRLIB)>>=
${OUT}/FRAMALG.o: ${MID}/FRAMALG.NRLIB
	@ echo 209-15 making ${OUT}/FRAMALG.o from ${MID}/FRAMALG.NRLIB
	@ cp ${MID}/FRAMALG.NRLIB/code.o ${OUT}/FRAMALG.o

@
<<FRAMALG.NRLIB (NRLIB from MID)>>=
${MID}/FRAMALG.NRLIB: ${MID}/FRAMALG.spad
	@ echo 210 making ${MID}/FRAMALG.NRLIB from ${MID}/FRAMALG.spad
	@ (cd ${MID} ; 	echo ')co FRAMALG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FRAMALG.spad (SPAD from IN)>>=
${MID}/FRAMALG.spad: ${IN}/algcat.spad.pamphlet
	@ echo 211 making ${MID}/FRAMALG.spad from ${IN}/algcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FRAMALG.NRLIB ; \
	${TANGLE} -R"category FRAMALG FramedAlgebra" ${IN}/algcat.spad.pamphlet >FRAMALG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MONOGEN-.o (O from NRLIB)>>=
${OUT}/MONOGEN-.o: ${MID}/MONOGEN.NRLIB
	@ echo 212-16 making ${OUT}/MONOGEN-.o from ${MID}/MONOGEN-.NRLIB
	@ cp ${MID}/MONOGEN-.NRLIB/code.o ${OUT}/MONOGEN-.o

@
<<MONOGEN-.NRLIB (NRLIB from MID)>>=
${MID}/MONOGEN-.NRLIB: ${MID}/MONOGEN.spad 
	@ echo 213 making ${MID}/MONOGEN-.NRLIB from ${MID}/MONOGEN.spad
	@ (cd ${MID} ; 	echo ')co MONOGEN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MONOGEN.o (O from NRLIB)>>=
${OUT}/MONOGEN.o: ${MID}/MONOGEN.NRLIB
	@ echo 214-16 making ${OUT}/MONOGEN.o from ${MID}/MONOGEN.NRLIB
	@ cp ${MID}/MONOGEN.NRLIB/code.o ${OUT}/MONOGEN.o

@
<<MONOGEN.NRLIB (NRLIB from MID)>>=
${MID}/MONOGEN.NRLIB: ${MID}/MONOGEN.spad
	@ echo 215 making ${MID}/MONOGEN.NRLIB from ${MID}/MONOGEN.spad
	@ (cd ${MID} ; 	echo ')co MONOGEN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MONOGEN.spad (SPAD from IN)>>=
${MID}/MONOGEN.spad: ${IN}/algcat.spad.pamphlet
	@ echo 216 making ${MID}/MONOGEN.spad from ${IN}/algcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MONOGEN.NRLIB ; \
	${TANGLE} -R"category MONOGEN MonogenicAlgebra" ${IN}/algcat.spad.pamphlet >MONOGEN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NORMMA.o (O from NRLIB)>>=
${OUT}/NORMMA.o: ${MID}/NORMMA.NRLIB
	@ echo 217-17 making ${OUT}/NORMMA.o from ${MID}/NORMMA.NRLIB
	@ cp ${MID}/NORMMA.NRLIB/code.o ${OUT}/NORMMA.o

@
<<NORMMA.NRLIB (NRLIB from MID)>>=
${MID}/NORMMA.NRLIB: ${MID}/NORMMA.spad
	@ echo 218 making ${MID}/NORMMA.NRLIB from ${MID}/NORMMA.spad
	@ (cd ${MID} ; 	echo ')co NORMMA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NORMMA.spad (SPAD from IN)>>=
${MID}/NORMMA.spad: ${IN}/algcat.spad.pamphlet
	@ echo 219 making ${MID}/NORMMA.spad from ${IN}/algcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NORMMA.NRLIB ; \
	${TANGLE} -R"package NORMMA NormInMonogenicAlgebra" ${IN}/algcat.spad.pamphlet >NORMMA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<algcat.spad.dvi (DOC from IN)>>=
${DOC}/algcat.spad.dvi: ${IN}/algcat.spad.pamphlet ${DOC}/axiom.sty
	@ echo 220 making ${DOC}/algcat.spad.dvi from ${IN}/algcat.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/algcat.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} algcat.spad ; \
	rm -f ${DOC}/algcat.spad.pamphlet ; \
	rm -f ${DOC}/algcat.spad.tex ; \
	rm -f ${DOC}/algcat.spad )

@
\subsection{algext.spad \cite{1}}
<<algext.spad (SPAD from IN)>>=
${OUTSRC}/algext.spad: ${IN}/algext.spad.pamphlet
	@ echo 221 making ${OUTSRC}/algext.spad from ${IN}/algext.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/algext.spad.pamphlet >algext.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SAE.o (O from NRLIB)>>=
${OUT}/SAE.o: ${MID}/SAE.NRLIB
	@ echo 222-17 making ${OUT}/SAE.o from ${MID}/SAE.NRLIB
	@ cp ${MID}/SAE.NRLIB/code.o ${OUT}/SAE.o

@
<<SAE.NRLIB (NRLIB from MID)>>=
${MID}/SAE.NRLIB: ${MID}/SAE.spad
	@ echo 223 making ${MID}/SAE.NRLIB from ${MID}/SAE.spad
	@ (cd ${MID} ; 	echo ')co SAE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SAE.spad (SPAD from IN)>>=
${MID}/SAE.spad: ${IN}/algext.spad.pamphlet
	@ echo 224 making ${MID}/SAE.spad from ${IN}/algext.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SAE.NRLIB ; \
	${TANGLE} -R"domain SAE SimpleAlgebraicExtension" ${IN}/algext.spad.pamphlet >SAE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<algext.spad.dvi (DOC from IN)>>=
${DOC}/algext.spad.dvi: ${IN}/algext.spad.pamphlet ${DOC}/axiom.sty
	@ echo 225 making ${DOC}/algext.spad.dvi from ${IN}/algext.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/algext.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} algext.spad ; \
	rm -f ${DOC}/algext.spad.pamphlet ; \
	rm -f ${DOC}/algext.spad.tex ; \
	rm -f ${DOC}/algext.spad )

@
\subsection{algfact.spad \cite{1}}
<<algfact.spad (SPAD from IN)>>=
${OUTSRC}/algfact.spad: ${IN}/algfact.spad.pamphlet
	@ echo 226 making ${OUTSRC}/algfact.spad from ${IN}/algfact.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/algfact.spad.pamphlet >algfact.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ALGFACT.o (O from NRLIB)>>=
${OUT}/ALGFACT.o: ${MID}/ALGFACT.NRLIB
	@ echo 227-20 making ${OUT}/ALGFACT.o from ${MID}/ALGFACT.NRLIB
	@ cp ${MID}/ALGFACT.NRLIB/code.o ${OUT}/ALGFACT.o

@
<<ALGFACT.NRLIB (NRLIB from MID)>>=
${MID}/ALGFACT.NRLIB: ${MID}/ALGFACT.spad
	@ echo 228 making ${MID}/ALGFACT.NRLIB from ${MID}/ALGFACT.spad
	@ (cd ${MID} ; 	echo ')co ALGFACT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ALGFACT.spad (SPAD from IN)>>=
${MID}/ALGFACT.spad: ${IN}/algfact.spad.pamphlet
	@ echo 229 making ${MID}/ALGFACT.spad from ${IN}/algfact.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ALGFACT.NRLIB ; \
	${TANGLE} -R"package ALGFACT AlgFactor" ${IN}/algfact.spad.pamphlet >ALGFACT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IALGFACT.o (O from NRLIB)>>=
${OUT}/IALGFACT.o: ${MID}/IALGFACT.NRLIB
	@ echo 230-17 making ${OUT}/IALGFACT.o from ${MID}/IALGFACT.NRLIB
	@ cp ${MID}/IALGFACT.NRLIB/code.o ${OUT}/IALGFACT.o

@
<<IALGFACT.NRLIB (NRLIB from MID)>>=
${MID}/IALGFACT.NRLIB: ${MID}/IALGFACT.spad
	@ echo 231 making ${MID}/IALGFACT.NRLIB from ${MID}/IALGFACT.spad
	@ (cd ${MID} ; 	echo ')co IALGFACT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IALGFACT.spad (SPAD from IN)>>=
${MID}/IALGFACT.spad: ${IN}/algfact.spad.pamphlet
	@ echo 232 making ${MID}/IALGFACT.spad from ${IN}/algfact.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IALGFACT.NRLIB ; \
	${TANGLE} -R"package IALGFACT InnerAlgFactor" ${IN}/algfact.spad.pamphlet >IALGFACT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RFFACT.o (O from NRLIB)>>=
${OUT}/RFFACT.o: ${MID}/RFFACT.NRLIB
	@ echo 233-19 making ${OUT}/RFFACT.o from ${MID}/RFFACT.NRLIB
	@ cp ${MID}/RFFACT.NRLIB/code.o ${OUT}/RFFACT.o

@
<<RFFACT.NRLIB (NRLIB from MID)>>=
${MID}/RFFACT.NRLIB: ${MID}/RFFACT.spad
	@ echo 234 making ${MID}/RFFACT.NRLIB from ${MID}/RFFACT.spad
	@ (cd ${MID} ; 	echo ')co RFFACT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RFFACT.spad (SPAD from IN)>>=
${MID}/RFFACT.spad: ${IN}/algfact.spad.pamphlet
	@ echo 235 making ${MID}/RFFACT.spad from ${IN}/algfact.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RFFACT.NRLIB ; \
	${TANGLE} -R"package RFFACT RationalFunctionFactor" ${IN}/algfact.spad.pamphlet >RFFACT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SAEFACT.o (O from NRLIB)>>=
${OUT}/SAEFACT.o: ${MID}/SAEFACT.NRLIB
	@ echo 236-17 making ${OUT}/SAEFACT.o from ${MID}/SAEFACT.NRLIB
	@ cp ${MID}/SAEFACT.NRLIB/code.o ${OUT}/SAEFACT.o

@
<<SAEFACT.NRLIB (NRLIB from MID)>>=
${MID}/SAEFACT.NRLIB: ${MID}/SAEFACT.spad
	@ echo 237 making ${MID}/SAEFACT.NRLIB from ${MID}/SAEFACT.spad
	@ (cd ${MID} ; 	echo ')co SAEFACT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SAEFACT.spad (SPAD from IN)>>=
${MID}/SAEFACT.spad: ${IN}/algfact.spad.pamphlet
	@ echo 238 making ${MID}/SAEFACT.spad from ${IN}/algfact.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SAEFACT.NRLIB ; \
	${TANGLE} -R"package SAEFACT SimpleAlgebraicExtensionAlgFactor" ${IN}/algfact.spad.pamphlet >SAEFACT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SAERFFC.o (O from NRLIB)>>=
${OUT}/SAERFFC.o: ${MID}/SAERFFC.NRLIB
	@ echo 239-17 making ${OUT}/SAERFFC.o from ${MID}/SAERFFC.NRLIB
	@ cp ${MID}/SAERFFC.NRLIB/code.o ${OUT}/SAERFFC.o

@
<<SAERFFC.NRLIB (NRLIB from MID)>>=
${MID}/SAERFFC.NRLIB: ${MID}/SAERFFC.spad
	@ echo 240 making ${MID}/SAERFFC.NRLIB from ${MID}/SAERFFC.spad
	@ (cd ${MID} ; 	echo ')co SAERFFC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SAERFFC.spad (SPAD from IN)>>=
${MID}/SAERFFC.spad: ${IN}/algfact.spad.pamphlet
	@ echo 241 making ${MID}/SAERFFC.spad from ${IN}/algfact.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SAERFFC.NRLIB ; \
	${TANGLE} -R"package SAERFFC SAERationalFunctionAlgFactor" ${IN}/algfact.spad.pamphlet >SAERFFC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<algfact.spad.dvi (DOC from IN)>>=
${DOC}/algfact.spad.dvi: ${IN}/algfact.spad.pamphlet ${DOC}/axiom.sty
	@ echo 242 making ${DOC}/algfact.spad.dvi from ${IN}/algfact.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/algfact.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} algfact.spad ; \
	rm -f ${DOC}/algfact.spad.pamphlet ; \
	rm -f ${DOC}/algfact.spad.tex ; \
	rm -f ${DOC}/algfact.spad )

@
\subsection{algfunc.spad \cite{1}}
<<algfunc.spad (SPAD from IN)>>=
${OUTSRC}/algfunc.spad: ${IN}/algfunc.spad.pamphlet
	@ echo 243 making ${OUTSRC}/algfunc.spad from ${IN}/algfunc.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/algfunc.spad.pamphlet >algfunc.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ACF-.o (O from NRLIB)>>=
${OUT}/ACF-.o: ${MID}/ACF.NRLIB
	@ echo 244-19 making ${OUT}/ACF-.o from ${MID}/ACF-.NRLIB
	@ cp ${MID}/ACF-.NRLIB/code.o ${OUT}/ACF-.o

@
<<ACF-.NRLIB (NRLIB from MID)>>=
${MID}/ACF-.NRLIB: ${MID}/ACF.spad 
	@ echo 245 making ${MID}/ACF-.NRLIB from ${MID}/ACF.spad
	@ (cd ${MID} ; 	echo ')co ACF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ACF.o (O from NRLIB)>>=
${OUT}/ACF.o: ${MID}/ACF.NRLIB
	@ echo 246-19 making ${OUT}/ACF.o from ${MID}/ACF.NRLIB
	@ cp ${MID}/ACF.NRLIB/code.o ${OUT}/ACF.o

@
<<ACF.NRLIB (NRLIB from MID)>>=
${MID}/ACF.NRLIB: ${MID}/ACF.spad
	@ echo 247 making ${MID}/ACF.NRLIB from ${MID}/ACF.spad
	@ (cd ${MID} ; 	echo ')co ACF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ACF.spad (SPAD from IN)>>=
${MID}/ACF.spad: ${IN}/algfunc.spad.pamphlet
	@ echo 248 making ${MID}/ACF.spad from ${IN}/algfunc.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ACF.NRLIB ; \
	${TANGLE} -R"category ACF AlgebraicallyClosedField" ${IN}/algfunc.spad.pamphlet >ACF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ACFS-.o (O from NRLIB)>>=
${OUT}/ACFS-.o: ${MID}/ACFS.NRLIB
	@ echo 249-20 making ${OUT}/ACFS-.o from ${MID}/ACFS-.NRLIB
	@ cp ${MID}/ACFS-.NRLIB/code.o ${OUT}/ACFS-.o

@
<<ACFS-.NRLIB (NRLIB from MID)>>=
${MID}/ACFS-.NRLIB: ${MID}/ACFS.spad 
	@ echo 250 making ${MID}/ACFS-.NRLIB from ${MID}/ACFS.spad
	@ (cd ${MID} ; 	echo ')co ACFS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ACFS.o (O from NRLIB)>>=
${OUT}/ACFS.o: ${MID}/ACFS.NRLIB
	@ echo 251-20 making ${OUT}/ACFS.o from ${MID}/ACFS.NRLIB
	@ cp ${MID}/ACFS.NRLIB/code.o ${OUT}/ACFS.o

@
<<ACFS.NRLIB (NRLIB from MID)>>=
${MID}/ACFS.NRLIB: ${MID}/ACFS.spad
	@ echo 252 making ${MID}/ACFS.NRLIB from ${MID}/ACFS.spad
	@ (cd ${MID} ; 	echo ')co ACFS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ACFS.spad (SPAD from IN)>>=
${MID}/ACFS.spad: ${IN}/algfunc.spad.pamphlet
	@ echo 253 making ${MID}/ACFS.spad from ${IN}/algfunc.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ACFS.NRLIB ; \
	${TANGLE} -R"category ACFS AlgebraicallyClosedFunctionSpace" ${IN}/algfunc.spad.pamphlet >ACFS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<AF.o (O from NRLIB)>>=
${OUT}/AF.o: ${MID}/AF.NRLIB
	@ echo 254-20 making ${OUT}/AF.o from ${MID}/AF.NRLIB
	@ cp ${MID}/AF.NRLIB/code.o ${OUT}/AF.o

@
<<AF.NRLIB (NRLIB from MID)>>=
${MID}/AF.NRLIB: ${MID}/AF.spad
	@ echo 255 making ${MID}/AF.NRLIB from ${MID}/AF.spad
	@ (cd ${MID} ; 	echo ')co AF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<AF.spad (SPAD from IN)>>=
${MID}/AF.spad: ${IN}/algfunc.spad.pamphlet
	@ echo 256 making ${MID}/AF.spad from ${IN}/algfunc.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf AF.NRLIB ; \
	${TANGLE} -R"package AF AlgebraicFunction" ${IN}/algfunc.spad.pamphlet >AF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<algfunc.spad.dvi (DOC from IN)>>=
${DOC}/algfunc.spad.dvi: ${IN}/algfunc.spad.pamphlet ${DOC}/axiom.sty
	@ echo 257 making ${DOC}/algfunc.spad.dvi from ${IN}/algfunc.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/algfunc.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} algfunc.spad ; \
	rm -f ${DOC}/algfunc.spad.pamphlet ; \
	rm -f ${DOC}/algfunc.spad.tex ; \
	rm -f ${DOC}/algfunc.spad )

@
\subsection{allfact.spad \cite{1}}
<<allfact.spad (SPAD from IN)>>=
${OUTSRC}/allfact.spad: ${IN}/allfact.spad.pamphlet
	@ echo 258 making ${OUTSRC}/allfact.spad from ${IN}/allfact.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/allfact.spad.pamphlet >allfact.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GENMFACT.o (O from NRLIB)>>=
${OUT}/GENMFACT.o: ${MID}/GENMFACT.NRLIB
	@ echo 259-14 making ${OUT}/GENMFACT.o from ${MID}/GENMFACT.NRLIB
	@ cp ${MID}/GENMFACT.NRLIB/code.o ${OUT}/GENMFACT.o

@
<<GENMFACT.NRLIB (NRLIB from MID)>>=
${MID}/GENMFACT.NRLIB: ${MID}/GENMFACT.spad
	@ echo 260 making ${MID}/GENMFACT.NRLIB from ${MID}/GENMFACT.spad
	@ (cd ${MID} ; 	echo ')co GENMFACT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GENMFACT.spad (SPAD from IN)>>=
${MID}/GENMFACT.spad: ${IN}/allfact.spad.pamphlet
	@ echo 261 making ${MID}/GENMFACT.spad from ${IN}/allfact.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GENMFACT.NRLIB ; \
	${TANGLE} -R"package GENMFACT GeneralizedMultivariateFactorize" ${IN}/allfact.spad.pamphlet >GENMFACT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MPCPF.o (O from NRLIB)>>=
${OUT}/MPCPF.o: ${MID}/MPCPF.NRLIB
	@ echo 262-14 making ${OUT}/MPCPF.o from ${MID}/MPCPF.NRLIB
	@ cp ${MID}/MPCPF.NRLIB/code.o ${OUT}/MPCPF.o

@
<<MPCPF.NRLIB (NRLIB from MID)>>=
${MID}/MPCPF.NRLIB: ${MID}/MPCPF.spad
	@ echo 263 making ${MID}/MPCPF.NRLIB from ${MID}/MPCPF.spad
	@ (cd ${MID} ; 	echo ')co MPCPF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MPCPF.spad (SPAD from IN)>>=
${MID}/MPCPF.spad: ${IN}/allfact.spad.pamphlet
	@ echo 264 making ${MID}/MPCPF.spad from ${IN}/allfact.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MPCPF.NRLIB ; \
	${TANGLE} -R"package MPCPF MPolyCatPolyFactorizer" ${IN}/allfact.spad.pamphlet >MPCPF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MPRFF.o (O from NRLIB)>>=
${OUT}/MPRFF.o: ${MID}/MPRFF.NRLIB
	@ echo 265-14 making ${OUT}/MPRFF.o from ${MID}/MPRFF.NRLIB
	@ cp ${MID}/MPRFF.NRLIB/code.o ${OUT}/MPRFF.o

@
<<MPRFF.NRLIB (NRLIB from MID)>>=
${MID}/MPRFF.NRLIB: ${MID}/MPRFF.spad
	@ echo 266 making ${MID}/MPRFF.NRLIB from ${MID}/MPRFF.spad
	@ (cd ${MID} ; 	echo ')co MPRFF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MPRFF.spad (SPAD from IN)>>=
${MID}/MPRFF.spad: ${IN}/allfact.spad.pamphlet
	@ echo 267 making ${MID}/MPRFF.spad from ${IN}/allfact.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MPRFF.NRLIB ; \
	${TANGLE} -R"package MPRFF MPolyCatRationalFunctionFactorizer" ${IN}/allfact.spad.pamphlet >MPRFF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MRATFAC.o (O from NRLIB)>>=
${OUT}/MRATFAC.o: ${MID}/MRATFAC.NRLIB
	@ echo 268-14 making ${OUT}/MRATFAC.o from ${MID}/MRATFAC.NRLIB
	@ cp ${MID}/MRATFAC.NRLIB/code.o ${OUT}/MRATFAC.o

@
<<MRATFAC.NRLIB (NRLIB from MID)>>=
${MID}/MRATFAC.NRLIB: ${MID}/MRATFAC.spad
	@ echo 269 making ${MID}/MRATFAC.NRLIB from ${MID}/MRATFAC.spad
	@ (cd ${MID} ; 	echo ')co MRATFAC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MRATFAC.spad (SPAD from IN)>>=
${MID}/MRATFAC.spad: ${IN}/allfact.spad.pamphlet
	@ echo 270 making ${MID}/MRATFAC.spad from ${IN}/allfact.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MRATFAC.NRLIB ; \
	${TANGLE} -R"package MRATFAC MRationalFactorize" ${IN}/allfact.spad.pamphlet >MRATFAC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RFFACTOR.o (O from NRLIB)>>=
${OUT}/RFFACTOR.o: ${MID}/RFFACTOR.NRLIB
	@ echo 271-14 making ${OUT}/RFFACTOR.o from ${MID}/RFFACTOR.NRLIB
	@ cp ${MID}/RFFACTOR.NRLIB/code.o ${OUT}/RFFACTOR.o

@
<<RFFACTOR.NRLIB (NRLIB from MID)>>=
${MID}/RFFACTOR.NRLIB: ${MID}/RFFACTOR.spad
	@ echo 272 making ${MID}/RFFACTOR.NRLIB from ${MID}/RFFACTOR.spad
	@ (cd ${MID} ; 	echo ')co RFFACTOR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RFFACTOR.spad (SPAD from IN)>>=
${MID}/RFFACTOR.spad: ${IN}/allfact.spad.pamphlet
	@ echo 273 making ${MID}/RFFACTOR.spad from ${IN}/allfact.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RFFACTOR.NRLIB ; \
	${TANGLE} -R"package RFFACTOR RationalFunctionFactorizer" ${IN}/allfact.spad.pamphlet >RFFACTOR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SUPFRACF.o (O from NRLIB)>>=
${OUT}/SUPFRACF.o: ${MID}/SUPFRACF.NRLIB
	@ echo 274-14 making ${OUT}/SUPFRACF.o from ${MID}/SUPFRACF.NRLIB
	@ cp ${MID}/SUPFRACF.NRLIB/code.o ${OUT}/SUPFRACF.o

@
<<SUPFRACF.NRLIB (NRLIB from MID)>>=
${MID}/SUPFRACF.NRLIB: ${MID}/SUPFRACF.spad
	@ echo 275 making ${MID}/SUPFRACF.NRLIB from ${MID}/SUPFRACF.spad
	@ (cd ${MID} ; 	echo ')co SUPFRACF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SUPFRACF.spad (SPAD from IN)>>=
${MID}/SUPFRACF.spad: ${IN}/allfact.spad.pamphlet
	@ echo 276 making ${MID}/SUPFRACF.spad from ${IN}/allfact.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SUPFRACF.NRLIB ; \
	${TANGLE} -R"package SUPFRACF SupFractionFactorizer" ${IN}/allfact.spad.pamphlet >SUPFRACF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<allfact.spad.dvi (DOC from IN)>>=
${DOC}/allfact.spad.dvi: ${IN}/allfact.spad.pamphlet ${DOC}/axiom.sty
	@ echo 277 making ${DOC}/allfact.spad.dvi from ${IN}/allfact.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/allfact.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} allfact.spad ; \
	rm -f ${DOC}/allfact.spad.pamphlet ; \
	rm -f ${DOC}/allfact.spad.tex ; \
	rm -f ${DOC}/allfact.spad )

@
\subsection{alql.spad \cite{1}}
<<alql.spad (SPAD from IN)>>=
${OUTSRC}/alql.spad: ${IN}/alql.spad.pamphlet
	@ echo 278 making ${OUTSRC}/alql.spad from ${IN}/alql.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/alql.spad.pamphlet >alql.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DBASE.o (O from NRLIB)>>=
${OUT}/DBASE.o: ${MID}/DBASE.NRLIB
	@ echo 279-13 making ${OUT}/DBASE.o from ${MID}/DBASE.NRLIB
	@ cp ${MID}/DBASE.NRLIB/code.o ${OUT}/DBASE.o

@
<<DBASE.NRLIB (NRLIB from MID)>>=
${MID}/DBASE.NRLIB: ${MID}/DBASE.spad
	@ echo 280 making ${MID}/DBASE.NRLIB from ${MID}/DBASE.spad
	@ (cd ${MID} ; 	echo ')co DBASE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DBASE.spad (SPAD from IN)>>=
${MID}/DBASE.spad: ${IN}/alql.spad.pamphlet
	@ echo 281 making ${MID}/DBASE.spad from ${IN}/alql.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DBASE.NRLIB ; \
	${TANGLE} -R"domain DBASE Database" ${IN}/alql.spad.pamphlet >DBASE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DLIST.o (O from NRLIB)>>=
${OUT}/DLIST.o: ${MID}/DLIST.NRLIB
	@ echo 282-10 making ${OUT}/DLIST.o from ${MID}/DLIST.NRLIB
	@ cp ${MID}/DLIST.NRLIB/code.o ${OUT}/DLIST.o

@
<<DLIST.NRLIB (NRLIB from MID)>>=
${MID}/DLIST.NRLIB: ${MID}/DLIST.spad
	@ echo 283 making ${MID}/DLIST.NRLIB from ${MID}/DLIST.spad
	@ (cd ${MID} ; 	echo ')co DLIST.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DLIST.spad (SPAD from IN)>>=
${MID}/DLIST.spad: ${IN}/alql.spad.pamphlet
	@ echo 284 making ${MID}/DLIST.spad from ${IN}/alql.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DLIST.NRLIB ; \
	${TANGLE} -R"domain DLIST DataList" ${IN}/alql.spad.pamphlet >DLIST.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ICARD.o (O from NRLIB)>>=
${OUT}/ICARD.o: ${MID}/ICARD.NRLIB
	@ echo 285-14 making ${OUT}/ICARD.o from ${MID}/ICARD.NRLIB
	@ cp ${MID}/ICARD.NRLIB/code.o ${OUT}/ICARD.o

@
<<ICARD.NRLIB (NRLIB from MID)>>=
${MID}/ICARD.NRLIB: ${MID}/ICARD.spad
	@ echo 286 making ${MID}/ICARD.NRLIB from ${MID}/ICARD.spad
	@ (cd ${MID} ; 	echo ')co ICARD.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ICARD.spad (SPAD from IN)>>=
${MID}/ICARD.spad: ${IN}/alql.spad.pamphlet
	@ echo 287 making ${MID}/ICARD.spad from ${IN}/alql.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ICARD.NRLIB ; \
	${TANGLE} -R"domain ICARD IndexCard" ${IN}/alql.spad.pamphlet >ICARD.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MTHING.o (O from NRLIB)>>=
${OUT}/MTHING.o: ${MID}/MTHING.NRLIB
	@ echo 288-10 making ${OUT}/MTHING.o from ${MID}/MTHING.NRLIB
	@ cp ${MID}/MTHING.NRLIB/code.o ${OUT}/MTHING.o

@
<<MTHING.NRLIB (NRLIB from MID)>>=
${MID}/MTHING.NRLIB: ${MID}/MTHING.spad
	@ echo 289 making ${MID}/MTHING.NRLIB from ${MID}/MTHING.spad
	@ (cd ${MID} ; 	echo ')co MTHING.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MTHING.spad (SPAD from IN)>>=
${MID}/MTHING.spad: ${IN}/alql.spad.pamphlet
	@ echo 290 making ${MID}/MTHING.spad from ${IN}/alql.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MTHING.NRLIB ; \
	${TANGLE} -R"package MTHING MergeThing" ${IN}/alql.spad.pamphlet >MTHING.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OPQUERY.o (O from NRLIB)>>=
${OUT}/OPQUERY.o: ${MID}/OPQUERY.NRLIB
	@ echo 291-5 making ${OUT}/OPQUERY.o from ${MID}/OPQUERY.NRLIB
	@ cp ${MID}/OPQUERY.NRLIB/code.o ${OUT}/OPQUERY.o

@
<<OPQUERY.NRLIB (NRLIB from MID)>>=
${MID}/OPQUERY.NRLIB: ${MID}/OPQUERY.spad
	@ echo 292 making ${MID}/OPQUERY.NRLIB from ${MID}/OPQUERY.spad
	@ (cd ${MID} ; 	echo ')co OPQUERY.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OPQUERY.spad (SPAD from IN)>>=
${MID}/OPQUERY.spad: ${IN}/alql.spad.pamphlet
	@ echo 293 making ${MID}/OPQUERY.spad from ${IN}/alql.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OPQUERY.NRLIB ; \
	${TANGLE} -R"package OPQUERY OperationsQuery" ${IN}/alql.spad.pamphlet >OPQUERY.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<QEQUAT.o (O from NRLIB)>>=
${OUT}/QEQUAT.o: ${MID}/QEQUAT.NRLIB
	@ echo 294-19 making ${OUT}/QEQUAT.o from ${MID}/QEQUAT.NRLIB
	@ cp ${MID}/QEQUAT.NRLIB/code.o ${OUT}/QEQUAT.o

@
<<QEQUAT.NRLIB (NRLIB from MID)>>=
${MID}/QEQUAT.NRLIB: ${MID}/QEQUAT.spad
	@ echo 295 making ${MID}/QEQUAT.NRLIB from ${MID}/QEQUAT.spad
	@ (cd ${MID} ; 	echo ')co QEQUAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<QEQUAT.spad (SPAD from IN)>>=
${MID}/QEQUAT.spad: ${IN}/alql.spad.pamphlet
	@ echo 296 making ${MID}/QEQUAT.spad from ${IN}/alql.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf QEQUAT.NRLIB ; \
	${TANGLE} -R"domain QEQUAT QueryEquation" ${IN}/alql.spad.pamphlet >QEQUAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<alql.spad.dvi (DOC from IN)>>=
${DOC}/alql.spad.dvi: ${IN}/alql.spad.pamphlet ${DOC}/axiom.sty
	@ echo 297 making ${DOC}/alql.spad.dvi from ${IN}/alql.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/alql.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} alql.spad ; \
	rm -f ${DOC}/alql.spad.pamphlet ; \
	rm -f ${DOC}/alql.spad.tex ; \
	rm -f ${DOC}/alql.spad )

@
\subsection{annacat.spad \cite{1}}
<<annacat.spad (SPAD from IN)>>=
${OUTSRC}/annacat.spad: ${IN}/annacat.spad.pamphlet
	@ echo 298 making ${OUTSRC}/annacat.spad from ${IN}/annacat.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/annacat.spad.pamphlet >annacat.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NIPROB.o (O from NRLIB)>>=
${OUT}/NIPROB.o: ${MID}/NIPROB.NRLIB
	@ echo 299-4 making ${OUT}/NIPROB.o from ${MID}/NIPROB.NRLIB
	@ cp ${MID}/NIPROB.NRLIB/code.o ${OUT}/NIPROB.o

@
<<NIPROB.NRLIB (NRLIB from MID)>>=
${MID}/NIPROB.NRLIB: ${MID}/NIPROB.spad
	@ echo 300 making ${MID}/NIPROB.NRLIB from ${MID}/NIPROB.spad
	@ (cd ${MID} ; 	echo ')co NIPROB.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NIPROB.spad (SPAD from IN)>>=
${MID}/NIPROB.spad: ${IN}/annacat.spad.pamphlet
	@ echo 301 making ${MID}/NIPROB.spad from ${IN}/annacat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NIPROB.NRLIB ; \
	${TANGLE} -R"domain NIPROB NumericalIntegrationProblem" ${IN}/annacat.spad.pamphlet >NIPROB.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NUMINT.o (O from NRLIB)>>=
${OUT}/NUMINT.o: ${MID}/NUMINT.NRLIB
	@ echo 302-4 making ${OUT}/NUMINT.o from ${MID}/NUMINT.NRLIB
	@ cp ${MID}/NUMINT.NRLIB/code.o ${OUT}/NUMINT.o

@
<<NUMINT.NRLIB (NRLIB from MID)>>=
${MID}/NUMINT.NRLIB: ${MID}/NUMINT.spad
	@ echo 303 making ${MID}/NUMINT.NRLIB from ${MID}/NUMINT.spad
	@ (cd ${MID} ; 	echo ')co NUMINT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NUMINT.spad (SPAD from IN)>>=
${MID}/NUMINT.spad: ${IN}/annacat.spad.pamphlet
	@ echo 304 making ${MID}/NUMINT.spad from ${IN}/annacat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NUMINT.NRLIB ; \
	${TANGLE} -R"category NUMINT NumericalIntegrationCategory" ${IN}/annacat.spad.pamphlet >NUMINT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODECAT.o (O from NRLIB)>>=
${OUT}/ODECAT.o: ${MID}/ODECAT.NRLIB
	@ echo 305-4 making ${OUT}/ODECAT.o from ${MID}/ODECAT.NRLIB
	@ cp ${MID}/ODECAT.NRLIB/code.o ${OUT}/ODECAT.o

@
<<ODECAT.NRLIB (NRLIB from MID)>>=
${MID}/ODECAT.NRLIB: ${MID}/ODECAT.spad
	@ echo 306 making ${MID}/ODECAT.NRLIB from ${MID}/ODECAT.spad
	@ (cd ${MID} ; 	echo ')co ODECAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODECAT.spad (SPAD from IN)>>=
${MID}/ODECAT.spad: ${IN}/annacat.spad.pamphlet
	@ echo 307 making ${MID}/ODECAT.spad from ${IN}/annacat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ODECAT.NRLIB ; \
	${TANGLE} -R"category ODECAT OrdinaryDifferentialEquationsSolverCategory" ${IN}/annacat.spad.pamphlet >ODECAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODEPROB.o (O from NRLIB)>>=
${OUT}/ODEPROB.o: ${MID}/ODEPROB.NRLIB
	@ echo 308-4 making ${OUT}/ODEPROB.o from ${MID}/ODEPROB.NRLIB
	@ cp ${MID}/ODEPROB.NRLIB/code.o ${OUT}/ODEPROB.o

@
<<ODEPROB.NRLIB (NRLIB from MID)>>=
${MID}/ODEPROB.NRLIB: ${MID}/ODEPROB.spad
	@ echo 309 making ${MID}/ODEPROB.NRLIB from ${MID}/ODEPROB.spad
	@ (cd ${MID} ; 	echo ')co ODEPROB.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODEPROB.spad (SPAD from IN)>>=
${MID}/ODEPROB.spad: ${IN}/annacat.spad.pamphlet
	@ echo 310 making ${MID}/ODEPROB.spad from ${IN}/annacat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ODEPROB.NRLIB ; \
	${TANGLE} -R"domain ODEPROB NumericalODEProblem" ${IN}/annacat.spad.pamphlet >ODEPROB.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OPTPROB.o (O from NRLIB)>>=
${OUT}/OPTPROB.o: ${MID}/OPTPROB.NRLIB
	@ echo 311-4 making ${OUT}/OPTPROB.o from ${MID}/OPTPROB.NRLIB
	@ cp ${MID}/OPTPROB.NRLIB/code.o ${OUT}/OPTPROB.o

@
<<OPTPROB.NRLIB (NRLIB from MID)>>=
${MID}/OPTPROB.NRLIB: ${MID}/OPTPROB.spad
	@ echo 312 making ${MID}/OPTPROB.NRLIB from ${MID}/OPTPROB.spad
	@ (cd ${MID} ; 	echo ')co OPTPROB.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OPTPROB.spad (SPAD from IN)>>=
${MID}/OPTPROB.spad: ${IN}/annacat.spad.pamphlet
	@ echo 313 making ${MID}/OPTPROB.spad from ${IN}/annacat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OPTPROB.NRLIB ; \
	${TANGLE} -R"domain OPTPROB NumericalOptimizationProblem" ${IN}/annacat.spad.pamphlet >OPTPROB.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PDECAT.o (O from NRLIB)>>=
${OUT}/PDECAT.o: ${MID}/PDECAT.NRLIB
	@ echo 314-4 making ${OUT}/PDECAT.o from ${MID}/PDECAT.NRLIB
	@ cp ${MID}/PDECAT.NRLIB/code.o ${OUT}/PDECAT.o

@
<<PDECAT.NRLIB (NRLIB from MID)>>=
${MID}/PDECAT.NRLIB: ${MID}/PDECAT.spad
	@ echo 315 making ${MID}/PDECAT.NRLIB from ${MID}/PDECAT.spad
	@ (cd ${MID} ; 	echo ')co PDECAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PDECAT.spad (SPAD from IN)>>=
${MID}/PDECAT.spad: ${IN}/annacat.spad.pamphlet
	@ echo 316 making ${MID}/PDECAT.spad from ${IN}/annacat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PDECAT.NRLIB ; \
	${TANGLE} -R"category PDECAT PartialDifferentialEquationsSolverCategory" ${IN}/annacat.spad.pamphlet >PDECAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PDEPROB.o (O from NRLIB)>>=
${OUT}/PDEPROB.o: ${MID}/PDEPROB.NRLIB
	@ echo 317-4 making ${OUT}/PDEPROB.o from ${MID}/PDEPROB.NRLIB
	@ cp ${MID}/PDEPROB.NRLIB/code.o ${OUT}/PDEPROB.o

@
<<PDEPROB.NRLIB (NRLIB from MID)>>=
${MID}/PDEPROB.NRLIB: ${MID}/PDEPROB.spad
	@ echo 318 making ${MID}/PDEPROB.NRLIB from ${MID}/PDEPROB.spad
	@ (cd ${MID} ; 	echo ')co PDEPROB.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PDEPROB.spad (SPAD from IN)>>=
${MID}/PDEPROB.spad: ${IN}/annacat.spad.pamphlet
	@ echo 319 making ${MID}/PDEPROB.spad from ${IN}/annacat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PDEPROB.NRLIB ; \
	${TANGLE} -R"domain PDEPROB NumericalPDEProblem" ${IN}/annacat.spad.pamphlet >PDEPROB.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OPTCAT.o (O from NRLIB)>>=
${OUT}/OPTCAT.o: ${MID}/OPTCAT.NRLIB
	@ echo 320-4 making ${OUT}/OPTCAT.o from ${MID}/OPTCAT.NRLIB
	@ cp ${MID}/OPTCAT.NRLIB/code.o ${OUT}/OPTCAT.o

@
<<OPTCAT.NRLIB (NRLIB from MID)>>=
${MID}/OPTCAT.NRLIB: ${MID}/OPTCAT.spad
	@ echo 321 making ${MID}/OPTCAT.NRLIB from ${MID}/OPTCAT.spad
	@ (cd ${MID} ; 	echo ')co OPTCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OPTCAT.spad (SPAD from IN)>>=
${MID}/OPTCAT.spad: ${IN}/annacat.spad.pamphlet
	@ echo 322 making ${MID}/OPTCAT.spad from ${IN}/annacat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OPTCAT.NRLIB ; \
	${TANGLE} -R"category OPTCAT NumericalOptimizationCategory" ${IN}/annacat.spad.pamphlet >OPTCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<annacat.spad.dvi (DOC from IN)>>=
${DOC}/annacat.spad.dvi: ${IN}/annacat.spad.pamphlet ${DOC}/axiom.sty
	@ echo 323 making ${DOC}/annacat.spad.dvi from ${IN}/annacat.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/annacat.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} annacat.spad ; \
	rm -f ${DOC}/annacat.spad.pamphlet ; \
	rm -f ${DOC}/annacat.spad.tex ; \
	rm -f ${DOC}/annacat.spad )

@
\subsection{any.spad \cite{1}}
<<any.spad (SPAD from IN)>>=
${OUTSRC}/any.spad: ${IN}/any.spad.pamphlet
	@ echo 324 making ${OUTSRC}/any.spad from ${IN}/any.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/any.spad.pamphlet >any.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ANY.o (O from NRLIB)>>=
${OUT}/ANY.o: ${MID}/ANY.NRLIB
	@ echo 325-19 making ${OUT}/ANY.o from ${MID}/ANY.NRLIB
	@ cp ${MID}/ANY.NRLIB/code.o ${OUT}/ANY.o

@
<<ANY.NRLIB (NRLIB from MID)>>=
${MID}/ANY.NRLIB: ${MID}/ANY.spad
	@ echo 326 making ${MID}/ANY.NRLIB from ${MID}/ANY.spad
	@ (cd ${MID} ; 	echo ')co ANY.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ANY.spad (SPAD from IN)>>=
${MID}/ANY.spad: ${IN}/any.spad.pamphlet
	@ echo 327 making ${MID}/ANY.spad from ${IN}/any.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ANY.NRLIB ; \
	${TANGLE} -R"domain ANY Any" ${IN}/any.spad.pamphlet >ANY.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ANY1.o (O from NRLIB)>>=
${OUT}/ANY1.o: ${MID}/ANY1.NRLIB
	@ echo 328-1 making ${OUT}/ANY1.o from ${MID}/ANY1.NRLIB
	@ cp ${MID}/ANY1.NRLIB/code.o ${OUT}/ANY1.o

@
<<ANY1.NRLIB (NRLIB from MID)>>=
${MID}/ANY1.NRLIB: ${MID}/ANY1.spad
	@ echo 329 making ${MID}/ANY1.NRLIB from ${MID}/ANY1.spad
	@ (cd ${MID} ; 	echo ')co ANY1.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ANY1.spad (SPAD from IN)>>=
${MID}/ANY1.spad: ${IN}/any.spad.pamphlet
	@ echo 330 making ${MID}/ANY1.spad from ${IN}/any.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ANY1.NRLIB ; \
	${TANGLE} -R"package ANY1 AnyFunctions1" ${IN}/any.spad.pamphlet >ANY1.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NONE1.o (O from NRLIB)>>=
${OUT}/NONE1.o: ${MID}/NONE1.NRLIB
	@ echo 331-1 making ${OUT}/NONE1.o from ${MID}/NONE1.NRLIB
	@ cp ${MID}/NONE1.NRLIB/code.o ${OUT}/NONE1.o

@
<<NONE1.NRLIB (NRLIB from MID)>>=
${MID}/NONE1.NRLIB: ${MID}/NONE1.spad
	@ echo 332 making ${MID}/NONE1.NRLIB from ${MID}/NONE1.spad
	@ (cd ${MID} ; 	echo ')co NONE1.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NONE1.spad (SPAD from IN)>>=
${MID}/NONE1.spad: ${IN}/any.spad.pamphlet
	@ echo 333 making ${MID}/NONE1.spad from ${IN}/any.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NONE1.NRLIB ; \
	${TANGLE} -R"package NONE1 NoneFunctions1" ${IN}/any.spad.pamphlet >NONE1.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NONE.o (O from NRLIB)>>=
${OUT}/NONE.o: ${MID}/NONE.NRLIB
	@ echo 334-4 making ${OUT}/NONE.o from ${MID}/NONE.NRLIB
	@ cp ${MID}/NONE.NRLIB/code.o ${OUT}/NONE.o

@
<<NONE.NRLIB (NRLIB from MID)>>=
${MID}/NONE.NRLIB: ${MID}/NONE.spad
	@ echo 335 making ${MID}/NONE.NRLIB from ${MID}/NONE.spad
	@ (cd ${MID} ; 	echo ')co NONE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NONE.spad (SPAD from IN)>>=
${MID}/NONE.spad: ${IN}/any.spad.pamphlet
	@ echo 336 making ${MID}/NONE.spad from ${IN}/any.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NONE.NRLIB ; \
	${TANGLE} -R"domain NONE None" ${IN}/any.spad.pamphlet >NONE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<any.spad.dvi (DOC from IN)>>=
${DOC}/any.spad.dvi: ${IN}/any.spad.pamphlet ${DOC}/axiom.sty
	@ echo 337 making ${DOC}/any.spad.dvi from ${IN}/any.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/any.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} any.spad ; \
	rm -f ${DOC}/any.spad.pamphlet ; \
	rm -f ${DOC}/any.spad.tex ; \
	rm -f ${DOC}/any.spad )

@
\subsection{array1.spad \cite{1}}
<<array1.spad (SPAD from IN)>>=
${OUTSRC}/array1.spad: ${IN}/array1.spad.pamphlet
	@ echo 338 making ${OUTSRC}/array1.spad from ${IN}/array1.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/array1.spad.pamphlet >array1.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ARRAY1.o (O from NRLIB)>>=
${OUT}/ARRAY1.o: ${MID}/ARRAY1.NRLIB
	@ echo 339-11 making ${OUT}/ARRAY1.o from ${MID}/ARRAY1.NRLIB
	@ cp ${MID}/ARRAY1.NRLIB/code.o ${OUT}/ARRAY1.o

@
<<ARRAY1.NRLIB (NRLIB from MID)>>=
${MID}/ARRAY1.NRLIB: ${MID}/ARRAY1.spad
	@ echo 340 making ${MID}/ARRAY1.NRLIB from ${MID}/ARRAY1.spad
	@ (cd ${MID} ; 	echo ')co ARRAY1.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ARRAY1.spad (SPAD from IN)>>=
${MID}/ARRAY1.spad: ${IN}/array1.spad.pamphlet
	@ echo 341 making ${MID}/ARRAY1.spad from ${IN}/array1.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ARRAY1.NRLIB ; \
	${TANGLE} -R"domain ARRAY1 OneDimensionalArray" ${IN}/array1.spad.pamphlet >ARRAY1.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ARRAY12.o (O from NRLIB)>>=
${OUT}/ARRAY12.o: ${MID}/ARRAY12.NRLIB
	@ echo 342-11 making ${OUT}/ARRAY12.o from ${MID}/ARRAY12.NRLIB
	@ cp ${MID}/ARRAY12.NRLIB/code.o ${OUT}/ARRAY12.o

@
<<ARRAY12.NRLIB (NRLIB from MID)>>=
${MID}/ARRAY12.NRLIB: ${MID}/ARRAY12.spad
	@ echo 343 making ${MID}/ARRAY12.NRLIB from ${MID}/ARRAY12.spad
	@ (cd ${MID} ; 	echo ')co ARRAY12.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ARRAY12.spad (SPAD from IN)>>=
${MID}/ARRAY12.spad: ${IN}/array1.spad.pamphlet
	@ echo 344 making ${MID}/ARRAY12.spad from ${IN}/array1.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ARRAY12.NRLIB ; \
	${TANGLE} -R"package ARRAY12 OneDimensionalArrayFunctions2" ${IN}/array1.spad.pamphlet >ARRAY12.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FARRAY.o (O from NRLIB)>>=
${OUT}/FARRAY.o: ${MID}/FARRAY.NRLIB
	@ echo 345-11 making ${OUT}/FARRAY.o from ${MID}/FARRAY.NRLIB
	@ cp ${MID}/FARRAY.NRLIB/code.o ${OUT}/FARRAY.o

@
<<FARRAY.NRLIB (NRLIB from MID)>>=
${MID}/FARRAY.NRLIB: ${MID}/FARRAY.spad
	@ echo 346 making ${MID}/FARRAY.NRLIB from ${MID}/FARRAY.spad
	@ (cd ${MID} ; 	echo ')co FARRAY.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FARRAY.spad (SPAD from IN)>>=
${MID}/FARRAY.spad: ${IN}/array1.spad.pamphlet
	@ echo 347 making ${MID}/FARRAY.spad from ${IN}/array1.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FARRAY.NRLIB ; \
	${TANGLE} -R"domain FARRAY FlexibleArray" ${IN}/array1.spad.pamphlet >FARRAY.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IARRAY1.o (O from NRLIB)>>=
${OUT}/IARRAY1.o: ${MID}/IARRAY1.NRLIB
	@ echo 348-11 making ${OUT}/IARRAY1.o from ${MID}/IARRAY1.NRLIB
	@ cp ${MID}/IARRAY1.NRLIB/code.o ${OUT}/IARRAY1.o

@
<<IARRAY1.NRLIB (NRLIB from MID)>>=
${MID}/IARRAY1.NRLIB: ${MID}/IARRAY1.spad
	@ echo 349 making ${MID}/IARRAY1.NRLIB from ${MID}/IARRAY1.spad
	@ (cd ${MID} ; 	echo ')co IARRAY1.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IARRAY1.spad (SPAD from IN)>>=
${MID}/IARRAY1.spad: ${IN}/array1.spad.pamphlet
	@ echo 350 making ${MID}/IARRAY1.spad from ${IN}/array1.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IARRAY1.NRLIB ; \
	${TANGLE} -R"domain IARRAY1 IndexedOneDimensionalArray" ${IN}/array1.spad.pamphlet >IARRAY1.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IFARRAY.o (O from NRLIB)>>=
${OUT}/IFARRAY.o: ${MID}/IFARRAY.NRLIB
	@ echo 351-11 making ${OUT}/IFARRAY.o from ${MID}/IFARRAY.NRLIB
	@ cp ${MID}/IFARRAY.NRLIB/code.o ${OUT}/IFARRAY.o

@
<<IFARRAY.NRLIB (NRLIB from MID)>>=
${MID}/IFARRAY.NRLIB: ${MID}/IFARRAY.spad
	@ echo 352 making ${MID}/IFARRAY.NRLIB from ${MID}/IFARRAY.spad
	@ (cd ${MID} ; 	echo ')co IFARRAY.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IFARRAY.spad (SPAD from IN)>>=
${MID}/IFARRAY.spad: ${IN}/array1.spad.pamphlet
	@ echo 353 making ${MID}/IFARRAY.spad from ${IN}/array1.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IFARRAY.NRLIB ; \
	${TANGLE} -R"domain IFARRAY IndexedFlexibleArray" ${IN}/array1.spad.pamphlet >IFARRAY.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PRIMARR.o (O from NRLIB)>>=
${OUT}/PRIMARR.o: ${MID}/PRIMARR.NRLIB
	@ echo 354-0c making ${OUT}/PRIMARR.o from ${MID}/PRIMARR.NRLIB
	@ cp ${MID}/PRIMARR.NRLIB/code.o ${OUT}/PRIMARR.o

@
<<PRIMARR.NRLIB (NRLIB from MID)>>=
${MID}/PRIMARR.NRLIB: ${MID}/PRIMARR.spad
	@ echo 355 making ${MID}/PRIMARR.NRLIB from ${MID}/PRIMARR.spad
	@ (cd ${MID} ; 	echo ')co PRIMARR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PRIMARR.spad (SPAD from IN)>>=
${MID}/PRIMARR.spad: ${IN}/array1.spad.pamphlet
	@ echo 356 making ${MID}/PRIMARR.spad from ${IN}/array1.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PRIMARR.NRLIB ; \
	${TANGLE} -R"domain PRIMARR PrimitiveArray" ${IN}/array1.spad.pamphlet >PRIMARR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PRIMARR.o (BOOTSTRAP from MID)>>=
${MID}/PRIMARR.o: ${MID}/PRIMARR.lsp
	@ echo 357-0b making ${MID}/PRIMARR.o from ${MID}/PRIMARR.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "PRIMARR.lsp" :output-file "PRIMARR.o"))' | ${DEPSYS} )
	@ cp ${MID}/PRIMARR.o ${OUT}/PRIMARR.o

@
<<PRIMARR.lsp (LISP from IN)>>=
${MID}/PRIMARR.lsp: ${IN}/array1.spad.pamphlet
	@ echo 358 making ${MID}/PRIMARR.lsp from ${IN}/array1.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PRIMARR.NRLIB ; \
	rm -rf ${OUT}/PRIMARR.o ; \
	${TANGLE} -R"PRIMARR.lsp BOOTSTRAP" ${IN}/array1.spad.pamphlet >PRIMARR.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PRIMARR2.o (O from NRLIB)>>=
${OUT}/PRIMARR2.o: ${MID}/PRIMARR2.NRLIB
	@ echo 359-11 making ${OUT}/PRIMARR2.o from ${MID}/PRIMARR2.NRLIB
	@ cp ${MID}/PRIMARR2.NRLIB/code.o ${OUT}/PRIMARR2.o

@
<<PRIMARR2.NRLIB (NRLIB from MID)>>=
${MID}/PRIMARR2.NRLIB: ${MID}/PRIMARR2.spad
	@ echo 360 making ${MID}/PRIMARR2.NRLIB from ${MID}/PRIMARR2.spad
	@ (cd ${MID} ; 	echo ')co PRIMARR2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PRIMARR2.spad (SPAD from IN)>>=
${MID}/PRIMARR2.spad: ${IN}/array1.spad.pamphlet
	@ echo 361 making ${MID}/PRIMARR2.spad from ${IN}/array1.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PRIMARR2.NRLIB ; \
	${TANGLE} -R"package PRIMARR2 PrimitiveArrayFunctions2" ${IN}/array1.spad.pamphlet >PRIMARR2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TUPLE.o (O from NRLIB)>>=
${OUT}/TUPLE.o: ${MID}/TUPLE.NRLIB
	@ echo 362-11 making ${OUT}/TUPLE.o from ${MID}/TUPLE.NRLIB
	@ cp ${MID}/TUPLE.NRLIB/code.o ${OUT}/TUPLE.o

@
<<TUPLE.NRLIB (NRLIB from MID)>>=
${MID}/TUPLE.NRLIB: ${MID}/TUPLE.spad
	@ echo 363 making ${MID}/TUPLE.NRLIB from ${MID}/TUPLE.spad
	@ (cd ${MID} ; 	echo ')co TUPLE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TUPLE.spad (SPAD from IN)>>=
${MID}/TUPLE.spad: ${IN}/array1.spad.pamphlet
	@ echo 364 making ${MID}/TUPLE.spad from ${IN}/array1.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf TUPLE.NRLIB ; \
	${TANGLE} -R"domain TUPLE Tuple" ${IN}/array1.spad.pamphlet >TUPLE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<array1.spad.dvi (DOC from IN)>>=
${DOC}/array1.spad.dvi: ${IN}/array1.spad.pamphlet ${DOC}/axiom.sty
	@ echo 365 making ${DOC}/array1.spad.dvi from ${IN}/array1.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/array1.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} array1.spad ; \
	rm -f ${DOC}/array1.spad.pamphlet ; \
	rm -f ${DOC}/array1.spad.tex ; \
	rm -f ${DOC}/array1.spad )

@
\subsection{array2.spad \cite{1}}
<<array2.spad (SPAD from IN)>>=
${OUTSRC}/array2.spad: ${IN}/array2.spad.pamphlet
	@ echo 366 making ${OUTSRC}/array2.spad from ${IN}/array2.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/array2.spad.pamphlet >array2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ARRAY2.o (O from NRLIB)>>=
${OUT}/ARRAY2.o: ${MID}/ARRAY2.NRLIB
	@ echo 367-11 making ${OUT}/ARRAY2.o from ${MID}/ARRAY2.NRLIB
	@ cp ${MID}/ARRAY2.NRLIB/code.o ${OUT}/ARRAY2.o

@
<<ARRAY2.NRLIB (NRLIB from MID)>>=
${MID}/ARRAY2.NRLIB: ${MID}/ARRAY2.spad
	@ echo 368 making ${MID}/ARRAY2.NRLIB from ${MID}/ARRAY2.spad
	@ (cd ${MID} ; 	echo ')co ARRAY2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ARRAY2.spad (SPAD from IN)>>=
${MID}/ARRAY2.spad: ${IN}/array2.spad.pamphlet
	@ echo 369 making ${MID}/ARRAY2.spad from ${IN}/array2.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ARRAY2.NRLIB ; \
	${TANGLE} -R"domain ARRAY2 TwoDimensionalArray" ${IN}/array2.spad.pamphlet >ARRAY2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ARR2CAT-.o (O from NRLIB)>>=
${OUT}/ARR2CAT-.o: ${MID}/ARR2CAT.NRLIB
	@ echo 370-10 making ${OUT}/ARR2CAT-.o from ${MID}/ARR2CAT-.NRLIB
	@ cp ${MID}/ARR2CAT-.NRLIB/code.o ${OUT}/ARR2CAT-.o

@
<<ARR2CAT-.NRLIB (NRLIB from MID)>>=
${MID}/ARR2CAT-.NRLIB: ${MID}/ARR2CAT.spad 
	@ echo 371 making ${MID}/ARR2CAT-.NRLIB from ${MID}/ARR2CAT.spad
	@ (cd ${MID} ; 	echo ')co ARR2CAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ARR2CAT.o (O from NRLIB)>>=
${OUT}/ARR2CAT.o: ${MID}/ARR2CAT.NRLIB
	@ echo 372-10 making ${OUT}/ARR2CAT.o from ${MID}/ARR2CAT.NRLIB
	@ cp ${MID}/ARR2CAT.NRLIB/code.o ${OUT}/ARR2CAT.o

@
<<ARR2CAT.NRLIB (NRLIB from MID)>>=
${MID}/ARR2CAT.NRLIB: ${MID}/ARR2CAT.spad
	@ echo 373 making ${MID}/ARR2CAT.NRLIB from ${MID}/ARR2CAT.spad
	@ (cd ${MID} ; 	echo ')co ARR2CAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ARR2CAT.spad (SPAD from IN)>>=
${MID}/ARR2CAT.spad: ${IN}/array2.spad.pamphlet
	@ echo 374 making ${MID}/ARR2CAT.spad from ${IN}/array2.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ARR2CAT.NRLIB ; \
	${TANGLE} -R"category ARR2CAT TwoDimensionalArrayCategory" ${IN}/array2.spad.pamphlet >ARR2CAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IARRAY2.o (O from NRLIB)>>=
${OUT}/IARRAY2.o: ${MID}/IARRAY2.NRLIB
	@ echo 375-11 making ${OUT}/IARRAY2.o from ${MID}/IARRAY2.NRLIB
	@ cp ${MID}/IARRAY2.NRLIB/code.o ${OUT}/IARRAY2.o

@
<<IARRAY2.NRLIB (NRLIB from MID)>>=
${MID}/IARRAY2.NRLIB: ${MID}/IARRAY2.spad
	@ echo 376 making ${MID}/IARRAY2.NRLIB from ${MID}/IARRAY2.spad
	@ (cd ${MID} ; 	echo ')co IARRAY2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IARRAY2.spad (SPAD from IN)>>=
${MID}/IARRAY2.spad: ${IN}/array2.spad.pamphlet
	@ echo 377 making ${MID}/IARRAY2.spad from ${IN}/array2.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IARRAY2.NRLIB ; \
	${TANGLE} -R"domain IARRAY2 IndexedTwoDimensionalArray" ${IN}/array2.spad.pamphlet >IARRAY2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IIARRAY2.o (O from NRLIB)>>=
${OUT}/IIARRAY2.o: ${MID}/IIARRAY2.NRLIB
	@ echo 378-14 making ${OUT}/IIARRAY2.o from ${MID}/IIARRAY2.NRLIB
	@ cp ${MID}/IIARRAY2.NRLIB/code.o ${OUT}/IIARRAY2.o

@
<<IIARRAY2.NRLIB (NRLIB from MID)>>=
${MID}/IIARRAY2.NRLIB: ${MID}/IIARRAY2.spad
	@ echo 379 making ${MID}/IIARRAY2.NRLIB from ${MID}/IIARRAY2.spad
	@ (cd ${MID} ; 	echo ')co IIARRAY2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IIARRAY2.spad (SPAD from IN)>>=
${MID}/IIARRAY2.spad: ${IN}/array2.spad.pamphlet
	@ echo 380 making ${MID}/IIARRAY2.spad from ${IN}/array2.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IIARRAY2.NRLIB ; \
	${TANGLE} -R"domain IIARRAY2 InnerIndexedTwoDimensionalArray" ${IN}/array2.spad.pamphlet >IIARRAY2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<array2.spad.dvi (DOC from IN)>>=
${DOC}/array2.spad.dvi: ${IN}/array2.spad.pamphlet ${DOC}/axiom.sty
	@ echo 381 making ${DOC}/array2.spad.dvi from ${IN}/array2.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/array2.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} array2.spad ; \
	rm -f ${DOC}/array2.spad.pamphlet ; \
	rm -f ${DOC}/array2.spad.tex ; \
	rm -f ${DOC}/array2.spad )

@
\subsection{asp.spad \cite{1}}
<<asp.spad (SPAD from IN)>>=
${OUTSRC}/asp.spad: ${IN}/asp.spad.pamphlet
	@ echo 382 making ${OUTSRC}/asp.spad from ${IN}/asp.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/asp.spad.pamphlet >asp.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP1.o (O from NRLIB)>>=
${OUT}/ASP1.o: ${MID}/ASP1.NRLIB
	@ echo 383-14 making ${OUT}/ASP1.o from ${MID}/ASP1.NRLIB
	@ cp ${MID}/ASP1.NRLIB/code.o ${OUT}/ASP1.o

@
<<ASP1.NRLIB (NRLIB from MID)>>=
${MID}/ASP1.NRLIB: ${MID}/ASP1.spad
	@ echo 384 making ${MID}/ASP1.NRLIB from ${MID}/ASP1.spad
	@ (cd ${MID} ; 	echo ')co ASP1.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP1.spad (SPAD from IN)>>=
${MID}/ASP1.spad: ${IN}/asp.spad.pamphlet
	@ echo 385 making ${MID}/ASP1.spad from ${IN}/asp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASP1.NRLIB ; \
	${TANGLE} -R"domain ASP1 Asp1" ${IN}/asp.spad.pamphlet >ASP1.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP10.o (O from NRLIB)>>=
${OUT}/ASP10.o: ${MID}/ASP10.NRLIB
	@ echo 386-14 making ${OUT}/ASP10.o from ${MID}/ASP10.NRLIB
	@ cp ${MID}/ASP10.NRLIB/code.o ${OUT}/ASP10.o

@
<<ASP10.NRLIB (NRLIB from MID)>>=
${MID}/ASP10.NRLIB: ${MID}/ASP10.spad
	@ echo 387 making ${MID}/ASP10.NRLIB from ${MID}/ASP10.spad
	@ (cd ${MID} ; 	echo ')co ASP10.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP10.spad (SPAD from IN)>>=
${MID}/ASP10.spad: ${IN}/asp.spad.pamphlet
	@ echo 388 making ${MID}/ASP10.spad from ${IN}/asp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASP10.NRLIB ; \
	${TANGLE} -R"domain ASP10 Asp10" ${IN}/asp.spad.pamphlet >ASP10.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP12.o (O from NRLIB)>>=
${OUT}/ASP12.o: ${MID}/ASP12.NRLIB
	@ echo 389-19 making ${OUT}/ASP12.o from ${MID}/ASP12.NRLIB
	@ cp ${MID}/ASP12.NRLIB/code.o ${OUT}/ASP12.o

@
<<ASP12.NRLIB (NRLIB from MID)>>=
${MID}/ASP12.NRLIB: ${MID}/ASP12.spad
	@ echo 390 making ${MID}/ASP12.NRLIB from ${MID}/ASP12.spad
	@ (cd ${MID} ; 	echo ')co ASP12.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP12.spad (SPAD from IN)>>=
${MID}/ASP12.spad: ${IN}/asp.spad.pamphlet
	@ echo 391 making ${MID}/ASP12.spad from ${IN}/asp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASP12.NRLIB ; \
	${TANGLE} -R"domain ASP12 Asp12" ${IN}/asp.spad.pamphlet >ASP12.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP19.o (O from NRLIB)>>=
${OUT}/ASP19.o: ${MID}/ASP19.NRLIB
	@ echo 392-20 making ${OUT}/ASP19.o from ${MID}/ASP19.NRLIB
	@ cp ${MID}/ASP19.NRLIB/code.o ${OUT}/ASP19.o

@
<<ASP19.NRLIB (NRLIB from MID)>>=
${MID}/ASP19.NRLIB: ${MID}/ASP19.spad
	@ echo 393 making ${MID}/ASP19.NRLIB from ${MID}/ASP19.spad
	@ (cd ${MID} ; 	echo ')co ASP19.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP19.spad (SPAD from IN)>>=
${MID}/ASP19.spad: ${IN}/asp.spad.pamphlet
	@ echo 394 making ${MID}/ASP19.spad from ${IN}/asp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASP19.NRLIB ; \
	${TANGLE} -R"domain ASP19 Asp19" ${IN}/asp.spad.pamphlet >ASP19.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP20.o (O from NRLIB)>>=
${OUT}/ASP20.o: ${MID}/ASP20.NRLIB
	@ echo 395-20 making ${OUT}/ASP20.o from ${MID}/ASP20.NRLIB
	@ cp ${MID}/ASP20.NRLIB/code.o ${OUT}/ASP20.o

@
<<ASP20.NRLIB (NRLIB from MID)>>=
${MID}/ASP20.NRLIB: ${MID}/ASP20.spad
	@ echo 396 making ${MID}/ASP20.NRLIB from ${MID}/ASP20.spad
	@ (cd ${MID} ; 	echo ')co ASP20.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP20.spad (SPAD from IN)>>=
${MID}/ASP20.spad: ${IN}/asp.spad.pamphlet
	@ echo 397 making ${MID}/ASP20.spad from ${IN}/asp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASP20.NRLIB ; \
	${TANGLE} -R"domain ASP20 Asp20" ${IN}/asp.spad.pamphlet >ASP20.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP24.o (O from NRLIB)>>=
${OUT}/ASP24.o: ${MID}/ASP24.NRLIB
	@ echo 398-14 making ${OUT}/ASP24.o from ${MID}/ASP24.NRLIB
	@ cp ${MID}/ASP24.NRLIB/code.o ${OUT}/ASP24.o

@
<<ASP24.NRLIB (NRLIB from MID)>>=
${MID}/ASP24.NRLIB: ${MID}/ASP24.spad
	@ echo 399 making ${MID}/ASP24.NRLIB from ${MID}/ASP24.spad
	@ (cd ${MID} ; 	echo ')co ASP24.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP24.spad (SPAD from IN)>>=
${MID}/ASP24.spad: ${IN}/asp.spad.pamphlet
	@ echo 400 making ${MID}/ASP24.spad from ${IN}/asp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASP24.NRLIB ; \
	${TANGLE} -R"domain ASP24 Asp24" ${IN}/asp.spad.pamphlet >ASP24.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP27.o (O from NRLIB)>>=
${OUT}/ASP27.o: ${MID}/ASP27.NRLIB
	@ echo 401-19 making ${OUT}/ASP27.o from ${MID}/ASP27.NRLIB
	@ cp ${MID}/ASP27.NRLIB/code.o ${OUT}/ASP27.o

@
<<ASP27.NRLIB (NRLIB from MID)>>=
${MID}/ASP27.NRLIB: ${MID}/ASP27.spad
	@ echo 402 making ${MID}/ASP27.NRLIB from ${MID}/ASP27.spad
	@ (cd ${MID} ; 	echo ')co ASP27.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP27.spad (SPAD from IN)>>=
${MID}/ASP27.spad: ${IN}/asp.spad.pamphlet
	@ echo 403 making ${MID}/ASP27.spad from ${IN}/asp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASP27.NRLIB ; \
	${TANGLE} -R"domain ASP27 Asp27" ${IN}/asp.spad.pamphlet >ASP27.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP28.o (O from NRLIB)>>=
${OUT}/ASP28.o: ${MID}/ASP28.NRLIB
	@ echo 404-19 making ${OUT}/ASP28.o from ${MID}/ASP28.NRLIB
	@ cp ${MID}/ASP28.NRLIB/code.o ${OUT}/ASP28.o

@
<<ASP28.NRLIB (NRLIB from MID)>>=
${MID}/ASP28.NRLIB: ${MID}/ASP28.spad
	@ echo 405 making ${MID}/ASP28.NRLIB from ${MID}/ASP28.spad
	@ (cd ${MID} ; 	echo ')co ASP28.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP28.spad (SPAD from IN)>>=
${MID}/ASP28.spad: ${IN}/asp.spad.pamphlet
	@ echo 406 making ${MID}/ASP28.spad from ${IN}/asp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASP28.NRLIB ; \
	${TANGLE} -R"domain ASP28 Asp28" ${IN}/asp.spad.pamphlet >ASP28.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP29.o (O from NRLIB)>>=
${OUT}/ASP29.o: ${MID}/ASP29.NRLIB
	@ echo 407-22 making ${OUT}/ASP29.o from ${MID}/ASP29.NRLIB
	@ cp ${MID}/ASP29.NRLIB/code.o ${OUT}/ASP29.o

@
<<ASP29.NRLIB (NRLIB from MID)>>=
${MID}/ASP29.NRLIB: ${MID}/ASP29.spad
	@ echo 408 making ${MID}/ASP29.NRLIB from ${MID}/ASP29.spad
	@ (cd ${MID} ; 	echo ')co ASP29.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP29.spad (SPAD from IN)>>=
${MID}/ASP29.spad: ${IN}/asp.spad.pamphlet
	@ echo 409 making ${MID}/ASP29.spad from ${IN}/asp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASP29.NRLIB ; \
	${TANGLE} -R"domain ASP29 Asp29" ${IN}/asp.spad.pamphlet >ASP29.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP30.o (O from NRLIB)>>=
${OUT}/ASP30.o: ${MID}/ASP30.NRLIB
	@ echo 410-20 making ${OUT}/ASP30.o from ${MID}/ASP30.NRLIB
	@ cp ${MID}/ASP30.NRLIB/code.o ${OUT}/ASP30.o

@
<<ASP30.NRLIB (NRLIB from MID)>>=
${MID}/ASP30.NRLIB: ${MID}/ASP30.spad
	@ echo 411 making ${MID}/ASP30.NRLIB from ${MID}/ASP30.spad
	@ (cd ${MID} ; 	echo ')co ASP30.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP30.spad (SPAD from IN)>>=
${MID}/ASP30.spad: ${IN}/asp.spad.pamphlet
	@ echo 412 making ${MID}/ASP30.spad from ${IN}/asp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASP30.NRLIB ; \
	${TANGLE} -R"domain ASP30 Asp30" ${IN}/asp.spad.pamphlet >ASP30.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP31.o (O from NRLIB)>>=
${OUT}/ASP31.o: ${MID}/ASP31.NRLIB
	@ echo 413-20 making ${OUT}/ASP31.o from ${MID}/ASP31.NRLIB
	@ cp ${MID}/ASP31.NRLIB/code.o ${OUT}/ASP31.o

@
<<ASP31.NRLIB (NRLIB from MID)>>=
${MID}/ASP31.NRLIB: ${MID}/ASP31.spad
	@ echo 414 making ${MID}/ASP31.NRLIB from ${MID}/ASP31.spad
	@ (cd ${MID} ; 	echo ')co ASP31.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP31.spad (SPAD from IN)>>=
${MID}/ASP31.spad: ${IN}/asp.spad.pamphlet
	@ echo 415 making ${MID}/ASP31.spad from ${IN}/asp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASP31.NRLIB ; \
	${TANGLE} -R"domain ASP31 Asp31" ${IN}/asp.spad.pamphlet >ASP31.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP33.o (O from NRLIB)>>=
${OUT}/ASP33.o: ${MID}/ASP33.NRLIB
	@ echo 416-19 making ${OUT}/ASP33.o from ${MID}/ASP33.NRLIB
	@ cp ${MID}/ASP33.NRLIB/code.o ${OUT}/ASP33.o

@
<<ASP33.NRLIB (NRLIB from MID)>>=
${MID}/ASP33.NRLIB: ${MID}/ASP33.spad
	@ echo 417 making ${MID}/ASP33.NRLIB from ${MID}/ASP33.spad
	@ (cd ${MID} ; 	echo ')co ASP33.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP33.spad (SPAD from IN)>>=
${MID}/ASP33.spad: ${IN}/asp.spad.pamphlet
	@ echo 418 making ${MID}/ASP33.spad from ${IN}/asp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASP33.NRLIB ; \
	${TANGLE} -R"domain ASP33 Asp33" ${IN}/asp.spad.pamphlet >ASP33.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP34.o (O from NRLIB)>>=
${OUT}/ASP34.o: ${MID}/ASP34.NRLIB
	@ echo 419-10 making ${OUT}/ASP34.o from ${MID}/ASP34.NRLIB
	@ cp ${MID}/ASP34.NRLIB/code.o ${OUT}/ASP34.o

@
<<ASP34.NRLIB (NRLIB from MID)>>=
${MID}/ASP34.NRLIB: ${MID}/ASP34.spad
	@ echo 420 making ${MID}/ASP34.NRLIB from ${MID}/ASP34.spad
	@ (cd ${MID} ; 	echo ')co ASP34.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP34.spad (SPAD from IN)>>=
${MID}/ASP34.spad: ${IN}/asp.spad.pamphlet
	@ echo 421 making ${MID}/ASP34.spad from ${IN}/asp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASP34.NRLIB ; \
	${TANGLE} -R"domain ASP34 Asp34" ${IN}/asp.spad.pamphlet >ASP34.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP35.o (O from NRLIB)>>=
${OUT}/ASP35.o: ${MID}/ASP35.NRLIB
	@ echo 422-20 making ${OUT}/ASP35.o from ${MID}/ASP35.NRLIB
	@ cp ${MID}/ASP35.NRLIB/code.o ${OUT}/ASP35.o

@
<<ASP35.NRLIB (NRLIB from MID)>>=
${MID}/ASP35.NRLIB: ${MID}/ASP35.spad
	@ echo 423 making ${MID}/ASP35.NRLIB from ${MID}/ASP35.spad
	@ (cd ${MID} ; 	echo ')co ASP35.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP35.spad (SPAD from IN)>>=
${MID}/ASP35.spad: ${IN}/asp.spad.pamphlet
	@ echo 424 making ${MID}/ASP35.spad from ${IN}/asp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASP35.NRLIB ; \
	${TANGLE} -R"domain ASP35 Asp35" ${IN}/asp.spad.pamphlet >ASP35.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP4.o (O from NRLIB)>>=
${OUT}/ASP4.o: ${MID}/ASP4.NRLIB
	@ echo 425-14 making ${OUT}/ASP4.o from ${MID}/ASP4.NRLIB
	@ cp ${MID}/ASP4.NRLIB/code.o ${OUT}/ASP4.o

@
<<ASP4.NRLIB (NRLIB from MID)>>=
${MID}/ASP4.NRLIB: ${MID}/ASP4.spad
	@ echo 426 making ${MID}/ASP4.NRLIB from ${MID}/ASP4.spad
	@ (cd ${MID} ; 	echo ')co ASP4.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP4.spad (SPAD from IN)>>=
${MID}/ASP4.spad: ${IN}/asp.spad.pamphlet
	@ echo 427 making ${MID}/ASP4.spad from ${IN}/asp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASP4.NRLIB ; \
	${TANGLE} -R"domain ASP4 Asp4" ${IN}/asp.spad.pamphlet >ASP4.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP41.o (O from NRLIB)>>=
${OUT}/ASP41.o: ${MID}/ASP41.NRLIB
	@ echo 428-20 making ${OUT}/ASP41.o from ${MID}/ASP41.NRLIB
	@ cp ${MID}/ASP41.NRLIB/code.o ${OUT}/ASP41.o

@
<<ASP41.NRLIB (NRLIB from MID)>>=
${MID}/ASP41.NRLIB: ${MID}/ASP41.spad
	@ echo 429 making ${MID}/ASP41.NRLIB from ${MID}/ASP41.spad
	@ (cd ${MID} ; 	echo ')co ASP41.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP41.spad (SPAD from IN)>>=
${MID}/ASP41.spad: ${IN}/asp.spad.pamphlet
	@ echo 430 making ${MID}/ASP41.spad from ${IN}/asp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASP41.NRLIB ; \
	${TANGLE} -R"domain ASP41 Asp41" ${IN}/asp.spad.pamphlet >ASP41.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP42.o (O from NRLIB)>>=
${OUT}/ASP42.o: ${MID}/ASP42.NRLIB
	@ echo 431-20 making ${OUT}/ASP42.o from ${MID}/ASP42.NRLIB
	@ cp ${MID}/ASP42.NRLIB/code.o ${OUT}/ASP42.o

@
<<ASP42.NRLIB (NRLIB from MID)>>=
${MID}/ASP42.NRLIB: ${MID}/ASP42.spad
	@ echo 432 making ${MID}/ASP42.NRLIB from ${MID}/ASP42.spad
	@ (cd ${MID} ; 	echo ')co ASP42.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP42.spad (SPAD from IN)>>=
${MID}/ASP42.spad: ${IN}/asp.spad.pamphlet
	@ echo 433 making ${MID}/ASP42.spad from ${IN}/asp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASP42.NRLIB ; \
	${TANGLE} -R"domain ASP42 Asp42" ${IN}/asp.spad.pamphlet >ASP42.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP49.o (O from NRLIB)>>=
${OUT}/ASP49.o: ${MID}/ASP49.NRLIB
	@ echo 434-19 making ${OUT}/ASP49.o from ${MID}/ASP49.NRLIB
	@ cp ${MID}/ASP49.NRLIB/code.o ${OUT}/ASP49.o

@
<<ASP49.NRLIB (NRLIB from MID)>>=
${MID}/ASP49.NRLIB: ${MID}/ASP49.spad
	@ echo 435 making ${MID}/ASP49.NRLIB from ${MID}/ASP49.spad
	@ (cd ${MID} ; 	echo ')co ASP49.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP49.spad (SPAD from IN)>>=
${MID}/ASP49.spad: ${IN}/asp.spad.pamphlet
	@ echo 436 making ${MID}/ASP49.spad from ${IN}/asp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASP49.NRLIB ; \
	${TANGLE} -R"domain ASP49 Asp49" ${IN}/asp.spad.pamphlet >ASP49.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP50.o (O from NRLIB)>>=
${OUT}/ASP50.o: ${MID}/ASP50.NRLIB
	@ echo 437-14 making ${OUT}/ASP50.o from ${MID}/ASP50.NRLIB
	@ cp ${MID}/ASP50.NRLIB/code.o ${OUT}/ASP50.o

@
<<ASP50.NRLIB (NRLIB from MID)>>=
${MID}/ASP50.NRLIB: ${MID}/ASP50.spad
	@ echo 438 making ${MID}/ASP50.NRLIB from ${MID}/ASP50.spad
	@ (cd ${MID} ; 	echo ')co ASP50.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP50.spad (SPAD from IN)>>=
${MID}/ASP50.spad: ${IN}/asp.spad.pamphlet
	@ echo 439 making ${MID}/ASP50.spad from ${IN}/asp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASP50.NRLIB ; \
	${TANGLE} -R"domain ASP50 Asp50" ${IN}/asp.spad.pamphlet >ASP50.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP55.o (O from NRLIB)>>=
${OUT}/ASP55.o: ${MID}/ASP55.NRLIB
	@ echo 440-19 making ${OUT}/ASP55.o from ${MID}/ASP55.NRLIB
	@ cp ${MID}/ASP55.NRLIB/code.o ${OUT}/ASP55.o

@
<<ASP55.NRLIB (NRLIB from MID)>>=
${MID}/ASP55.NRLIB: ${MID}/ASP55.spad
	@ echo 441 making ${MID}/ASP55.NRLIB from ${MID}/ASP55.spad
	@ (cd ${MID} ; 	echo ')co ASP55.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP55.spad (SPAD from IN)>>=
${MID}/ASP55.spad: ${IN}/asp.spad.pamphlet
	@ echo 442 making ${MID}/ASP55.spad from ${IN}/asp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASP55.NRLIB ; \
	${TANGLE} -R"domain ASP55 Asp55" ${IN}/asp.spad.pamphlet >ASP55.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP6.o (O from NRLIB)>>=
${OUT}/ASP6.o: ${MID}/ASP6.NRLIB
	@ echo 443-14 making ${OUT}/ASP6.o from ${MID}/ASP6.NRLIB
	@ cp ${MID}/ASP6.NRLIB/code.o ${OUT}/ASP6.o

@
<<ASP6.NRLIB (NRLIB from MID)>>=
${MID}/ASP6.NRLIB: ${MID}/ASP6.spad
	@ echo 444 making ${MID}/ASP6.NRLIB from ${MID}/ASP6.spad
	@ (cd ${MID} ; 	echo ')co ASP6.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP6.spad (SPAD from IN)>>=
${MID}/ASP6.spad: ${IN}/asp.spad.pamphlet
	@ echo 445 making ${MID}/ASP6.spad from ${IN}/asp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASP6.NRLIB ; \
	${TANGLE} -R"domain ASP6 Asp6" ${IN}/asp.spad.pamphlet >ASP6.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP7.o (O from NRLIB)>>=
${OUT}/ASP7.o: ${MID}/ASP7.NRLIB
	@ echo 446-19 making ${OUT}/ASP7.o from ${MID}/ASP7.NRLIB
	@ cp ${MID}/ASP7.NRLIB/code.o ${OUT}/ASP7.o

@
<<ASP7.NRLIB (NRLIB from MID)>>=
${MID}/ASP7.NRLIB: ${MID}/ASP7.spad
	@ echo 447 making ${MID}/ASP7.NRLIB from ${MID}/ASP7.spad
	@ (cd ${MID} ; 	echo ')co ASP7.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP7.spad (SPAD from IN)>>=
${MID}/ASP7.spad: ${IN}/asp.spad.pamphlet
	@ echo 448 making ${MID}/ASP7.spad from ${IN}/asp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASP7.NRLIB ; \
	${TANGLE} -R"domain ASP7 Asp7" ${IN}/asp.spad.pamphlet >ASP7.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP73.o (O from NRLIB)>>=
${OUT}/ASP73.o: ${MID}/ASP73.NRLIB
	@ echo 449-14 making ${OUT}/ASP73.o from ${MID}/ASP73.NRLIB
	@ cp ${MID}/ASP73.NRLIB/code.o ${OUT}/ASP73.o

@
<<ASP73.NRLIB (NRLIB from MID)>>=
${MID}/ASP73.NRLIB: ${MID}/ASP73.spad
	@ echo 450 making ${MID}/ASP73.NRLIB from ${MID}/ASP73.spad
	@ (cd ${MID} ; 	echo ')co ASP73.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP73.spad (SPAD from IN)>>=
${MID}/ASP73.spad: ${IN}/asp.spad.pamphlet
	@ echo 451 making ${MID}/ASP73.spad from ${IN}/asp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASP73.NRLIB ; \
	${TANGLE} -R"domain ASP73 Asp73" ${IN}/asp.spad.pamphlet >ASP73.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP74.o (O from NRLIB)>>=
${OUT}/ASP74.o: ${MID}/ASP74.NRLIB
	@ echo 452-20 making ${OUT}/ASP74.o from ${MID}/ASP74.NRLIB
	@ cp ${MID}/ASP74.NRLIB/code.o ${OUT}/ASP74.o

@
<<ASP74.NRLIB (NRLIB from MID)>>=
${MID}/ASP74.NRLIB: ${MID}/ASP74.spad
	@ echo 453 making ${MID}/ASP74.NRLIB from ${MID}/ASP74.spad
	@ (cd ${MID} ; 	echo ')co ASP74.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP74.spad (SPAD from IN)>>=
${MID}/ASP74.spad: ${IN}/asp.spad.pamphlet
	@ echo 454 making ${MID}/ASP74.spad from ${IN}/asp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASP74.NRLIB ; \
	${TANGLE} -R"domain ASP74 Asp74" ${IN}/asp.spad.pamphlet >ASP74.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP77.o (O from NRLIB)>>=
${OUT}/ASP77.o: ${MID}/ASP77.NRLIB
	@ echo 455-20 making ${OUT}/ASP77.o from ${MID}/ASP77.NRLIB
	@ cp ${MID}/ASP77.NRLIB/code.o ${OUT}/ASP77.o

@
<<ASP77.NRLIB (NRLIB from MID)>>=
${MID}/ASP77.NRLIB: ${MID}/ASP77.spad
	@ echo 456 making ${MID}/ASP77.NRLIB from ${MID}/ASP77.spad
	@ (cd ${MID} ; 	echo ')co ASP77.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP77.spad (SPAD from IN)>>=
${MID}/ASP77.spad: ${IN}/asp.spad.pamphlet
	@ echo 457 making ${MID}/ASP77.spad from ${IN}/asp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASP77.NRLIB ; \
	${TANGLE} -R"domain ASP77 Asp77" ${IN}/asp.spad.pamphlet >ASP77.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP78.o (O from NRLIB)>>=
${OUT}/ASP78.o: ${MID}/ASP78.NRLIB
	@ echo 458-19 making ${OUT}/ASP78.o from ${MID}/ASP78.NRLIB
	@ cp ${MID}/ASP78.NRLIB/code.o ${OUT}/ASP78.o

@
<<ASP78.NRLIB (NRLIB from MID)>>=
${MID}/ASP78.NRLIB: ${MID}/ASP78.spad
	@ echo 459 making ${MID}/ASP78.NRLIB from ${MID}/ASP78.spad
	@ (cd ${MID} ; 	echo ')co ASP78.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP78.spad (SPAD from IN)>>=
${MID}/ASP78.spad: ${IN}/asp.spad.pamphlet
	@ echo 460 making ${MID}/ASP78.spad from ${IN}/asp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASP78.NRLIB ; \
	${TANGLE} -R"domain ASP78 Asp78" ${IN}/asp.spad.pamphlet >ASP78.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP8.o (O from NRLIB)>>=
${OUT}/ASP8.o: ${MID}/ASP8.NRLIB
	@ echo 461-19 making ${OUT}/ASP8.o from ${MID}/ASP8.NRLIB
	@ cp ${MID}/ASP8.NRLIB/code.o ${OUT}/ASP8.o

@
<<ASP8.NRLIB (NRLIB from MID)>>=
${MID}/ASP8.NRLIB: ${MID}/ASP8.spad
	@ echo 462 making ${MID}/ASP8.NRLIB from ${MID}/ASP8.spad
	@ (cd ${MID} ; 	echo ')co ASP8.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP8.spad (SPAD from IN)>>=
${MID}/ASP8.spad: ${IN}/asp.spad.pamphlet
	@ echo 463 making ${MID}/ASP8.spad from ${IN}/asp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASP8.NRLIB ; \
	${TANGLE} -R"domain ASP8 Asp8" ${IN}/asp.spad.pamphlet >ASP8.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP80.o (O from NRLIB)>>=
${OUT}/ASP80.o: ${MID}/ASP80.NRLIB
	@ echo 464-20 making ${OUT}/ASP80.o from ${MID}/ASP80.NRLIB
	@ cp ${MID}/ASP80.NRLIB/code.o ${OUT}/ASP80.o

@
<<ASP80.NRLIB (NRLIB from MID)>>=
${MID}/ASP80.NRLIB: ${MID}/ASP80.spad
	@ echo 465 making ${MID}/ASP80.NRLIB from ${MID}/ASP80.spad
	@ (cd ${MID} ; 	echo ')co ASP80.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP80.spad (SPAD from IN)>>=
${MID}/ASP80.spad: ${IN}/asp.spad.pamphlet
	@ echo 466 making ${MID}/ASP80.spad from ${IN}/asp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASP80.NRLIB ; \
	${TANGLE} -R"domain ASP80 Asp80" ${IN}/asp.spad.pamphlet >ASP80.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP9.o (O from NRLIB)>>=
${OUT}/ASP9.o: ${MID}/ASP9.NRLIB
	@ echo 467-19 making ${OUT}/ASP9.o from ${MID}/ASP9.NRLIB
	@ cp ${MID}/ASP9.NRLIB/code.o ${OUT}/ASP9.o

@
<<ASP9.NRLIB (NRLIB from MID)>>=
${MID}/ASP9.NRLIB: ${MID}/ASP9.spad
	@ echo 468 making ${MID}/ASP9.NRLIB from ${MID}/ASP9.spad
	@ (cd ${MID} ; 	echo ')co ASP9.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASP9.spad (SPAD from IN)>>=
${MID}/ASP9.spad: ${IN}/asp.spad.pamphlet
	@ echo 469 making ${MID}/ASP9.spad from ${IN}/asp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASP9.NRLIB ; \
	${TANGLE} -R"domain ASP9 Asp9" ${IN}/asp.spad.pamphlet >ASP9.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<asp.spad.dvi (DOC from IN)>>=
${DOC}/asp.spad.dvi: ${IN}/asp.spad.pamphlet ${DOC}/axiom.sty
	@ echo 470 making ${DOC}/asp.spad.dvi from ${IN}/asp.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/asp.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} asp.spad ; \
	rm -f ${DOC}/asp.spad.pamphlet ; \
	rm -f ${DOC}/asp.spad.tex ; \
	rm -f ${DOC}/asp.spad )

@
\subsection{attreg.spad \cite{1}}
<<attreg.spad (SPAD from IN)>>=
${OUTSRC}/attreg.spad: ${IN}/attreg.spad.pamphlet
	@ echo 471 making ${OUTSRC}/attreg.spad from ${IN}/attreg.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/attreg.spad.pamphlet >attreg.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ATTREG.o (O from NRLIB)>>=
${OUT}/ATTREG.o: ${MID}/ATTREG.NRLIB
	@ echo 472-0 making ${OUT}/ATTREG.o from ${MID}/ATTREG.NRLIB
	@ cp ${MID}/ATTREG.NRLIB/code.o ${OUT}/ATTREG.o

@
<<ATTREG.NRLIB (NRLIB from MID)>>=
${MID}/ATTREG.NRLIB: ${MID}/ATTREG.spad
	@ echo 473 making ${MID}/ATTREG.NRLIB from ${MID}/ATTREG.spad
	@ (cd ${MID} ; 	echo ')co ATTREG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ATTREG.spad (SPAD from IN)>>=
${MID}/ATTREG.spad: ${IN}/attreg.spad.pamphlet
	@ echo 474 making ${MID}/ATTREG.spad from ${IN}/attreg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ATTREG.NRLIB ; \
	${TANGLE} -R"category ATTREG AttributeRegistry" ${IN}/attreg.spad.pamphlet >ATTREG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<attreg.spad.dvi (DOC from IN)>>=
${DOC}/attreg.spad.dvi: ${IN}/attreg.spad.pamphlet ${DOC}/axiom.sty
	@ echo 475 making ${DOC}/attreg.spad.dvi from ${IN}/attreg.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/attreg.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} attreg.spad ; \
	rm -f ${DOC}/attreg.spad.pamphlet ; \
	rm -f ${DOC}/attreg.spad.tex ; \
	rm -f ${DOC}/attreg.spad )

@
\subsection{axtimer.as \cite{1}}
<<axtimer.as (SPAD from IN)>>=
${OUTSRC}/axtimer.as: ${IN}/axtimer.as.pamphlet
	@ echo 476 making ${OUTSRC}/axtimer.as from ${IN}/axtimer.as.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/axtimer.as.pamphlet >axtimer.as )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<axtimer.as.dvi (DOC from IN)>>=
${DOC}/axtimer.as.dvi: ${IN}/axtimer.as.pamphlet ${DOC}/axiom.sty
	@ echo 477 making ${DOC}/axtimer.as.dvi from ${IN}/axtimer.as.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/axtimer.as.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} axtimer.as ; \
	rm -f ${DOC}/axtimer.as.pamphlet ; \
	rm -f ${DOC}/axtimer.as.tex ; \
	rm -f ${DOC}/axtimer.as )

@
\subsection{bags.spad \cite{1}}
<<bags.spad (SPAD from IN)>>=
${OUTSRC}/bags.spad: ${IN}/bags.spad.pamphlet
	@ echo 478 making ${OUTSRC}/bags.spad from ${IN}/bags.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/bags.spad.pamphlet >bags.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASTACK.o (O from NRLIB)>>=
${OUT}/ASTACK.o: ${MID}/ASTACK.NRLIB
	@ echo 479-11 making ${OUT}/ASTACK.o from ${MID}/ASTACK.NRLIB
	@ cp ${MID}/ASTACK.NRLIB/code.o ${OUT}/ASTACK.o

@
<<ASTACK.NRLIB (NRLIB from MID)>>=
${MID}/ASTACK.NRLIB: ${MID}/ASTACK.spad
	@ echo 480 making ${MID}/ASTACK.NRLIB from ${MID}/ASTACK.spad
	@ (cd ${MID} ; 	echo ')co ASTACK.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASTACK.spad (SPAD from IN)>>=
${MID}/ASTACK.spad: ${IN}/bags.spad.pamphlet
	@ echo 481 making ${MID}/ASTACK.spad from ${IN}/bags.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASTACK.NRLIB ; \
	${TANGLE} -R"domain ASTACK ArrayStack" ${IN}/bags.spad.pamphlet >ASTACK.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DEQUEUE.o (O from NRLIB)>>=
${OUT}/DEQUEUE.o: ${MID}/DEQUEUE.NRLIB
	@ echo 482-10 making ${OUT}/DEQUEUE.o from ${MID}/DEQUEUE.NRLIB
	@ cp ${MID}/DEQUEUE.NRLIB/code.o ${OUT}/DEQUEUE.o

@
<<DEQUEUE.NRLIB (NRLIB from MID)>>=
${MID}/DEQUEUE.NRLIB: ${MID}/DEQUEUE.spad
	@ echo 483 making ${MID}/DEQUEUE.NRLIB from ${MID}/DEQUEUE.spad
	@ (cd ${MID} ; 	echo ')co DEQUEUE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DEQUEUE.spad (SPAD from IN)>>=
${MID}/DEQUEUE.spad: ${IN}/bags.spad.pamphlet
	@ echo 484 making ${MID}/DEQUEUE.spad from ${IN}/bags.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DEQUEUE.NRLIB ; \
	${TANGLE} -R"domain DEQUEUE Dequeue" ${IN}/bags.spad.pamphlet >DEQUEUE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<HEAP.o (O from NRLIB)>>=
${OUT}/HEAP.o: ${MID}/HEAP.NRLIB
	@ echo 485-11 making ${OUT}/HEAP.o from ${MID}/HEAP.NRLIB
	@ cp ${MID}/HEAP.NRLIB/code.o ${OUT}/HEAP.o

@
<<HEAP.NRLIB (NRLIB from MID)>>=
${MID}/HEAP.NRLIB: ${MID}/HEAP.spad
	@ echo 486 making ${MID}/HEAP.NRLIB from ${MID}/HEAP.spad
	@ (cd ${MID} ; 	echo ')co HEAP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<HEAP.spad (SPAD from IN)>>=
${MID}/HEAP.spad: ${IN}/bags.spad.pamphlet
	@ echo 487 making ${MID}/HEAP.spad from ${IN}/bags.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf HEAP.NRLIB ; \
	${TANGLE} -R"domain HEAP Heap" ${IN}/bags.spad.pamphlet >HEAP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<QUEUE.o (O from NRLIB)>>=
${OUT}/QUEUE.o: ${MID}/QUEUE.NRLIB
	@ echo 488-10 making ${OUT}/QUEUE.o from ${MID}/QUEUE.NRLIB
	@ cp ${MID}/QUEUE.NRLIB/code.o ${OUT}/QUEUE.o

@
<<QUEUE.NRLIB (NRLIB from MID)>>=
${MID}/QUEUE.NRLIB: ${MID}/QUEUE.spad
	@ echo 489 making ${MID}/QUEUE.NRLIB from ${MID}/QUEUE.spad
	@ (cd ${MID} ; 	echo ')co QUEUE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<QUEUE.spad (SPAD from IN)>>=
${MID}/QUEUE.spad: ${IN}/bags.spad.pamphlet
	@ echo 490 making ${MID}/QUEUE.spad from ${IN}/bags.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf QUEUE.NRLIB ; \
	${TANGLE} -R"domain QUEUE Queue" ${IN}/bags.spad.pamphlet >QUEUE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STACK.o (O from NRLIB)>>=
${OUT}/STACK.o: ${MID}/STACK.NRLIB
	@ echo 491-10 making ${OUT}/STACK.o from ${MID}/STACK.NRLIB
	@ cp ${MID}/STACK.NRLIB/code.o ${OUT}/STACK.o

@
<<STACK.NRLIB (NRLIB from MID)>>=
${MID}/STACK.NRLIB: ${MID}/STACK.spad
	@ echo 492 making ${MID}/STACK.NRLIB from ${MID}/STACK.spad
	@ (cd ${MID} ; 	echo ')co STACK.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STACK.spad (SPAD from IN)>>=
${MID}/STACK.spad: ${IN}/bags.spad.pamphlet
	@ echo 493 making ${MID}/STACK.spad from ${IN}/bags.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf STACK.NRLIB ; \
	${TANGLE} -R"domain STACK Stack" ${IN}/bags.spad.pamphlet >STACK.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<bags.spad.dvi (DOC from IN)>>=
${DOC}/bags.spad.dvi: ${IN}/bags.spad.pamphlet ${DOC}/axiom.sty
	@ echo 494 making ${DOC}/bags.spad.dvi from ${IN}/bags.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/bags.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} bags.spad ; \
	rm -f ${DOC}/bags.spad.pamphlet ; \
	rm -f ${DOC}/bags.spad.tex ; \
	rm -f ${DOC}/bags.spad )

@
\subsection{bezout.spad \cite{1}}
<<bezout.spad (SPAD from IN)>>=
${OUTSRC}/bezout.spad: ${IN}/bezout.spad.pamphlet
	@ echo 495 making ${OUTSRC}/bezout.spad from ${IN}/bezout.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/bezout.spad.pamphlet >bezout.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BEZOUT.o (O from NRLIB)>>=
${OUT}/BEZOUT.o: ${MID}/BEZOUT.NRLIB
	@ echo 496-14 making ${OUT}/BEZOUT.o from ${MID}/BEZOUT.NRLIB
	@ cp ${MID}/BEZOUT.NRLIB/code.o ${OUT}/BEZOUT.o

@
<<BEZOUT.NRLIB (NRLIB from MID)>>=
${MID}/BEZOUT.NRLIB: ${MID}/BEZOUT.spad
	@ echo 497 making ${MID}/BEZOUT.NRLIB from ${MID}/BEZOUT.spad
	@ (cd ${MID} ; 	echo ')co BEZOUT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BEZOUT.spad (SPAD from IN)>>=
${MID}/BEZOUT.spad: ${IN}/bezout.spad.pamphlet
	@ echo 498 making ${MID}/BEZOUT.spad from ${IN}/bezout.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf BEZOUT.NRLIB ; \
	${TANGLE} -R"package BEZOUT BezoutMatrix" ${IN}/bezout.spad.pamphlet >BEZOUT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<bezout.spad.dvi (DOC from IN)>>=
${DOC}/bezout.spad.dvi: ${IN}/bezout.spad.pamphlet ${DOC}/axiom.sty
	@ echo 499 making ${DOC}/bezout.spad.dvi from ${IN}/bezout.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/bezout.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} bezout.spad ; \
	rm -f ${DOC}/bezout.spad.pamphlet ; \
	rm -f ${DOC}/bezout.spad.tex ; \
	rm -f ${DOC}/bezout.spad )

@
\subsection{boolean.spad \cite{1}}
<<boolean.spad (SPAD from IN)>>=
${OUTSRC}/boolean.spad: ${IN}/boolean.spad.pamphlet
	@ echo 500 making ${OUTSRC}/boolean.spad from ${IN}/boolean.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/boolean.spad.pamphlet >boolean.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BITS.o (O from NRLIB)>>=
${OUT}/BITS.o: ${MID}/BITS.NRLIB
	@ echo 501-12 making ${OUT}/BITS.o from ${MID}/BITS.NRLIB
	@ cp ${MID}/BITS.NRLIB/code.o ${OUT}/BITS.o

@
<<BITS.NRLIB (NRLIB from MID)>>=
${MID}/BITS.NRLIB: ${MID}/BITS.spad
	@ echo 502 making ${MID}/BITS.NRLIB from ${MID}/BITS.spad
	@ (cd ${MID} ; 	echo ')co BITS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BITS.spad (SPAD from IN)>>=
${MID}/BITS.spad: ${IN}/boolean.spad.pamphlet
	@ echo 503 making ${MID}/BITS.spad from ${IN}/boolean.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf BITS.NRLIB ; \
	${TANGLE} -R"domain BITS Bits" ${IN}/boolean.spad.pamphlet >BITS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BOOLEAN.o (O from NRLIB)>>=
${OUT}/BOOLEAN.o: ${MID}/BOOLEAN.NRLIB
	@ echo 504-0c making ${OUT}/BOOLEAN.o from ${MID}/BOOLEAN.NRLIB
	@ cp ${MID}/BOOLEAN.NRLIB/code.o ${OUT}/BOOLEAN.o

@
<<BOOLEAN.NRLIB (NRLIB from MID)>>=
${MID}/BOOLEAN.NRLIB: ${MID}/BOOLEAN.spad
	@ echo 505 making ${MID}/BOOLEAN.NRLIB from ${MID}/BOOLEAN.spad
	@ (cd ${MID} ; 	echo ')co BOOLEAN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BOOLEAN.spad (SPAD from IN)>>=
${MID}/BOOLEAN.spad: ${IN}/boolean.spad.pamphlet
	@ echo 506 making ${MID}/BOOLEAN.spad from ${IN}/boolean.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf BOOLEAN.NRLIB ; \
	${TANGLE} -R"domain BOOLEAN Boolean" ${IN}/boolean.spad.pamphlet >BOOLEAN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BOOLEAN.o (BOOTSTRAP from MID)>>=
${MID}/BOOLEAN.o: ${MID}/BOOLEAN.lsp
	@ echo 507-0b making ${MID}/BOOLEAN.o from ${MID}/BOOLEAN.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "BOOLEAN.lsp" :output-file "BOOLEAN.o"))' | ${DEPSYS} )
	@ cp ${MID}/BOOLEAN.o ${OUT}/BOOLEAN.o

@
<<BOOLEAN.lsp (LISP from IN)>>=
${MID}/BOOLEAN.lsp: ${IN}/boolean.spad.pamphlet
	@ echo 508 making ${MID}/BOOLEAN.lsp from ${IN}/boolean.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf BOOLEAN.NRLIB ; \
	rm -rf ${OUT}/BOOLEAN.o ; \
	${TANGLE} -R"BOOLEAN.lsp BOOTSTRAP" ${IN}/boolean.spad.pamphlet >BOOLEAN.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IBITS.o (O from NRLIB)>>=
${OUT}/IBITS.o: ${MID}/IBITS.NRLIB
	@ echo 509-14 making ${OUT}/IBITS.o from ${MID}/IBITS.NRLIB
	@ cp ${MID}/IBITS.NRLIB/code.o ${OUT}/IBITS.o

@
<<IBITS.NRLIB (NRLIB from MID)>>=
${MID}/IBITS.NRLIB: ${MID}/IBITS.spad
	@ echo 510 making ${MID}/IBITS.NRLIB from ${MID}/IBITS.spad
	@ (cd ${MID} ; 	echo ')co IBITS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IBITS.spad (SPAD from IN)>>=
${MID}/IBITS.spad: ${IN}/boolean.spad.pamphlet
	@ echo 511 making ${MID}/IBITS.spad from ${IN}/boolean.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IBITS.NRLIB ; \
	${TANGLE} -R"domain IBITS IndexedBits" ${IN}/boolean.spad.pamphlet >IBITS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LOGIC-.o (O from NRLIB)>>=
${OUT}/LOGIC-.o: ${MID}/LOGIC.NRLIB
	@ echo 512-4 making ${OUT}/LOGIC-.o from ${MID}/LOGIC-.NRLIB
	@ cp ${MID}/LOGIC-.NRLIB/code.o ${OUT}/LOGIC-.o

@
<<LOGIC-.NRLIB (NRLIB from MID)>>=
${MID}/LOGIC-.NRLIB: ${MID}/LOGIC.spad 
	@ echo 513 making ${MID}/LOGIC-.NRLIB from ${MID}/LOGIC.spad
	@ (cd ${MID} ; 	echo ')co LOGIC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LOGIC.o (O from NRLIB)>>=
${OUT}/LOGIC.o: ${MID}/LOGIC.NRLIB
	@ echo 514-4 making ${OUT}/LOGIC.o from ${MID}/LOGIC.NRLIB
	@ cp ${MID}/LOGIC.NRLIB/code.o ${OUT}/LOGIC.o

@
<<LOGIC.NRLIB (NRLIB from MID)>>=
${MID}/LOGIC.NRLIB: ${MID}/LOGIC.spad
	@ echo 515 making ${MID}/LOGIC.NRLIB from ${MID}/LOGIC.spad
	@ (cd ${MID} ; 	echo ')co LOGIC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LOGIC.spad (SPAD from IN)>>=
${MID}/LOGIC.spad: ${IN}/boolean.spad.pamphlet
	@ echo 516 making ${MID}/LOGIC.spad from ${IN}/boolean.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LOGIC.NRLIB ; \
	${TANGLE} -R"category LOGIC Logic" ${IN}/boolean.spad.pamphlet >LOGIC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<REF.o (O from NRLIB)>>=
${OUT}/REF.o: ${MID}/REF.NRLIB
	@ echo 517-0c making ${OUT}/REF.o from ${MID}/REF.NRLIB
	@ cp ${MID}/REF.NRLIB/code.o ${OUT}/REF.o

@
<<REF.NRLIB (NRLIB from MID)>>=
${MID}/REF.NRLIB: ${MID}/REF.spad
	@ echo 518 making ${MID}/REF.NRLIB from ${MID}/REF.spad
	@ (cd ${MID} ; 	echo ')co REF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<REF.spad (SPAD from IN)>>=
${MID}/REF.spad: ${IN}/boolean.spad.pamphlet
	@ echo 519 making ${MID}/REF.spad from ${IN}/boolean.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf REF.NRLIB ; \
	${TANGLE} -R"domain REF Reference" ${IN}/boolean.spad.pamphlet >REF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<REF.o (BOOTSTRAP from MID)>>=
${MID}/REF.o: ${MID}/REF.lsp
	@ echo 520-0b making ${MID}/REF.o from ${MID}/REF.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "REF.lsp" :output-file "REF.o"))' | ${DEPSYS} )
	@ cp ${MID}/REF.o ${OUT}/REF.o

@
<<REF.lsp (LISP from IN)>>=
${MID}/REF.lsp: ${IN}/boolean.spad.pamphlet
	@ echo 521 making ${MID}/REF.lsp from ${IN}/boolean.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf REF.NRLIB ; \
	rm -rf ${OUT}/REF.o ; \
	${TANGLE} -R"REF.lsp BOOTSTRAP" ${IN}/boolean.spad.pamphlet >REF.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<boolean.spad.dvi (DOC from IN)>>=
${DOC}/boolean.spad.dvi: ${IN}/boolean.spad.pamphlet ${DOC}/axiom.sty
	@ echo 522 making ${DOC}/boolean.spad.dvi from ${IN}/boolean.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/boolean.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} boolean.spad ; \
	rm -f ${DOC}/boolean.spad.pamphlet ; \
	rm -f ${DOC}/boolean.spad.tex ; \
	rm -f ${DOC}/boolean.spad )

@
\subsection{brill.spad \cite{1}}
<<brill.spad (SPAD from IN)>>=
${OUTSRC}/brill.spad: ${IN}/brill.spad.pamphlet
	@ echo 523 making ${OUTSRC}/brill.spad from ${IN}/brill.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/brill.spad.pamphlet >brill.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BRILL.o (O from NRLIB)>>=
${OUT}/BRILL.o: ${MID}/BRILL.NRLIB
	@ echo 524-14 making ${OUT}/BRILL.o from ${MID}/BRILL.NRLIB
	@ cp ${MID}/BRILL.NRLIB/code.o ${OUT}/BRILL.o

@
<<BRILL.NRLIB (NRLIB from MID)>>=
${MID}/BRILL.NRLIB: ${MID}/BRILL.spad
	@ echo 525 making ${MID}/BRILL.NRLIB from ${MID}/BRILL.spad
	@ (cd ${MID} ; 	echo ')co BRILL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BRILL.spad (SPAD from IN)>>=
${MID}/BRILL.spad: ${IN}/brill.spad.pamphlet
	@ echo 526 making ${MID}/BRILL.spad from ${IN}/brill.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf BRILL.NRLIB ; \
	${TANGLE} -R"package BRILL BrillhartTests" ${IN}/brill.spad.pamphlet >BRILL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<brill.spad.dvi (DOC from IN)>>=
${DOC}/brill.spad.dvi: ${IN}/brill.spad.pamphlet ${DOC}/axiom.sty
	@ echo 527 making ${DOC}/brill.spad.dvi from ${IN}/brill.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/brill.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} brill.spad ; \
	rm -f ${DOC}/brill.spad.pamphlet ; \
	rm -f ${DOC}/brill.spad.tex ; \
	rm -f ${DOC}/brill.spad )

@
\subsection{c02.spad \cite{1}}
<<c02.spad (SPAD from IN)>>=
${OUTSRC}/c02.spad: ${IN}/c02.spad.pamphlet
	@ echo 528 making ${OUTSRC}/c02.spad from ${IN}/c02.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/c02.spad.pamphlet >c02.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGC02.o (O from NRLIB)>>=
${OUT}/NAGC02.o: ${MID}/NAGC02.NRLIB
	@ echo 529-19 making ${OUT}/NAGC02.o from ${MID}/NAGC02.NRLIB
	@ cp ${MID}/NAGC02.NRLIB/code.o ${OUT}/NAGC02.o

@
<<NAGC02.NRLIB (NRLIB from MID)>>=
${MID}/NAGC02.NRLIB: ${MID}/NAGC02.spad
	@ echo 530 making ${MID}/NAGC02.NRLIB from ${MID}/NAGC02.spad
	@ (cd ${MID} ; 	echo ')co NAGC02.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGC02.spad (SPAD from IN)>>=
${MID}/NAGC02.spad: ${IN}/c02.spad.pamphlet
	@ echo 531 making ${MID}/NAGC02.spad from ${IN}/c02.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NAGC02.NRLIB ; \
	${TANGLE} -R"package NAGC02 NagPolynomialRootsPackage" ${IN}/c02.spad.pamphlet >NAGC02.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<c02.spad.dvi (DOC from IN)>>=
${DOC}/c02.spad.dvi: ${IN}/c02.spad.pamphlet ${DOC}/axiom.sty
	@ echo 532 making ${DOC}/c02.spad.dvi from ${IN}/c02.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/c02.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} c02.spad ; \
	rm -f ${DOC}/c02.spad.pamphlet ; \
	rm -f ${DOC}/c02.spad.tex ; \
	rm -f ${DOC}/c02.spad )

@
\subsection{c05.spad \cite{1}}
<<c05.spad (SPAD from IN)>>=
${OUTSRC}/c05.spad: ${IN}/c05.spad.pamphlet
	@ echo 533 making ${OUTSRC}/c05.spad from ${IN}/c05.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/c05.spad.pamphlet >c05.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGC05.o (O from NRLIB)>>=
${OUT}/NAGC05.o: ${MID}/NAGC05.NRLIB
	@ echo 534-19 making ${OUT}/NAGC05.o from ${MID}/NAGC05.NRLIB
	@ cp ${MID}/NAGC05.NRLIB/code.o ${OUT}/NAGC05.o

@
<<NAGC05.NRLIB (NRLIB from MID)>>=
${MID}/NAGC05.NRLIB: ${MID}/NAGC05.spad
	@ echo 535 making ${MID}/NAGC05.NRLIB from ${MID}/NAGC05.spad
	@ (cd ${MID} ; 	echo ')co NAGC05.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGC05.spad (SPAD from IN)>>=
${MID}/NAGC05.spad: ${IN}/c05.spad.pamphlet
	@ echo 536 making ${MID}/NAGC05.spad from ${IN}/c05.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NAGC05.NRLIB ; \
	${TANGLE} -R"package NAGC05 NagRootFindingPackage" ${IN}/c05.spad.pamphlet >NAGC05.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<c05.spad.dvi (DOC from IN)>>=
${DOC}/c05.spad.dvi: ${IN}/c05.spad.pamphlet ${DOC}/axiom.sty
	@ echo 537 making ${DOC}/c05.spad.dvi from ${IN}/c05.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/c05.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} c05.spad ; \
	rm -f ${DOC}/c05.spad.pamphlet ; \
	rm -f ${DOC}/c05.spad.tex ; \
	rm -f ${DOC}/c05.spad )

@
\subsection{c06.spad \cite{1}}
<<c06.spad (SPAD from IN)>>=
${OUTSRC}/c06.spad: ${IN}/c06.spad.pamphlet
	@ echo 538 making ${OUTSRC}/c06.spad from ${IN}/c06.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/c06.spad.pamphlet >c06.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGC06.o (O from NRLIB)>>=
${OUT}/NAGC06.o: ${MID}/NAGC06.NRLIB
	@ echo 539-19 making ${OUT}/NAGC06.o from ${MID}/NAGC06.NRLIB
	@ cp ${MID}/NAGC06.NRLIB/code.o ${OUT}/NAGC06.o

@
<<NAGC06.NRLIB (NRLIB from MID)>>=
${MID}/NAGC06.NRLIB: ${MID}/NAGC06.spad
	@ echo 540 making ${MID}/NAGC06.NRLIB from ${MID}/NAGC06.spad
	@ (cd ${MID} ; 	echo ')co NAGC06.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGC06.spad (SPAD from IN)>>=
${MID}/NAGC06.spad: ${IN}/c06.spad.pamphlet
	@ echo 541 making ${MID}/NAGC06.spad from ${IN}/c06.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NAGC06.NRLIB ; \
	${TANGLE} -R"package NAGC06 NagSeriesSummationPackage" ${IN}/c06.spad.pamphlet >NAGC06.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<c06.spad.dvi (DOC from IN)>>=
${DOC}/c06.spad.dvi: ${IN}/c06.spad.pamphlet ${DOC}/axiom.sty
	@ echo 542 making ${DOC}/c06.spad.dvi from ${IN}/c06.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/c06.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} c06.spad ; \
	rm -f ${DOC}/c06.spad.pamphlet ; \
	rm -f ${DOC}/c06.spad.tex ; \
	rm -f ${DOC}/c06.spad )

@
\subsection{card.spad \cite{1}}
<<card.spad (SPAD from IN)>>=
${OUTSRC}/card.spad: ${IN}/card.spad.pamphlet
	@ echo 543 making ${OUTSRC}/card.spad from ${IN}/card.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/card.spad.pamphlet >card.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CARD.o (O from NRLIB)>>=
${OUT}/CARD.o: ${MID}/CARD.NRLIB
	@ echo 544-8 making ${OUT}/CARD.o from ${MID}/CARD.NRLIB
	@ cp ${MID}/CARD.NRLIB/code.o ${OUT}/CARD.o

@
<<CARD.NRLIB (NRLIB from MID)>>=
${MID}/CARD.NRLIB: ${MID}/CARD.spad
	@ echo 545 making ${MID}/CARD.NRLIB from ${MID}/CARD.spad
	@ (cd ${MID} ; 	echo ')co CARD.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CARD.spad (SPAD from IN)>>=
${MID}/CARD.spad: ${IN}/card.spad.pamphlet
	@ echo 546 making ${MID}/CARD.spad from ${IN}/card.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CARD.NRLIB ; \
	${TANGLE} -R"domain CARD CardinalNumber" ${IN}/card.spad.pamphlet >CARD.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<card.spad.dvi (DOC from IN)>>=
${DOC}/card.spad.dvi: ${IN}/card.spad.pamphlet ${DOC}/axiom.sty
	@ echo 547 making ${DOC}/card.spad.dvi from ${IN}/card.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/card.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} card.spad ; \
	rm -f ${DOC}/card.spad.pamphlet ; \
	rm -f ${DOC}/card.spad.tex ; \
	rm -f ${DOC}/card.spad )

@
\subsection{carten.spad \cite{1}}
<<carten.spad (SPAD from IN)>>=
${OUTSRC}/carten.spad: ${IN}/carten.spad.pamphlet
	@ echo 548 making ${OUTSRC}/carten.spad from ${IN}/carten.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/carten.spad.pamphlet >carten.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CARTEN.o (O from NRLIB)>>=
${OUT}/CARTEN.o: ${MID}/CARTEN.NRLIB
	@ echo 549-13 making ${OUT}/CARTEN.o from ${MID}/CARTEN.NRLIB
	@ cp ${MID}/CARTEN.NRLIB/code.o ${OUT}/CARTEN.o

@
<<CARTEN.NRLIB (NRLIB from MID)>>=
${MID}/CARTEN.NRLIB: ${MID}/CARTEN.spad
	@ echo 550 making ${MID}/CARTEN.NRLIB from ${MID}/CARTEN.spad
	@ (cd ${MID} ; 	echo ')co CARTEN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CARTEN.spad (SPAD from IN)>>=
${MID}/CARTEN.spad: ${IN}/carten.spad.pamphlet
	@ echo 551 making ${MID}/CARTEN.spad from ${IN}/carten.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CARTEN.NRLIB ; \
	${TANGLE} -R"domain CARTEN CartesianTensor" ${IN}/carten.spad.pamphlet >CARTEN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CARTEN2.o (O from NRLIB)>>=
${OUT}/CARTEN2.o: ${MID}/CARTEN2.NRLIB
	@ echo 552-6 making ${OUT}/CARTEN2.o from ${MID}/CARTEN2.NRLIB
	@ cp ${MID}/CARTEN2.NRLIB/code.o ${OUT}/CARTEN2.o

@
<<CARTEN2.NRLIB (NRLIB from MID)>>=
${MID}/CARTEN2.NRLIB: ${MID}/CARTEN2.spad
	@ echo 553 making ${MID}/CARTEN2.NRLIB from ${MID}/CARTEN2.spad
	@ (cd ${MID} ; 	echo ')co CARTEN2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CARTEN2.spad (SPAD from IN)>>=
${MID}/CARTEN2.spad: ${IN}/carten.spad.pamphlet
	@ echo 554 making ${MID}/CARTEN2.spad from ${IN}/carten.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CARTEN2.NRLIB ; \
	${TANGLE} -R"package CARTEN2 CartesianTensorFunctions2" ${IN}/carten.spad.pamphlet >CARTEN2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GRALG-.o (O from NRLIB)>>=
${OUT}/GRALG-.o: ${MID}/GRALG.NRLIB
	@ echo 555-7 making ${OUT}/GRALG-.o from ${MID}/GRALG-.NRLIB
	@ cp ${MID}/GRALG-.NRLIB/code.o ${OUT}/GRALG-.o

@
<<GRALG-.NRLIB (NRLIB from MID)>>=
${MID}/GRALG-.NRLIB: ${MID}/GRALG.spad 
	@ echo 556 making ${MID}/GRALG-.NRLIB from ${MID}/GRALG.spad
	@ (cd ${MID} ; 	echo ')co GRALG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GRALG.o (O from NRLIB)>>=
${OUT}/GRALG.o: ${MID}/GRALG.NRLIB
	@ echo 557-7 making ${OUT}/GRALG.o from ${MID}/GRALG.NRLIB
	@ cp ${MID}/GRALG.NRLIB/code.o ${OUT}/GRALG.o

@
<<GRALG.NRLIB (NRLIB from MID)>>=
${MID}/GRALG.NRLIB: ${MID}/GRALG.spad
	@ echo 558 making ${MID}/GRALG.NRLIB from ${MID}/GRALG.spad
	@ (cd ${MID} ; 	echo ')co GRALG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GRALG.spad (SPAD from IN)>>=
${MID}/GRALG.spad: ${IN}/carten.spad.pamphlet
	@ echo 559 making ${MID}/GRALG.spad from ${IN}/carten.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GRALG.NRLIB ; \
	${TANGLE} -R"category GRALG GradedAlgebra" ${IN}/carten.spad.pamphlet >GRALG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GRMOD-.o (O from NRLIB)>>=
${OUT}/GRMOD-.o: ${MID}/GRMOD.NRLIB
	@ echo 560-6 making ${OUT}/GRMOD-.o from ${MID}/GRMOD-.NRLIB
	@ cp ${MID}/GRMOD-.NRLIB/code.o ${OUT}/GRMOD-.o

@
<<GRMOD-.NRLIB (NRLIB from MID)>>=
${MID}/GRMOD-.NRLIB: ${MID}/GRMOD.spad 
	@ echo 561 making ${MID}/GRMOD-.NRLIB from ${MID}/GRMOD.spad
	@ (cd ${MID} ; 	echo ')co GRMOD.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GRMOD.o (O from NRLIB)>>=
${OUT}/GRMOD.o: ${MID}/GRMOD.NRLIB
	@ echo 562-6 making ${OUT}/GRMOD.o from ${MID}/GRMOD.NRLIB
	@ cp ${MID}/GRMOD.NRLIB/code.o ${OUT}/GRMOD.o

@
<<GRMOD.NRLIB (NRLIB from MID)>>=
${MID}/GRMOD.NRLIB: ${MID}/GRMOD.spad
	@ echo 563 making ${MID}/GRMOD.NRLIB from ${MID}/GRMOD.spad
	@ (cd ${MID} ; 	echo ')co GRMOD.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GRMOD.spad (SPAD from IN)>>=
${MID}/GRMOD.spad: ${IN}/carten.spad.pamphlet
	@ echo 564 making ${MID}/GRMOD.spad from ${IN}/carten.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GRMOD.NRLIB ; \
	${TANGLE} -R"category GRMOD GradedModule" ${IN}/carten.spad.pamphlet >GRMOD.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<carten.spad.dvi (DOC from IN)>>=
${DOC}/carten.spad.dvi: ${IN}/carten.spad.pamphlet ${DOC}/axiom.sty
	@ echo 565 making ${DOC}/carten.spad.dvi from ${IN}/carten.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/carten.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} carten.spad ; \
	rm -f ${DOC}/carten.spad.pamphlet ; \
	rm -f ${DOC}/carten.spad.tex ; \
	rm -f ${DOC}/carten.spad )

@
\subsection{catdef.spad \cite{1}}
<<catdef.spad (SPAD from IN)>>=
${OUTSRC}/catdef.spad: ${IN}/catdef.spad.pamphlet
	@ echo 566 making ${OUTSRC}/catdef.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/catdef.spad.pamphlet >catdef.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ABELGRP-.o (O from NRLIB)>>=
${OUT}/ABELGRP-.o: ${MID}/ABELGRP.NRLIB
	@ echo 567-0c making ${OUT}/ABELGRP-.o from ${MID}/ABELGRP-.NRLIB
	@ cp ${MID}/ABELGRP-.NRLIB/code.o ${OUT}/ABELGRP-.o

@
<<ABELGRP-.NRLIB (NRLIB from MID)>>=
${MID}/ABELGRP-.NRLIB: ${MID}/ABELGRP.spad 
	@ echo 568 making ${MID}/ABELGRP-.NRLIB from ${MID}/ABELGRP.spad
	@ (cd ${MID} ; 	echo ')co ABELGRP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ABELGRP.o (O from NRLIB)>>=
${OUT}/ABELGRP.o: ${MID}/ABELGRP.NRLIB
	@ echo 569-0c making ${OUT}/ABELGRP.o from ${MID}/ABELGRP.NRLIB
	@ cp ${MID}/ABELGRP.NRLIB/code.o ${OUT}/ABELGRP.o

@
<<ABELGRP.NRLIB (NRLIB from MID)>>=
${MID}/ABELGRP.NRLIB: ${MID}/ABELGRP.spad
	@ echo 570 making ${MID}/ABELGRP.NRLIB from ${MID}/ABELGRP.spad
	@ (cd ${MID} ; 	echo ')co ABELGRP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ABELGRP.spad (SPAD from IN)>>=
${MID}/ABELGRP.spad: ${IN}/catdef.spad.pamphlet
	@ echo 571 making ${MID}/ABELGRP.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ABELGRP.NRLIB ; \
	${TANGLE} -R"category ABELGRP AbelianGroup" ${IN}/catdef.spad.pamphlet >ABELGRP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ABELGRP-.o (BOOTSTRAP from MID)>>=
${MID}/ABELGRP-.o: ${MID}/ABELGRP-.lsp 
	@ echo 572-0b making ${MID}/ABELGRP-.o from ${MID}/ABELGRP-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "ABELGRP-.lsp" :output-file "ABELGRP-.o"))' | ${DEPSYS} )
	@ cp ${MID}/ABELGRP-.o ${OUT}/ABELGRP-.o

@
<<ABELGRP-.lsp (LISP from IN)>>=
${MID}/ABELGRP-.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 573 making ${MID}/ABELGRP-.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ABELGRP-.NRLIB ; \
	rm -rf ${OUT}/ABELGRP-.o ; \
	${TANGLE} -R"ABELGRP-.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >ABELGRP-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ABELGRP.o (BOOTSTRAP from MID)>>=
${MID}/ABELGRP.o: ${MID}/ABELGRP.lsp 
	@ echo 575-0b making ${MID}/ABELGRP.o from ${MID}/ABELGRP.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "ABELGRP.lsp" :output-file "ABELGRP.o"))' | ${DEPSYS} )
	@ cp ${MID}/ABELGRP.o ${OUT}/ABELGRP.o

@
<<ABELGRP.lsp (LISP from IN)>>=
${MID}/ABELGRP.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 575 making ${MID}/ABELGRP.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ABELGRP.NRLIB ; \
	rm -rf ${OUT}/ABELGRP.o ; \
	${TANGLE} -R"ABELGRP.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >ABELGRP.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ABELMON-.o (O from NRLIB)>>=
${OUT}/ABELMON-.o: ${MID}/ABELMON.NRLIB
	@ echo 576-0c making ${OUT}/ABELMON-.o from ${MID}/ABELMON-.NRLIB
	@ cp ${MID}/ABELMON-.NRLIB/code.o ${OUT}/ABELMON-.o

@
<<ABELMON-.NRLIB (NRLIB from MID)>>=
${MID}/ABELMON-.NRLIB: ${MID}/ABELMON.spad 
	@ echo 577 making ${MID}/ABELMON-.NRLIB from ${MID}/ABELMON.spad
	@ (cd ${MID} ; 	echo ')co ABELMON.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ABELMON.o (O from NRLIB)>>=
${OUT}/ABELMON.o: ${MID}/ABELMON.NRLIB
	@ echo 578-0c making ${OUT}/ABELMON.o from ${MID}/ABELMON.NRLIB
	@ cp ${MID}/ABELMON.NRLIB/code.o ${OUT}/ABELMON.o

@
<<ABELMON.NRLIB (NRLIB from MID)>>=
${MID}/ABELMON.NRLIB: ${MID}/ABELMON.spad
	@ echo 579 making ${MID}/ABELMON.NRLIB from ${MID}/ABELMON.spad
	@ (cd ${MID} ; 	echo ')co ABELMON.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ABELMON.spad (SPAD from IN)>>=
${MID}/ABELMON.spad: ${IN}/catdef.spad.pamphlet
	@ echo 580 making ${MID}/ABELMON.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ABELMON.NRLIB ; \
	${TANGLE} -R"category ABELMON AbelianMonoid" ${IN}/catdef.spad.pamphlet >ABELMON.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ABELMON-.o (BOOTSTRAP from MID)>>=
${MID}/ABELMON-.o: ${MID}/ABELMON-.lsp 
	@ echo 581-0b making ${MID}/ABELMON-.o from ${MID}/ABELMON-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "ABELMON-.lsp" :output-file "ABELMON-.o"))' | ${DEPSYS} )
	@ cp ${MID}/ABELMON-.o ${OUT}/ABELMON-.o

@
<<ABELMON-.lsp (LISP from IN)>>=
${MID}/ABELMON-.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 582 making ${MID}/ABELMON-.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ABELMON-.NRLIB ; \
	rm -rf ${OUT}/ABELMON-.o ; \
	${TANGLE} -R"ABELMON-.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >ABELMON-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ABELMON.o (BOOTSTRAP from MID)>>=
${MID}/ABELMON.o: ${MID}/ABELMON.lsp
	@ echo 583-0b making ${MID}/ABELMON.o from ${MID}/ABELMON.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "ABELMON.lsp" :output-file "ABELMON.o"))' | ${DEPSYS} )
	@ cp ${MID}/ABELMON.o ${OUT}/ABELMON.o

@
<<ABELMON.lsp (LISP from IN)>>=
${MID}/ABELMON.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 584 making ${MID}/ABELMON.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ABELMON.NRLIB ; \
	rm -rf ${OUT}/ABELMON.o ; \
	${TANGLE} -R"ABELMON.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >ABELMON.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ABELSG-.o (O from NRLIB)>>=
${OUT}/ABELSG-.o: ${MID}/ABELSG.NRLIB
	@ echo 585-0c making ${OUT}/ABELSG-.o from ${MID}/ABELSG-.NRLIB
	@ cp ${MID}/ABELSG-.NRLIB/code.o ${OUT}/ABELSG-.o

@
<<ABELSG-.NRLIB (NRLIB from MID)>>=
${MID}/ABELSG-.NRLIB: ${MID}/ABELSG.spad 
	@ echo 586 making ${MID}/ABELSG-.NRLIB from ${MID}/ABELSG.spad
	@ (cd ${MID} ; 	echo ')co ABELSG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ABELSG.o (O from NRLIB)>>=
${OUT}/ABELSG.o: ${MID}/ABELSG.NRLIB
	@ echo 587-0c making ${OUT}/ABELSG.o from ${MID}/ABELSG.NRLIB
	@ cp ${MID}/ABELSG.NRLIB/code.o ${OUT}/ABELSG.o

@
<<ABELSG.NRLIB (NRLIB from MID)>>=
${MID}/ABELSG.NRLIB: ${MID}/ABELSG.spad
	@ echo 588 making ${MID}/ABELSG.NRLIB from ${MID}/ABELSG.spad
	@ (cd ${MID} ; 	echo ')co ABELSG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ABELSG.spad (SPAD from IN)>>=
${MID}/ABELSG.spad: ${IN}/catdef.spad.pamphlet
	@ echo 589 making ${MID}/ABELSG.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ABELSG.NRLIB ; \
	${TANGLE} -R"category ABELSG AbelianSemiGroup" ${IN}/catdef.spad.pamphlet >ABELSG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ABELSG-.o (BOOTSTRAP from MID)>>=
${MID}/ABELSG-.o: ${MID}/ABELSG-.lsp 
	@ echo 590-0b making ${MID}/ABELSG-.o from ${MID}/ABELSG-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "ABELSG-.lsp" :output-file "ABELSG-.o"))' | ${DEPSYS} )
	@ cp ${MID}/ABELSG-.o ${OUT}/ABELSG-.o

@
<<ABELSG-.lsp (LISP from IN)>>=
${MID}/ABELSG-.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 591 making ${MID}/ABELSG-.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ABELSG-.NRLIB ; \
	rm -rf ${OUT}/ABELSG-.o ; \
	${TANGLE} -R"ABELSG-.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >ABELSG-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ABELSG.o (BOOTSTRAP from MID)>>=
${MID}/ABELSG.o: ${MID}/ABELSG.lsp
	@ echo 592-0b making ${MID}/ABELSG.o from ${MID}/ABELSG.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "ABELSG.lsp" :output-file "ABELSG.o"))' | ${DEPSYS} )
	@ cp ${MID}/ABELSG.o ${OUT}/ABELSG.o

@
<<ABELSG.lsp (LISP from IN)>>=
${MID}/ABELSG.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 593 making ${MID}/ABELSG.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ABELSG.NRLIB ; \
	rm -rf ${OUT}/ABELSG.o ; \
	${TANGLE} -R"ABELSG.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >ABELSG.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ALGEBRA-.o (O from NRLIB)>>=
${OUT}/ALGEBRA-.o: ${MID}/ALGEBRA.NRLIB
	@ echo 594-7 making ${OUT}/ALGEBRA-.o from ${MID}/ALGEBRA-.NRLIB
	@ cp ${MID}/ALGEBRA-.NRLIB/code.o ${OUT}/ALGEBRA-.o

@
<<ALGEBRA-.NRLIB (NRLIB from MID)>>=
${MID}/ALGEBRA-.NRLIB: ${MID}/ALGEBRA.spad 
	@ echo 595 making ${MID}/ALGEBRA-.NRLIB from ${MID}/ALGEBRA.spad
	@ (cd ${MID} ; 	echo ')co ALGEBRA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ALGEBRA.o (O from NRLIB)>>=
${OUT}/ALGEBRA.o: ${MID}/ALGEBRA.NRLIB
	@ echo 596-7 making ${OUT}/ALGEBRA.o from ${MID}/ALGEBRA.NRLIB
	@ cp ${MID}/ALGEBRA.NRLIB/code.o ${OUT}/ALGEBRA.o

@
<<ALGEBRA.NRLIB (NRLIB from MID)>>=
${MID}/ALGEBRA.NRLIB: ${MID}/ALGEBRA.spad
	@ echo 597 making ${MID}/ALGEBRA.NRLIB from ${MID}/ALGEBRA.spad
	@ (cd ${MID} ; 	echo ')co ALGEBRA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ALGEBRA.spad (SPAD from IN)>>=
${MID}/ALGEBRA.spad: ${IN}/catdef.spad.pamphlet
	@ echo 598 making ${MID}/ALGEBRA.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ALGEBRA.NRLIB ; \
	${TANGLE} -R"category ALGEBRA Algebra" ${IN}/catdef.spad.pamphlet >ALGEBRA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BASTYPE-.o (O from NRLIB)>>=
${OUT}/BASTYPE-.o: ${MID}/BASTYPE.NRLIB
	@ echo 599-3 making ${OUT}/BASTYPE-.o from ${MID}/BASTYPE-.NRLIB
	@ cp ${MID}/BASTYPE-.NRLIB/code.o ${OUT}/BASTYPE-.o

@
<<BASTYPE-.NRLIB (NRLIB from MID)>>=
${MID}/BASTYPE-.NRLIB: ${MID}/BASTYPE.spad 
	@ echo 600 making ${MID}/BASTYPE-.NRLIB from ${MID}/BASTYPE.spad
	@ (cd ${MID} ; 	echo ')co BASTYPE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BASTYPE.o (O from NRLIB)>>=
${OUT}/BASTYPE.o: ${MID}/BASTYPE.NRLIB
	@ echo 601-3 making ${OUT}/BASTYPE.o from ${MID}/BASTYPE.NRLIB
	@ cp ${MID}/BASTYPE.NRLIB/code.o ${OUT}/BASTYPE.o

@
<<BASTYPE.NRLIB (NRLIB from MID)>>=
${MID}/BASTYPE.NRLIB: ${MID}/BASTYPE.spad
	@ echo 602 making ${MID}/BASTYPE.NRLIB from ${MID}/BASTYPE.spad
	@ (cd ${MID} ; 	echo ')co BASTYPE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BASTYPE.spad (SPAD from IN)>>=
${MID}/BASTYPE.spad: ${IN}/catdef.spad.pamphlet
	@ echo 603 making ${MID}/BASTYPE.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf BASTYPE.NRLIB ; \
	${TANGLE} -R"category BASTYPE BasicType" ${IN}/catdef.spad.pamphlet >BASTYPE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BMODULE.o (O from NRLIB)>>=
${OUT}/BMODULE.o: ${MID}/BMODULE.NRLIB
	@ echo 604-5 making ${OUT}/BMODULE.o from ${MID}/BMODULE.NRLIB
	@ cp ${MID}/BMODULE.NRLIB/code.o ${OUT}/BMODULE.o

@
<<BMODULE.NRLIB (NRLIB from MID)>>=
${MID}/BMODULE.NRLIB: ${MID}/BMODULE.spad
	@ echo 605 making ${MID}/BMODULE.NRLIB from ${MID}/BMODULE.spad
	@ (cd ${MID} ; 	echo ')co BMODULE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BMODULE.spad (SPAD from IN)>>=
${MID}/BMODULE.spad: ${IN}/catdef.spad.pamphlet
	@ echo 606 making ${MID}/BMODULE.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf BMODULE.NRLIB ; \
	${TANGLE} -R"category BMODULE BiModule" ${IN}/catdef.spad.pamphlet >BMODULE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CABMON.o (O from NRLIB)>>=
${OUT}/CABMON.o: ${MID}/CABMON.NRLIB
	@ echo 607-0c making ${OUT}/CABMON.o from ${MID}/CABMON.NRLIB
	@ cp ${MID}/CABMON.NRLIB/code.o ${OUT}/CABMON.o

@
<<CABMON.NRLIB (NRLIB from MID)>>=
${MID}/CABMON.NRLIB: ${MID}/CABMON.spad
	@ echo 608 making ${MID}/CABMON.NRLIB from ${MID}/CABMON.spad
	@ (cd ${MID} ; 	echo ')co CABMON.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CABMON.spad (SPAD from IN)>>=
${MID}/CABMON.spad: ${IN}/catdef.spad.pamphlet
	@ echo 609 making ${MID}/CABMON.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CABMON.NRLIB ; \
	${TANGLE} -R"category CABMON CancellationAbelianMonoid" ${IN}/catdef.spad.pamphlet >CABMON.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CABMON.o (BOOTSTRAP from MID)>>=
${MID}/CABMON.o: ${MID}/CABMON.lsp
	@ echo 610-0b making ${MID}/CABMON.o from ${MID}/CABMON.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "CABMON.lsp" :output-file "CABMON.o"))' | ${DEPSYS} )
	@ cp ${MID}/CABMON.o ${OUT}/CABMON.o

@
<<CABMON.lsp (LISP from IN)>>=
${MID}/CABMON.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 611 making ${MID}/CABMON.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CABMON.NRLIB ; \
	rm -rf ${OUT}/CABMON.o ; \
	${TANGLE} -R"CABMON.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >CABMON.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CHARNZ.o (O from NRLIB)>>=
${OUT}/CHARNZ.o: ${MID}/CHARNZ.NRLIB
	@ echo 612-5 making ${OUT}/CHARNZ.o from ${MID}/CHARNZ.NRLIB
	@ cp ${MID}/CHARNZ.NRLIB/code.o ${OUT}/CHARNZ.o

@
<<CHARNZ.NRLIB (NRLIB from MID)>>=
${MID}/CHARNZ.NRLIB: ${MID}/CHARNZ.spad
	@ echo 613 making ${MID}/CHARNZ.NRLIB from ${MID}/CHARNZ.spad
	@ (cd ${MID} ; 	echo ')co CHARNZ.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CHARNZ.spad (SPAD from IN)>>=
${MID}/CHARNZ.spad: ${IN}/catdef.spad.pamphlet
	@ echo 614 making ${MID}/CHARNZ.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CHARNZ.NRLIB ; \
	${TANGLE} -R"category CHARNZ CharacteristicNonZero" ${IN}/catdef.spad.pamphlet >CHARNZ.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CHARZ.o (O from NRLIB)>>=
${OUT}/CHARZ.o: ${MID}/CHARZ.NRLIB
	@ echo 615-5 making ${OUT}/CHARZ.o from ${MID}/CHARZ.NRLIB
	@ cp ${MID}/CHARZ.NRLIB/code.o ${OUT}/CHARZ.o

@
<<CHARZ.NRLIB (NRLIB from MID)>>=
${MID}/CHARZ.NRLIB: ${MID}/CHARZ.spad
	@ echo 616 making ${MID}/CHARZ.NRLIB from ${MID}/CHARZ.spad
	@ (cd ${MID} ; 	echo ')co CHARZ.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CHARZ.spad (SPAD from IN)>>=
${MID}/CHARZ.spad: ${IN}/catdef.spad.pamphlet
	@ echo 617 making ${MID}/CHARZ.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CHARZ.NRLIB ; \
	${TANGLE} -R"category CHARZ CharacteristicZero" ${IN}/catdef.spad.pamphlet >CHARZ.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COMRING.o (O from NRLIB)>>=
${OUT}/COMRING.o: ${MID}/COMRING.NRLIB
	@ echo 618-0c making ${OUT}/COMRING.o from ${MID}/COMRING.NRLIB
	@ cp ${MID}/COMRING.NRLIB/code.o ${OUT}/COMRING.o

@
<<COMRING.NRLIB (NRLIB from MID)>>=
${MID}/COMRING.NRLIB: ${MID}/COMRING.spad
	@ echo 619 making ${MID}/COMRING.NRLIB from ${MID}/COMRING.spad
	@ (cd ${MID} ; 	echo ')co COMRING.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COMRING.spad (SPAD from IN)>>=
${MID}/COMRING.spad: ${IN}/catdef.spad.pamphlet
	@ echo 620 making ${MID}/COMRING.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf COMRING.NRLIB ; \
	${TANGLE} -R"category COMRING CommutativeRing" ${IN}/catdef.spad.pamphlet >COMRING.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COMRING.o (BOOTSTRAP from MID)>>=
${MID}/COMRING.o: ${MID}/COMRING.lsp
	@ echo 621-0b making ${MID}/COMRING.o from ${MID}/COMRING.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "COMRING.lsp" :output-file "COMRING.o"))' | ${DEPSYS} )
	@ cp ${MID}/COMRING.o ${OUT}/COMRING.o

@
<<COMRING.lsp (LISP from IN)>>=
${MID}/COMRING.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 622 making ${MID}/COMRING.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf COMRING.NRLIB ; \
	rm -rf ${OUT}/COMRING.o ; \
	${TANGLE} -R"COMRING.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >COMRING.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DIFEXT-.o (O from NRLIB)>>=
${OUT}/DIFEXT-.o: ${MID}/DIFEXT.NRLIB
	@ echo 623-6 making ${OUT}/DIFEXT-.o from ${MID}/DIFEXT-.NRLIB
	@ cp ${MID}/DIFEXT-.NRLIB/code.o ${OUT}/DIFEXT-.o

@
<<DIFEXT-.NRLIB (NRLIB from MID)>>=
${MID}/DIFEXT-.NRLIB: ${MID}/DIFEXT.spad 
	@ echo 624 making ${MID}/DIFEXT-.NRLIB from ${MID}/DIFEXT.spad
	@ (cd ${MID} ; 	echo ')co DIFEXT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DIFEXT.o (O from NRLIB)>>=
${OUT}/DIFEXT.o: ${MID}/DIFEXT.NRLIB
	@ echo 625-6 making ${OUT}/DIFEXT.o from ${MID}/DIFEXT.NRLIB
	@ cp ${MID}/DIFEXT.NRLIB/code.o ${OUT}/DIFEXT.o

@
<<DIFEXT.NRLIB (NRLIB from MID)>>=
${MID}/DIFEXT.NRLIB: ${MID}/DIFEXT.spad
	@ echo 626 making ${MID}/DIFEXT.NRLIB from ${MID}/DIFEXT.spad
	@ (cd ${MID} ; 	echo ')co DIFEXT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DIFEXT.spad (SPAD from IN)>>=
${MID}/DIFEXT.spad: ${IN}/catdef.spad.pamphlet
	@ echo 627 making ${MID}/DIFEXT.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DIFEXT.NRLIB ; \
	${TANGLE} -R"category DIFEXT DifferentialExtension" ${IN}/catdef.spad.pamphlet >DIFEXT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DIFRING-.o (O from NRLIB)>>=
${OUT}/DIFRING-.o: ${MID}/DIFRING.NRLIB
	@ echo 628-0c making ${OUT}/DIFRING-.o from ${MID}/DIFRING-.NRLIB
	@ cp ${MID}/DIFRING-.NRLIB/code.o ${OUT}/DIFRING-.o

@
<<DIFRING-.NRLIB (NRLIB from MID)>>=
${MID}/DIFRING-.NRLIB: ${MID}/DIFRING.spad 
	@ echo 629 making ${MID}/DIFRING-.NRLIB from ${MID}/DIFRING.spad
	@ (cd ${MID} ; 	echo ')co DIFRING.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DIFRING.o (O from NRLIB)>>=
${OUT}/DIFRING.o: ${MID}/DIFRING.NRLIB
	@ echo 630-0c making ${OUT}/DIFRING.o from ${MID}/DIFRING.NRLIB
	@ cp ${MID}/DIFRING.NRLIB/code.o ${OUT}/DIFRING.o

@
<<DIFRING.NRLIB (NRLIB from MID)>>=
${MID}/DIFRING.NRLIB: ${MID}/DIFRING.spad
	@ echo 631 making ${MID}/DIFRING.NRLIB from ${MID}/DIFRING.spad
	@ (cd ${MID} ; 	echo ')co DIFRING.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DIFRING.spad (SPAD from IN)>>=
${MID}/DIFRING.spad: ${IN}/catdef.spad.pamphlet
	@ echo 632 making ${MID}/DIFRING.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DIFRING.NRLIB ; \
	${TANGLE} -R"category DIFRING DifferentialRing" ${IN}/catdef.spad.pamphlet >DIFRING.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DIFRING-.o (BOOTSTRAP from MID)>>=
${MID}/DIFRING-.o: ${MID}/DIFRING-.lsp 
	@ echo 633-0b making ${MID}/DIFRING-.o from ${MID}/DIFRING-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "DIFRING-.lsp" :output-file "DIFRING-.o"))' | ${DEPSYS} )
	@ cp ${MID}/DIFRING-.o ${OUT}/DIFRING-.o

@
<<DIFRING-.lsp (LISP from IN)>>=
${MID}/DIFRING-.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 634 making ${MID}/DIFRING-.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DIFRING-.NRLIB ; \
	rm -rf ${OUT}/DIFRING-.o ; \
	${TANGLE} -R"DIFRING-.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >DIFRING-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DIFRING.o (BOOTSTRAP from MID)>>=
${MID}/DIFRING.o: ${MID}/DIFRING.lsp
	@ echo 635-0b making ${MID}/DIFRING.o from ${MID}/DIFRING.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "DIFRING.lsp" :output-file "DIFRING.o"))' | ${DEPSYS} )
	@ cp ${MID}/DIFRING.o ${OUT}/DIFRING.o

@
<<DIFRING.lsp (LISP from IN)>>=
${MID}/DIFRING.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 636 making ${MID}/DIFRING.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DIFRING.NRLIB ; \
	rm -rf ${OUT}/DIFRING.o ; \
	${TANGLE} -R"DIFRING.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >DIFRING.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DIVRING-.o (O from NRLIB)>>=
${OUT}/DIVRING-.o: ${MID}/DIVRING.NRLIB
	@ echo 637-0c making ${OUT}/DIVRING-.o from ${MID}/DIVRING-.NRLIB
	@ cp ${MID}/DIVRING-.NRLIB/code.o ${OUT}/DIVRING-.o

@
<<DIVRING-.NRLIB (NRLIB from MID)>>=
${MID}/DIVRING-.NRLIB: ${MID}/DIVRING.spad 
	@ echo 638 making ${MID}/DIVRING-.NRLIB from ${MID}/DIVRING.spad
	@ (cd ${MID} ; 	echo ')co DIVRING.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DIVRING.o (O from NRLIB)>>=
${OUT}/DIVRING.o: ${MID}/DIVRING.NRLIB
	@ echo 639-0c making ${OUT}/DIVRING.o from ${MID}/DIVRING.NRLIB
	@ cp ${MID}/DIVRING.NRLIB/code.o ${OUT}/DIVRING.o

@
<<DIVRING.NRLIB (NRLIB from MID)>>=
${MID}/DIVRING.NRLIB: ${MID}/DIVRING.spad
	@ echo 640 making ${MID}/DIVRING.NRLIB from ${MID}/DIVRING.spad
	@ (cd ${MID} ; 	echo ')co DIVRING.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DIVRING.spad (SPAD from IN)>>=
${MID}/DIVRING.spad: ${IN}/catdef.spad.pamphlet
	@ echo 641 making ${MID}/DIVRING.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DIVRING.NRLIB ; \
	${TANGLE} -R"category DIVRING DivisionRing" ${IN}/catdef.spad.pamphlet >DIVRING.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DIVRING-.o (BOOTSTRAP from MID)>>=
${MID}/DIVRING-.o: ${MID}/DIVRING-.lsp 
	@ echo 642-0b making ${MID}/DIVRING-.o from ${MID}/DIVRING-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "DIVRING-.lsp" :output-file "DIVRING-.o"))' | ${DEPSYS} )
	@ cp ${MID}/DIVRING-.o ${OUT}/DIVRING-.o

@
<<DIVRING-.lsp (LISP from IN)>>=
${MID}/DIVRING-.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 643 making ${MID}/DIVRING-.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DIVRING-.NRLIB ; \
	rm -rf ${OUT}/DIVRING-.o ; \
	${TANGLE} -R"DIVRING-.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >DIVRING-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DIVRING.o (BOOTSTRAP from MID)>>=
${MID}/DIVRING.o: ${MID}/DIVRING.lsp 
	@ echo 644-0b making ${MID}/DIVRING.o from ${MID}/DIVRING.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "DIVRING.lsp" :output-file "DIVRING.o"))' | ${DEPSYS} )
	@ cp ${MID}/DIVRING.o ${OUT}/DIVRING.o

@
<<DIVRING.lsp (LISP from IN)>>=
${MID}/DIVRING.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 645 making ${MID}/DIVRING.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DIVRING.NRLIB ; \
	rm -rf ${OUT}/DIVRING.o ; \
	${TANGLE} -R"DIVRING.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >DIVRING.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ENTIRER.o (O from NRLIB)>>=
${OUT}/ENTIRER.o: ${MID}/ENTIRER.NRLIB
	@ echo 646-0c making ${OUT}/ENTIRER.o from ${MID}/ENTIRER.NRLIB
	@ cp ${MID}/ENTIRER.NRLIB/code.o ${OUT}/ENTIRER.o

@
<<ENTIRER.NRLIB (NRLIB from MID)>>=
${MID}/ENTIRER.NRLIB: ${MID}/ENTIRER.spad
	@ echo 647 making ${MID}/ENTIRER.NRLIB from ${MID}/ENTIRER.spad
	@ (cd ${MID} ; 	echo ')co ENTIRER.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ENTIRER.spad (SPAD from IN)>>=
${MID}/ENTIRER.spad: ${IN}/catdef.spad.pamphlet
	@ echo 648 making ${MID}/ENTIRER.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ENTIRER.NRLIB ; \
	${TANGLE} -R"category ENTIRER EntireRing" ${IN}/catdef.spad.pamphlet >ENTIRER.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ENTIRER.o (BOOTSTRAP from MID)>>=
${MID}/ENTIRER.o: ${MID}/ENTIRER.lsp
	@ echo 649-0b making ${MID}/ENTIRER.o from ${MID}/ENTIRER.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "ENTIRER.lsp" :output-file "ENTIRER.o"))' | ${DEPSYS} )
	@ cp ${MID}/ENTIRER.o ${OUT}/ENTIRER.o

@
<<ENTIRER.lsp (LISP from IN)>>=
${MID}/ENTIRER.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 650 making ${MID}/ENTIRER.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ENTIRER.NRLIB ; \
	rm -rf ${OUT}/ENTIRER.o ; \
	${TANGLE} -R"ENTIRER.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >ENTIRER.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EUCDOM-.o (O from NRLIB)>>=
${OUT}/EUCDOM-.o: ${MID}/EUCDOM.NRLIB
	@ echo 651-0c making ${OUT}/EUCDOM-.o from ${MID}/EUCDOM-.NRLIB
	@ cp ${MID}/EUCDOM-.NRLIB/code.o ${OUT}/EUCDOM-.o

@
<<EUCDOM-.NRLIB (NRLIB from MID)>>=
${MID}/EUCDOM-.NRLIB: ${MID}/EUCDOM.spad 
	@ echo 652 making ${MID}/EUCDOM-.NRLIB from ${MID}/EUCDOM.spad
	@ (cd ${MID} ; 	echo ')co EUCDOM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EUCDOM.o (O from NRLIB)>>=
${OUT}/EUCDOM.o: ${MID}/EUCDOM.NRLIB
	@ echo 653-0c making ${OUT}/EUCDOM.o from ${MID}/EUCDOM.NRLIB
	@ cp ${MID}/EUCDOM.NRLIB/code.o ${OUT}/EUCDOM.o

@
<<EUCDOM.NRLIB (NRLIB from MID)>>=
${MID}/EUCDOM.NRLIB: ${MID}/EUCDOM.spad
	@ echo 654 making ${MID}/EUCDOM.NRLIB from ${MID}/EUCDOM.spad
	@ (cd ${MID} ; 	echo ')co EUCDOM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EUCDOM.spad (SPAD from IN)>>=
${MID}/EUCDOM.spad: ${IN}/catdef.spad.pamphlet
	@ echo 655 making ${MID}/EUCDOM.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf EUCDOM.NRLIB ; \
	${TANGLE} -R"category EUCDOM EuclideanDomain" ${IN}/catdef.spad.pamphlet >EUCDOM.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EUCDOM-.o (BOOTSTRAP from MID)>>=
${MID}/EUCDOM-.o: ${MID}/EUCDOM-.lsp 
	@ echo 656-0b making ${MID}/EUCDOM-.o from ${MID}/EUCDOM-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "EUCDOM-.lsp" :output-file "EUCDOM-.o"))' | ${DEPSYS} )
	@ cp ${MID}/EUCDOM-.o ${OUT}/EUCDOM-.o

@
<<EUCDOM-.lsp (LISP from IN)>>=
${MID}/EUCDOM-.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 657 making ${MID}/EUCDOM-.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf EUCDOM-.NRLIB ; \
	rm -rf ${OUT}/EUCDOM-.o ; \
	${TANGLE} -R"EUCDOM-.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >EUCDOM-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EUCDOM.o (BOOTSTRAP from MID)>>=
${MID}/EUCDOM.o: ${MID}/EUCDOM.lsp
	@ echo 658-0b making ${MID}/EUCDOM.o from ${MID}/EUCDOM.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "EUCDOM.lsp" :output-file "EUCDOM.o"))' | ${DEPSYS} )
	@ cp ${MID}/EUCDOM.o ${OUT}/EUCDOM.o

@
<<EUCDOM.lsp (LISP from IN)>>=
${MID}/EUCDOM.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 659 making ${MID}/EUCDOM.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf EUCDOM.NRLIB ; \
	rm -rf ${OUT}/EUCDOM.o ; \
	${TANGLE} -R"EUCDOM.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >EUCDOM.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FIELD-.o (O from NRLIB)>>=
${OUT}/FIELD-.o: ${MID}/FIELD.NRLIB
	@ echo 660-9 making ${OUT}/FIELD-.o from ${MID}/FIELD-.NRLIB
	@ cp ${MID}/FIELD-.NRLIB/code.o ${OUT}/FIELD-.o

@
<<FIELD-.NRLIB (NRLIB from MID)>>=
${MID}/FIELD-.NRLIB: ${MID}/FIELD.spad 
	@ echo 661 making ${MID}/FIELD-.NRLIB from ${MID}/FIELD.spad
	@ (cd ${MID} ; 	echo ')co FIELD.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FIELD.o (O from NRLIB)>>=
${OUT}/FIELD.o: ${MID}/FIELD.NRLIB
	@ echo 662-9 making ${OUT}/FIELD.o from ${MID}/FIELD.NRLIB
	@ cp ${MID}/FIELD.NRLIB/code.o ${OUT}/FIELD.o

@
<<FIELD.NRLIB (NRLIB from MID)>>=
${MID}/FIELD.NRLIB: ${MID}/FIELD.spad
	@ echo 663 making ${MID}/FIELD.NRLIB from ${MID}/FIELD.spad
	@ (cd ${MID} ; 	echo ')co FIELD.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FIELD.spad (SPAD from IN)>>=
${MID}/FIELD.spad: ${IN}/catdef.spad.pamphlet
	@ echo 664 making ${MID}/FIELD.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FIELD.NRLIB ; \
	${TANGLE} -R"category FIELD Field" ${IN}/catdef.spad.pamphlet >FIELD.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FINITE.o (O from NRLIB)>>=
${OUT}/FINITE.o: ${MID}/FINITE.NRLIB
	@ echo 665-4 making ${OUT}/FINITE.o from ${MID}/FINITE.NRLIB
	@ cp ${MID}/FINITE.NRLIB/code.o ${OUT}/FINITE.o

@
<<FINITE.NRLIB (NRLIB from MID)>>=
${MID}/FINITE.NRLIB: ${MID}/FINITE.spad
	@ echo 666 making ${MID}/FINITE.NRLIB from ${MID}/FINITE.spad
	@ (cd ${MID} ; 	echo ')co FINITE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FINITE.spad (SPAD from IN)>>=
${MID}/FINITE.spad: ${IN}/catdef.spad.pamphlet
	@ echo 667 making ${MID}/FINITE.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FINITE.NRLIB ; \
	${TANGLE} -R"category FINITE Finite" ${IN}/catdef.spad.pamphlet >FINITE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FLINEXP-.o (O from NRLIB)>>=
${OUT}/FLINEXP-.o: ${MID}/FLINEXP.NRLIB
	@ echo 668-9 making ${OUT}/FLINEXP-.o from ${MID}/FLINEXP-.NRLIB
	@ cp ${MID}/FLINEXP-.NRLIB/code.o ${OUT}/FLINEXP-.o

@
<<FLINEXP-.NRLIB (NRLIB from MID)>>=
${MID}/FLINEXP-.NRLIB: ${MID}/FLINEXP.spad 
	@ echo 669 making ${MID}/FLINEXP-.NRLIB from ${MID}/FLINEXP.spad
	@ (cd ${MID} ; 	echo ')co FLINEXP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FLINEXP.o (O from NRLIB)>>=
${OUT}/FLINEXP.o: ${MID}/FLINEXP.NRLIB
	@ echo 670-9 making ${OUT}/FLINEXP.o from ${MID}/FLINEXP.NRLIB
	@ cp ${MID}/FLINEXP.NRLIB/code.o ${OUT}/FLINEXP.o

@
<<FLINEXP.NRLIB (NRLIB from MID)>>=
${MID}/FLINEXP.NRLIB: ${MID}/FLINEXP.spad
	@ echo 671 making ${MID}/FLINEXP.NRLIB from ${MID}/FLINEXP.spad
	@ (cd ${MID} ; 	echo ')co FLINEXP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FLINEXP.spad (SPAD from IN)>>=
${MID}/FLINEXP.spad: ${IN}/catdef.spad.pamphlet
	@ echo 672 making ${MID}/FLINEXP.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FLINEXP.NRLIB ; \
	${TANGLE} -R"category FLINEXP FullyLinearlyExplicitRingOver" ${IN}/catdef.spad.pamphlet >FLINEXP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GCDDOM-.o (O from NRLIB)>>=
${OUT}/GCDDOM-.o: ${MID}/GCDDOM.NRLIB
	@ echo 673-0c making ${OUT}/GCDDOM-.o from ${MID}/GCDDOM-.NRLIB
	@ cp ${MID}/GCDDOM-.NRLIB/code.o ${OUT}/GCDDOM-.o

@
<<GCDDOM-.NRLIB (NRLIB from MID)>>=
${MID}/GCDDOM-.NRLIB: ${MID}/GCDDOM.spad 
	@ echo 674 making ${MID}/GCDDOM-.NRLIB from ${MID}/GCDDOM.spad
	@ (cd ${MID} ; 	echo ')co GCDDOM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GCDDOM.o (O from NRLIB)>>=
${OUT}/GCDDOM.o: ${MID}/GCDDOM.NRLIB
	@ echo 675-0c making ${OUT}/GCDDOM.o from ${MID}/GCDDOM.NRLIB
	@ cp ${MID}/GCDDOM.NRLIB/code.o ${OUT}/GCDDOM.o

@
<<GCDDOM.NRLIB (NRLIB from MID)>>=
${MID}/GCDDOM.NRLIB: ${MID}/GCDDOM.spad
	@ echo 676 making ${MID}/GCDDOM.NRLIB from ${MID}/GCDDOM.spad
	@ (cd ${MID} ; 	echo ')co GCDDOM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GCDDOM.spad (SPAD from IN)>>=
${MID}/GCDDOM.spad: ${IN}/catdef.spad.pamphlet
	@ echo 677 making ${MID}/GCDDOM.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GCDDOM.NRLIB ; \
	${TANGLE} -R"category GCDDOM GcdDomain" ${IN}/catdef.spad.pamphlet >GCDDOM.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GCDDOM-.o (BOOTSTRAP from MID)>>=
${MID}/GCDDOM-.o: ${MID}/GCDDOM-.lsp 
	@ echo 678-0b making ${MID}/GCDDOM-.o from ${MID}/GCDDOM-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "GCDDOM-.lsp" :output-file "GCDDOM-.o"))' | ${DEPSYS} )
	@ cp ${MID}/GCDDOM-.o ${OUT}/GCDDOM-.o

@
<<GCDDOM-.lsp (LISP from IN)>>=
${MID}/GCDDOM-.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 679 making ${MID}/GCDDOM-.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GCDDOM-.NRLIB ; \
	rm -rf ${OUT}/GCDDOM-.o ; \
	${TANGLE} -R"GCDDOM-.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >GCDDOM-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GCDDOM.o (BOOTSTRAP from MID)>>=
${MID}/GCDDOM.o: ${MID}/GCDDOM.lsp
	@ echo 680-0b making ${MID}/GCDDOM.o from ${MID}/GCDDOM.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "GCDDOM.lsp" :output-file "GCDDOM.o"))' | ${DEPSYS} )
	@ cp ${MID}/GCDDOM.o ${OUT}/GCDDOM.o

@
<<GCDDOM.lsp (LISP from IN)>>=
${MID}/GCDDOM.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 681 making ${MID}/GCDDOM.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GCDDOM.NRLIB ; \
	rm -rf ${OUT}/GCDDOM.o ; \
	${TANGLE} -R"GCDDOM.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >GCDDOM.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GROUP-.o (O from NRLIB)>>=
${OUT}/GROUP-.o: ${MID}/GROUP.NRLIB
	@ echo 682-5 making ${OUT}/GROUP-.o from ${MID}/GROUP-.NRLIB
	@ cp ${MID}/GROUP-.NRLIB/code.o ${OUT}/GROUP-.o

@
<<GROUP-.NRLIB (NRLIB from MID)>>=
${MID}/GROUP-.NRLIB: ${MID}/GROUP.spad 
	@ echo 683 making ${MID}/GROUP-.NRLIB from ${MID}/GROUP.spad
	@ (cd ${MID} ; 	echo ')co GROUP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GROUP.o (O from NRLIB)>>=
${OUT}/GROUP.o: ${MID}/GROUP.NRLIB
	@ echo 684-5 making ${OUT}/GROUP.o from ${MID}/GROUP.NRLIB
	@ cp ${MID}/GROUP.NRLIB/code.o ${OUT}/GROUP.o

@
<<GROUP.NRLIB (NRLIB from MID)>>=
${MID}/GROUP.NRLIB: ${MID}/GROUP.spad
	@ echo 685 making ${MID}/GROUP.NRLIB from ${MID}/GROUP.spad
	@ (cd ${MID} ; 	echo ')co GROUP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GROUP.spad (SPAD from IN)>>=
${MID}/GROUP.spad: ${IN}/catdef.spad.pamphlet
	@ echo 686 making ${MID}/GROUP.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GROUP.NRLIB ; \
	${TANGLE} -R"category GROUP Group" ${IN}/catdef.spad.pamphlet >GROUP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTDOM-.o (O from NRLIB)>>=
${OUT}/INTDOM-.o: ${MID}/INTDOM.NRLIB
	@ echo 687-0c making ${OUT}/INTDOM-.o from ${MID}/INTDOM-.NRLIB
	@ cp ${MID}/INTDOM-.NRLIB/code.o ${OUT}/INTDOM-.o

@
<<INTDOM-.NRLIB (NRLIB from MID)>>=
${MID}/INTDOM-.NRLIB: ${MID}/INTDOM.spad 
	@ echo 688 making ${MID}/INTDOM-.NRLIB from ${MID}/INTDOM.spad
	@ (cd ${MID} ; 	echo ')co INTDOM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTDOM.o (O from NRLIB)>>=
${OUT}/INTDOM.o: ${MID}/INTDOM.NRLIB
	@ echo 689-0c making ${OUT}/INTDOM.o from ${MID}/INTDOM.NRLIB
	@ cp ${MID}/INTDOM.NRLIB/code.o ${OUT}/INTDOM.o

@
<<INTDOM.NRLIB (NRLIB from MID)>>=
${MID}/INTDOM.NRLIB: ${MID}/INTDOM.spad
	@ echo 690 making ${MID}/INTDOM.NRLIB from ${MID}/INTDOM.spad
	@ (cd ${MID} ; 	echo ')co INTDOM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTDOM.spad (SPAD from IN)>>=
${MID}/INTDOM.spad: ${IN}/catdef.spad.pamphlet
	@ echo 691 making ${MID}/INTDOM.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INTDOM.NRLIB ; \
	${TANGLE} -R"category INTDOM IntegralDomain" ${IN}/catdef.spad.pamphlet >INTDOM.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTDOM-.o (BOOTSTRAP from MID)>>=
${MID}/INTDOM-.o: ${MID}/INTDOM-.lsp 
	@ echo 692-0b making ${MID}/INTDOM-.o from ${MID}/INTDOM-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "INTDOM-.lsp" :output-file "INTDOM-.o"))' | ${DEPSYS} )
	@ cp ${MID}/INTDOM-.o ${OUT}/INTDOM-.o

@
<<INTDOM-.lsp (LISP from IN)>>=
${MID}/INTDOM-.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 693 making ${MID}/INTDOM-.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INTDOM-.NRLIB ; \
	rm -rf ${OUT}/INTDOM-.o ; \
	${TANGLE} -R"INTDOM-.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >INTDOM-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTDOM.o (BOOTSTRAP from MID)>>=
${MID}/INTDOM.o: ${MID}/INTDOM.lsp
	@ echo 694-0b making ${MID}/INTDOM.o from ${MID}/INTDOM.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "INTDOM.lsp" :output-file "INTDOM.o"))' | ${DEPSYS} )
	@ cp ${MID}/INTDOM.o ${OUT}/INTDOM.o

@
<<INTDOM.lsp (LISP from IN)>>=
${MID}/INTDOM.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 695 making ${MID}/INTDOM.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INTDOM.NRLIB ; \
	rm -rf ${OUT}/INTDOM.o ; \
	${TANGLE} -R"INTDOM.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >INTDOM.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LINEXP.o (O from NRLIB)>>=
${OUT}/LINEXP.o: ${MID}/LINEXP.NRLIB
	@ echo 696-5 making ${OUT}/LINEXP.o from ${MID}/LINEXP.NRLIB
	@ cp ${MID}/LINEXP.NRLIB/code.o ${OUT}/LINEXP.o

@
<<LINEXP.NRLIB (NRLIB from MID)>>=
${MID}/LINEXP.NRLIB: ${MID}/LINEXP.spad
	@ echo 697 making ${MID}/LINEXP.NRLIB from ${MID}/LINEXP.spad
	@ (cd ${MID} ; 	echo ')co LINEXP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LINEXP.spad (SPAD from IN)>>=
${MID}/LINEXP.spad: ${IN}/catdef.spad.pamphlet
	@ echo 698 making ${MID}/LINEXP.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LINEXP.NRLIB ; \
	${TANGLE} -R"category LINEXP LinearlyExplicitRingOver" ${IN}/catdef.spad.pamphlet >LINEXP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LMODULE.o (O from NRLIB)>>=
${OUT}/LMODULE.o: ${MID}/LMODULE.NRLIB
	@ echo 699-4 making ${OUT}/LMODULE.o from ${MID}/LMODULE.NRLIB
	@ cp ${MID}/LMODULE.NRLIB/code.o ${OUT}/LMODULE.o

@
<<LMODULE.NRLIB (NRLIB from MID)>>=
${MID}/LMODULE.NRLIB: ${MID}/LMODULE.spad
	@ echo 700 making ${MID}/LMODULE.NRLIB from ${MID}/LMODULE.spad
	@ (cd ${MID} ; 	echo ')co LMODULE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LMODULE.spad (SPAD from IN)>>=
${MID}/LMODULE.spad: ${IN}/catdef.spad.pamphlet
	@ echo 701 making ${MID}/LMODULE.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LMODULE.NRLIB ; \
	${TANGLE} -R"category LMODULE LeftModule" ${IN}/catdef.spad.pamphlet >LMODULE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MONOID-.o (O from NRLIB)>>=
${OUT}/MONOID-.o: ${MID}/MONOID.NRLIB
	@ echo 702-0c making ${OUT}/MONOID-.o from ${MID}/MONOID-.NRLIB
	@ cp ${MID}/MONOID-.NRLIB/code.o ${OUT}/MONOID-.o

@
<<MONOID-.NRLIB (NRLIB from MID)>>=
${MID}/MONOID-.NRLIB: ${MID}/MONOID.spad 
	@ echo 703 making ${MID}/MONOID-.NRLIB from ${MID}/MONOID.spad
	@ (cd ${MID} ; 	echo ')co MONOID.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MONOID.o (O from NRLIB)>>=
${OUT}/MONOID.o: ${MID}/MONOID.NRLIB
	@ echo 704-0c making ${OUT}/MONOID.o from ${MID}/MONOID.NRLIB
	@ cp ${MID}/MONOID.NRLIB/code.o ${OUT}/MONOID.o

@
<<MONOID.NRLIB (NRLIB from MID)>>=
${MID}/MONOID.NRLIB: ${MID}/MONOID.spad
	@ echo 705 making ${MID}/MONOID.NRLIB from ${MID}/MONOID.spad
	@ (cd ${MID} ; 	echo ')co MONOID.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MONOID.spad (SPAD from IN)>>=
${MID}/MONOID.spad: ${IN}/catdef.spad.pamphlet
	@ echo 706 making ${MID}/MONOID.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MONOID.NRLIB ; \
	${TANGLE} -R"category MONOID Monoid" ${IN}/catdef.spad.pamphlet >MONOID.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MONOID-.o (BOOTSTRAP from MID)>>=
${MID}/MONOID-.o: ${MID}/MONOID-.lsp 
	@ echo 707-0b making ${MID}/MONOID-.o from ${MID}/MONOID-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "MONOID-.lsp" :output-file "MONOID-.o"))' | ${DEPSYS} )
	@ cp ${MID}/MONOID-.o ${OUT}/MONOID-.o

@
<<MONOID-.lsp (LISP from IN)>>=
${MID}/MONOID-.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 708 making ${MID}/MONOID-.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MONOID-.NRLIB ; \
	rm -rf ${OUT}/MONOID-.o ; \
	${TANGLE} -R"MONOID-.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >MONOID-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MONOID.o (BOOTSTRAP from MID)>>=
${MID}/MONOID.o: ${MID}/MONOID.lsp
	@ echo 709-0b making ${MID}/MONOID.o from ${MID}/MONOID.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "MONOID.lsp" :output-file "MONOID.o"))' | ${DEPSYS} )
	@ cp ${MID}/MONOID.o ${OUT}/MONOID.o

@
<<MONOID.lsp (LISP from IN)>>=
${MID}/MONOID.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 710 making ${MID}/MONOID.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MONOID.NRLIB ; \
	rm -rf ${OUT}/MONOID.o ; \
	${TANGLE} -R"MONOID.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >MONOID.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MODULE-.o (O from NRLIB)>>=
${OUT}/MODULE-.o: ${MID}/MODULE.NRLIB
	@ echo 711-6 making ${OUT}/MODULE-.o from ${MID}/MODULE-.NRLIB
	@ cp ${MID}/MODULE-.NRLIB/code.o ${OUT}/MODULE-.o

@
<<MODULE-.NRLIB (NRLIB from MID)>>=
${MID}/MODULE-.NRLIB: ${MID}/MODULE.spad 
	@ echo 712 making ${MID}/MODULE-.NRLIB from ${MID}/MODULE.spad
	@ (cd ${MID} ; 	echo ')co MODULE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MODULE.o (O from NRLIB)>>=
${OUT}/MODULE.o: ${MID}/MODULE.NRLIB
	@ echo 713-6 making ${OUT}/MODULE.o from ${MID}/MODULE.NRLIB
	@ cp ${MID}/MODULE.NRLIB/code.o ${OUT}/MODULE.o

@
<<MODULE.NRLIB (NRLIB from MID)>>=
${MID}/MODULE.NRLIB: ${MID}/MODULE.spad
	@ echo 714 making ${MID}/MODULE.NRLIB from ${MID}/MODULE.spad
	@ (cd ${MID} ; 	echo ')co MODULE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MODULE.spad (SPAD from IN)>>=
${MID}/MODULE.spad: ${IN}/catdef.spad.pamphlet
	@ echo 715 making ${MID}/MODULE.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MODULE.NRLIB ; \
	${TANGLE} -R"category MODULE Module" ${IN}/catdef.spad.pamphlet >MODULE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OCAMON.o (O from NRLIB)>>=
${OUT}/OCAMON.o: ${MID}/OCAMON.NRLIB
	@ echo 716-7 making ${OUT}/OCAMON.o from ${MID}/OCAMON.NRLIB
	@ cp ${MID}/OCAMON.NRLIB/code.o ${OUT}/OCAMON.o

@
<<OCAMON.NRLIB (NRLIB from MID)>>=
${MID}/OCAMON.NRLIB: ${MID}/OCAMON.spad
	@ echo 717 making ${MID}/OCAMON.NRLIB from ${MID}/OCAMON.spad
	@ (cd ${MID} ; 	echo ')co OCAMON.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OCAMON.spad (SPAD from IN)>>=
${MID}/OCAMON.spad: ${IN}/catdef.spad.pamphlet
	@ echo 718 making ${MID}/OCAMON.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OCAMON.NRLIB ; \
	${TANGLE} -R"category OCAMON OrderedCancellationAbelianMonoid" ${IN}/catdef.spad.pamphlet >OCAMON.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OAGROUP.o (O from NRLIB)>>=
${OUT}/OAGROUP.o: ${MID}/OAGROUP.NRLIB
	@ echo 719-8 making ${OUT}/OAGROUP.o from ${MID}/OAGROUP.NRLIB
	@ cp ${MID}/OAGROUP.NRLIB/code.o ${OUT}/OAGROUP.o

@
<<OAGROUP.NRLIB (NRLIB from MID)>>=
${MID}/OAGROUP.NRLIB: ${MID}/OAGROUP.spad
	@ echo 720 making ${MID}/OAGROUP.NRLIB from ${MID}/OAGROUP.spad
	@ (cd ${MID} ; 	echo ')co OAGROUP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OAGROUP.spad (SPAD from IN)>>=
${MID}/OAGROUP.spad: ${IN}/catdef.spad.pamphlet
	@ echo 721 making ${MID}/OAGROUP.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OAGROUP.NRLIB ; \
	${TANGLE} -R"category OAGROUP OrderedAbelianGroup" ${IN}/catdef.spad.pamphlet >OAGROUP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OAMON.o (O from NRLIB)>>=
${OUT}/OAMON.o: ${MID}/OAMON.NRLIB
	@ echo 722-6 making ${OUT}/OAMON.o from ${MID}/OAMON.NRLIB
	@ cp ${MID}/OAMON.NRLIB/code.o ${OUT}/OAMON.o

@
<<OAMON.NRLIB (NRLIB from MID)>>=
${MID}/OAMON.NRLIB: ${MID}/OAMON.spad
	@ echo 723 making ${MID}/OAMON.NRLIB from ${MID}/OAMON.spad
	@ (cd ${MID} ; 	echo ')co OAMON.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OAMON.spad (SPAD from IN)>>=
${MID}/OAMON.spad: ${IN}/catdef.spad.pamphlet
	@ echo 724 making ${MID}/OAMON.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OAMON.NRLIB ; \
	${TANGLE} -R"category OAMON OrderedAbelianMonoid" ${IN}/catdef.spad.pamphlet >OAMON.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OAMONS.o (O from NRLIB)>>=
${OUT}/OAMONS.o: ${MID}/OAMONS.NRLIB
	@ echo 725-8 making ${OUT}/OAMONS.o from ${MID}/OAMONS.NRLIB
	@ cp ${MID}/OAMONS.NRLIB/code.o ${OUT}/OAMONS.o

@
<<OAMONS.NRLIB (NRLIB from MID)>>=
${MID}/OAMONS.NRLIB: ${MID}/OAMONS.spad
	@ echo 726 making ${MID}/OAMONS.NRLIB from ${MID}/OAMONS.spad
	@ (cd ${MID} ; 	echo ')co OAMONS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OAMONS.spad (SPAD from IN)>>=
${MID}/OAMONS.spad: ${IN}/catdef.spad.pamphlet
	@ echo 727 making ${MID}/OAMONS.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OAMONS.NRLIB ; \
	${TANGLE} -R"category OAMONS OrderedAbelianMonoidSup" ${IN}/catdef.spad.pamphlet >OAMONS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OASGP.o (O from NRLIB)>>=
${OUT}/OASGP.o: ${MID}/OASGP.NRLIB
	@ echo 728-5 making ${OUT}/OASGP.o from ${MID}/OASGP.NRLIB
	@ cp ${MID}/OASGP.NRLIB/code.o ${OUT}/OASGP.o

@
<<OASGP.NRLIB (NRLIB from MID)>>=
${MID}/OASGP.NRLIB: ${MID}/OASGP.spad
	@ echo 729 making ${MID}/OASGP.NRLIB from ${MID}/OASGP.spad
	@ (cd ${MID} ; 	echo ')co OASGP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OASGP.spad (SPAD from IN)>>=
${MID}/OASGP.spad: ${IN}/catdef.spad.pamphlet
	@ echo 730 making ${MID}/OASGP.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OASGP.NRLIB ; \
	${TANGLE} -R"category OASGP OrderedAbelianSemiGroup" ${IN}/catdef.spad.pamphlet >OASGP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ORDFIN.o (O from NRLIB)>>=
${OUT}/ORDFIN.o: ${MID}/ORDFIN.NRLIB
	@ echo 731-5 making ${OUT}/ORDFIN.o from ${MID}/ORDFIN.NRLIB
	@ cp ${MID}/ORDFIN.NRLIB/code.o ${OUT}/ORDFIN.o

@
<<ORDFIN.NRLIB (NRLIB from MID)>>=
${MID}/ORDFIN.NRLIB: ${MID}/ORDFIN.spad
	@ echo 732 making ${MID}/ORDFIN.NRLIB from ${MID}/ORDFIN.spad
	@ (cd ${MID} ; 	echo ')co ORDFIN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ORDFIN.spad (SPAD from IN)>>=
${MID}/ORDFIN.spad: ${IN}/catdef.spad.pamphlet
	@ echo 733 making ${MID}/ORDFIN.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ORDFIN.NRLIB ; \
	${TANGLE} -R"category ORDFIN OrderedFinite" ${IN}/catdef.spad.pamphlet >ORDFIN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OINTDOM.o (O from NRLIB)>>=
${OUT}/OINTDOM.o: ${MID}/OINTDOM.NRLIB
	@ echo 734-0c making ${OUT}/OINTDOM.o from ${MID}/OINTDOM.NRLIB
	@ cp ${MID}/OINTDOM.NRLIB/code.o ${OUT}/OINTDOM.o

@
<<OINTDOM.NRLIB (NRLIB from MID)>>=
${MID}/OINTDOM.NRLIB: ${MID}/OINTDOM.spad
	@ echo 735 making ${MID}/OINTDOM.NRLIB from ${MID}/OINTDOM.spad
	@ (cd ${MID} ; 	echo ')co OINTDOM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OINTDOM.spad (SPAD from IN)>>=
${MID}/OINTDOM.spad: ${IN}/catdef.spad.pamphlet
	@ echo 736 making ${MID}/OINTDOM.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OINTDOM.NRLIB ; \
	${TANGLE} -R"category OINTDOM OrderedIntegralDomain" ${IN}/catdef.spad.pamphlet >OINTDOM.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OINTDOM.o (BOOTSTRAP from MID)>>=
${MID}/OINTDOM.o: ${MID}/OINTDOM.lsp
	@ echo 737-0b making ${MID}/OINTDOM.o from ${MID}/OINTDOM.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "OINTDOM.lsp" :output-file "OINTDOM.o"))' | ${DEPSYS} )
	@ cp ${MID}/OINTDOM.o ${OUT}/OINTDOM.o

@
<<OINTDOM.lsp (LISP from IN)>>=
${MID}/OINTDOM.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 738 making ${MID}/OINTDOM.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OINTDOM.NRLIB ; \
	rm -rf ${OUT}/OINTDOM.o ; \
	${TANGLE} -R"OINTDOM.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >OINTDOM.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ORDMON.o (O from NRLIB)>>=
${OUT}/ORDMON.o: ${MID}/ORDMON.NRLIB
	@ echo 739-5 making ${OUT}/ORDMON.o from ${MID}/ORDMON.NRLIB
	@ cp ${MID}/ORDMON.NRLIB/code.o ${OUT}/ORDMON.o

@
<<ORDMON.NRLIB (NRLIB from MID)>>=
${MID}/ORDMON.NRLIB: ${MID}/ORDMON.spad
	@ echo 740 making ${MID}/ORDMON.NRLIB from ${MID}/ORDMON.spad
	@ (cd ${MID} ; 	echo ')co ORDMON.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ORDMON.spad (SPAD from IN)>>=
${MID}/ORDMON.spad: ${IN}/catdef.spad.pamphlet
	@ echo 741 making ${MID}/ORDMON.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ORDMON.NRLIB ; \
	${TANGLE} -R"category ORDMON OrderedMonoid" ${IN}/catdef.spad.pamphlet >ORDMON.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ORDRING-.o (O from NRLIB)>>=
${OUT}/ORDRING-.o: ${MID}/ORDRING.NRLIB
	@ echo 742-0c making ${OUT}/ORDRING-.o from ${MID}/ORDRING-.NRLIB
	@ cp ${MID}/ORDRING-.NRLIB/code.o ${OUT}/ORDRING-.o

@
<<ORDRING-.NRLIB (NRLIB from MID)>>=
${MID}/ORDRING-.NRLIB: ${MID}/ORDRING.spad 
	@ echo 743 making ${MID}/ORDRING-.NRLIB from ${MID}/ORDRING.spad
	@ (cd ${MID} ; 	echo ')co ORDRING.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ORDRING.o (O from NRLIB)>>=
${OUT}/ORDRING.o: ${MID}/ORDRING.NRLIB
	@ echo 744-0c making ${OUT}/ORDRING.o from ${MID}/ORDRING.NRLIB
	@ cp ${MID}/ORDRING.NRLIB/code.o ${OUT}/ORDRING.o

@
<<ORDRING.NRLIB (NRLIB from MID)>>=
${MID}/ORDRING.NRLIB: ${MID}/ORDRING.spad
	@ echo 745 making ${MID}/ORDRING.NRLIB from ${MID}/ORDRING.spad
	@ (cd ${MID} ; 	echo ')co ORDRING.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ORDRING.spad (SPAD from IN)>>=
${MID}/ORDRING.spad: ${IN}/catdef.spad.pamphlet
	@ echo 746 making ${MID}/ORDRING.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ORDRING.NRLIB ; \
	${TANGLE} -R"category ORDRING OrderedRing" ${IN}/catdef.spad.pamphlet >ORDRING.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ORDRING-.o (BOOTSTRAP from MID)>>=
${MID}/ORDRING-.o: ${MID}/ORDRING-.lsp 
	@ echo 747-0b making ${MID}/ORDRING-.o from ${MID}/ORDRING-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "ORDRING-.lsp" :output-file "ORDRING-.o"))' | ${DEPSYS} )
	@ cp ${MID}/ORDRING-.o ${OUT}/ORDRING-.o

@
<<ORDRING-.lsp (LISP from IN)>>=
${MID}/ORDRING-.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 748 making ${MID}/ORDRING-.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ORDRING-.NRLIB ; \
	rm -rf ${OUT}/ORDRING-.o ; \
	${TANGLE} -R"ORDRING-.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >ORDRING-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ORDRING.o (BOOTSTRAP from MID)>>=
${MID}/ORDRING.o: ${MID}/ORDRING.lsp
	@ echo 749-0b making ${MID}/ORDRING.o from ${MID}/ORDRING.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "ORDRING.lsp" :output-file "ORDRING.o"))' | ${DEPSYS} )
	@ cp ${MID}/ORDRING.o ${OUT}/ORDRING.o

@
<<ORDRING.lsp (LISP from IN)>>=
${MID}/ORDRING.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 750 making ${MID}/ORDRING.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ORDRING.NRLIB ; \
	rm -rf ${OUT}/ORDRING.o ; \
	${TANGLE} -R"ORDRING.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >ORDRING.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ORDSET-.o (O from NRLIB)>>=
${OUT}/ORDSET-.o: ${MID}/ORDSET.NRLIB
	@ echo 751-4 making ${OUT}/ORDSET-.o from ${MID}/ORDSET-.NRLIB
	@ cp ${MID}/ORDSET-.NRLIB/code.o ${OUT}/ORDSET-.o

@
<<ORDSET-.NRLIB (NRLIB from MID)>>=
${MID}/ORDSET-.NRLIB: ${MID}/ORDSET.spad
	@ echo 752 making ${MID}/ORDSET-.NRLIB from ${MID}/ORDSET.spad
	@ (cd ${MID} ; 	echo ')co ORDSET.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ORDSET.o (O from NRLIB)>>=
${OUT}/ORDSET.o: ${MID}/ORDSET.NRLIB
	@ echo 753-4 making ${OUT}/ORDSET.o from ${MID}/ORDSET.NRLIB
	@ cp ${MID}/ORDSET.NRLIB/code.o ${OUT}/ORDSET.o

@
<<ORDSET.NRLIB (NRLIB from MID)>>=
${MID}/ORDSET.NRLIB: ${MID}/ORDSET.spad
	@ echo 754 making ${MID}/ORDSET.NRLIB from ${MID}/ORDSET.spad
	@ (cd ${MID} ; 	echo ')co ORDSET.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ORDSET.spad (SPAD from IN)>>=
${MID}/ORDSET.spad: ${IN}/catdef.spad.pamphlet
	@ echo 755 making ${MID}/ORDSET.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ORDSET.NRLIB ; \
	${TANGLE} -R"category ORDSET OrderedSet" ${IN}/catdef.spad.pamphlet >ORDSET.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PDRING-.o (O from NRLIB)>>=
${OUT}/PDRING-.o: ${MID}/PDRING.NRLIB
	@ echo 756-5 making ${OUT}/PDRING-.o from ${MID}/PDRING-.NRLIB
	@ cp ${MID}/PDRING-.NRLIB/code.o ${OUT}/PDRING-.o

@
<<PDRING-.NRLIB (NRLIB from MID)>>=
${MID}/PDRING-.NRLIB: ${MID}/PDRING.spad 
	@ echo 757 making ${MID}/PDRING-.NRLIB from ${MID}/PDRING.spad
	@ (cd ${MID} ; 	echo ')co PDRING.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PDRING.o (O from NRLIB)>>=
${OUT}/PDRING.o: ${MID}/PDRING.NRLIB
	@ echo 758-5 making ${OUT}/PDRING.o from ${MID}/PDRING.NRLIB
	@ cp ${MID}/PDRING.NRLIB/code.o ${OUT}/PDRING.o

@
<<PDRING.NRLIB (NRLIB from MID)>>=
${MID}/PDRING.NRLIB: ${MID}/PDRING.spad
	@ echo 759 making ${MID}/PDRING.NRLIB from ${MID}/PDRING.spad
	@ (cd ${MID} ; 	echo ')co PDRING.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PDRING.spad (SPAD from IN)>>=
${MID}/PDRING.spad: ${IN}/catdef.spad.pamphlet
	@ echo 760 making ${MID}/PDRING.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PDRING.NRLIB ; \
	${TANGLE} -R"category PDRING PartialDifferentialRing" ${IN}/catdef.spad.pamphlet >PDRING.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PID.o (O from NRLIB)>>=
${OUT}/PID.o: ${MID}/PID.NRLIB
	@ echo 761-8 making ${OUT}/PID.o from ${MID}/PID.NRLIB
	@ cp ${MID}/PID.NRLIB/code.o ${OUT}/PID.o

@
<<PID.NRLIB (NRLIB from MID)>>=
${MID}/PID.NRLIB: ${MID}/PID.spad
	@ echo 762 making ${MID}/PID.NRLIB from ${MID}/PID.spad
	@ (cd ${MID} ; 	echo ')co PID.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PID.spad (SPAD from IN)>>=
${MID}/PID.spad: ${IN}/catdef.spad.pamphlet
	@ echo 763 making ${MID}/PID.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PID.NRLIB ; \
	${TANGLE} -R"category PID PrincipalIdealDomain" ${IN}/catdef.spad.pamphlet >PID.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PFECAT-.o (O from NRLIB)>>=
${OUT}/PFECAT-.o: ${MID}/PFECAT.NRLIB
	@ echo 764-13 making ${OUT}/PFECAT-.o from ${MID}/PFECAT-.NRLIB
	@ cp ${MID}/PFECAT-.NRLIB/code.o ${OUT}/PFECAT-.o

@
<<PFECAT-.NRLIB (NRLIB from MID)>>=
${MID}/PFECAT-.NRLIB: ${MID}/PFECAT.spad 
	@ echo 765 making ${MID}/PFECAT-.NRLIB from ${MID}/PFECAT.spad
	@ (cd ${MID} ; 	echo ')co PFECAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PFECAT.o (O from NRLIB)>>=
${OUT}/PFECAT.o: ${MID}/PFECAT.NRLIB
	@ echo 766-13 making ${OUT}/PFECAT.o from ${MID}/PFECAT.NRLIB
	@ cp ${MID}/PFECAT.NRLIB/code.o ${OUT}/PFECAT.o

@
<<PFECAT.NRLIB (NRLIB from MID)>>=
${MID}/PFECAT.NRLIB: ${MID}/PFECAT.spad
	@ echo 767 making ${MID}/PFECAT.NRLIB from ${MID}/PFECAT.spad
	@ (cd ${MID} ; 	echo ')co PFECAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PFECAT.spad (SPAD from IN)>>=
${MID}/PFECAT.spad: ${IN}/catdef.spad.pamphlet
	@ echo 768 making ${MID}/PFECAT.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PFECAT.NRLIB ; \
	${TANGLE} -R"category PFECAT PolynomialFactorizationExplicit" ${IN}/catdef.spad.pamphlet >PFECAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RMODULE.o (O from NRLIB)>>=
${OUT}/RMODULE.o: ${MID}/RMODULE.NRLIB
	@ echo 769-4 making ${OUT}/RMODULE.o from ${MID}/RMODULE.NRLIB
	@ cp ${MID}/RMODULE.NRLIB/code.o ${OUT}/RMODULE.o

@
<<RMODULE.NRLIB (NRLIB from MID)>>=
${MID}/RMODULE.NRLIB: ${MID}/RMODULE.spad
	@ echo 770 making ${MID}/RMODULE.NRLIB from ${MID}/RMODULE.spad
	@ (cd ${MID} ; 	echo ')co RMODULE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RMODULE.spad (SPAD from IN)>>=
${MID}/RMODULE.spad: ${IN}/catdef.spad.pamphlet
	@ echo 771 making ${MID}/RMODULE.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RMODULE.NRLIB ; \
	${TANGLE} -R"category RMODULE RightModule" ${IN}/catdef.spad.pamphlet >RMODULE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RING-.o (O from NRLIB)>>=
${OUT}/RING-.o: ${MID}/RING.NRLIB
	@ echo 772-0c making ${OUT}/RING-.o from ${MID}/RING-.NRLIB
	@ cp ${MID}/RING-.NRLIB/code.o ${OUT}/RING-.o

@
<<RING-.NRLIB (NRLIB from MID)>>=
${MID}/RING-.NRLIB: ${MID}/RING.spad 
	@ echo 773 making ${MID}/RING-.NRLIB from ${MID}/RING.spad
	@ (cd ${MID} ; 	echo ')co RING.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RING.o (O from NRLIB)>>=
${OUT}/RING.o: ${MID}/RING.NRLIB
	@ echo 774-0c making ${OUT}/RING.o from ${MID}/RING.NRLIB
	@ cp ${MID}/RING.NRLIB/code.o ${OUT}/RING.o

@
<<RING.NRLIB (NRLIB from MID)>>=
${MID}/RING.NRLIB: ${MID}/RING.spad
	@ echo 775 making ${MID}/RING.NRLIB from ${MID}/RING.spad
	@ (cd ${MID} ; 	echo ')co RING.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RING.spad (SPAD from IN)>>=
${MID}/RING.spad: ${IN}/catdef.spad.pamphlet
	@ echo 776 making ${MID}/RING.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RING.NRLIB ; \
	${TANGLE} -R"category RING Ring" ${IN}/catdef.spad.pamphlet >RING.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RING-.o (BOOTSTRAP from MID)>>=
${MID}/RING-.o: ${MID}/RING-.lsp 
	@ echo 777-0b making ${MID}/RING-.o from ${MID}/RING-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "RING-.lsp" :output-file "RING-.o"))' | ${DEPSYS} )
	@ cp ${MID}/RING-.o ${OUT}/RING-.o

@
<<RING-.lsp (LISP from IN)>>=
${MID}/RING-.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 778 making ${MID}/RING-.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RING-.NRLIB ; \
	rm -rf ${OUT}/RING-.o ; \
	${TANGLE} -R"RING-.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >RING-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RING.o (BOOTSTRAP from MID)>>=
${MID}/RING.o: ${MID}/RING.lsp
	@ echo 779-0b making ${MID}/RING.o from ${MID}/RING.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "RING.lsp" :output-file "RING.o"))' | ${DEPSYS} )
	@ cp ${MID}/RING.o ${OUT}/RING.o

@
<<RING.lsp (LISP from IN)>>=
${MID}/RING.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 780 making ${MID}/RING.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RING.NRLIB ; \
	rm -rf ${OUT}/RING.o ; \
	${TANGLE} -R"RING.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >RING.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RNG.o (O from NRLIB)>>=
${OUT}/RNG.o: ${MID}/RNG.NRLIB
	@ echo 781-0c making ${OUT}/RNG.o from ${MID}/RNG.NRLIB
	@ cp ${MID}/RNG.NRLIB/code.o ${OUT}/RNG.o

@
<<RNG.NRLIB (NRLIB from MID)>>=
${MID}/RNG.NRLIB: ${MID}/RNG.spad
	@ echo 782 making ${MID}/RNG.NRLIB from ${MID}/RNG.spad
	@ (cd ${MID} ; 	echo ')co RNG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RNG.spad (SPAD from IN)>>=
${MID}/RNG.spad: ${IN}/catdef.spad.pamphlet
	@ echo 783 making ${MID}/RNG.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RNG.NRLIB ; \
	${TANGLE} -R"category RNG Rng" ${IN}/catdef.spad.pamphlet >RNG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RNG.o (BOOTSTRAP from MID)>>=
${MID}/RNG.o: ${MID}/RNG.lsp
	@ echo 784-0b making ${MID}/RNG.o from ${MID}/RNG.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "RNG.lsp" :output-file "RNG.o"))' | ${DEPSYS} )
	@ cp ${MID}/RNG.o ${OUT}/RNG.o

@
<<RNG.lsp (LISP from IN)>>=
${MID}/RNG.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 785 making ${MID}/RNG.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RNG.NRLIB ; \
	rm -rf ${OUT}/RNG.o ; \
	${TANGLE} -R"RNG.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >RNG.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SETCAT-.o (O from NRLIB)>>=
${OUT}/SETCAT-.o: ${MID}/SETCAT.NRLIB
	@ echo 786-0c making ${OUT}/SETCAT-.o from ${MID}/SETCAT-.NRLIB
	@ cp ${MID}/SETCAT-.NRLIB/code.o ${OUT}/SETCAT-.o

@
<<SETCAT-.NRLIB (NRLIB from MID)>>=
${MID}/SETCAT-.NRLIB: ${MID}/SETCAT.spad
	@ echo 787 making ${MID}/SETCAT-.NRLIB from ${MID}/SETCAT.spad
	@ (cd ${MID} ; 	echo ')co SETCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SETCAT-.o (BOOTSTRAP from MID)>>=
${MID}/SETCAT-.o: ${MID}/SETCAT-.lsp
	@ echo 788-0b making ${MID}/SETCAT-.o from ${MID}/SETCAT-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "SETCAT-.lsp" :output-file "SETCAT-.o"))' | ${DEPSYS} )
	@ cp ${MID}/SETCAT-.o ${OUT}/SETCAT-.o

@
<<SETCAT-.lsp (LISP from IN)>>=
${MID}/SETCAT-.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 789 making ${MID}/SETCAT-.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SETCAT-.NRLIB ; \
	rm -rf ${OUT}/SETCAT-.o ; \
	${TANGLE} -R"SETCAT-.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >SETCAT-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SETCAT.o (O from NRLIB)>>=
${OUT}/SETCAT.o: ${MID}/SETCAT.NRLIB
	@ echo 790-0c making ${OUT}/SETCAT.o from ${MID}/SETCAT.NRLIB
	@ cp ${MID}/SETCAT.NRLIB/code.o ${OUT}/SETCAT.o

@
<<SETCAT.NRLIB (NRLIB from MID)>>=
${MID}/SETCAT.NRLIB: ${MID}/SETCAT.spad
	@ echo 791 making ${MID}/SETCAT.NRLIB from ${MID}/SETCAT.spad
	@ (cd ${MID} ; 	echo ')co SETCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SETCAT.spad (SPAD from IN)>>=
${MID}/SETCAT.spad: ${IN}/catdef.spad.pamphlet
	@ echo 792 making ${MID}/SETCAT.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SETCAT.NRLIB ; \
	${TANGLE} -R"category SETCAT SetCategory" ${IN}/catdef.spad.pamphlet >SETCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SETCAT.o (BOOTSTRAP from MID)>>=
${MID}/SETCAT.o: ${MID}/SETCAT.lsp
	@ echo 793-0b making ${MID}/SETCAT.o from ${MID}/SETCAT.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "SETCAT.lsp" :output-file "SETCAT.o"))' | ${DEPSYS} )
	@ cp ${MID}/SETCAT.o ${OUT}/SETCAT.o

@
<<SETCAT.lsp (LISP from IN)>>=
${MID}/SETCAT.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 794 making ${MID}/SETCAT.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SETCAT.NRLIB ; \
	rm -rf ${OUT}/SETCAT.o ; \
	${TANGLE} -R"SETCAT.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >SETCAT.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SGROUP-.o (O from NRLIB)>>=
${OUT}/SGROUP-.o: ${MID}/SGROUP.NRLIB
	@ echo 795-4 making ${OUT}/SGROUP-.o from ${MID}/SGROUP-.NRLIB
	@ cp ${MID}/SGROUP-.NRLIB/code.o ${OUT}/SGROUP-.o

@
<<SGROUP-.NRLIB (NRLIB from MID)>>=
${MID}/SGROUP-.NRLIB: ${MID}/SGROUP.spad 
	@ echo 796 making ${MID}/SGROUP-.NRLIB from ${MID}/SGROUP.spad
	@ (cd ${MID} ; 	echo ')co SGROUP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SGROUP.o (O from NRLIB)>>=
${OUT}/SGROUP.o: ${MID}/SGROUP.NRLIB
	@ echo 797-4 making ${OUT}/SGROUP.o from ${MID}/SGROUP.NRLIB
	@ cp ${MID}/SGROUP.NRLIB/code.o ${OUT}/SGROUP.o

@
<<SGROUP.NRLIB (NRLIB from MID)>>=
${MID}/SGROUP.NRLIB: ${MID}/SGROUP.spad
	@ echo 798 making ${MID}/SGROUP.NRLIB from ${MID}/SGROUP.spad
	@ (cd ${MID} ; 	echo ')co SGROUP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SGROUP.spad (SPAD from IN)>>=
${MID}/SGROUP.spad: ${IN}/catdef.spad.pamphlet
	@ echo 799 making ${MID}/SGROUP.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SGROUP.NRLIB ; \
	${TANGLE} -R"category SGROUP SemiGroup" ${IN}/catdef.spad.pamphlet >SGROUP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STEP.o (O from NRLIB)>>=
${OUT}/STEP.o: ${MID}/STEP.NRLIB
	@ echo 800-4 making ${OUT}/STEP.o from ${MID}/STEP.NRLIB
	@ cp ${MID}/STEP.NRLIB/code.o ${OUT}/STEP.o

@
<<STEP.NRLIB (NRLIB from MID)>>=
${MID}/STEP.NRLIB: ${MID}/STEP.spad
	@ echo 801 making ${MID}/STEP.NRLIB from ${MID}/STEP.spad
	@ (cd ${MID} ; 	echo ')co STEP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STEP.spad (SPAD from IN)>>=
${MID}/STEP.spad: ${IN}/catdef.spad.pamphlet
	@ echo 802 making ${MID}/STEP.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf STEP.NRLIB ; \
	${TANGLE} -R"category STEP StepThrough" ${IN}/catdef.spad.pamphlet >STEP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UFD-.o (O from NRLIB)>>=
${OUT}/UFD-.o: ${MID}/UFD.NRLIB
	@ echo 803-0c making ${OUT}/UFD-.o from ${MID}/UFD-.NRLIB
	@ cp ${MID}/UFD-.NRLIB/code.o ${OUT}/UFD-.o

@
<<UFD-.NRLIB (NRLIB from MID)>>=
${MID}/UFD-.NRLIB: ${MID}/UFD.spad 
	@ echo 804 making ${MID}/UFD-.NRLIB from ${MID}/UFD.spad
	@ (cd ${MID} ; 	echo ')co UFD.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UFD.o (O from NRLIB)>>=
${OUT}/UFD.o: ${MID}/UFD.NRLIB
	@ echo 805-0c making ${OUT}/UFD.o from ${MID}/UFD.NRLIB
	@ cp ${MID}/UFD.NRLIB/code.o ${OUT}/UFD.o

@
<<UFD.NRLIB (NRLIB from MID)>>=
${MID}/UFD.NRLIB: ${MID}/UFD.spad
	@ echo 806 making ${MID}/UFD.NRLIB from ${MID}/UFD.spad
	@ (cd ${MID} ; 	echo ')co UFD.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UFD.spad (SPAD from IN)>>=
${MID}/UFD.spad: ${IN}/catdef.spad.pamphlet
	@ echo 807 making ${MID}/UFD.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UFD.NRLIB ; \
	${TANGLE} -R"category UFD UniqueFactorizationDomain" ${IN}/catdef.spad.pamphlet >UFD.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UFD-.o (BOOTSTRAP from MID)>>=
${MID}/UFD-.o: ${MID}/UFD-.lsp 
	@ echo 808-0b making ${MID}/UFD-.o from ${MID}/UFD-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "UFD-.lsp" :output-file "UFD-.o"))' | ${DEPSYS} )
	@ cp ${MID}/UFD-.o ${OUT}/UFD-.o

@
<<UFD-.lsp (LISP from IN)>>=
${MID}/UFD-.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 809 making ${MID}/UFD-.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UFD-.NRLIB ; \
	rm -rf ${OUT}/UFD-.o ; \
	${TANGLE} -R"UFD-.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >UFD-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UFD.o (BOOTSTRAP from MID)>>=
${MID}/UFD.o: ${MID}/UFD.lsp
	@ echo 810-0b making ${MID}/UFD.o from ${MID}/UFD.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "UFD.lsp" :output-file "UFD.o"))' | ${DEPSYS} )
	@ cp ${MID}/UFD.o ${OUT}/UFD.o

@
<<UFD.lsp (LISP from IN)>>=
${MID}/UFD.lsp: ${IN}/catdef.spad.pamphlet
	@ echo 811 making ${MID}/UFD.lsp from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UFD.NRLIB ; \
	rm -rf ${OUT}/UFD.o ; \
	${TANGLE} -R"UFD.lsp BOOTSTRAP" ${IN}/catdef.spad.pamphlet >UFD.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<VSPACE-.o (O from NRLIB)>>=
${OUT}/VSPACE-.o: ${MID}/VSPACE.NRLIB
	@ echo 812-10 making ${OUT}/VSPACE-.o from ${MID}/VSPACE-.NRLIB
	@ cp ${MID}/VSPACE-.NRLIB/code.o ${OUT}/VSPACE-.o

@
<<VSPACE-.NRLIB (NRLIB from MID)>>=
${MID}/VSPACE-.NRLIB: ${MID}/VSPACE.spad 
	@ echo 813 making ${MID}/VSPACE-.NRLIB from ${MID}/VSPACE.spad
	@ (cd ${MID} ; 	echo ')co VSPACE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<VSPACE.o (O from NRLIB)>>=
${OUT}/VSPACE.o: ${MID}/VSPACE.NRLIB
	@ echo 814-10 making ${OUT}/VSPACE.o from ${MID}/VSPACE.NRLIB
	@ cp ${MID}/VSPACE.NRLIB/code.o ${OUT}/VSPACE.o

@
<<VSPACE.NRLIB (NRLIB from MID)>>=
${MID}/VSPACE.NRLIB: ${MID}/VSPACE.spad
	@ echo 815 making ${MID}/VSPACE.NRLIB from ${MID}/VSPACE.spad
	@ (cd ${MID} ; 	echo ')co VSPACE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<VSPACE.spad (SPAD from IN)>>=
${MID}/VSPACE.spad: ${IN}/catdef.spad.pamphlet
	@ echo 816 making ${MID}/VSPACE.spad from ${IN}/catdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf VSPACE.NRLIB ; \
	${TANGLE} -R"category VSPACE VectorSpace" ${IN}/catdef.spad.pamphlet >VSPACE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<catdef.spad.dvi (DOC from IN)>>=
${DOC}/catdef.spad.dvi: ${IN}/catdef.spad.pamphlet ${DOC}/axiom.sty
	@ echo 817 making ${DOC}/catdef.spad.dvi from ${IN}/catdef.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/catdef.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} catdef.spad ; \
	rm -f ${DOC}/catdef.spad.pamphlet ; \
	rm -f ${DOC}/catdef.spad.tex ; \
	rm -f ${DOC}/catdef.spad )

@
\subsection{cden.spad \cite{1}}
<<cden.spad (SPAD from IN)>>=
${OUTSRC}/cden.spad: ${IN}/cden.spad.pamphlet
	@ echo 818 making ${OUTSRC}/cden.spad from ${IN}/cden.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/cden.spad.pamphlet >cden.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CDEN.o (O from NRLIB)>>=
${OUT}/CDEN.o: ${MID}/CDEN.NRLIB
	@ echo 819-14 making ${OUT}/CDEN.o from ${MID}/CDEN.NRLIB
	@ cp ${MID}/CDEN.NRLIB/code.o ${OUT}/CDEN.o

@
<<CDEN.NRLIB (NRLIB from MID)>>=
${MID}/CDEN.NRLIB: ${MID}/CDEN.spad
	@ echo 820 making ${MID}/CDEN.NRLIB from ${MID}/CDEN.spad
	@ (cd ${MID} ; 	echo ')co CDEN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CDEN.spad (SPAD from IN)>>=
${MID}/CDEN.spad: ${IN}/cden.spad.pamphlet
	@ echo 821 making ${MID}/CDEN.spad from ${IN}/cden.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CDEN.NRLIB ; \
	${TANGLE} -R"package CDEN CommonDenominator" ${IN}/cden.spad.pamphlet >CDEN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ICDEN.o (O from NRLIB)>>=
${OUT}/ICDEN.o: ${MID}/ICDEN.NRLIB
	@ echo 822-14 making ${OUT}/ICDEN.o from ${MID}/ICDEN.NRLIB
	@ cp ${MID}/ICDEN.NRLIB/code.o ${OUT}/ICDEN.o

@
<<ICDEN.NRLIB (NRLIB from MID)>>=
${MID}/ICDEN.NRLIB: ${MID}/ICDEN.spad
	@ echo 823 making ${MID}/ICDEN.NRLIB from ${MID}/ICDEN.spad
	@ (cd ${MID} ; 	echo ')co ICDEN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ICDEN.spad (SPAD from IN)>>=
${MID}/ICDEN.spad: ${IN}/cden.spad.pamphlet
	@ echo 824 making ${MID}/ICDEN.spad from ${IN}/cden.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ICDEN.NRLIB ; \
	${TANGLE} -R"package ICDEN InnerCommonDenominator" ${IN}/cden.spad.pamphlet >ICDEN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MCDEN.o (O from NRLIB)>>=
${OUT}/MCDEN.o: ${MID}/MCDEN.NRLIB
	@ echo 825-14 making ${OUT}/MCDEN.o from ${MID}/MCDEN.NRLIB
	@ cp ${MID}/MCDEN.NRLIB/code.o ${OUT}/MCDEN.o

@
<<MCDEN.NRLIB (NRLIB from MID)>>=
${MID}/MCDEN.NRLIB: ${MID}/MCDEN.spad
	@ echo 826 making ${MID}/MCDEN.NRLIB from ${MID}/MCDEN.spad
	@ (cd ${MID} ; 	echo ')co MCDEN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MCDEN.spad (SPAD from IN)>>=
${MID}/MCDEN.spad: ${IN}/cden.spad.pamphlet
	@ echo 827 making ${MID}/MCDEN.spad from ${IN}/cden.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MCDEN.NRLIB ; \
	${TANGLE} -R"package MCDEN MatrixCommonDenominator" ${IN}/cden.spad.pamphlet >MCDEN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPCDEN.o (O from NRLIB)>>=
${OUT}/UPCDEN.o: ${MID}/UPCDEN.NRLIB
	@ echo 828-14 making ${OUT}/UPCDEN.o from ${MID}/UPCDEN.NRLIB
	@ cp ${MID}/UPCDEN.NRLIB/code.o ${OUT}/UPCDEN.o

@
<<UPCDEN.NRLIB (NRLIB from MID)>>=
${MID}/UPCDEN.NRLIB: ${MID}/UPCDEN.spad
	@ echo 829 making ${MID}/UPCDEN.NRLIB from ${MID}/UPCDEN.spad
	@ (cd ${MID} ; 	echo ')co UPCDEN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPCDEN.spad (SPAD from IN)>>=
${MID}/UPCDEN.spad: ${IN}/cden.spad.pamphlet
	@ echo 830 making ${MID}/UPCDEN.spad from ${IN}/cden.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UPCDEN.NRLIB ; \
	${TANGLE} -R"package UPCDEN UnivariatePolynomialCommonDenominator" ${IN}/cden.spad.pamphlet >UPCDEN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<cden.spad.dvi (DOC from IN)>>=
${DOC}/cden.spad.dvi: ${IN}/cden.spad.pamphlet ${DOC}/axiom.sty
	@ echo 831 making ${DOC}/cden.spad.dvi from ${IN}/cden.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/cden.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} cden.spad ; \
	rm -f ${DOC}/cden.spad.pamphlet ; \
	rm -f ${DOC}/cden.spad.tex ; \
	rm -f ${DOC}/cden.spad )

@
\subsection{clifford.spad \cite{1}}
<<clifford.spad (SPAD from IN)>>=
${OUTSRC}/clifford.spad: ${IN}/clifford.spad.pamphlet
	@ echo 832 making ${OUTSRC}/clifford.spad from ${IN}/clifford.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/clifford.spad.pamphlet >clifford.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CLIF.o (O from NRLIB)>>=
${OUT}/CLIF.o: ${MID}/CLIF.NRLIB
	@ echo 833-13 making ${OUT}/CLIF.o from ${MID}/CLIF.NRLIB
	@ cp ${MID}/CLIF.NRLIB/code.o ${OUT}/CLIF.o

@
<<CLIF.NRLIB (NRLIB from MID)>>=
${MID}/CLIF.NRLIB: ${MID}/CLIF.spad
	@ echo 834 making ${MID}/CLIF.NRLIB from ${MID}/CLIF.spad
	@ (cd ${MID} ; 	echo ')co CLIF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CLIF.spad (SPAD from IN)>>=
${MID}/CLIF.spad: ${IN}/clifford.spad.pamphlet
	@ echo 835 making ${MID}/CLIF.spad from ${IN}/clifford.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CLIF.NRLIB ; \
	${TANGLE} -R"domain CLIF CliffordAlgebra" ${IN}/clifford.spad.pamphlet >CLIF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<QFORM.o (O from NRLIB)>>=
${OUT}/QFORM.o: ${MID}/QFORM.NRLIB
	@ echo 836-10 making ${OUT}/QFORM.o from ${MID}/QFORM.NRLIB
	@ cp ${MID}/QFORM.NRLIB/code.o ${OUT}/QFORM.o

@
<<QFORM.NRLIB (NRLIB from MID)>>=
${MID}/QFORM.NRLIB: ${MID}/QFORM.spad
	@ echo 837 making ${MID}/QFORM.NRLIB from ${MID}/QFORM.spad
	@ (cd ${MID} ; 	echo ')co QFORM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<QFORM.spad (SPAD from IN)>>=
${MID}/QFORM.spad: ${IN}/clifford.spad.pamphlet
	@ echo 838 making ${MID}/QFORM.spad from ${IN}/clifford.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf QFORM.NRLIB ; \
	${TANGLE} -R"domain QFORM QuadraticForm" ${IN}/clifford.spad.pamphlet >QFORM.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<clifford.spad.dvi (DOC from IN)>>=
${DOC}/clifford.spad.dvi: ${IN}/clifford.spad.pamphlet ${DOC}/axiom.sty
	@ echo 839 making ${DOC}/clifford.spad.dvi from ${IN}/clifford.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/clifford.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} clifford.spad ; \
	rm -f ${DOC}/clifford.spad.pamphlet ; \
	rm -f ${DOC}/clifford.spad.tex ; \
	rm -f ${DOC}/clifford.spad )

@
\subsection{clip.spad \cite{1}}
<<clip.spad (SPAD from IN)>>=
${OUTSRC}/clip.spad: ${IN}/clip.spad.pamphlet
	@ echo 840 making ${OUTSRC}/clip.spad from ${IN}/clip.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/clip.spad.pamphlet >clip.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CLIP.o (O from NRLIB)>>=
${OUT}/CLIP.o: ${MID}/CLIP.NRLIB
	@ echo 841-13 making ${OUT}/CLIP.o from ${MID}/CLIP.NRLIB
	@ cp ${MID}/CLIP.NRLIB/code.o ${OUT}/CLIP.o

@
<<CLIP.NRLIB (NRLIB from MID)>>=
${MID}/CLIP.NRLIB: ${MID}/CLIP.spad
	@ echo 842 making ${MID}/CLIP.NRLIB from ${MID}/CLIP.spad
	@ (cd ${MID} ; 	echo ')co CLIP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CLIP.spad (SPAD from IN)>>=
${MID}/CLIP.spad: ${IN}/clip.spad.pamphlet
	@ echo 843 making ${MID}/CLIP.spad from ${IN}/clip.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CLIP.NRLIB ; \
	${TANGLE} -R"package CLIP TwoDimensionalPlotClipping" ${IN}/clip.spad.pamphlet >CLIP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<clip.spad.dvi (DOC from IN)>>=
${DOC}/clip.spad.dvi: ${IN}/clip.spad.pamphlet ${DOC}/axiom.sty
	@ echo 844 making ${DOC}/clip.spad.dvi from ${IN}/clip.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/clip.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} clip.spad ; \
	rm -f ${DOC}/clip.spad.pamphlet ; \
	rm -f ${DOC}/clip.spad.tex ; \
	rm -f ${DOC}/clip.spad )

@
\subsection{cmplxrt.spad \cite{1}}
<<cmplxrt.spad (SPAD from IN)>>=
${OUTSRC}/cmplxrt.spad: ${IN}/cmplxrt.spad.pamphlet
	@ echo 845 making ${OUTSRC}/cmplxrt.spad from ${IN}/cmplxrt.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/cmplxrt.spad.pamphlet >cmplxrt.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CMPLXRT.o (O from NRLIB)>>=
${OUT}/CMPLXRT.o: ${MID}/CMPLXRT.NRLIB
	@ echo 846-20 making ${OUT}/CMPLXRT.o from ${MID}/CMPLXRT.NRLIB
	@ cp ${MID}/CMPLXRT.NRLIB/code.o ${OUT}/CMPLXRT.o

@
<<CMPLXRT.NRLIB (NRLIB from MID)>>=
${MID}/CMPLXRT.NRLIB: ${MID}/CMPLXRT.spad
	@ echo 847 making ${MID}/CMPLXRT.NRLIB from ${MID}/CMPLXRT.spad
	@ (cd ${MID} ; 	echo ')co CMPLXRT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CMPLXRT.spad (SPAD from IN)>>=
${MID}/CMPLXRT.spad: ${IN}/cmplxrt.spad.pamphlet
	@ echo 848 making ${MID}/CMPLXRT.spad from ${IN}/cmplxrt.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CMPLXRT.NRLIB ; \
	${TANGLE} -R"package CMPLXRT ComplexRootPackage" ${IN}/cmplxrt.spad.pamphlet >CMPLXRT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<cmplxrt.spad.dvi (DOC from IN)>>=
${DOC}/cmplxrt.spad.dvi: ${IN}/cmplxrt.spad.pamphlet ${DOC}/axiom.sty
	@ echo 849 making ${DOC}/cmplxrt.spad.dvi from ${IN}/cmplxrt.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/cmplxrt.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} cmplxrt.spad ; \
	rm -f ${DOC}/cmplxrt.spad.pamphlet ; \
	rm -f ${DOC}/cmplxrt.spad.tex ; \
	rm -f ${DOC}/cmplxrt.spad )

@
\subsection{coerce.spad \cite{1}}
<<coerce.spad (SPAD from IN)>>=
${OUTSRC}/coerce.spad: ${IN}/coerce.spad.pamphlet
	@ echo 850 making ${OUTSRC}/coerce.spad from ${IN}/coerce.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/coerce.spad.pamphlet >coerce.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<KOERCE.o (O from NRLIB)>>=
${OUT}/KOERCE.o: ${MID}/KOERCE.NRLIB
	@ echo 851-0 making ${OUT}/KOERCE.o from ${MID}/KOERCE.NRLIB
	@ cp ${MID}/KOERCE.NRLIB/code.o ${OUT}/KOERCE.o

@
<<KOERCE.NRLIB (NRLIB from MID)>>=
${MID}/KOERCE.NRLIB: ${MID}/KOERCE.spad
	@ echo 852 making ${MID}/KOERCE.NRLIB from ${MID}/KOERCE.spad
	@(cd ${MID} ; echo ')co KOERCE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<KOERCE.spad (SPAD from IN)>>=
${MID}/KOERCE.spad: ${IN}/coerce.spad.pamphlet
	@ echo 853 making ${MID}/KOERCE.spad from ${IN}/coerce.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf KOERCE.NRLIB ; \
	${TANGLE} -R"category KOERCE CoercibleTo" ${IN}/coerce.spad.pamphlet >KOERCE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<KONVERT.o (O from NRLIB)>>=
${OUT}/KONVERT.o: ${MID}/KONVERT.NRLIB
	@ echo 854-0 making ${OUT}/KONVERT.o from ${MID}/KONVERT.NRLIB
	@ cp ${MID}/KONVERT.NRLIB/code.o ${OUT}/KONVERT.o

@
<<KONVERT.NRLIB (NRLIB from MID)>>=
${MID}/KONVERT.NRLIB: ${MID}/KONVERT.spad
	@ echo 855 making ${MID}/KONVERT.NRLIB from ${MID}/KONVERT.spad
	@ (cd ${MID} ; 	echo ')co KONVERT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<KONVERT.spad (SPAD from IN)>>=
${MID}/KONVERT.spad: ${IN}/coerce.spad.pamphlet
	@ echo 856 making ${MID}/KONVERT.spad from ${IN}/coerce.spad.pamphlet
	@(cd ${MID} ; \
	${TANGLE} -R"category KONVERT ConvertibleTo" ${IN}/coerce.spad.pamphlet >KONVERT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RETRACT-.o (O from NRLIB)>>=
${OUT}/RETRACT-.o: ${MID}/RETRACT.NRLIB
	@ echo 857-1 making ${OUT}/RETRACT-.o from ${MID}/RETRACT-.NRLIB
	@ cp ${MID}/RETRACT-.NRLIB/code.o ${OUT}/RETRACT-.o

@
<<RETRACT-.NRLIB (NRLIB from MID)>>=
${MID}/RETRACT-.NRLIB: ${MID}/RETRACT.spad 
	@ echo 858 making ${MID}/RETRACT-.NRLIB from ${MID}/RETRACT.spad
	@ (cd ${MID} ; 	echo ')co RETRACT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RETRACT.o (O from NRLIB)>>=
${OUT}/RETRACT.o: ${MID}/RETRACT.NRLIB
	@ echo 859-1 making ${OUT}/RETRACT.o from ${MID}/RETRACT.NRLIB
	@ cp ${MID}/RETRACT.NRLIB/code.o ${OUT}/RETRACT.o

@
<<RETRACT.NRLIB (NRLIB from MID)>>=
${MID}/RETRACT.NRLIB: ${MID}/RETRACT.spad
	@ echo 860 making ${MID}/RETRACT.NRLIB from ${MID}/RETRACT.spad
	@ (cd ${MID} ; 	echo ')co RETRACT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RETRACT.spad (SPAD from IN)>>=
${MID}/RETRACT.spad: ${IN}/coerce.spad.pamphlet
	@ echo 861 making ${MID}/RETRACT.spad from ${IN}/coerce.spad.pamphlet
	@(cd ${MID} ; \
	${TANGLE} -R"category RETRACT RetractableTo" ${IN}/coerce.spad.pamphlet >RETRACT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TYPE.o (O from NRLIB)>>=
${OUT}/TYPE.o: ${MID}/TYPE.NRLIB
	@ echo 862-0 making ${OUT}/TYPE.o from ${MID}/TYPE.NRLIB
	@ cp ${MID}/TYPE.NRLIB/code.o ${OUT}/TYPE.o

@
<<TYPE.NRLIB (NRLIB from MID)>>=
${MID}/TYPE.NRLIB: ${MID}/TYPE.spad
	@ echo 863 making ${MID}/TYPE.NRLIB from ${MID}/TYPE.spad
	@ (cd ${MID} ; 	echo ')co TYPE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TYPE.spad (SPAD from IN)>>=
${MID}/TYPE.spad: ${IN}/coerce.spad.pamphlet
	@ echo 864 making ${MID}/TYPE.spad from ${IN}/coerce.spad.pamphlet
	@(cd ${MID} ; \
	${TANGLE} -R"category TYPE Type" ${IN}/coerce.spad.pamphlet >TYPE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<coerce.spad.dvi (DOC from IN)>>=
${DOC}/coerce.spad.dvi: ${IN}/coerce.spad.pamphlet ${DOC}/axiom.sty
	@ echo 865 making ${DOC}/coerce.spad.dvi from ${IN}/coerce.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/coerce.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} coerce.spad ; \
	rm -f ${DOC}/coerce.spad.pamphlet ; \
	rm -f ${DOC}/coerce.spad.tex ; \
	rm -f ${DOC}/coerce.spad )

@
\subsection{color.spad \cite{1}}
<<color.spad (SPAD from IN)>>=
${OUTSRC}/color.spad: ${IN}/color.spad.pamphlet
	@ echo 866 making ${OUTSRC}/color.spad from ${IN}/color.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/color.spad.pamphlet >color.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COLOR.o (O from NRLIB)>>=
${OUT}/COLOR.o: ${MID}/COLOR.NRLIB
	@ echo 867-4 making ${OUT}/COLOR.o from ${MID}/COLOR.NRLIB
	@ cp ${MID}/COLOR.NRLIB/code.o ${OUT}/COLOR.o

@
<<COLOR.NRLIB (NRLIB from MID)>>=
${MID}/COLOR.NRLIB: ${MID}/COLOR.spad
	@ echo 868 making ${MID}/COLOR.NRLIB from ${MID}/COLOR.spad
	@ (cd ${MID} ; 	echo ')co COLOR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COLOR.spad (SPAD from IN)>>=
${MID}/COLOR.spad: ${IN}/color.spad.pamphlet
	@ echo 869 making ${MID}/COLOR.spad from ${IN}/color.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf COLOR.NRLIB ; \
	${TANGLE} -R"domain COLOR Color" ${IN}/color.spad.pamphlet >COLOR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PALETTE.o (O from NRLIB)>>=
${OUT}/PALETTE.o: ${MID}/PALETTE.NRLIB
	@ echo 870-4 making ${OUT}/PALETTE.o from ${MID}/PALETTE.NRLIB
	@ cp ${MID}/PALETTE.NRLIB/code.o ${OUT}/PALETTE.o

@
<<PALETTE.NRLIB (NRLIB from MID)>>=
${MID}/PALETTE.NRLIB: ${MID}/PALETTE.spad
	@ echo 871 making ${MID}/PALETTE.NRLIB from ${MID}/PALETTE.spad
	@ (cd ${MID} ; 	echo ')co PALETTE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PALETTE.spad (SPAD from IN)>>=
${MID}/PALETTE.spad: ${IN}/color.spad.pamphlet
	@ echo 872 making ${MID}/PALETTE.spad from ${IN}/color.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PALETTE.NRLIB ; \
	${TANGLE} -R"domain PALETTE Palette" ${IN}/color.spad.pamphlet >PALETTE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<color.spad.dvi (DOC from IN)>>=
${DOC}/color.spad.dvi: ${IN}/color.spad.pamphlet ${DOC}/axiom.sty
	@ echo 873 making ${DOC}/color.spad.dvi from ${IN}/color.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/color.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} color.spad ; \
	rm -f ${DOC}/color.spad.pamphlet ; \
	rm -f ${DOC}/color.spad.tex ; \
	rm -f ${DOC}/color.spad )

@
\subsection{combfunc.spad \cite{1}}
<<combfunc.spad (SPAD from IN)>>=
${OUTSRC}/combfunc.spad: ${IN}/combfunc.spad.pamphlet
	@ echo 874 making ${OUTSRC}/combfunc.spad from ${IN}/combfunc.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/combfunc.spad.pamphlet >combfunc.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COMBF.o (O from NRLIB)>>=
${OUT}/COMBF.o: ${MID}/COMBF.NRLIB
	@ echo 875-22 making ${OUT}/COMBF.o from ${MID}/COMBF.NRLIB
	@ cp ${MID}/COMBF.NRLIB/code.o ${OUT}/COMBF.o

@
<<COMBF.NRLIB (NRLIB from MID)>>=
${MID}/COMBF.NRLIB: ${MID}/COMBF.spad
	@ echo 876 making ${MID}/COMBF.NRLIB from ${MID}/COMBF.spad
	@ (cd ${MID} ; 	echo ')co COMBF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COMBF.spad (SPAD from IN)>>=
${MID}/COMBF.spad: ${IN}/combfunc.spad.pamphlet
	@ echo 877 making ${MID}/COMBF.spad from ${IN}/combfunc.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf COMBF.NRLIB ; \
	${TANGLE} -R"package COMBF CombinatorialFunction" ${IN}/combfunc.spad.pamphlet >COMBF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COMBOPC.o (O from NRLIB)>>=
${OUT}/COMBOPC.o: ${MID}/COMBOPC.NRLIB
	@ echo 878-1 making ${OUT}/COMBOPC.o from ${MID}/COMBOPC.NRLIB
	@ cp ${MID}/COMBOPC.NRLIB/code.o ${OUT}/COMBOPC.o

@
<<COMBOPC.NRLIB (NRLIB from MID)>>=
${MID}/COMBOPC.NRLIB: ${MID}/COMBOPC.spad
	@ echo 879 making ${MID}/COMBOPC.NRLIB from ${MID}/COMBOPC.spad
	@ (cd ${MID} ; 	echo ')co COMBOPC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COMBOPC.spad (SPAD from IN)>>=
${MID}/COMBOPC.spad: ${IN}/combfunc.spad.pamphlet
	@ echo 880 making ${MID}/COMBOPC.spad from ${IN}/combfunc.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf COMBOPC.NRLIB ; \
	${TANGLE} -R"category COMBOPC CombinatorialOpsCategory" ${IN}/combfunc.spad.pamphlet >COMBOPC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FSPECF.o (O from NRLIB)>>=
${OUT}/FSPECF.o: ${MID}/FSPECF.NRLIB
	@ echo 881-20 making ${OUT}/FSPECF.o from ${MID}/FSPECF.NRLIB
	@ cp ${MID}/FSPECF.NRLIB/code.o ${OUT}/FSPECF.o

@
<<FSPECF.NRLIB (NRLIB from MID)>>=
${MID}/FSPECF.NRLIB: ${MID}/FSPECF.spad
	@ echo 882 making ${MID}/FSPECF.NRLIB from ${MID}/FSPECF.spad
	@ (cd ${MID} ; 	echo ')co FSPECF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FSPECF.spad (SPAD from IN)>>=
${MID}/FSPECF.spad: ${IN}/combfunc.spad.pamphlet
	@ echo 883 making ${MID}/FSPECF.spad from ${IN}/combfunc.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FSPECF.NRLIB ; \
	${TANGLE} -R"package FSPECF FunctionalSpecialFunction" ${IN}/combfunc.spad.pamphlet >FSPECF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SUMFS.o (O from NRLIB)>>=
${OUT}/SUMFS.o: ${MID}/SUMFS.NRLIB
	@ echo 884-20 making ${OUT}/SUMFS.o from ${MID}/SUMFS.NRLIB
	@ cp ${MID}/SUMFS.NRLIB/code.o ${OUT}/SUMFS.o

@
<<SUMFS.NRLIB (NRLIB from MID)>>=
${MID}/SUMFS.NRLIB: ${MID}/SUMFS.spad
	@ echo 885 making ${MID}/SUMFS.NRLIB from ${MID}/SUMFS.spad
	@ (cd ${MID} ; 	echo ')co SUMFS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SUMFS.spad (SPAD from IN)>>=
${MID}/SUMFS.spad: ${IN}/combfunc.spad.pamphlet
	@ echo 886 making ${MID}/SUMFS.spad from ${IN}/combfunc.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SUMFS.NRLIB ; \
	${TANGLE} -R"package SUMFS FunctionSpaceSum" ${IN}/combfunc.spad.pamphlet >SUMFS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<combfunc.spad.dvi (DOC from IN)>>=
${DOC}/combfunc.spad.dvi: ${IN}/combfunc.spad.pamphlet ${DOC}/axiom.sty
	@ echo 887 making ${DOC}/combfunc.spad.dvi from ${IN}/combfunc.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/combfunc.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} combfunc.spad ; \
	rm -f ${DOC}/combfunc.spad.pamphlet ; \
	rm -f ${DOC}/combfunc.spad.tex ; \
	rm -f ${DOC}/combfunc.spad )

@
\subsection{combinat.spad \cite{1}}
<<combinat.spad (SPAD from IN)>>=
${OUTSRC}/combinat.spad: ${IN}/combinat.spad.pamphlet
	@ echo 888 making ${OUTSRC}/combinat.spad from ${IN}/combinat.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/combinat.spad.pamphlet >combinat.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COMBINAT.o (O from NRLIB)>>=
${OUT}/COMBINAT.o: ${MID}/COMBINAT.NRLIB
	@ echo 889-11 making ${OUT}/COMBINAT.o from ${MID}/COMBINAT.NRLIB
	@ cp ${MID}/COMBINAT.NRLIB/code.o ${OUT}/COMBINAT.o

@
<<COMBINAT.NRLIB (NRLIB from MID)>>=
${MID}/COMBINAT.NRLIB: ${MID}/COMBINAT.spad
	@ echo 890 making ${MID}/COMBINAT.NRLIB from ${MID}/COMBINAT.spad
	@ (cd ${MID} ; 	echo ')co COMBINAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COMBINAT.spad (SPAD from IN)>>=
${MID}/COMBINAT.spad: ${IN}/combinat.spad.pamphlet
	@ echo 891 making ${MID}/COMBINAT.spad from ${IN}/combinat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf COMBINAT.NRLIB ; \
	${TANGLE} -R"package COMBINAT IntegerCombinatoricFunctions" ${IN}/combinat.spad.pamphlet >COMBINAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<combinat.spad.dvi (DOC from IN)>>=
${DOC}/combinat.spad.dvi: ${IN}/combinat.spad.pamphlet ${DOC}/axiom.sty
	@ echo 892 making ${DOC}/combinat.spad.dvi from ${IN}/combinat.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/combinat.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} combinat.spad ; \
	rm -f ${DOC}/combinat.spad.pamphlet ; \
	rm -f ${DOC}/combinat.spad.tex ; \
	rm -f ${DOC}/combinat.spad )

@
\subsection{complet.spad \cite{1}}
<<complet.spad (SPAD from IN)>>=
${OUTSRC}/complet.spad: ${IN}/complet.spad.pamphlet
	@ echo 893 making ${OUTSRC}/complet.spad from ${IN}/complet.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/complet.spad.pamphlet >complet.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INFINITY.o (O from NRLIB)>>=
${OUT}/INFINITY.o: ${MID}/INFINITY.NRLIB
	@ echo 894-9 making ${OUT}/INFINITY.o from ${MID}/INFINITY.NRLIB
	@ cp ${MID}/INFINITY.NRLIB/code.o ${OUT}/INFINITY.o

@
<<INFINITY.NRLIB (NRLIB from MID)>>=
${MID}/INFINITY.NRLIB: ${MID}/INFINITY.spad
	@ echo 895 making ${MID}/INFINITY.NRLIB from ${MID}/INFINITY.spad
	@ (cd ${MID} ; 	echo ')co INFINITY.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INFINITY.spad (SPAD from IN)>>=
${MID}/INFINITY.spad: ${IN}/complet.spad.pamphlet
	@ echo 896 making ${MID}/INFINITY.spad from ${IN}/complet.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INFINITY.NRLIB ; \
	${TANGLE} -R"package INFINITY Infinity" ${IN}/complet.spad.pamphlet >INFINITY.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ONECOMP.o (O from NRLIB)>>=
${OUT}/ONECOMP.o: ${MID}/ONECOMP.NRLIB
	@ echo 897-10 making ${OUT}/ONECOMP.o from ${MID}/ONECOMP.NRLIB
	@ cp ${MID}/ONECOMP.NRLIB/code.o ${OUT}/ONECOMP.o

@
<<ONECOMP.NRLIB (NRLIB from MID)>>=
${MID}/ONECOMP.NRLIB: ${MID}/ONECOMP.spad
	@ echo 898 making ${MID}/ONECOMP.NRLIB from ${MID}/ONECOMP.spad
	@ (cd ${MID} ; 	echo ')co ONECOMP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ONECOMP.spad (SPAD from IN)>>=
${MID}/ONECOMP.spad: ${IN}/complet.spad.pamphlet
	@ echo 899 making ${MID}/ONECOMP.spad from ${IN}/complet.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ONECOMP.NRLIB ; \
	${TANGLE} -R"domain ONECOMP OnePointCompletion" ${IN}/complet.spad.pamphlet >ONECOMP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ONECOMP2.o (O from NRLIB)>>=
${OUT}/ONECOMP2.o: ${MID}/ONECOMP2.NRLIB
	@ echo 900-4 making ${OUT}/ONECOMP2.o from ${MID}/ONECOMP2.NRLIB
	@ cp ${MID}/ONECOMP2.NRLIB/code.o ${OUT}/ONECOMP2.o

@
<<ONECOMP2.NRLIB (NRLIB from MID)>>=
${MID}/ONECOMP2.NRLIB: ${MID}/ONECOMP2.spad
	@ echo 901 making ${MID}/ONECOMP2.NRLIB from ${MID}/ONECOMP2.spad
	@ (cd ${MID} ; 	echo ')co ONECOMP2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ONECOMP2.spad (SPAD from IN)>>=
${MID}/ONECOMP2.spad: ${IN}/complet.spad.pamphlet
	@ echo 902 making ${MID}/ONECOMP2.spad from ${IN}/complet.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ONECOMP2.NRLIB ; \
	${TANGLE} -R"package ONECOMP2 OnePointCompletionFunctions2" ${IN}/complet.spad.pamphlet >ONECOMP2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ORDCOMP.o (O from NRLIB)>>=
${OUT}/ORDCOMP.o: ${MID}/ORDCOMP.NRLIB
	@ echo 903-10 making ${OUT}/ORDCOMP.o from ${MID}/ORDCOMP.NRLIB
	@ cp ${MID}/ORDCOMP.NRLIB/code.o ${OUT}/ORDCOMP.o

@
<<ORDCOMP.NRLIB (NRLIB from MID)>>=
${MID}/ORDCOMP.NRLIB: ${MID}/ORDCOMP.spad
	@ echo 904 making ${MID}/ORDCOMP.NRLIB from ${MID}/ORDCOMP.spad
	@ (cd ${MID} ; 	echo ')co ORDCOMP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ORDCOMP.spad (SPAD from IN)>>=
${MID}/ORDCOMP.spad: ${IN}/complet.spad.pamphlet
	@ echo 905 making ${MID}/ORDCOMP.spad from ${IN}/complet.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ORDCOMP.NRLIB ; \
	${TANGLE} -R"domain ORDCOMP OrderedCompletion" ${IN}/complet.spad.pamphlet >ORDCOMP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ORDCOMP2.o (O from NRLIB)>>=
${OUT}/ORDCOMP2.o: ${MID}/ORDCOMP2.NRLIB
	@ echo 906-8 making ${OUT}/ORDCOMP2.o from ${MID}/ORDCOMP2.NRLIB
	@ cp ${MID}/ORDCOMP2.NRLIB/code.o ${OUT}/ORDCOMP2.o

@
<<ORDCOMP2.NRLIB (NRLIB from MID)>>=
${MID}/ORDCOMP2.NRLIB: ${MID}/ORDCOMP2.spad
	@ echo 907 making ${MID}/ORDCOMP2.NRLIB from ${MID}/ORDCOMP2.spad
	@ (cd ${MID} ; 	echo ')co ORDCOMP2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ORDCOMP2.spad (SPAD from IN)>>=
${MID}/ORDCOMP2.spad: ${IN}/complet.spad.pamphlet
	@ echo 908 making ${MID}/ORDCOMP2.spad from ${IN}/complet.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ORDCOMP2.NRLIB ; \
	${TANGLE} -R"package ORDCOMP2 OrderedCompletionFunctions2" ${IN}/complet.spad.pamphlet >ORDCOMP2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<complet.spad.dvi (DOC from IN)>>=
${DOC}/complet.spad.dvi: ${IN}/complet.spad.pamphlet ${DOC}/axiom.sty
	@ echo 909 making ${DOC}/complet.spad.dvi from ${IN}/complet.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/complet.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} complet.spad ; \
	rm -f ${DOC}/complet.spad.pamphlet ; \
	rm -f ${DOC}/complet.spad.tex ; \
	rm -f ${DOC}/complet.spad )

@
\subsection{constant.spad \cite{1}}
<<constant.spad (SPAD from IN)>>=
${OUTSRC}/constant.spad: ${IN}/constant.spad.pamphlet
	@ echo 910 making ${OUTSRC}/constant.spad from ${IN}/constant.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/constant.spad.pamphlet >constant.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<AN.o (O from NRLIB)>>=
${OUT}/AN.o: ${MID}/AN.NRLIB
	@ echo 911-20 making ${OUT}/AN.o from ${MID}/AN.NRLIB
	@ cp ${MID}/AN.NRLIB/code.o ${OUT}/AN.o

@
<<AN.NRLIB (NRLIB from MID)>>=
${MID}/AN.NRLIB: ${MID}/AN.spad
	@ echo 912 making ${MID}/AN.NRLIB from ${MID}/AN.spad
	@ (cd ${MID} ; 	echo ')co AN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<AN.spad (SPAD from IN)>>=
${MID}/AN.spad: ${IN}/constant.spad.pamphlet
	@ echo 913 making ${MID}/AN.spad from ${IN}/constant.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf AN.NRLIB ; \
	${TANGLE} -R"domain AN AlgebraicNumber" ${IN}/constant.spad.pamphlet >AN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IAN.o (O from NRLIB)>>=
${OUT}/IAN.o: ${MID}/IAN.NRLIB
	@ echo 914-20 making ${OUT}/IAN.o from ${MID}/IAN.NRLIB
	@ cp ${MID}/IAN.NRLIB/code.o ${OUT}/IAN.o

@
<<IAN.NRLIB (NRLIB from MID)>>=
${MID}/IAN.NRLIB: ${MID}/IAN.spad
	@ echo 915 making ${MID}/IAN.NRLIB from ${MID}/IAN.spad
	@ (cd ${MID} ; 	echo ')co IAN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IAN.spad (SPAD from IN)>>=
${MID}/IAN.spad: ${IN}/constant.spad.pamphlet
	@ echo 916 making ${MID}/IAN.spad from ${IN}/constant.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IAN.NRLIB ; \
	${TANGLE} -R"domain IAN InnerAlgebraicNumber" ${IN}/constant.spad.pamphlet >IAN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<constant.spad.dvi (DOC from IN)>>=
${DOC}/constant.spad.dvi: ${IN}/constant.spad.pamphlet ${DOC}/axiom.sty
	@ echo 917 making ${DOC}/constant.spad.dvi from ${IN}/constant.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/constant.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} constant.spad ; \
	rm -f ${DOC}/constant.spad.pamphlet ; \
	rm -f ${DOC}/constant.spad.tex ; \
	rm -f ${DOC}/constant.spad )

@
\subsection{contfrac.spad \cite{1}}
<<contfrac.spad (SPAD from IN)>>=
${OUTSRC}/contfrac.spad: ${IN}/contfrac.spad.pamphlet
	@ echo 918 making ${OUTSRC}/contfrac.spad from ${IN}/contfrac.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/contfrac.spad.pamphlet >contfrac.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CONTFRAC.o (O from NRLIB)>>=
${OUT}/CONTFRAC.o: ${MID}/CONTFRAC.NRLIB
	@ echo 919-14 making ${OUT}/CONTFRAC.o from ${MID}/CONTFRAC.NRLIB
	@ cp ${MID}/CONTFRAC.NRLIB/code.o ${OUT}/CONTFRAC.o

@
<<CONTFRAC.NRLIB (NRLIB from MID)>>=
${MID}/CONTFRAC.NRLIB: ${MID}/CONTFRAC.spad
	@ echo 920 making ${MID}/CONTFRAC.NRLIB from ${MID}/CONTFRAC.spad
	@ (cd ${MID} ; 	echo ')co CONTFRAC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CONTFRAC.spad (SPAD from IN)>>=
${MID}/CONTFRAC.spad: ${IN}/contfrac.spad.pamphlet
	@ echo 921 making ${MID}/CONTFRAC.spad from ${IN}/contfrac.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CONTFRAC.NRLIB ; \
	${TANGLE} -R"domain CONTFRAC ContinuedFraction" ${IN}/contfrac.spad.pamphlet >CONTFRAC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NCNTFRAC.o (O from NRLIB)>>=
${OUT}/NCNTFRAC.o: ${MID}/NCNTFRAC.NRLIB
	@ echo 922-10 making ${OUT}/NCNTFRAC.o from ${MID}/NCNTFRAC.NRLIB
	@ cp ${MID}/NCNTFRAC.NRLIB/code.o ${OUT}/NCNTFRAC.o

@
<<NCNTFRAC.NRLIB (NRLIB from MID)>>=
${MID}/NCNTFRAC.NRLIB: ${MID}/NCNTFRAC.spad
	@ echo 923 making ${MID}/NCNTFRAC.NRLIB from ${MID}/NCNTFRAC.spad
	@ (cd ${MID} ; 	echo ')co NCNTFRAC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NCNTFRAC.spad (SPAD from IN)>>=
${MID}/NCNTFRAC.spad: ${IN}/contfrac.spad.pamphlet
	@ echo 924 making ${MID}/NCNTFRAC.spad from ${IN}/contfrac.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NCNTFRAC.NRLIB ; \
	${TANGLE} -R"package NCNTFRAC NumericContinuedFraction" ${IN}/contfrac.spad.pamphlet >NCNTFRAC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<contfrac.spad.dvi (DOC from IN)>>=
${DOC}/contfrac.spad.dvi: ${IN}/contfrac.spad.pamphlet ${DOC}/axiom.sty
	@ echo 925 making ${DOC}/contfrac.spad.dvi from ${IN}/contfrac.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/contfrac.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} contfrac.spad ; \
	rm -f ${DOC}/contfrac.spad.pamphlet ; \
	rm -f ${DOC}/contfrac.spad.tex ; \
	rm -f ${DOC}/contfrac.spad )

@
\subsection{cont.spad \cite{1}}
<<cont.spad (SPAD from IN)>>=
${OUTSRC}/cont.spad: ${IN}/cont.spad.pamphlet
	@ echo 926 making ${OUTSRC}/cont.spad from ${IN}/cont.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/cont.spad.pamphlet >cont.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ESCONT.o (O from NRLIB)>>=
${OUT}/ESCONT.o: ${MID}/ESCONT.NRLIB
	@ echo 927-21 making ${OUT}/ESCONT.o from ${MID}/ESCONT.NRLIB
	@ cp ${MID}/ESCONT.NRLIB/code.o ${OUT}/ESCONT.o

@
<<ESCONT.NRLIB (NRLIB from MID)>>=
${MID}/ESCONT.NRLIB: ${MID}/ESCONT.spad
	@ echo 928 making ${MID}/ESCONT.NRLIB from ${MID}/ESCONT.spad
	@ (cd ${MID} ; 	echo ')co ESCONT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ESCONT.spad (SPAD from IN)>>=
${MID}/ESCONT.spad: ${IN}/cont.spad.pamphlet
	@ echo 929 making ${MID}/ESCONT.spad from ${IN}/cont.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ESCONT.NRLIB ; \
	${TANGLE} -R"package ESCONT ExpertSystemContinuityPackage" ${IN}/cont.spad.pamphlet >ESCONT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ESCONT1.o (O from NRLIB)>>=
${OUT}/ESCONT1.o: ${MID}/ESCONT1.NRLIB
	@ echo 930-4 making ${OUT}/ESCONT1.o from ${MID}/ESCONT1.NRLIB
	@ cp ${MID}/ESCONT1.NRLIB/code.o ${OUT}/ESCONT1.o

@
<<ESCONT1.NRLIB (NRLIB from MID)>>=
${MID}/ESCONT1.NRLIB: ${MID}/ESCONT1.spad
	@ echo 931 making ${MID}/ESCONT1.NRLIB from ${MID}/ESCONT1.spad
	@ (cd ${MID} ; 	echo ')co ESCONT1.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ESCONT1.spad (SPAD from IN)>>=
${MID}/ESCONT1.spad: ${IN}/cont.spad.pamphlet
	@ echo 932 making ${MID}/ESCONT1.spad from ${IN}/cont.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ESCONT1.NRLIB ; \
	${TANGLE} -R"package ESCONT1 ExpertSystemContinuityPackage1" ${IN}/cont.spad.pamphlet >ESCONT1.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<cont.spad.dvi (DOC from IN)>>=
${DOC}/cont.spad.dvi: ${IN}/cont.spad.pamphlet ${DOC}/axiom.sty
	@ echo 933 making ${DOC}/cont.spad.dvi from ${IN}/cont.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/cont.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} cont.spad ; \
	rm -f ${DOC}/cont.spad.pamphlet ; \
	rm -f ${DOC}/cont.spad.tex ; \
	rm -f ${DOC}/cont.spad )

@
\subsection{coordsys.spad \cite{1}}
<<coordsys.spad (SPAD from IN)>>=
${OUTSRC}/coordsys.spad: ${IN}/coordsys.spad.pamphlet
	@ echo 934 making ${OUTSRC}/coordsys.spad from ${IN}/coordsys.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/coordsys.spad.pamphlet >coordsys.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COORDSYS.o (O from NRLIB)>>=
${OUT}/COORDSYS.o: ${MID}/COORDSYS.NRLIB
	@ echo 935-13 making ${OUT}/COORDSYS.o from ${MID}/COORDSYS.NRLIB
	@ cp ${MID}/COORDSYS.NRLIB/code.o ${OUT}/COORDSYS.o

@
<<COORDSYS.NRLIB (NRLIB from MID)>>=
${MID}/COORDSYS.NRLIB: ${MID}/COORDSYS.spad
	@ echo 936 making ${MID}/COORDSYS.NRLIB from ${MID}/COORDSYS.spad
	@ (cd ${MID} ; 	echo ')co COORDSYS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COORDSYS.spad (SPAD from IN)>>=
${MID}/COORDSYS.spad: ${IN}/coordsys.spad.pamphlet
	@ echo 937 making ${MID}/COORDSYS.spad from ${IN}/coordsys.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf COORDSYS.NRLIB ; \
	${TANGLE} -R"package COORDSYS CoordinateSystems" ${IN}/coordsys.spad.pamphlet >COORDSYS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<coordsys.spad.dvi (DOC from IN)>>=
${DOC}/coordsys.spad.dvi: ${IN}/coordsys.spad.pamphlet ${DOC}/axiom.sty
	@ echo 938 making ${DOC}/coordsys.spad.dvi from ${IN}/coordsys.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/coordsys.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} coordsys.spad ; \
	rm -f ${DOC}/coordsys.spad.pamphlet ; \
	rm -f ${DOC}/coordsys.spad.tex ; \
	rm -f ${DOC}/coordsys.spad )

@
\subsection{cra.spad \cite{1}}
<<cra.spad (SPAD from IN)>>=
${OUTSRC}/cra.spad: ${IN}/cra.spad.pamphlet
	@ echo 939 making ${OUTSRC}/cra.spad from ${IN}/cra.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/cra.spad.pamphlet >cra.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CRAPACK.o (O from NRLIB)>>=
${OUT}/CRAPACK.o: ${MID}/CRAPACK.NRLIB
	@ echo 940-10 making ${OUT}/CRAPACK.o from ${MID}/CRAPACK.NRLIB
	@ cp ${MID}/CRAPACK.NRLIB/code.o ${OUT}/CRAPACK.o

@
<<CRAPACK.NRLIB (NRLIB from MID)>>=
${MID}/CRAPACK.NRLIB: ${MID}/CRAPACK.spad
	@ echo 941 making ${MID}/CRAPACK.NRLIB from ${MID}/CRAPACK.spad
	@ (cd ${MID} ; 	echo ')co CRAPACK.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CRAPACK.spad (SPAD from IN)>>=
${MID}/CRAPACK.spad: ${IN}/cra.spad.pamphlet
	@ echo 942 making ${MID}/CRAPACK.spad from ${IN}/cra.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CRAPACK.NRLIB ; \
	${TANGLE} -R"package CRAPACK CRApackage" ${IN}/cra.spad.pamphlet >CRAPACK.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<cra.spad.dvi (DOC from IN)>>=
${DOC}/cra.spad.dvi: ${IN}/cra.spad.pamphlet ${DOC}/axiom.sty
	@ echo 943 making ${DOC}/cra.spad.dvi from ${IN}/cra.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/cra.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} cra.spad ; \
	rm -f ${DOC}/cra.spad.pamphlet ; \
	rm -f ${DOC}/cra.spad.tex ; \
	rm -f ${DOC}/cra.spad )

@
\subsection{crfp.spad \cite{1}}
<<crfp.spad (SPAD from IN)>>=
${OUTSRC}/crfp.spad: ${IN}/crfp.spad.pamphlet
	@ echo 944 making ${OUTSRC}/crfp.spad from ${IN}/crfp.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/crfp.spad.pamphlet >crfp.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CRFP.o (O from NRLIB)>>=
${OUT}/CRFP.o: ${MID}/CRFP.NRLIB
	@ echo 945-20 making ${OUT}/CRFP.o from ${MID}/CRFP.NRLIB
	@ cp ${MID}/CRFP.NRLIB/code.o ${OUT}/CRFP.o

@
<<CRFP.NRLIB (NRLIB from MID)>>=
${MID}/CRFP.NRLIB: ${MID}/CRFP.spad
	@ echo 946 making ${MID}/CRFP.NRLIB from ${MID}/CRFP.spad
	@ (cd ${MID} ; 	echo ')co CRFP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CRFP.spad (SPAD from IN)>>=
${MID}/CRFP.spad: ${IN}/crfp.spad.pamphlet
	@ echo 947 making ${MID}/CRFP.spad from ${IN}/crfp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CRFP.NRLIB ; \
	${TANGLE} -R"package CRFP ComplexRootFindingPackage" ${IN}/crfp.spad.pamphlet >CRFP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<crfp.spad.dvi (DOC from IN)>>=
${DOC}/crfp.spad.dvi: ${IN}/crfp.spad.pamphlet ${DOC}/axiom.sty
	@ echo 948 making ${DOC}/crfp.spad.dvi from ${IN}/crfp.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/crfp.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} crfp.spad ; \
	rm -f ${DOC}/crfp.spad.pamphlet ; \
	rm -f ${DOC}/crfp.spad.tex ; \
	rm -f ${DOC}/crfp.spad )

@
\subsection{curve.spad \cite{1}}
<<curve.spad (SPAD from IN)>>=
${OUTSRC}/curve.spad: ${IN}/curve.spad.pamphlet
	@ echo 949 making ${OUTSRC}/curve.spad from ${IN}/curve.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/curve.spad.pamphlet >curve.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ALGFF.o (O from NRLIB)>>=
${OUT}/ALGFF.o: ${MID}/ALGFF.NRLIB
	@ echo 950-20 making ${OUT}/ALGFF.o from ${MID}/ALGFF.NRLIB
	@ cp ${MID}/ALGFF.NRLIB/code.o ${OUT}/ALGFF.o

@
<<ALGFF.NRLIB (NRLIB from MID)>>=
${MID}/ALGFF.NRLIB: ${MID}/ALGFF.spad
	@ echo 951 making ${MID}/ALGFF.NRLIB from ${MID}/ALGFF.spad
	@ (cd ${MID} ; 	echo ')co ALGFF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ALGFF.spad (SPAD from IN)>>=
${MID}/ALGFF.spad: ${IN}/curve.spad.pamphlet
	@ echo 952 making ${MID}/ALGFF.spad from ${IN}/curve.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ALGFF.NRLIB ; \
	${TANGLE} -R"domain ALGFF AlgebraicFunctionField" ${IN}/curve.spad.pamphlet >ALGFF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CHVAR.o (O from NRLIB)>>=
${OUT}/CHVAR.o: ${MID}/CHVAR.NRLIB
	@ echo 953-14 making ${OUT}/CHVAR.o from ${MID}/CHVAR.NRLIB
	@ cp ${MID}/CHVAR.NRLIB/code.o ${OUT}/CHVAR.o

@
<<CHVAR.NRLIB (NRLIB from MID)>>=
${MID}/CHVAR.NRLIB: ${MID}/CHVAR.spad
	@ echo 954 making ${MID}/CHVAR.NRLIB from ${MID}/CHVAR.spad
	@ (cd ${MID} ; 	echo ')co CHVAR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CHVAR.spad (SPAD from IN)>>=
${MID}/CHVAR.spad: ${IN}/curve.spad.pamphlet
	@ echo 955 making ${MID}/CHVAR.spad from ${IN}/curve.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CHVAR.NRLIB ; \
	${TANGLE} -R"package CHVAR ChangeOfVariable" ${IN}/curve.spad.pamphlet >CHVAR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFCAT-.o (O from NRLIB)>>=
${OUT}/FFCAT-.o: ${MID}/FFCAT.NRLIB
	@ echo 956-19 making ${OUT}/FFCAT-.o from ${MID}/FFCAT-.NRLIB
	@ cp ${MID}/FFCAT-.NRLIB/code.o ${OUT}/FFCAT-.o

@
<<FFCAT-.NRLIB (NRLIB from MID)>>=
${MID}/FFCAT-.NRLIB: ${MID}/FFCAT.spad 
	@ echo 957 making ${MID}/FFCAT-.NRLIB from ${MID}/FFCAT.spad
	@ (cd ${MID} ; 	echo ')co FFCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFCAT.o (O from NRLIB)>>=
${OUT}/FFCAT.o: ${MID}/FFCAT.NRLIB
	@ echo 958-19 making ${OUT}/FFCAT.o from ${MID}/FFCAT.NRLIB
	@ cp ${MID}/FFCAT.NRLIB/code.o ${OUT}/FFCAT.o

@
<<FFCAT.NRLIB (NRLIB from MID)>>=
${MID}/FFCAT.NRLIB: ${MID}/FFCAT.spad
	@ echo 959 making ${MID}/FFCAT.NRLIB from ${MID}/FFCAT.spad
	@ (cd ${MID} ; 	echo ')co FFCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFCAT.spad (SPAD from IN)>>=
${MID}/FFCAT.spad: ${IN}/curve.spad.pamphlet
	@ echo 960 making ${MID}/FFCAT.spad from ${IN}/curve.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FFCAT.NRLIB ; \
	${TANGLE} -R"category FFCAT FunctionFieldCategory" ${IN}/curve.spad.pamphlet >FFCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFCAT2.o (O from NRLIB)>>=
${OUT}/FFCAT2.o: ${MID}/FFCAT2.NRLIB
	@ echo 961-20 making ${OUT}/FFCAT2.o from ${MID}/FFCAT2.NRLIB
	@ cp ${MID}/FFCAT2.NRLIB/code.o ${OUT}/FFCAT2.o

@
<<FFCAT2.NRLIB (NRLIB from MID)>>=
${MID}/FFCAT2.NRLIB: ${MID}/FFCAT2.spad
	@ echo 962 making ${MID}/FFCAT2.NRLIB from ${MID}/FFCAT2.spad
	@ (cd ${MID} ; 	echo ')co FFCAT2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFCAT2.spad (SPAD from IN)>>=
${MID}/FFCAT2.spad: ${IN}/curve.spad.pamphlet
	@ echo 963 making ${MID}/FFCAT2.spad from ${IN}/curve.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FFCAT2.NRLIB ; \
	${TANGLE} -R"package FFCAT2 FunctionFieldCategoryFunctions2" ${IN}/curve.spad.pamphlet >FFCAT2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MMAP.o (O from NRLIB)>>=
${OUT}/MMAP.o: ${MID}/MMAP.NRLIB
	@ echo 964-14 making ${OUT}/MMAP.o from ${MID}/MMAP.NRLIB
	@ cp ${MID}/MMAP.NRLIB/code.o ${OUT}/MMAP.o

@
<<MMAP.NRLIB (NRLIB from MID)>>=
${MID}/MMAP.NRLIB: ${MID}/MMAP.spad
	@ echo 965 making ${MID}/MMAP.NRLIB from ${MID}/MMAP.spad
	@ (cd ${MID} ; 	echo ')co MMAP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MMAP.spad (SPAD from IN)>>=
${MID}/MMAP.spad: ${IN}/curve.spad.pamphlet
	@ echo 966 making ${MID}/MMAP.spad from ${IN}/curve.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MMAP.NRLIB ; \
	${TANGLE} -R"package MMAP MultipleMap" ${IN}/curve.spad.pamphlet >MMAP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RADFF.o (O from NRLIB)>>=
${OUT}/RADFF.o: ${MID}/RADFF.NRLIB
	@ echo 967-20 making ${OUT}/RADFF.o from ${MID}/RADFF.NRLIB
	@ cp ${MID}/RADFF.NRLIB/code.o ${OUT}/RADFF.o

@
<<RADFF.NRLIB (NRLIB from MID)>>=
${MID}/RADFF.NRLIB: ${MID}/RADFF.spad
	@ echo 968 making ${MID}/RADFF.NRLIB from ${MID}/RADFF.spad
	@ (cd ${MID} ; 	echo ')co RADFF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RADFF.spad (SPAD from IN)>>=
${MID}/RADFF.spad: ${IN}/curve.spad.pamphlet
	@ echo 969 making ${MID}/RADFF.spad from ${IN}/curve.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RADFF.NRLIB ; \
	${TANGLE} -R"domain RADFF RadicalFunctionField" ${IN}/curve.spad.pamphlet >RADFF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<curve.spad.dvi (DOC from IN)>>=
${DOC}/curve.spad.dvi: ${IN}/curve.spad.pamphlet ${DOC}/axiom.sty
	@ echo 970 making ${DOC}/curve.spad.dvi from ${IN}/curve.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/curve.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} curve.spad ; \
	rm -f ${DOC}/curve.spad.pamphlet ; \
	rm -f ${DOC}/curve.spad.tex ; \
	rm -f ${DOC}/curve.spad )

@
\subsection{cycles.spad \cite{1}}
<<cycles.spad (SPAD from IN)>>=
${OUTSRC}/cycles.spad: ${IN}/cycles.spad.pamphlet
	@ echo 971 making ${OUTSRC}/cycles.spad from ${IN}/cycles.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/cycles.spad.pamphlet >cycles.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CYCLES.o (O from NRLIB)>>=
${OUT}/CYCLES.o: ${MID}/CYCLES.NRLIB
	@ echo 972-14 making ${OUT}/CYCLES.o from ${MID}/CYCLES.NRLIB
	@ cp ${MID}/CYCLES.NRLIB/code.o ${OUT}/CYCLES.o

@
<<CYCLES.NRLIB (NRLIB from MID)>>=
${MID}/CYCLES.NRLIB: ${MID}/CYCLES.spad
	@ echo 973 making ${MID}/CYCLES.NRLIB from ${MID}/CYCLES.spad
	@ (cd ${MID} ; 	echo ')co CYCLES.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CYCLES.spad (SPAD from IN)>>=
${MID}/CYCLES.spad: ${IN}/cycles.spad.pamphlet
	@ echo 974 making ${MID}/CYCLES.spad from ${IN}/cycles.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CYCLES.NRLIB ; \
	${TANGLE} -R"package CYCLES CycleIndicators" ${IN}/cycles.spad.pamphlet >CYCLES.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EVALCYC.o (O from NRLIB)>>=
${OUT}/EVALCYC.o: ${MID}/EVALCYC.NRLIB
	@ echo 975-14 making ${OUT}/EVALCYC.o from ${MID}/EVALCYC.NRLIB
	@ cp ${MID}/EVALCYC.NRLIB/code.o ${OUT}/EVALCYC.o

@
<<EVALCYC.NRLIB (NRLIB from MID)>>=
${MID}/EVALCYC.NRLIB: ${MID}/EVALCYC.spad
	@ echo 976 making ${MID}/EVALCYC.NRLIB from ${MID}/EVALCYC.spad
	@ (cd ${MID} ; 	echo ')co EVALCYC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EVALCYC.spad (SPAD from IN)>>=
${MID}/EVALCYC.spad: ${IN}/cycles.spad.pamphlet
	@ echo 977 making ${MID}/EVALCYC.spad from ${IN}/cycles.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf EVALCYC.NRLIB ; \
	${TANGLE} -R"package EVALCYC EvaluateCycleIndicators" ${IN}/cycles.spad.pamphlet >EVALCYC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<cycles.spad.dvi (DOC from IN)>>=
${DOC}/cycles.spad.dvi: ${IN}/cycles.spad.pamphlet ${DOC}/axiom.sty
	@ echo 978 making ${DOC}/cycles.spad.dvi from ${IN}/cycles.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/cycles.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} cycles.spad ; \
	rm -f ${DOC}/cycles.spad.pamphlet ; \
	rm -f ${DOC}/cycles.spad.tex ; \
	rm -f ${DOC}/cycles.spad )

@
\subsection{cyclotom.spad \cite{1}}
<<cyclotom.spad (SPAD from IN)>>=
${OUTSRC}/cyclotom.spad: ${IN}/cyclotom.spad.pamphlet
	@ echo 979 making ${OUTSRC}/cyclotom.spad from ${IN}/cyclotom.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/cyclotom.spad.pamphlet >cyclotom.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CYCLOTOM.o (O from NRLIB)>>=
${OUT}/CYCLOTOM.o: ${MID}/CYCLOTOM.NRLIB
	@ echo 980-14 making ${OUT}/CYCLOTOM.o from ${MID}/CYCLOTOM.NRLIB
	@ cp ${MID}/CYCLOTOM.NRLIB/code.o ${OUT}/CYCLOTOM.o

@
<<CYCLOTOM.NRLIB (NRLIB from MID)>>=
${MID}/CYCLOTOM.NRLIB: ${MID}/CYCLOTOM.spad
	@ echo 981 making ${MID}/CYCLOTOM.NRLIB from ${MID}/CYCLOTOM.spad
	@ (cd ${MID} ; 	echo ')co CYCLOTOM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CYCLOTOM.spad (SPAD from IN)>>=
${MID}/CYCLOTOM.spad: ${IN}/cyclotom.spad.pamphlet
	@ echo 982 making ${MID}/CYCLOTOM.spad from ${IN}/cyclotom.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CYCLOTOM.NRLIB ; \
	${TANGLE} -R"package CYCLOTOM CyclotomicPolynomialPackage" ${IN}/cyclotom.spad.pamphlet >CYCLOTOM.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<cyclotom.spad.dvi (DOC from IN)>>=
${DOC}/cyclotom.spad.dvi: ${IN}/cyclotom.spad.pamphlet ${DOC}/axiom.sty
	@ echo 983 making ${DOC}/cyclotom.spad.dvi from ${IN}/cyclotom.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/cyclotom.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} cyclotom.spad ; \
	rm -f ${DOC}/cyclotom.spad.pamphlet ; \
	rm -f ${DOC}/cyclotom.spad.tex ; \
	rm -f ${DOC}/cyclotom.spad )

@
\subsection{d01agents.spad \cite{1}}
<<d01agents.spad (SPAD from IN)>>=
${OUTSRC}/d01agents.spad: ${IN}/d01agents.spad.pamphlet
	@ echo 984 making ${OUTSRC}/d01agents.spad from ${IN}/d01agents.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/d01agents.spad.pamphlet >d01agents.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D01AGNT.o (O from NRLIB)>>=
${OUT}/D01AGNT.o: ${MID}/D01AGNT.NRLIB
	@ echo 985-22 making ${OUT}/D01AGNT.o from ${MID}/D01AGNT.NRLIB
	@ cp ${MID}/D01AGNT.NRLIB/code.o ${OUT}/D01AGNT.o

@
<<D01AGNT.NRLIB (NRLIB from MID)>>=
${MID}/D01AGNT.NRLIB: ${MID}/D01AGNT.spad
	@ echo 986 making ${MID}/D01AGNT.NRLIB from ${MID}/D01AGNT.spad
	@ (cd ${MID} ; 	echo ')co D01AGNT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D01AGNT.spad (SPAD from IN)>>=
${MID}/D01AGNT.spad: ${IN}/d01agents.spad.pamphlet
	@ echo 987 making ${MID}/D01AGNT.spad from ${IN}/d01agents.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf D01AGNT.NRLIB ; \
	${TANGLE} -R"package D01AGNT d01AgentsPackage" ${IN}/d01agents.spad.pamphlet >D01AGNT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTFTBL.o (O from NRLIB)>>=
${OUT}/INTFTBL.o: ${MID}/INTFTBL.NRLIB
	@ echo 988-18 making ${OUT}/INTFTBL.o from ${MID}/INTFTBL.NRLIB
	@ cp ${MID}/INTFTBL.NRLIB/code.o ${OUT}/INTFTBL.o

@
<<INTFTBL.NRLIB (NRLIB from MID)>>=
${MID}/INTFTBL.NRLIB: ${MID}/INTFTBL.spad
	@ echo 989 making ${MID}/INTFTBL.NRLIB from ${MID}/INTFTBL.spad
	@ (cd ${MID} ; 	echo ')co INTFTBL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTFTBL.spad (SPAD from IN)>>=
${MID}/INTFTBL.spad: ${IN}/d01agents.spad.pamphlet
	@ echo 990 making ${MID}/INTFTBL.spad from ${IN}/d01agents.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INTFTBL.NRLIB ; \
	${TANGLE} -R"domain INTFTBL IntegrationFunctionsTable" ${IN}/d01agents.spad.pamphlet >INTFTBL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<d01agents.spad.dvi (DOC from IN)>>=
${DOC}/d01agents.spad.dvi: ${IN}/d01agents.spad.pamphlet ${DOC}/axiom.sty
	@ echo 991 making ${DOC}/d01agents.spad.dvi from ${IN}/d01agents.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/d01agents.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} d01agents.spad ; \
	rm -f ${DOC}/d01agents.spad.pamphlet ; \
	rm -f ${DOC}/d01agents.spad.tex ; \
	rm -f ${DOC}/d01agents.spad )

@
\subsection{d01Package.spad \cite{1}}
<<d01Package.spad (SPAD from IN)>>=
${OUTSRC}/d01Package.spad: ${IN}/d01Package.spad.pamphlet
	@ echo 992 making ${OUTSRC}/d01Package.spad from ${IN}/d01Package.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/d01Package.spad.pamphlet >d01Package.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTPACK.o (O from NRLIB)>>=
${OUT}/INTPACK.o: ${MID}/INTPACK.NRLIB
	@ echo 993-18 making ${OUT}/INTPACK.o from ${MID}/INTPACK.NRLIB
	@ cp ${MID}/INTPACK.NRLIB/code.o ${OUT}/INTPACK.o

@
<<INTPACK.NRLIB (NRLIB from MID)>>=
${MID}/INTPACK.NRLIB: ${MID}/INTPACK.spad
	@ echo 994 making ${MID}/INTPACK.NRLIB from ${MID}/INTPACK.spad
	@ (cd ${MID} ; 	echo ')co INTPACK.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTPACK.spad (SPAD from IN)>>=
${MID}/INTPACK.spad: ${IN}/d01Package.spad.pamphlet
	@ echo 995 making ${MID}/INTPACK.spad from ${IN}/d01Package.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INTPACK.NRLIB ; \
	${TANGLE} -R"package INTPACK AnnaNumericalIntegrationPackage" ${IN}/d01Package.spad.pamphlet >INTPACK.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<d01Package.spad.dvi (DOC from IN)>>=
${DOC}/d01Package.spad.dvi: ${IN}/d01Package.spad.pamphlet ${DOC}/axiom.sty
	@ echo 996 making ${DOC}/d01Package.spad.dvi from ${IN}/d01Package.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/d01Package.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} d01Package.spad ; \
	rm -f ${DOC}/d01Package.spad.pamphlet ; \
	rm -f ${DOC}/d01Package.spad.tex ; \
	rm -f ${DOC}/d01Package.spad )

@
\subsection{d01routine.spad \cite{1}}
<<d01routine.spad (SPAD from IN)>>=
${OUTSRC}/d01routine.spad: ${IN}/d01routine.spad.pamphlet
	@ echo 997 making ${OUTSRC}/d01routine.spad from ${IN}/d01routine.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/d01routine.spad.pamphlet >d01routine.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D01AJFA.o (O from NRLIB)>>=
${OUT}/D01AJFA.o: ${MID}/D01AJFA.NRLIB
	@ echo 998-14 making ${OUT}/D01AJFA.o from ${MID}/D01AJFA.NRLIB
	@ cp ${MID}/D01AJFA.NRLIB/code.o ${OUT}/D01AJFA.o

@
<<D01AJFA.NRLIB (NRLIB from MID)>>=
${MID}/D01AJFA.NRLIB: ${MID}/D01AJFA.spad
	@ echo 999 making ${MID}/D01AJFA.NRLIB from ${MID}/D01AJFA.spad
	@ (cd ${MID} ; 	echo ')co D01AJFA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D01AJFA.spad (SPAD from IN)>>=
${MID}/D01AJFA.spad: ${IN}/d01routine.spad.pamphlet
	@ echo 1000 making ${MID}/D01AJFA.spad from ${IN}/d01routine.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf D01AJFA.NRLIB ; \
	${TANGLE} -R"domain D01AJFA d01ajfAnnaType" ${IN}/d01routine.spad.pamphlet >D01AJFA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D01AKFA.o (O from NRLIB)>>=
${OUT}/D01AKFA.o: ${MID}/D01AKFA.NRLIB
	@ echo 1001-14 making ${OUT}/D01AKFA.o from ${MID}/D01AKFA.NRLIB
	@ cp ${MID}/D01AKFA.NRLIB/code.o ${OUT}/D01AKFA.o

@
<<D01AKFA.NRLIB (NRLIB from MID)>>=
${MID}/D01AKFA.NRLIB: ${MID}/D01AKFA.spad
	@ echo 1002 making ${MID}/D01AKFA.NRLIB from ${MID}/D01AKFA.spad
	@ (cd ${MID} ; 	echo ')co D01AKFA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D01AKFA.spad (SPAD from IN)>>=
${MID}/D01AKFA.spad: ${IN}/d01routine.spad.pamphlet
	@ echo 1003 making ${MID}/D01AKFA.spad from ${IN}/d01routine.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf D01AKFA.NRLIB ; \
	${TANGLE} -R"domain D01AKFA d01akfAnnaType" ${IN}/d01routine.spad.pamphlet >D01AKFA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D01ALFA.o (O from NRLIB)>>=
${OUT}/D01ALFA.o: ${MID}/D01ALFA.NRLIB
	@ echo 1004-14 making ${OUT}/D01ALFA.o from ${MID}/D01ALFA.NRLIB
	@ cp ${MID}/D01ALFA.NRLIB/code.o ${OUT}/D01ALFA.o

@
<<D01ALFA.NRLIB (NRLIB from MID)>>=
${MID}/D01ALFA.NRLIB: ${MID}/D01ALFA.spad
	@ echo 1005 making ${MID}/D01ALFA.NRLIB from ${MID}/D01ALFA.spad
	@ (cd ${MID} ; 	echo ')co D01ALFA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D01ALFA.spad (SPAD from IN)>>=
${MID}/D01ALFA.spad: ${IN}/d01routine.spad.pamphlet
	@ echo 1006 making ${MID}/D01ALFA.spad from ${IN}/d01routine.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf D01ALFA.NRLIB ; \
	${TANGLE} -R"domain D01ALFA d01alfAnnaType" ${IN}/d01routine.spad.pamphlet >D01ALFA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D01AMFA.o (O from NRLIB)>>=
${OUT}/D01AMFA.o: ${MID}/D01AMFA.NRLIB
	@ echo 1007-14 making ${OUT}/D01AMFA.o from ${MID}/D01AMFA.NRLIB
	@ cp ${MID}/D01AMFA.NRLIB/code.o ${OUT}/D01AMFA.o

@
<<D01AMFA.NRLIB (NRLIB from MID)>>=
${MID}/D01AMFA.NRLIB: ${MID}/D01AMFA.spad
	@ echo 1008 making ${MID}/D01AMFA.NRLIB from ${MID}/D01AMFA.spad
	@ (cd ${MID} ; 	echo ')co D01AMFA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D01AMFA.spad (SPAD from IN)>>=
${MID}/D01AMFA.spad: ${IN}/d01routine.spad.pamphlet
	@ echo 1009 making ${MID}/D01AMFA.spad from ${IN}/d01routine.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf D01AMFA.NRLIB ; \
	${TANGLE} -R"domain D01AMFA d01amfAnnaType" ${IN}/d01routine.spad.pamphlet >D01AMFA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D01ANFA.o (O from NRLIB)>>=
${OUT}/D01ANFA.o: ${MID}/D01ANFA.NRLIB
	@ echo 1010-19 making ${OUT}/D01ANFA.o from ${MID}/D01ANFA.NRLIB
	@ cp ${MID}/D01ANFA.NRLIB/code.o ${OUT}/D01ANFA.o

@
<<D01ANFA.NRLIB (NRLIB from MID)>>=
${MID}/D01ANFA.NRLIB: ${MID}/D01ANFA.spad
	@ echo 1011 making ${MID}/D01ANFA.NRLIB from ${MID}/D01ANFA.spad
	@ (cd ${MID} ; 	echo ')co D01ANFA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D01ANFA.spad (SPAD from IN)>>=
${MID}/D01ANFA.spad: ${IN}/d01routine.spad.pamphlet
	@ echo 1012 making ${MID}/D01ANFA.spad from ${IN}/d01routine.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf D01ANFA.NRLIB ; \
	${TANGLE} -R"domain D01ANFA d01anfAnnaType" ${IN}/d01routine.spad.pamphlet >D01ANFA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D01APFA.o (O from NRLIB)>>=
${OUT}/D01APFA.o: ${MID}/D01APFA.NRLIB
	@ echo 1013-14 making ${OUT}/D01APFA.o from ${MID}/D01APFA.NRLIB
	@ cp ${MID}/D01APFA.NRLIB/code.o ${OUT}/D01APFA.o

@
<<D01APFA.NRLIB (NRLIB from MID)>>=
${MID}/D01APFA.NRLIB: ${MID}/D01APFA.spad
	@ echo 1014 making ${MID}/D01APFA.NRLIB from ${MID}/D01APFA.spad
	@ (cd ${MID} ; 	echo ')co D01APFA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D01APFA.spad (SPAD from IN)>>=
${MID}/D01APFA.spad: ${IN}/d01routine.spad.pamphlet
	@ echo 1015 making ${MID}/D01APFA.spad from ${IN}/d01routine.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf D01APFA.NRLIB ; \
	${TANGLE} -R"domain D01APFA d01apfAnnaType" ${IN}/d01routine.spad.pamphlet >D01APFA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D01AQFA.o (O from NRLIB)>>=
${OUT}/D01AQFA.o: ${MID}/D01AQFA.NRLIB
	@ echo 1016-14 making ${OUT}/D01AQFA.o from ${MID}/D01AQFA.NRLIB
	@ cp ${MID}/D01AQFA.NRLIB/code.o ${OUT}/D01AQFA.o

@
<<D01AQFA.NRLIB (NRLIB from MID)>>=
${MID}/D01AQFA.NRLIB: ${MID}/D01AQFA.spad
	@ echo 1017 making ${MID}/D01AQFA.NRLIB from ${MID}/D01AQFA.spad
	@ (cd ${MID} ; 	echo ')co D01AQFA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D01AQFA.spad (SPAD from IN)>>=
${MID}/D01AQFA.spad: ${IN}/d01routine.spad.pamphlet
	@ echo 1018 making ${MID}/D01AQFA.spad from ${IN}/d01routine.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf D01AQFA.NRLIB ; \
	${TANGLE} -R"domain D01AQFA d01aqfAnnaType" ${IN}/d01routine.spad.pamphlet >D01AQFA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D01ASFA.o (O from NRLIB)>>=
${OUT}/D01ASFA.o: ${MID}/D01ASFA.NRLIB
	@ echo 1019-19 making ${OUT}/D01ASFA.o from ${MID}/D01ASFA.NRLIB
	@ cp ${MID}/D01ASFA.NRLIB/code.o ${OUT}/D01ASFA.o

@
<<D01ASFA.NRLIB (NRLIB from MID)>>=
${MID}/D01ASFA.NRLIB: ${MID}/D01ASFA.spad
	@ echo 1020 making ${MID}/D01ASFA.NRLIB from ${MID}/D01ASFA.spad
	@ (cd ${MID} ; 	echo ')co D01ASFA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D01ASFA.spad (SPAD from IN)>>=
${MID}/D01ASFA.spad: ${IN}/d01routine.spad.pamphlet
	@ echo 1021 making ${MID}/D01ASFA.spad from ${IN}/d01routine.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf D01ASFA.NRLIB ; \
	${TANGLE} -R"domain D01ASFA d01asfAnnaType" ${IN}/d01routine.spad.pamphlet >D01ASFA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D01FCFA.o (O from NRLIB)>>=
${OUT}/D01FCFA.o: ${MID}/D01FCFA.NRLIB
	@ echo 1022-11 making ${OUT}/D01FCFA.o from ${MID}/D01FCFA.NRLIB
	@ cp ${MID}/D01FCFA.NRLIB/code.o ${OUT}/D01FCFA.o

@
<<D01FCFA.NRLIB (NRLIB from MID)>>=
${MID}/D01FCFA.NRLIB: ${MID}/D01FCFA.spad
	@ echo 1023 making ${MID}/D01FCFA.NRLIB from ${MID}/D01FCFA.spad
	@ (cd ${MID} ; 	echo ')co D01FCFA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D01FCFA.spad (SPAD from IN)>>=
${MID}/D01FCFA.spad: ${IN}/d01routine.spad.pamphlet
	@ echo 1024 making ${MID}/D01FCFA.spad from ${IN}/d01routine.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf D01FCFA.NRLIB ; \
	${TANGLE} -R"domain D01FCFA d01fcfAnnaType" ${IN}/d01routine.spad.pamphlet >D01FCFA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D01GBFA.o (O from NRLIB)>>=
${OUT}/D01GBFA.o: ${MID}/D01GBFA.NRLIB
	@ echo 1025-10 making ${OUT}/D01GBFA.o from ${MID}/D01GBFA.NRLIB
	@ cp ${MID}/D01GBFA.NRLIB/code.o ${OUT}/D01GBFA.o

@
<<D01GBFA.NRLIB (NRLIB from MID)>>=
${MID}/D01GBFA.NRLIB: ${MID}/D01GBFA.spad
	@ echo 1026 making ${MID}/D01GBFA.NRLIB from ${MID}/D01GBFA.spad
	@ (cd ${MID} ; 	echo ')co D01GBFA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D01GBFA.spad (SPAD from IN)>>=
${MID}/D01GBFA.spad: ${IN}/d01routine.spad.pamphlet
	@ echo 1027 making ${MID}/D01GBFA.spad from ${IN}/d01routine.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf D01GBFA.NRLIB ; \
	${TANGLE} -R"domain D01GBFA d01gbfAnnaType" ${IN}/d01routine.spad.pamphlet >D01GBFA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<d01routine.spad.dvi (DOC from IN)>>=
${DOC}/d01routine.spad.dvi: ${IN}/d01routine.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1028 making ${DOC}/d01routine.spad.dvi from ${IN}/d01routine.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/d01routine.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} d01routine.spad ; \
	rm -f ${DOC}/d01routine.spad.pamphlet ; \
	rm -f ${DOC}/d01routine.spad.tex ; \
	rm -f ${DOC}/d01routine.spad )

@
\subsection{d01.spad \cite{1}}
<<d01.spad (SPAD from IN)>>=
${OUTSRC}/d01.spad: ${IN}/d01.spad.pamphlet
	@ echo 1029 making ${OUTSRC}/d01.spad from ${IN}/d01.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/d01.spad.pamphlet >d01.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGD01.o (O from NRLIB)>>=
${OUT}/NAGD01.o: ${MID}/NAGD01.NRLIB
	@ echo 1030-20 making ${OUT}/NAGD01.o from ${MID}/NAGD01.NRLIB
	@ cp ${MID}/NAGD01.NRLIB/code.o ${OUT}/NAGD01.o

@
<<NAGD01.NRLIB (NRLIB from MID)>>=
${MID}/NAGD01.NRLIB: ${MID}/NAGD01.spad
	@ echo 1031 making ${MID}/NAGD01.NRLIB from ${MID}/NAGD01.spad
	@ (cd ${MID} ; 	echo ')co NAGD01.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGD01.spad (SPAD from IN)>>=
${MID}/NAGD01.spad: ${IN}/d01.spad.pamphlet
	@ echo 1032 making ${MID}/NAGD01.spad from ${IN}/d01.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NAGD01.NRLIB ; \
	${TANGLE} -R"package NAGD01 NagIntegrationPackage" ${IN}/d01.spad.pamphlet >NAGD01.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<d01.spad.dvi (DOC from IN)>>=
${DOC}/d01.spad.dvi: ${IN}/d01.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1033 making ${DOC}/d01.spad.dvi from ${IN}/d01.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/d01.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} d01.spad ; \
	rm -f ${DOC}/d01.spad.pamphlet ; \
	rm -f ${DOC}/d01.spad.tex ; \
	rm -f ${DOC}/d01.spad )

@
\subsection{d01transform.spad \cite{1}}
<<d01transform.spad (SPAD from IN)>>=
${OUTSRC}/d01transform.spad: ${IN}/d01transform.spad.pamphlet
	@ echo 1034 making ${OUTSRC}/d01transform.spad from ${IN}/d01transform.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/d01transform.spad.pamphlet >d01transform.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D01TRNS.o (O from NRLIB)>>=
${OUT}/D01TRNS.o: ${MID}/D01TRNS.NRLIB
	@ echo 1035-21 making ${OUT}/D01TRNS.o from ${MID}/D01TRNS.NRLIB
	@ cp ${MID}/D01TRNS.NRLIB/code.o ${OUT}/D01TRNS.o

@
<<D01TRNS.NRLIB (NRLIB from MID)>>=
${MID}/D01TRNS.NRLIB: ${MID}/D01TRNS.spad
	@ echo 1036 making ${MID}/D01TRNS.NRLIB from ${MID}/D01TRNS.spad
	@ (cd ${MID} ; 	echo ')co D01TRNS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D01TRNS.spad (SPAD from IN)>>=
${MID}/D01TRNS.spad: ${IN}/d01transform.spad.pamphlet
	@ echo 1037 making ${MID}/D01TRNS.spad from ${IN}/d01transform.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf D01TRNS.NRLIB ; \
	${TANGLE} -R"domain D01TRNS d01TransformFunctionType" ${IN}/d01transform.spad.pamphlet >D01TRNS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<d01transform.spad.dvi (DOC from IN)>>=
${DOC}/d01transform.spad.dvi: ${IN}/d01transform.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1038 making ${DOC}/d01transform.spad.dvi from ${IN}/d01transform.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/d01transform.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} d01transform.spad ; \
	rm -f ${DOC}/d01transform.spad.pamphlet ; \
	rm -f ${DOC}/d01transform.spad.tex ; \
	rm -f ${DOC}/d01transform.spad )

@
\subsection{d01weights.spad \cite{1}}
<<d01weights.spad (SPAD from IN)>>=
${OUTSRC}/d01weights.spad: ${IN}/d01weights.spad.pamphlet
	@ echo 1039 making ${OUTSRC}/d01weights.spad from ${IN}/d01weights.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/d01weights.spad.pamphlet >d01weights.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D01WGTS.o (O from NRLIB)>>=
${OUT}/D01WGTS.o: ${MID}/D01WGTS.NRLIB
	@ echo 1040-20 making ${OUT}/D01WGTS.o from ${MID}/D01WGTS.NRLIB
	@ cp ${MID}/D01WGTS.NRLIB/code.o ${OUT}/D01WGTS.o

@
<<D01WGTS.NRLIB (NRLIB from MID)>>=
${MID}/D01WGTS.NRLIB: ${MID}/D01WGTS.spad
	@ echo 1041 making ${MID}/D01WGTS.NRLIB from ${MID}/D01WGTS.spad
	@ (cd ${MID} ; 	echo ')co D01WGTS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D01WGTS.spad (SPAD from IN)>>=
${MID}/D01WGTS.spad: ${IN}/d01weights.spad.pamphlet
	@ echo 1042 making ${MID}/D01WGTS.spad from ${IN}/d01weights.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf D01WGTS.NRLIB ; \
	${TANGLE} -R"package D01WGTS d01WeightsPackage" ${IN}/d01weights.spad.pamphlet >D01WGTS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<d01weights.spad.dvi (DOC from IN)>>=
${DOC}/d01weights.spad.dvi: ${IN}/d01weights.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1043 making ${DOC}/d01weights.spad.dvi from ${IN}/d01weights.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/d01weights.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} d01weights.spad ; \
	rm -f ${DOC}/d01weights.spad.pamphlet ; \
	rm -f ${DOC}/d01weights.spad.tex ; \
	rm -f ${DOC}/d01weights.spad )

@
\subsection{d02agents.spad \cite{1}}
<<d02agents.spad (SPAD from IN)>>=
${OUTSRC}/d02agents.spad: ${IN}/d02agents.spad.pamphlet
	@ echo 1044 making ${OUTSRC}/d02agents.spad from ${IN}/d02agents.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/d02agents.spad.pamphlet >d02agents.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D02AGNT.o (O from NRLIB)>>=
${OUT}/D02AGNT.o: ${MID}/D02AGNT.NRLIB
	@ echo 1045-20 making ${OUT}/D02AGNT.o from ${MID}/D02AGNT.NRLIB
	@ cp ${MID}/D02AGNT.NRLIB/code.o ${OUT}/D02AGNT.o

@
<<D02AGNT.NRLIB (NRLIB from MID)>>=
${MID}/D02AGNT.NRLIB: ${MID}/D02AGNT.spad
	@ echo 1046 making ${MID}/D02AGNT.NRLIB from ${MID}/D02AGNT.spad
	@ (cd ${MID} ; 	echo ')co D02AGNT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D02AGNT.spad (SPAD from IN)>>=
${MID}/D02AGNT.spad: ${IN}/d02agents.spad.pamphlet
	@ echo 1047 making ${MID}/D02AGNT.spad from ${IN}/d02agents.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf D02AGNT.NRLIB ; \
	${TANGLE} -R"package D02AGNT d02AgentsPackage" ${IN}/d02agents.spad.pamphlet >D02AGNT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODEIFTBL.o (O from NRLIB)>>=
${OUT}/ODEIFTBL.o: ${MID}/ODEIFTBL.NRLIB
	@ echo 1048-0 making ${OUT}/ODEIFTBL.o from ${MID}/ODEIFTBL.NRLIB
	@ cp ${MID}/ODEIFTBL.NRLIB/code.o ${OUT}/ODEIFTBL.o

@
<<ODEIFTBL.NRLIB (NRLIB from MID)>>=
${MID}/ODEIFTBL.NRLIB: ${MID}/ODEIFTBL.spad
	@ echo 1049 making ${MID}/ODEIFTBL.NRLIB from ${MID}/ODEIFTBL.spad
	@ (cd ${MID} ; 	echo ')co ODEIFTBL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODEIFTBL.spad (SPAD from IN)>>=
${MID}/ODEIFTBL.spad: ${IN}/d02agents.spad.pamphlet
	@ echo 1050 making ${MID}/ODEIFTBL.spad from ${IN}/d02agents.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ODEIFTBL.NRLIB ; \
	${TANGLE} -R"domain ODEIFTBL ODEIntensityFunctionsTable" ${IN}/d02agents.spad.pamphlet >ODEIFTBL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<d02agents.spad.dvi (DOC from IN)>>=
${DOC}/d02agents.spad.dvi: ${IN}/d02agents.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1051 making ${DOC}/d02agents.spad.dvi from ${IN}/d02agents.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/d02agents.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} d02agents.spad ; \
	rm -f ${DOC}/d02agents.spad.pamphlet ; \
	rm -f ${DOC}/d02agents.spad.tex ; \
	rm -f ${DOC}/d02agents.spad )

@
\subsection{d02Package.spad \cite{1}}
<<d02Package.spad (SPAD from IN)>>=
${OUTSRC}/d02Package.spad: ${IN}/d02Package.spad.pamphlet
	@ echo 1052 making ${OUTSRC}/d02Package.spad from ${IN}/d02Package.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/d02Package.spad.pamphlet >d02Package.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODEPACK.o (O from NRLIB)>>=
${OUT}/ODEPACK.o: ${MID}/ODEPACK.NRLIB
	@ echo 1053-19 making ${OUT}/ODEPACK.o from ${MID}/ODEPACK.NRLIB
	@ cp ${MID}/ODEPACK.NRLIB/code.o ${OUT}/ODEPACK.o

@
<<ODEPACK.NRLIB (NRLIB from MID)>>=
${MID}/ODEPACK.NRLIB: ${MID}/ODEPACK.spad
	@ echo 1054 making ${MID}/ODEPACK.NRLIB from ${MID}/ODEPACK.spad
	@ (cd ${MID} ; 	echo ')co ODEPACK.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODEPACK.spad (SPAD from IN)>>=
${MID}/ODEPACK.spad: ${IN}/d02Package.spad.pamphlet
	@ echo 1055 making ${MID}/ODEPACK.spad from ${IN}/d02Package.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ODEPACK.NRLIB ; \
	${TANGLE} -R"package ODEPACK AnnaOrdinaryDifferentialEquationPackage" ${IN}/d02Package.spad.pamphlet >ODEPACK.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<d02Package.spad.dvi (DOC from IN)>>=
${DOC}/d02Package.spad.dvi: ${IN}/d02Package.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1056 making ${DOC}/d02Package.spad.dvi from ${IN}/d02Package.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/d02Package.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} d02Package.spad ; \
	rm -f ${DOC}/d02Package.spad.pamphlet ; \
	rm -f ${DOC}/d02Package.spad.tex ; \
	rm -f ${DOC}/d02Package.spad )

@
\subsection{d02routine.spad \cite{1}}
<<d02routine.spad (SPAD from IN)>>=
${OUTSRC}/d02routine.spad: ${IN}/d02routine.spad.pamphlet
	@ echo 1057 making ${OUTSRC}/d02routine.spad from ${IN}/d02routine.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/d02routine.spad.pamphlet >d02routine.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D02BBFA.o (O from NRLIB)>>=
${OUT}/D02BBFA.o: ${MID}/D02BBFA.NRLIB
	@ echo 1058-13 making ${OUT}/D02BBFA.o from ${MID}/D02BBFA.NRLIB
	@ cp ${MID}/D02BBFA.NRLIB/code.o ${OUT}/D02BBFA.o

@
<<D02BBFA.NRLIB (NRLIB from MID)>>=
${MID}/D02BBFA.NRLIB: ${MID}/D02BBFA.spad
	@ echo 1059 making ${MID}/D02BBFA.NRLIB from ${MID}/D02BBFA.spad
	@ (cd ${MID} ; 	echo ')co D02BBFA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D02BBFA.spad (SPAD from IN)>>=
${MID}/D02BBFA.spad: ${IN}/d02routine.spad.pamphlet
	@ echo 1060 making ${MID}/D02BBFA.spad from ${IN}/d02routine.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf D02BBFA.NRLIB ; \
	${TANGLE} -R"domain D02BBFA d02bbfAnnaType" ${IN}/d02routine.spad.pamphlet >D02BBFA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D02BHFA.o (O from NRLIB)>>=
${OUT}/D02BHFA.o: ${MID}/D02BHFA.NRLIB
	@ echo 1061-13 making ${OUT}/D02BHFA.o from ${MID}/D02BHFA.NRLIB
	@ cp ${MID}/D02BHFA.NRLIB/code.o ${OUT}/D02BHFA.o

@
<<D02BHFA.NRLIB (NRLIB from MID)>>=
${MID}/D02BHFA.NRLIB: ${MID}/D02BHFA.spad
	@ echo 1062 making ${MID}/D02BHFA.NRLIB from ${MID}/D02BHFA.spad
	@ (cd ${MID} ; 	echo ')co D02BHFA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D02BHFA.spad (SPAD from IN)>>=
${MID}/D02BHFA.spad: ${IN}/d02routine.spad.pamphlet
	@ echo 1063 making ${MID}/D02BHFA.spad from ${IN}/d02routine.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf D02BHFA.NRLIB ; \
	${TANGLE} -R"domain D02BHFA d02bhfAnnaType" ${IN}/d02routine.spad.pamphlet >D02BHFA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D02CJFA.o (O from NRLIB)>>=
${OUT}/D02CJFA.o: ${MID}/D02CJFA.NRLIB
	@ echo 1064-13 making ${OUT}/D02CJFA.o from ${MID}/D02CJFA.NRLIB
	@ cp ${MID}/D02CJFA.NRLIB/code.o ${OUT}/D02CJFA.o

@
<<D02CJFA.NRLIB (NRLIB from MID)>>=
${MID}/D02CJFA.NRLIB: ${MID}/D02CJFA.spad
	@ echo 1065 making ${MID}/D02CJFA.NRLIB from ${MID}/D02CJFA.spad
	@ (cd ${MID} ; 	echo ')co D02CJFA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D02CJFA.spad (SPAD from IN)>>=
${MID}/D02CJFA.spad: ${IN}/d02routine.spad.pamphlet
	@ echo 1066 making ${MID}/D02CJFA.spad from ${IN}/d02routine.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf D02CJFA.NRLIB ; \
	${TANGLE} -R"domain D02CJFA d02cjfAnnaType" ${IN}/d02routine.spad.pamphlet >D02CJFA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D02EJFA.o (O from NRLIB)>>=
${OUT}/D02EJFA.o: ${MID}/D02EJFA.NRLIB
	@ echo 1067-10 making ${OUT}/D02EJFA.o from ${MID}/D02EJFA.NRLIB
	@ cp ${MID}/D02EJFA.NRLIB/code.o ${OUT}/D02EJFA.o

@
<<D02EJFA.NRLIB (NRLIB from MID)>>=
${MID}/D02EJFA.NRLIB: ${MID}/D02EJFA.spad
	@ echo 1068 making ${MID}/D02EJFA.NRLIB from ${MID}/D02EJFA.spad
	@ (cd ${MID} ; 	echo ')co D02EJFA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D02EJFA.spad (SPAD from IN)>>=
${MID}/D02EJFA.spad: ${IN}/d02routine.spad.pamphlet
	@ echo 1069 making ${MID}/D02EJFA.spad from ${IN}/d02routine.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf D02EJFA.NRLIB ; \
	${TANGLE} -R"domain D02EJFA d02ejfAnnaType" ${IN}/d02routine.spad.pamphlet >D02EJFA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<d02routine.spad.dvi (DOC from IN)>>=
${DOC}/d02routine.spad.dvi: ${IN}/d02routine.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1070 making ${DOC}/d02routine.spad.dvi from ${IN}/d02routine.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/d02routine.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} d02routine.spad ; \
	rm -f ${DOC}/d02routine.spad.pamphlet ; \
	rm -f ${DOC}/d02routine.spad.tex ; \
	rm -f ${DOC}/d02routine.spad )

@
\subsection{d02.spad \cite{1}}
<<d02.spad (SPAD from IN)>>=
${OUTSRC}/d02.spad: ${IN}/d02.spad.pamphlet
	@ echo 1071 making ${OUTSRC}/d02.spad from ${IN}/d02.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/d02.spad.pamphlet >d02.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGD02.o (O from NRLIB)>>=
${OUT}/NAGD02.o: ${MID}/NAGD02.NRLIB
	@ echo 1072-20 making ${OUT}/NAGD02.o from ${MID}/NAGD02.NRLIB
	@ cp ${MID}/NAGD02.NRLIB/code.o ${OUT}/NAGD02.o

@
<<NAGD02.NRLIB (NRLIB from MID)>>=
${MID}/NAGD02.NRLIB: ${MID}/NAGD02.spad
	@ echo 1073 making ${MID}/NAGD02.NRLIB from ${MID}/NAGD02.spad
	@ (cd ${MID} ; 	echo ')co NAGD02.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGD02.spad (SPAD from IN)>>=
${MID}/NAGD02.spad: ${IN}/d02.spad.pamphlet
	@ echo 1074 making ${MID}/NAGD02.spad from ${IN}/d02.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NAGD02.NRLIB ; \
	${TANGLE} -R"package NAGD02 NagOrdinaryDifferentialEquationsPackage" ${IN}/d02.spad.pamphlet >NAGD02.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<d02.spad.dvi (DOC from IN)>>=
${DOC}/d02.spad.dvi: ${IN}/d02.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1075 making ${DOC}/d02.spad.dvi from ${IN}/d02.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/d02.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} d02.spad ; \
	rm -f ${DOC}/d02.spad.pamphlet ; \
	rm -f ${DOC}/d02.spad.tex ; \
	rm -f ${DOC}/d02.spad )

@
\subsection{d03agents.spad \cite{1}}
<<d03agents.spad (SPAD from IN)>>=
${OUTSRC}/d03agents.spad: ${IN}/d03agents.spad.pamphlet
	@ echo 1076 making ${OUTSRC}/d03agents.spad from ${IN}/d03agents.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/d03agents.spad.pamphlet >d03agents.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D03AGNT.o (O from NRLIB)>>=
${OUT}/D03AGNT.o: ${MID}/D03AGNT.NRLIB
	@ echo 1077-19 making ${OUT}/D03AGNT.o from ${MID}/D03AGNT.NRLIB
	@ cp ${MID}/D03AGNT.NRLIB/code.o ${OUT}/D03AGNT.o

@
<<D03AGNT.NRLIB (NRLIB from MID)>>=
${MID}/D03AGNT.NRLIB: ${MID}/D03AGNT.spad
	@ echo 1078 making ${MID}/D03AGNT.NRLIB from ${MID}/D03AGNT.spad
	@ (cd ${MID} ; 	echo ')co D03AGNT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D03AGNT.spad (SPAD from IN)>>=
${MID}/D03AGNT.spad: ${IN}/d03agents.spad.pamphlet
	@ echo 1079 making ${MID}/D03AGNT.spad from ${IN}/d03agents.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf D03AGNT.NRLIB ; \
	${TANGLE} -R"package D03AGNT d03AgentsPackage" ${IN}/d03agents.spad.pamphlet >D03AGNT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<d03agents.spad.dvi (DOC from IN)>>=
${DOC}/d03agents.spad.dvi: ${IN}/d03agents.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1080 making ${DOC}/d03agents.spad.dvi from ${IN}/d03agents.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/d03agents.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} d03agents.spad ; \
	rm -f ${DOC}/d03agents.spad.pamphlet ; \
	rm -f ${DOC}/d03agents.spad.tex ; \
	rm -f ${DOC}/d03agents.spad )

@
\subsection{d03Package.spad \cite{1}}
<<d03Package.spad (SPAD from IN)>>=
${OUTSRC}/d03Package.spad: ${IN}/d03Package.spad.pamphlet
	@ echo 1081 making ${OUTSRC}/d03Package.spad from ${IN}/d03Package.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/d03Package.spad.pamphlet >d03Package.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PDEPACK.o (O from NRLIB)>>=
${OUT}/PDEPACK.o: ${MID}/PDEPACK.NRLIB
	@ echo 1082-20 making ${OUT}/PDEPACK.o from ${MID}/PDEPACK.NRLIB
	@ cp ${MID}/PDEPACK.NRLIB/code.o ${OUT}/PDEPACK.o

@
<<PDEPACK.NRLIB (NRLIB from MID)>>=
${MID}/PDEPACK.NRLIB: ${MID}/PDEPACK.spad
	@ echo 1083 making ${MID}/PDEPACK.NRLIB from ${MID}/PDEPACK.spad
	@ (cd ${MID} ; 	echo ')co PDEPACK.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PDEPACK.spad (SPAD from IN)>>=
${MID}/PDEPACK.spad: ${IN}/d03Package.spad.pamphlet
	@ echo 1084 making ${MID}/PDEPACK.spad from ${IN}/d03Package.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PDEPACK.NRLIB ; \
	${TANGLE} -R"package PDEPACK AnnaPartialDifferentialEquationPackage" ${IN}/d03Package.spad.pamphlet >PDEPACK.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<d03Package.spad.dvi (DOC from IN)>>=
${DOC}/d03Package.spad.dvi: ${IN}/d03Package.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1085 making ${DOC}/d03Package.spad.dvi from ${IN}/d03Package.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/d03Package.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} d03Package.spad ; \
	rm -f ${DOC}/d03Package.spad.pamphlet ; \
	rm -f ${DOC}/d03Package.spad.tex ; \
	rm -f ${DOC}/d03Package.spad )

@
\subsection{d03routine.spad \cite{1}}
<<d03routine.spad (SPAD from IN)>>=
${OUTSRC}/d03routine.spad: ${IN}/d03routine.spad.pamphlet
	@ echo 1086 making ${OUTSRC}/d03routine.spad from ${IN}/d03routine.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/d03routine.spad.pamphlet >d03routine.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D03EEFA.o (O from NRLIB)>>=
${OUT}/D03EEFA.o: ${MID}/D03EEFA.NRLIB
	@ echo 1087-20 making ${OUT}/D03EEFA.o from ${MID}/D03EEFA.NRLIB
	@ cp ${MID}/D03EEFA.NRLIB/code.o ${OUT}/D03EEFA.o

@
<<D03EEFA.NRLIB (NRLIB from MID)>>=
${MID}/D03EEFA.NRLIB: ${MID}/D03EEFA.spad
	@ echo 1088 making ${MID}/D03EEFA.NRLIB from ${MID}/D03EEFA.spad
	@ (cd ${MID} ; 	echo ')co D03EEFA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D03EEFA.spad (SPAD from IN)>>=
${MID}/D03EEFA.spad: ${IN}/d03routine.spad.pamphlet
	@ echo 1089 making ${MID}/D03EEFA.spad from ${IN}/d03routine.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf D03EEFA.NRLIB ; \
	${TANGLE} -R"domain D03EEFA d03eefAnnaType" ${IN}/d03routine.spad.pamphlet >D03EEFA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D03FAFA.o (O from NRLIB)>>=
${OUT}/D03FAFA.o: ${MID}/D03FAFA.NRLIB
	@ echo 1090-10 making ${OUT}/D03FAFA.o from ${MID}/D03FAFA.NRLIB
	@ cp ${MID}/D03FAFA.NRLIB/code.o ${OUT}/D03FAFA.o

@
<<D03FAFA.NRLIB (NRLIB from MID)>>=
${MID}/D03FAFA.NRLIB: ${MID}/D03FAFA.spad
	@ echo 1091 making ${MID}/D03FAFA.NRLIB from ${MID}/D03FAFA.spad
	@ (cd ${MID} ; 	echo ')co D03FAFA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<D03FAFA.spad (SPAD from IN)>>=
${MID}/D03FAFA.spad: ${IN}/d03routine.spad.pamphlet
	@ echo 1092 making ${MID}/D03FAFA.spad from ${IN}/d03routine.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf D03FAFA.NRLIB ; \
	${TANGLE} -R"domain D03FAFA d03fafAnnaType" ${IN}/d03routine.spad.pamphlet >D03FAFA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<d03routine.spad.dvi (DOC from IN)>>=
${DOC}/d03routine.spad.dvi: ${IN}/d03routine.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1093 making ${DOC}/d03routine.spad.dvi from ${IN}/d03routine.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/d03routine.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} d03routine.spad ; \
	rm -f ${DOC}/d03routine.spad.pamphlet ; \
	rm -f ${DOC}/d03routine.spad.tex ; \
	rm -f ${DOC}/d03routine.spad )

@
\subsection{d03.spad \cite{1}}
<<d03.spad (SPAD from IN)>>=
${OUTSRC}/d03.spad: ${IN}/d03.spad.pamphlet
	@ echo 1094 making ${OUTSRC}/d03.spad from ${IN}/d03.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/d03.spad.pamphlet >d03.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGD03.o (O from NRLIB)>>=
${OUT}/NAGD03.o: ${MID}/NAGD03.NRLIB
	@ echo 1095-19 making ${OUT}/NAGD03.o from ${MID}/NAGD03.NRLIB
	@ cp ${MID}/NAGD03.NRLIB/code.o ${OUT}/NAGD03.o

@
<<NAGD03.NRLIB (NRLIB from MID)>>=
${MID}/NAGD03.NRLIB: ${MID}/NAGD03.spad
	@ echo 1096 making ${MID}/NAGD03.NRLIB from ${MID}/NAGD03.spad
	@ (cd ${MID} ; 	echo ')co NAGD03.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGD03.spad (SPAD from IN)>>=
${MID}/NAGD03.spad: ${IN}/d03.spad.pamphlet
	@ echo 1097 making ${MID}/NAGD03.spad from ${IN}/d03.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NAGD03.NRLIB ; \
	${TANGLE} -R"package NAGD03 NagPartialDifferentialEquationsPackage" ${IN}/d03.spad.pamphlet >NAGD03.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<d03.spad.dvi (DOC from IN)>>=
${DOC}/d03.spad.dvi: ${IN}/d03.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1098 making ${DOC}/d03.spad.dvi from ${IN}/d03.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/d03.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} d03.spad ; \
	rm -f ${DOC}/d03.spad.pamphlet ; \
	rm -f ${DOC}/d03.spad.tex ; \
	rm -f ${DOC}/d03.spad )

@
\subsection{ddfact.spad \cite{1}}
<<ddfact.spad (SPAD from IN)>>=
${OUTSRC}/ddfact.spad: ${IN}/ddfact.spad.pamphlet
	@ echo 1099 making ${OUTSRC}/ddfact.spad from ${IN}/ddfact.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/ddfact.spad.pamphlet >ddfact.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DDFACT.o (O from NRLIB)>>=
${OUT}/DDFACT.o: ${MID}/DDFACT.NRLIB
	@ echo 1100-14 making ${OUT}/DDFACT.o from ${MID}/DDFACT.NRLIB
	@ cp ${MID}/DDFACT.NRLIB/code.o ${OUT}/DDFACT.o

@
<<DDFACT.NRLIB (NRLIB from MID)>>=
${MID}/DDFACT.NRLIB: ${MID}/DDFACT.spad
	@ echo 1101 making ${MID}/DDFACT.NRLIB from ${MID}/DDFACT.spad
	@ (cd ${MID} ; 	echo ')co DDFACT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DDFACT.spad (SPAD from IN)>>=
${MID}/DDFACT.spad: ${IN}/ddfact.spad.pamphlet
	@ echo 1102 making ${MID}/DDFACT.spad from ${IN}/ddfact.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DDFACT.NRLIB ; \
	${TANGLE} -R"package DDFACT DistinctDegreeFactorize" ${IN}/ddfact.spad.pamphlet >DDFACT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ddfact.spad.dvi (DOC from IN)>>=
${DOC}/ddfact.spad.dvi: ${IN}/ddfact.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1103 making ${DOC}/ddfact.spad.dvi from ${IN}/ddfact.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/ddfact.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} ddfact.spad ; \
	rm -f ${DOC}/ddfact.spad.pamphlet ; \
	rm -f ${DOC}/ddfact.spad.tex ; \
	rm -f ${DOC}/ddfact.spad )

@
\subsection{defaults.spad \cite{1}}
<<defaults.spad (SPAD from IN)>>=
${OUTSRC}/defaults.spad: ${IN}/defaults.spad.pamphlet
	@ echo 1104 making ${OUTSRC}/defaults.spad from ${IN}/defaults.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/defaults.spad.pamphlet >defaults.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FLASORT.o (O from NRLIB)>>=
${OUT}/FLASORT.o: ${MID}/FLASORT.NRLIB
	@ echo 1105-10 making ${OUT}/FLASORT.o from ${MID}/FLASORT.NRLIB
	@ cp ${MID}/FLASORT.NRLIB/code.o ${OUT}/FLASORT.o

@
<<FLASORT.NRLIB (NRLIB from MID)>>=
${MID}/FLASORT.NRLIB: ${MID}/FLASORT.spad
	@ echo 1106 making ${MID}/FLASORT.NRLIB from ${MID}/FLASORT.spad
	@ (cd ${MID} ; 	echo ')co FLASORT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FLASORT.spad (SPAD from IN)>>=
${MID}/FLASORT.spad: ${IN}/defaults.spad.pamphlet
	@ echo 1107 making ${MID}/FLASORT.spad from ${IN}/defaults.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FLASORT.NRLIB ; \
	${TANGLE} -R"package FLASORT FiniteLinearAggregateSort" ${IN}/defaults.spad.pamphlet >FLASORT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<REPDB.o (O from NRLIB)>>=
${OUT}/REPDB.o: ${MID}/REPDB.NRLIB
	@ echo 1108-4 making ${OUT}/REPDB.o from ${MID}/REPDB.NRLIB
	@ cp ${MID}/REPDB.NRLIB/code.o ${OUT}/REPDB.o

@
<<REPDB.NRLIB (NRLIB from MID)>>=
${MID}/REPDB.NRLIB: ${MID}/REPDB.spad
	@ echo 1109 making ${MID}/REPDB.NRLIB from ${MID}/REPDB.spad
	@ (cd ${MID} ; 	echo ')co REPDB.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<REPDB.spad (SPAD from IN)>>=
${MID}/REPDB.spad: ${IN}/defaults.spad.pamphlet
	@ echo 1110 making ${MID}/REPDB.spad from ${IN}/defaults.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf REPDB.NRLIB ; \
	${TANGLE} -R"package REPDB RepeatedDoubling" ${IN}/defaults.spad.pamphlet >REPDB.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<REPSQ.o (O from NRLIB)>>=
${OUT}/REPSQ.o: ${MID}/REPSQ.NRLIB
	@ echo 1111-4 making ${OUT}/REPSQ.o from ${MID}/REPSQ.NRLIB
	@ cp ${MID}/REPSQ.NRLIB/code.o ${OUT}/REPSQ.o

@
<<REPSQ.NRLIB (NRLIB from MID)>>=
${MID}/REPSQ.NRLIB: ${MID}/REPSQ.spad
	@ echo 1112 making ${MID}/REPSQ.NRLIB from ${MID}/REPSQ.spad
	@ (cd ${MID} ; 	echo ')co REPSQ.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<REPSQ.spad (SPAD from IN)>>=
${MID}/REPSQ.spad: ${IN}/defaults.spad.pamphlet
	@ echo 1113 making ${MID}/REPSQ.spad from ${IN}/defaults.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf REPSQ.NRLIB ; \
	${TANGLE} -R"package REPSQ RepeatedSquaring" ${IN}/defaults.spad.pamphlet >REPSQ.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<defaults.spad.dvi (DOC from IN)>>=
${DOC}/defaults.spad.dvi: ${IN}/defaults.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1114 making ${DOC}/defaults.spad.dvi from ${IN}/defaults.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/defaults.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} defaults.spad ; \
	rm -f ${DOC}/defaults.spad.pamphlet ; \
	rm -f ${DOC}/defaults.spad.tex ; \
	rm -f ${DOC}/defaults.spad )

@
\subsection{defintef.spad \cite{1}}
<<defintef.spad (SPAD from IN)>>=
${OUTSRC}/defintef.spad: ${IN}/defintef.spad.pamphlet
	@ echo 1115 making ${OUTSRC}/defintef.spad from ${IN}/defintef.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/defintef.spad.pamphlet >defintef.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DEFINTEF.o (O from NRLIB)>>=
${OUT}/DEFINTEF.o: ${MID}/DEFINTEF.NRLIB
	@ echo 1116-21 making ${OUT}/DEFINTEF.o from ${MID}/DEFINTEF.NRLIB
	@ cp ${MID}/DEFINTEF.NRLIB/code.o ${OUT}/DEFINTEF.o

@
<<DEFINTEF.NRLIB (NRLIB from MID)>>=
${MID}/DEFINTEF.NRLIB: ${MID}/DEFINTEF.spad
	@ echo 1117 making ${MID}/DEFINTEF.NRLIB from ${MID}/DEFINTEF.spad
	@ (cd ${MID} ; 	echo ')co DEFINTEF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DEFINTEF.spad (SPAD from IN)>>=
${MID}/DEFINTEF.spad: ${IN}/defintef.spad.pamphlet
	@ echo 1118 making ${MID}/DEFINTEF.spad from ${IN}/defintef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DEFINTEF.NRLIB ; \
	${TANGLE} -R"package DEFINTEF ElementaryFunctionDefiniteIntegration" ${IN}/defintef.spad.pamphlet >DEFINTEF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<defintef.spad.dvi (DOC from IN)>>=
${DOC}/defintef.spad.dvi: ${IN}/defintef.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1119 making ${DOC}/defintef.spad.dvi from ${IN}/defintef.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/defintef.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} defintef.spad ; \
	rm -f ${DOC}/defintef.spad.pamphlet ; \
	rm -f ${DOC}/defintef.spad.tex ; \
	rm -f ${DOC}/defintef.spad )

@
\subsection{defintrf.spad \cite{1}}
<<defintrf.spad (SPAD from IN)>>=
${OUTSRC}/defintrf.spad: ${IN}/defintrf.spad.pamphlet
	@ echo 1120 making ${OUTSRC}/defintrf.spad from ${IN}/defintrf.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/defintrf.spad.pamphlet >defintrf.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DEFINTRF.o (O from NRLIB)>>=
${OUT}/DEFINTRF.o: ${MID}/DEFINTRF.NRLIB
	@ echo 1121-21 making ${OUT}/DEFINTRF.o from ${MID}/DEFINTRF.NRLIB
	@ cp ${MID}/DEFINTRF.NRLIB/code.o ${OUT}/DEFINTRF.o

@
<<DEFINTRF.NRLIB (NRLIB from MID)>>=
${MID}/DEFINTRF.NRLIB: ${MID}/DEFINTRF.spad
	@ echo 1122 making ${MID}/DEFINTRF.NRLIB from ${MID}/DEFINTRF.spad
	@ (cd ${MID} ; 	echo ')co DEFINTRF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DEFINTRF.spad (SPAD from IN)>>=
${MID}/DEFINTRF.spad: ${IN}/defintrf.spad.pamphlet
	@ echo 1123 making ${MID}/DEFINTRF.spad from ${IN}/defintrf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DEFINTRF.NRLIB ; \
	${TANGLE} -R"package DEFINTRF RationalFunctionDefiniteIntegration" ${IN}/defintrf.spad.pamphlet >DEFINTRF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DFINTTLS.o (O from NRLIB)>>=
${OUT}/DFINTTLS.o: ${MID}/DFINTTLS.NRLIB
	@ echo 1124-21 making ${OUT}/DFINTTLS.o from ${MID}/DFINTTLS.NRLIB
	@ cp ${MID}/DFINTTLS.NRLIB/code.o ${OUT}/DFINTTLS.o

@
<<DFINTTLS.NRLIB (NRLIB from MID)>>=
${MID}/DFINTTLS.NRLIB: ${MID}/DFINTTLS.spad
	@ echo 1125 making ${MID}/DFINTTLS.NRLIB from ${MID}/DFINTTLS.spad
	@ (cd ${MID} ; 	echo ')co DFINTTLS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DFINTTLS.spad (SPAD from IN)>>=
${MID}/DFINTTLS.spad: ${IN}/defintrf.spad.pamphlet
	@ echo 1126 making ${MID}/DFINTTLS.spad from ${IN}/defintrf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DFINTTLS.NRLIB ; \
	${TANGLE} -R"package DFINTTLS DefiniteIntegrationTools" ${IN}/defintrf.spad.pamphlet >DFINTTLS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<defintrf.spad.dvi (DOC from IN)>>=
${DOC}/defintrf.spad.dvi: ${IN}/defintrf.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1127 making ${DOC}/defintrf.spad.dvi from ${IN}/defintrf.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/defintrf.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} defintrf.spad ; \
	rm -f ${DOC}/defintrf.spad.pamphlet ; \
	rm -f ${DOC}/defintrf.spad.tex ; \
	rm -f ${DOC}/defintrf.spad )

@
\subsection{degred.spad \cite{1}}
<<degred.spad (SPAD from IN)>>=
${OUTSRC}/degred.spad: ${IN}/degred.spad.pamphlet
	@ echo 1128 making ${OUTSRC}/degred.spad from ${IN}/degred.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/degred.spad.pamphlet >degred.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DEGRED.o (O from NRLIB)>>=
${OUT}/DEGRED.o: ${MID}/DEGRED.NRLIB
	@ echo 1129-9 making ${OUT}/DEGRED.o from ${MID}/DEGRED.NRLIB
	@ cp ${MID}/DEGRED.NRLIB/code.o ${OUT}/DEGRED.o

@
<<DEGRED.NRLIB (NRLIB from MID)>>=
${MID}/DEGRED.NRLIB: ${MID}/DEGRED.spad
	@ echo 1130 making ${MID}/DEGRED.NRLIB from ${MID}/DEGRED.spad
	@ (cd ${MID} ; 	echo ')co DEGRED.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DEGRED.spad (SPAD from IN)>>=
${MID}/DEGRED.spad: ${IN}/degred.spad.pamphlet
	@ echo 1131 making ${MID}/DEGRED.spad from ${IN}/degred.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DEGRED.NRLIB ; \
	${TANGLE} -R"package DEGRED DegreeReductionPackage" ${IN}/degred.spad.pamphlet >DEGRED.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<degred.spad.dvi (DOC from IN)>>=
${DOC}/degred.spad.dvi: ${IN}/degred.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1132 making ${DOC}/degred.spad.dvi from ${IN}/degred.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/degred.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} degred.spad ; \
	rm -f ${DOC}/degred.spad.pamphlet ; \
	rm -f ${DOC}/degred.spad.tex ; \
	rm -f ${DOC}/degred.spad )

@
\subsection{derham.spad \cite{1}}
<<derham.spad (SPAD from IN)>>=
${OUTSRC}/derham.spad: ${IN}/derham.spad.pamphlet
	@ echo 1133 making ${OUTSRC}/derham.spad from ${IN}/derham.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/derham.spad.pamphlet >derham.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ANTISYM.o (O from NRLIB)>>=
${OUT}/ANTISYM.o: ${MID}/ANTISYM.NRLIB
	@ echo 1134-19 making ${OUT}/ANTISYM.o from ${MID}/ANTISYM.NRLIB
	@ cp ${MID}/ANTISYM.NRLIB/code.o ${OUT}/ANTISYM.o

@
<<ANTISYM.NRLIB (NRLIB from MID)>>=
${MID}/ANTISYM.NRLIB: ${MID}/ANTISYM.spad
	@ echo 1135 making ${MID}/ANTISYM.NRLIB from ${MID}/ANTISYM.spad
	@ (cd ${MID} ; 	echo ')co ANTISYM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ANTISYM.spad (SPAD from IN)>>=
${MID}/ANTISYM.spad: ${IN}/derham.spad.pamphlet
	@ echo 1136 making ${MID}/ANTISYM.spad from ${IN}/derham.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ANTISYM.NRLIB ; \
	${TANGLE} -R"domain ANTISYM AntiSymm" ${IN}/derham.spad.pamphlet >ANTISYM.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DERHAM.o (O from NRLIB)>>=
${OUT}/DERHAM.o: ${MID}/DERHAM.NRLIB
	@ echo 1137-20 making ${OUT}/DERHAM.o from ${MID}/DERHAM.NRLIB
	@ cp ${MID}/DERHAM.NRLIB/code.o ${OUT}/DERHAM.o

@
<<DERHAM.NRLIB (NRLIB from MID)>>=
${MID}/DERHAM.NRLIB: ${MID}/DERHAM.spad
	@ echo 1138 making ${MID}/DERHAM.NRLIB from ${MID}/DERHAM.spad
	@ (cd ${MID} ; 	echo ')co DERHAM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DERHAM.spad (SPAD from IN)>>=
${MID}/DERHAM.spad: ${IN}/derham.spad.pamphlet
	@ echo 1139 making ${MID}/DERHAM.spad from ${IN}/derham.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DERHAM.NRLIB ; \
	${TANGLE} -R"domain DERHAM DeRhamComplex" ${IN}/derham.spad.pamphlet >DERHAM.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EAB.o (O from NRLIB)>>=
${OUT}/EAB.o: ${MID}/EAB.NRLIB
	@ echo 1140-9 making ${OUT}/EAB.o from ${MID}/EAB.NRLIB
	@ cp ${MID}/EAB.NRLIB/code.o ${OUT}/EAB.o

@
<<EAB.NRLIB (NRLIB from MID)>>=
${MID}/EAB.NRLIB: ${MID}/EAB.spad
	@ echo 1141 making ${MID}/EAB.NRLIB from ${MID}/EAB.spad
	@ (cd ${MID} ; 	echo ')co EAB.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EAB.spad (SPAD from IN)>>=
${MID}/EAB.spad: ${IN}/derham.spad.pamphlet
	@ echo 1142 making ${MID}/EAB.spad from ${IN}/derham.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf EAB.NRLIB ; \
	${TANGLE} -R"domain EAB ExtAlgBasis" ${IN}/derham.spad.pamphlet >EAB.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LALG-.o (O from NRLIB)>>=
${OUT}/LALG-.o: ${MID}/LALG.NRLIB
	@ echo 1143-5 making ${OUT}/LALG-.o from ${MID}/LALG-.NRLIB
	@ cp ${MID}/LALG-.NRLIB/code.o ${OUT}/LALG-.o

@
<<LALG-.NRLIB (NRLIB from MID)>>=
${MID}/LALG-.NRLIB: ${MID}/LALG.spad 
	@ echo 1144 making ${MID}/LALG-.NRLIB from ${MID}/LALG.spad
	@ (cd ${MID} ; 	echo ')co LALG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LALG.o (O from NRLIB)>>=
${OUT}/LALG.o: ${MID}/LALG.NRLIB
	@ echo 1145-5 making ${OUT}/LALG.o from ${MID}/LALG.NRLIB
	@ cp ${MID}/LALG.NRLIB/code.o ${OUT}/LALG.o

@
<<LALG.NRLIB (NRLIB from MID)>>=
${MID}/LALG.NRLIB: ${MID}/LALG.spad
	@ echo 1146 making ${MID}/LALG.NRLIB from ${MID}/LALG.spad
	@ (cd ${MID} ; 	echo ')co LALG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LALG.spad (SPAD from IN)>>=
${MID}/LALG.spad: ${IN}/derham.spad.pamphlet
	@ echo 1147 making ${MID}/LALG.spad from ${IN}/derham.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LALG.NRLIB ; \
	${TANGLE} -R"category LALG LeftAlgebra" ${IN}/derham.spad.pamphlet >LALG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<derham.spad.dvi (DOC from IN)>>=
${DOC}/derham.spad.dvi: ${IN}/derham.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1148 making ${DOC}/derham.spad.dvi from ${IN}/derham.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/derham.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} derham.spad ; \
	rm -f ${DOC}/derham.spad.pamphlet ; \
	rm -f ${DOC}/derham.spad.tex ; \
	rm -f ${DOC}/derham.spad )

@
\subsection{dhmatrix.spad \cite{1}}
<<dhmatrix.spad (SPAD from IN)>>=
${OUTSRC}/dhmatrix.spad: ${IN}/dhmatrix.spad.pamphlet
	@ echo 1149 making ${OUTSRC}/dhmatrix.spad from ${IN}/dhmatrix.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/dhmatrix.spad.pamphlet >dhmatrix.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DHMATRIX.o (O from NRLIB)>>=
${OUT}/DHMATRIX.o: ${MID}/DHMATRIX.NRLIB
	@ echo 1150-13 making ${OUT}/DHMATRIX.o from ${MID}/DHMATRIX.NRLIB
	@ cp ${MID}/DHMATRIX.NRLIB/code.o ${OUT}/DHMATRIX.o

@
<<DHMATRIX.NRLIB (NRLIB from MID)>>=
${MID}/DHMATRIX.NRLIB: ${MID}/DHMATRIX.spad
	@ echo 1151 making ${MID}/DHMATRIX.NRLIB from ${MID}/DHMATRIX.spad
	@ (cd ${MID} ; 	echo ')co DHMATRIX.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DHMATRIX.spad (SPAD from IN)>>=
${MID}/DHMATRIX.spad: ${IN}/dhmatrix.spad.pamphlet
	@ echo 1152 making ${MID}/DHMATRIX.spad from ${IN}/dhmatrix.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DHMATRIX.NRLIB ; \
	${TANGLE} -R"domain DHMATRIX DenavitHartenbergMatrix" ${IN}/dhmatrix.spad.pamphlet >DHMATRIX.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<dhmatrix.spad.dvi (DOC from IN)>>=
${DOC}/dhmatrix.spad.dvi: ${IN}/dhmatrix.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1153 making ${DOC}/dhmatrix.spad.dvi from ${IN}/dhmatrix.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/dhmatrix.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} dhmatrix.spad ; \
	rm -f ${DOC}/dhmatrix.spad.pamphlet ; \
	rm -f ${DOC}/dhmatrix.spad.tex ; \
	rm -f ${DOC}/dhmatrix.spad )

@
\subsection{divisor.spad \cite{1}}
<<divisor.spad (SPAD from IN)>>=
${OUTSRC}/divisor.spad: ${IN}/divisor.spad.pamphlet
	@ echo 1154 making ${OUTSRC}/divisor.spad from ${IN}/divisor.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/divisor.spad.pamphlet >divisor.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FDIV2.o (O from NRLIB)>>=
${OUT}/FDIV2.o: ${MID}/FDIV2.NRLIB
	@ echo 1155-20 making ${OUT}/FDIV2.o from ${MID}/FDIV2.NRLIB
	@ cp ${MID}/FDIV2.NRLIB/code.o ${OUT}/FDIV2.o

@
<<FDIV2.NRLIB (NRLIB from MID)>>=
${MID}/FDIV2.NRLIB: ${MID}/FDIV2.spad
	@ echo 1156 making ${MID}/FDIV2.NRLIB from ${MID}/FDIV2.spad
	@ (cd ${MID} ; 	echo ')co FDIV2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FDIV2.spad (SPAD from IN)>>=
${MID}/FDIV2.spad: ${IN}/divisor.spad.pamphlet
	@ echo 1157 making ${MID}/FDIV2.spad from ${IN}/divisor.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FDIV2.NRLIB ; \
	${TANGLE} -R"package FDIV2 FiniteDivisorFunctions2" ${IN}/divisor.spad.pamphlet >FDIV2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FDIV.o (O from NRLIB)>>=
${OUT}/FDIV.o: ${MID}/FDIV.NRLIB
	@ echo 1158-21 making ${OUT}/FDIV.o from ${MID}/FDIV.NRLIB
	@ cp ${MID}/FDIV.NRLIB/code.o ${OUT}/FDIV.o

@
<<FDIV.NRLIB (NRLIB from MID)>>=
${MID}/FDIV.NRLIB: ${MID}/FDIV.spad
	@ echo 1159 making ${MID}/FDIV.NRLIB from ${MID}/FDIV.spad
	@ (cd ${MID} ; 	echo ')co FDIV.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FDIV.spad (SPAD from IN)>>=
${MID}/FDIV.spad: ${IN}/divisor.spad.pamphlet
	@ echo 1160 making ${MID}/FDIV.spad from ${IN}/divisor.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FDIV.NRLIB ; \
	${TANGLE} -R"domain FDIV FiniteDivisor" ${IN}/divisor.spad.pamphlet >FDIV.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FDIVCAT-.o (O from NRLIB)>>=
${OUT}/FDIVCAT-.o: ${MID}/FDIVCAT.NRLIB
	@ echo 1161-20 making ${OUT}/FDIVCAT-.o from ${MID}/FDIVCAT-.NRLIB
	@ cp ${MID}/FDIVCAT-.NRLIB/code.o ${OUT}/FDIVCAT-.o

@
<<FDIVCAT-.NRLIB (NRLIB from MID)>>=
${MID}/FDIVCAT-.NRLIB: ${MID}/FDIVCAT.spad 
	@ echo 1162 making ${MID}/FDIVCAT-.NRLIB from ${MID}/FDIVCAT.spad
	@ (cd ${MID} ; 	echo ')co FDIVCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FDIVCAT.o (O from NRLIB)>>=
${OUT}/FDIVCAT.o: ${MID}/FDIVCAT.NRLIB
	@ echo 1163-20 making ${OUT}/FDIVCAT.o from ${MID}/FDIVCAT.NRLIB
	@ cp ${MID}/FDIVCAT.NRLIB/code.o ${OUT}/FDIVCAT.o

@
<<FDIVCAT.NRLIB (NRLIB from MID)>>=
${MID}/FDIVCAT.NRLIB: ${MID}/FDIVCAT.spad
	@ echo 1164 making ${MID}/FDIVCAT.NRLIB from ${MID}/FDIVCAT.spad
	@ (cd ${MID} ; 	echo ')co FDIVCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FDIVCAT.spad (SPAD from IN)>>=
${MID}/FDIVCAT.spad: ${IN}/divisor.spad.pamphlet
	@ echo 1165 making ${MID}/FDIVCAT.spad from ${IN}/divisor.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FDIVCAT.NRLIB ; \
	${TANGLE} -R"category FDIVCAT FiniteDivisorCategory" ${IN}/divisor.spad.pamphlet >FDIVCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FRIDEAL.o (O from NRLIB)>>=
${OUT}/FRIDEAL.o: ${MID}/FRIDEAL.NRLIB
	@ echo 1166-16 making ${OUT}/FRIDEAL.o from ${MID}/FRIDEAL.NRLIB
	@ cp ${MID}/FRIDEAL.NRLIB/code.o ${OUT}/FRIDEAL.o

@
<<FRIDEAL.NRLIB (NRLIB from MID)>>=
${MID}/FRIDEAL.NRLIB: ${MID}/FRIDEAL.spad
	@ echo 1167 making ${MID}/FRIDEAL.NRLIB from ${MID}/FRIDEAL.spad
	@ (cd ${MID} ; 	echo ')co FRIDEAL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FRIDEAL.spad (SPAD from IN)>>=
${MID}/FRIDEAL.spad: ${IN}/divisor.spad.pamphlet
	@ echo 1168 making ${MID}/FRIDEAL.spad from ${IN}/divisor.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FRIDEAL.NRLIB ; \
	${TANGLE} -R"domain FRIDEAL FractionalIdeal" ${IN}/divisor.spad.pamphlet >FRIDEAL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FRIDEAL2.o (O from NRLIB)>>=
${OUT}/FRIDEAL2.o: ${MID}/FRIDEAL2.NRLIB
	@ echo 1169-16 making ${OUT}/FRIDEAL2.o from ${MID}/FRIDEAL2.NRLIB
	@ cp ${MID}/FRIDEAL2.NRLIB/code.o ${OUT}/FRIDEAL2.o

@
<<FRIDEAL2.NRLIB (NRLIB from MID)>>=
${MID}/FRIDEAL2.NRLIB: ${MID}/FRIDEAL2.spad
	@ echo 1170 making ${MID}/FRIDEAL2.NRLIB from ${MID}/FRIDEAL2.spad
	@ (cd ${MID} ; 	echo ')co FRIDEAL2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FRIDEAL2.spad (SPAD from IN)>>=
${MID}/FRIDEAL2.spad: ${IN}/divisor.spad.pamphlet
	@ echo 1171 making ${MID}/FRIDEAL2.spad from ${IN}/divisor.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FRIDEAL2.NRLIB ; \
	${TANGLE} -R"package FRIDEAL2 FractionalIdealFunctions2" ${IN}/divisor.spad.pamphlet >FRIDEAL2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FRMOD.o (O from NRLIB)>>=
${OUT}/FRMOD.o: ${MID}/FRMOD.NRLIB
	@ echo 1172-16 making ${OUT}/FRMOD.o from ${MID}/FRMOD.NRLIB
	@ cp ${MID}/FRMOD.NRLIB/code.o ${OUT}/FRMOD.o

@
<<FRMOD.NRLIB (NRLIB from MID)>>=
${MID}/FRMOD.NRLIB: ${MID}/FRMOD.spad
	@ echo 1173 making ${MID}/FRMOD.NRLIB from ${MID}/FRMOD.spad
	@ (cd ${MID} ; 	echo ')co FRMOD.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FRMOD.spad (SPAD from IN)>>=
${MID}/FRMOD.spad: ${IN}/divisor.spad.pamphlet
	@ echo 1174 making ${MID}/FRMOD.spad from ${IN}/divisor.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FRMOD.NRLIB ; \
	${TANGLE} -R"domain FRMOD FramedModule" ${IN}/divisor.spad.pamphlet >FRMOD.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<HELLFDIV.o (O from NRLIB)>>=
${OUT}/HELLFDIV.o: ${MID}/HELLFDIV.NRLIB
	@ echo 1175-21 making ${OUT}/HELLFDIV.o from ${MID}/HELLFDIV.NRLIB
	@ cp ${MID}/HELLFDIV.NRLIB/code.o ${OUT}/HELLFDIV.o

@
<<HELLFDIV.NRLIB (NRLIB from MID)>>=
${MID}/HELLFDIV.NRLIB: ${MID}/HELLFDIV.spad
	@ echo 1176 making ${MID}/HELLFDIV.NRLIB from ${MID}/HELLFDIV.spad
	@ (cd ${MID} ; 	echo ')co HELLFDIV.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<HELLFDIV.spad (SPAD from IN)>>=
${MID}/HELLFDIV.spad: ${IN}/divisor.spad.pamphlet
	@ echo 1177 making ${MID}/HELLFDIV.spad from ${IN}/divisor.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf HELLFDIV.NRLIB ; \
	${TANGLE} -R"domain HELLFDIV HyperellipticFiniteDivisor" ${IN}/divisor.spad.pamphlet >HELLFDIV.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MHROWRED.o (O from NRLIB)>>=
${OUT}/MHROWRED.o: ${MID}/MHROWRED.NRLIB
	@ echo 1178-13 making ${OUT}/MHROWRED.o from ${MID}/MHROWRED.NRLIB
	@ cp ${MID}/MHROWRED.NRLIB/code.o ${OUT}/MHROWRED.o

@
<<MHROWRED.NRLIB (NRLIB from MID)>>=
${MID}/MHROWRED.NRLIB: ${MID}/MHROWRED.spad
	@ echo 1179 making ${MID}/MHROWRED.NRLIB from ${MID}/MHROWRED.spad
	@ (cd ${MID} ; 	echo ')co MHROWRED.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MHROWRED.spad (SPAD from IN)>>=
${MID}/MHROWRED.spad: ${IN}/divisor.spad.pamphlet
	@ echo 1180 making ${MID}/MHROWRED.spad from ${IN}/divisor.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MHROWRED.NRLIB ; \
	${TANGLE} -R"package MHROWRED ModularHermitianRowReduction" ${IN}/divisor.spad.pamphlet >MHROWRED.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<divisor.spad.dvi (DOC from IN)>>=
${DOC}/divisor.spad.dvi: ${IN}/divisor.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1181 making ${DOC}/divisor.spad.dvi from ${IN}/divisor.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/divisor.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} divisor.spad ; \
	rm -f ${DOC}/divisor.spad.pamphlet ; \
	rm -f ${DOC}/divisor.spad.tex ; \
	rm -f ${DOC}/divisor.spad )

@
\subsection{dpolcat.spad \cite{1}}
<<dpolcat.spad (SPAD from IN)>>=
${OUTSRC}/dpolcat.spad: ${IN}/dpolcat.spad.pamphlet
	@ echo 1182 making ${OUTSRC}/dpolcat.spad from ${IN}/dpolcat.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/dpolcat.spad.pamphlet >dpolcat.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SDPOL.o (O from NRLIB)>>=
${OUT}/SDPOL.o: ${MID}/SDPOL.NRLIB
	@ echo 1183-15 making ${OUT}/SDPOL.o from ${MID}/SDPOL.NRLIB
	@ cp ${MID}/SDPOL.NRLIB/code.o ${OUT}/SDPOL.o

@
<<SDPOL.NRLIB (NRLIB from MID)>>=
${MID}/SDPOL.NRLIB: ${MID}/SDPOL.spad
	@ echo 1184 making ${MID}/SDPOL.NRLIB from ${MID}/SDPOL.spad
	@ (cd ${MID} ; 	echo ')co SDPOL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SDPOL.spad (SPAD from IN)>>=
${MID}/SDPOL.spad: ${IN}/dpolcat.spad.pamphlet
	@ echo 1185 making ${MID}/SDPOL.spad from ${IN}/dpolcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SDPOL.NRLIB ; \
	${TANGLE} -R"domain SDPOL SequentialDifferentialPolynomial" ${IN}/dpolcat.spad.pamphlet >SDPOL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DSMP.o (O from NRLIB)>>=
${OUT}/DSMP.o: ${MID}/DSMP.NRLIB
	@ echo 1186-15 making ${OUT}/DSMP.o from ${MID}/DSMP.NRLIB
	@ cp ${MID}/DSMP.NRLIB/code.o ${OUT}/DSMP.o

@
<<DSMP.NRLIB (NRLIB from MID)>>=
${MID}/DSMP.NRLIB: ${MID}/DSMP.spad
	@ echo 1187 making ${MID}/DSMP.NRLIB from ${MID}/DSMP.spad
	@ (cd ${MID} ; 	echo ')co DSMP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DSMP.spad (SPAD from IN)>>=
${MID}/DSMP.spad: ${IN}/dpolcat.spad.pamphlet
	@ echo 1188 making ${MID}/DSMP.spad from ${IN}/dpolcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DSMP.NRLIB ; \
	${TANGLE} -R"domain DSMP DifferentialSparseMultivariatePolynomial" ${IN}/dpolcat.spad.pamphlet >DSMP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DPOLCAT-.o (O from NRLIB)>>=
${OUT}/DPOLCAT-.o: ${MID}/DPOLCAT.NRLIB
	@ echo 1189-14 making ${OUT}/DPOLCAT-.o from ${MID}/DPOLCAT-.NRLIB
	@ cp ${MID}/DPOLCAT-.NRLIB/code.o ${OUT}/DPOLCAT-.o

@
<<DPOLCAT-.NRLIB (NRLIB from MID)>>=
${MID}/DPOLCAT-.NRLIB: ${MID}/DPOLCAT.spad 
	@ echo 1190 making ${MID}/DPOLCAT-.NRLIB from ${MID}/DPOLCAT.spad
	@ (cd ${MID} ; 	echo ')co DPOLCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DPOLCAT.o (O from NRLIB)>>=
${OUT}/DPOLCAT.o: ${MID}/DPOLCAT.NRLIB
	@ echo 1191-14 making ${OUT}/DPOLCAT.o from ${MID}/DPOLCAT.NRLIB
	@ cp ${MID}/DPOLCAT.NRLIB/code.o ${OUT}/DPOLCAT.o

@
<<DPOLCAT.NRLIB (NRLIB from MID)>>=
${MID}/DPOLCAT.NRLIB: ${MID}/DPOLCAT.spad
	@ echo 1192 making ${MID}/DPOLCAT.NRLIB from ${MID}/DPOLCAT.spad
	@ (cd ${MID} ; 	echo ')co DPOLCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DPOLCAT.spad (SPAD from IN)>>=
${MID}/DPOLCAT.spad: ${IN}/dpolcat.spad.pamphlet
	@ echo 1193 making ${MID}/DPOLCAT.spad from ${IN}/dpolcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DPOLCAT.NRLIB ; \
	${TANGLE} -R"category DPOLCAT DifferentialPolynomialCategory" ${IN}/dpolcat.spad.pamphlet >DPOLCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DVARCAT-.o (O from NRLIB)>>=
${OUT}/DVARCAT-.o: ${MID}/DVARCAT.NRLIB
	@ echo 1194-5 making ${OUT}/DVARCAT-.o from ${MID}/DVARCAT-.NRLIB
	@ cp ${MID}/DVARCAT-.NRLIB/code.o ${OUT}/DVARCAT-.o

@
<<DVARCAT-.NRLIB (NRLIB from MID)>>=
${MID}/DVARCAT-.NRLIB: ${MID}/DVARCAT.spad 
	@ echo 1195 making ${MID}/DVARCAT-.NRLIB from ${MID}/DVARCAT.spad
	@ (cd ${MID} ; 	echo ')co DVARCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DVARCAT.o (O from NRLIB)>>=
${OUT}/DVARCAT.o: ${MID}/DVARCAT.NRLIB
	@ echo 1196-5 making ${OUT}/DVARCAT.o from ${MID}/DVARCAT.NRLIB
	@ cp ${MID}/DVARCAT.NRLIB/code.o ${OUT}/DVARCAT.o

@
<<DVARCAT.NRLIB (NRLIB from MID)>>=
${MID}/DVARCAT.NRLIB: ${MID}/DVARCAT.spad
	@ echo 1197 making ${MID}/DVARCAT.NRLIB from ${MID}/DVARCAT.spad
	@ (cd ${MID} ; 	echo ')co DVARCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DVARCAT.spad (SPAD from IN)>>=
${MID}/DVARCAT.spad: ${IN}/dpolcat.spad.pamphlet
	@ echo 1198 making ${MID}/DVARCAT.spad from ${IN}/dpolcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DVARCAT.NRLIB ; \
	${TANGLE} -R"category DVARCAT DifferentialVariableCategory" ${IN}/dpolcat.spad.pamphlet >DVARCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODPOL.o (O from NRLIB)>>=
${OUT}/ODPOL.o: ${MID}/ODPOL.NRLIB
	@ echo 1199-15 making ${OUT}/ODPOL.o from ${MID}/ODPOL.NRLIB
	@ cp ${MID}/ODPOL.NRLIB/code.o ${OUT}/ODPOL.o

@
<<ODPOL.NRLIB (NRLIB from MID)>>=
${MID}/ODPOL.NRLIB: ${MID}/ODPOL.spad
	@ echo 1200 making ${MID}/ODPOL.NRLIB from ${MID}/ODPOL.spad
	@ (cd ${MID} ; 	echo ')co ODPOL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODPOL.spad (SPAD from IN)>>=
${MID}/ODPOL.spad: ${IN}/dpolcat.spad.pamphlet
	@ echo 1201 making ${MID}/ODPOL.spad from ${IN}/dpolcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ODPOL.NRLIB ; \
	${TANGLE} -R"domain ODPOL OrderlyDifferentialPolynomial" ${IN}/dpolcat.spad.pamphlet >ODPOL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODVAR.o (O from NRLIB)>>=
${OUT}/ODVAR.o: ${MID}/ODVAR.NRLIB
	@ echo 1202-5 making ${OUT}/ODVAR.o from ${MID}/ODVAR.NRLIB
	@ cp ${MID}/ODVAR.NRLIB/code.o ${OUT}/ODVAR.o

@
<<ODVAR.NRLIB (NRLIB from MID)>>=
${MID}/ODVAR.NRLIB: ${MID}/ODVAR.spad
	@ echo 1203 making ${MID}/ODVAR.NRLIB from ${MID}/ODVAR.spad
	@ (cd ${MID} ; 	echo ')co ODVAR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODVAR.spad (SPAD from IN)>>=
${MID}/ODVAR.spad: ${IN}/dpolcat.spad.pamphlet
	@ echo 1204 making ${MID}/ODVAR.spad from ${IN}/dpolcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ODVAR.NRLIB ; \
	${TANGLE} -R"domain ODVAR OrderlyDifferentialVariable" ${IN}/dpolcat.spad.pamphlet >ODVAR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SDVAR.o (O from NRLIB)>>=
${OUT}/SDVAR.o: ${MID}/SDVAR.NRLIB
	@ echo 1205-5 making ${OUT}/SDVAR.o from ${MID}/SDVAR.NRLIB
	@ cp ${MID}/SDVAR.NRLIB/code.o ${OUT}/SDVAR.o

@
<<SDVAR.NRLIB (NRLIB from MID)>>=
${MID}/SDVAR.NRLIB: ${MID}/SDVAR.spad
	@ echo 1206 making ${MID}/SDVAR.NRLIB from ${MID}/SDVAR.spad
	@ (cd ${MID} ; 	echo ')co SDVAR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SDVAR.spad (SPAD from IN)>>=
${MID}/SDVAR.spad: ${IN}/dpolcat.spad.pamphlet
	@ echo 1207 making ${MID}/SDVAR.spad from ${IN}/dpolcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SDVAR.NRLIB ; \
	${TANGLE} -R"domain SDVAR SequentialDifferentialVariable" ${IN}/dpolcat.spad.pamphlet >SDVAR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<dpolcat.spad.dvi (DOC from IN)>>=
${DOC}/dpolcat.spad.dvi: ${IN}/dpolcat.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1208 making ${DOC}/dpolcat.spad.dvi from ${IN}/dpolcat.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/dpolcat.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} dpolcat.spad ; \
	rm -f ${DOC}/dpolcat.spad.pamphlet ; \
	rm -f ${DOC}/dpolcat.spad.tex ; \
	rm -f ${DOC}/dpolcat.spad )

@
\subsection{drawopt.spad \cite{1}}
<<drawopt.spad (SPAD from IN)>>=
${OUTSRC}/drawopt.spad: ${IN}/drawopt.spad.pamphlet
	@ echo 1209 making ${OUTSRC}/drawopt.spad from ${IN}/drawopt.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/drawopt.spad.pamphlet >drawopt.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DROPT.o (O from NRLIB)>>=
${OUT}/DROPT.o: ${MID}/DROPT.NRLIB
	@ echo 1210-19 making ${OUT}/DROPT.o from ${MID}/DROPT.NRLIB
	@ cp ${MID}/DROPT.NRLIB/code.o ${OUT}/DROPT.o

@
<<DROPT.NRLIB (NRLIB from MID)>>=
${MID}/DROPT.NRLIB: ${MID}/DROPT.spad
	@ echo 1211 making ${MID}/DROPT.NRLIB from ${MID}/DROPT.spad
	@ (cd ${MID} ; 	echo ')co DROPT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DROPT.spad (SPAD from IN)>>=
${MID}/DROPT.spad: ${IN}/drawopt.spad.pamphlet
	@ echo 1212 making ${MID}/DROPT.spad from ${IN}/drawopt.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DROPT.NRLIB ; \
	${TANGLE} -R"domain DROPT DrawOption" ${IN}/drawopt.spad.pamphlet >DROPT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DROPT0.o (O from NRLIB)>>=
${OUT}/DROPT0.o: ${MID}/DROPT0.NRLIB
	@ echo 1213-19 making ${OUT}/DROPT0.o from ${MID}/DROPT0.NRLIB
	@ cp ${MID}/DROPT0.NRLIB/code.o ${OUT}/DROPT0.o

@
<<DROPT0.NRLIB (NRLIB from MID)>>=
${MID}/DROPT0.NRLIB: ${MID}/DROPT0.spad
	@ echo 1214 making ${MID}/DROPT0.NRLIB from ${MID}/DROPT0.spad
	@ (cd ${MID} ; 	echo ')co DROPT0.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DROPT0.spad (SPAD from IN)>>=
${MID}/DROPT0.spad: ${IN}/drawopt.spad.pamphlet
	@ echo 1215 making ${MID}/DROPT0.spad from ${IN}/drawopt.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DROPT0.NRLIB ; \
	${TANGLE} -R"package DROPT0 DrawOptionFunctions0" ${IN}/drawopt.spad.pamphlet >DROPT0.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DROPT1.o (O from NRLIB)>>=
${OUT}/DROPT1.o: ${MID}/DROPT1.NRLIB
	@ echo 1216-1 making ${OUT}/DROPT1.o from ${MID}/DROPT1.NRLIB
	@ cp ${MID}/DROPT1.NRLIB/code.o ${OUT}/DROPT1.o

@
<<DROPT1.NRLIB (NRLIB from MID)>>=
${MID}/DROPT1.NRLIB: ${MID}/DROPT1.spad
	@ echo 1217 making ${MID}/DROPT1.NRLIB from ${MID}/DROPT1.spad
	@ (cd ${MID} ; 	echo ')co DROPT1.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DROPT1.spad (SPAD from IN)>>=
${MID}/DROPT1.spad: ${IN}/drawopt.spad.pamphlet
	@ echo 1218 making ${MID}/DROPT1.spad from ${IN}/drawopt.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DROPT1.NRLIB ; \
	${TANGLE} -R"package DROPT1 DrawOptionFunctions1" ${IN}/drawopt.spad.pamphlet >DROPT1.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<drawopt.spad.dvi (DOC from IN)>>=
${DOC}/drawopt.spad.dvi: ${IN}/drawopt.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1219 making ${DOC}/drawopt.spad.dvi from ${IN}/drawopt.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/drawopt.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} drawopt.spad ; \
	rm -f ${DOC}/drawopt.spad.pamphlet ; \
	rm -f ${DOC}/drawopt.spad.tex ; \
	rm -f ${DOC}/drawopt.spad )

@
\subsection{drawpak.spad \cite{1}}
<<drawpak.spad (SPAD from IN)>>=
${OUTSRC}/drawpak.spad: ${IN}/drawpak.spad.pamphlet
	@ echo 1220 making ${OUTSRC}/drawpak.spad from ${IN}/drawpak.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/drawpak.spad.pamphlet >drawpak.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DRAWCX.o (O from NRLIB)>>=
${OUT}/DRAWCX.o: ${MID}/DRAWCX.NRLIB
	@ echo 1221-10 making ${OUT}/DRAWCX.o from ${MID}/DRAWCX.NRLIB
	@ cp ${MID}/DRAWCX.NRLIB/code.o ${OUT}/DRAWCX.o

@
<<DRAWCX.NRLIB (NRLIB from MID)>>=
${MID}/DRAWCX.NRLIB: ${MID}/DRAWCX.spad
	@ echo 1222 making ${MID}/DRAWCX.NRLIB from ${MID}/DRAWCX.spad
	@ (cd ${MID} ; 	echo ')co DRAWCX.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DRAWCX.spad (SPAD from IN)>>=
${MID}/DRAWCX.spad: ${IN}/drawpak.spad.pamphlet
	@ echo 1223 making ${MID}/DRAWCX.spad from ${IN}/drawpak.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DRAWCX.NRLIB ; \
	${TANGLE} -R"package DRAWCX DrawComplex" ${IN}/drawpak.spad.pamphlet >DRAWCX.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<drawpak.spad.dvi (DOC from IN)>>=
${DOC}/drawpak.spad.dvi: ${IN}/drawpak.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1224 making ${DOC}/drawpak.spad.dvi from ${IN}/drawpak.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/drawpak.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} drawpak.spad ; \
	rm -f ${DOC}/drawpak.spad.pamphlet ; \
	rm -f ${DOC}/drawpak.spad.tex ; \
	rm -f ${DOC}/drawpak.spad )

@
\subsection{draw.spad \cite{1}}
<<draw.spad (SPAD from IN)>>=
${OUTSRC}/draw.spad: ${IN}/draw.spad.pamphlet
	@ echo 1225 making ${OUTSRC}/draw.spad from ${IN}/draw.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/draw.spad.pamphlet >draw.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DRAW.o (O from NRLIB)>>=
${OUT}/DRAW.o: ${MID}/DRAW.NRLIB
	@ echo 1226-19 making ${OUT}/DRAW.o from ${MID}/DRAW.NRLIB
	@ cp ${MID}/DRAW.NRLIB/code.o ${OUT}/DRAW.o

@
<<DRAW.NRLIB (NRLIB from MID)>>=
${MID}/DRAW.NRLIB: ${MID}/DRAW.spad
	@ echo 1227 making ${MID}/DRAW.NRLIB from ${MID}/DRAW.spad
	@ (cd ${MID} ; 	echo ')co DRAW.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DRAW.spad (SPAD from IN)>>=
${MID}/DRAW.spad: ${IN}/draw.spad.pamphlet
	@ echo 1228 making ${MID}/DRAW.spad from ${IN}/draw.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DRAW.NRLIB ; \
	${TANGLE} -R"package DRAW TopLevelDrawFunctions" ${IN}/draw.spad.pamphlet >DRAW.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DRAWCFUN.o (O from NRLIB)>>=
${OUT}/DRAWCFUN.o: ${MID}/DRAWCFUN.NRLIB
	@ echo 1229-19 making ${OUT}/DRAWCFUN.o from ${MID}/DRAWCFUN.NRLIB
	@ cp ${MID}/DRAWCFUN.NRLIB/code.o ${OUT}/DRAWCFUN.o

@
<<DRAWCFUN.NRLIB (NRLIB from MID)>>=
${MID}/DRAWCFUN.NRLIB: ${MID}/DRAWCFUN.spad
	@ echo 1230 making ${MID}/DRAWCFUN.NRLIB from ${MID}/DRAWCFUN.spad
	@ (cd ${MID} ; 	echo ')co DRAWCFUN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DRAWCFUN.spad (SPAD from IN)>>=
${MID}/DRAWCFUN.spad: ${IN}/draw.spad.pamphlet
	@ echo 1231 making ${MID}/DRAWCFUN.spad from ${IN}/draw.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DRAWCFUN.NRLIB ; \
	${TANGLE} -R"package DRAWCFUN TopLevelDrawFunctionsForCompiledFunctions" ${IN}/draw.spad.pamphlet >DRAWCFUN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DRAWCURV.o (O from NRLIB)>>=
${OUT}/DRAWCURV.o: ${MID}/DRAWCURV.NRLIB
	@ echo 1232-20 making ${OUT}/DRAWCURV.o from ${MID}/DRAWCURV.NRLIB
	@ cp ${MID}/DRAWCURV.NRLIB/code.o ${OUT}/DRAWCURV.o

@
<<DRAWCURV.NRLIB (NRLIB from MID)>>=
${MID}/DRAWCURV.NRLIB: ${MID}/DRAWCURV.spad
	@ echo 1233 making ${MID}/DRAWCURV.NRLIB from ${MID}/DRAWCURV.spad
	@ (cd ${MID} ; 	echo ')co DRAWCURV.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DRAWCURV.spad (SPAD from IN)>>=
${MID}/DRAWCURV.spad: ${IN}/draw.spad.pamphlet
	@ echo 1234 making ${MID}/DRAWCURV.spad from ${IN}/draw.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DRAWCURV.NRLIB ; \
	${TANGLE} -R"package DRAWCURV TopLevelDrawFunctionsForAlgebraicCurves" ${IN}/draw.spad.pamphlet >DRAWCURV.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DRAWPT.o (O from NRLIB)>>=
${OUT}/DRAWPT.o: ${MID}/DRAWPT.NRLIB
	@ echo 1235-10 making ${OUT}/DRAWPT.o from ${MID}/DRAWPT.NRLIB
	@ cp ${MID}/DRAWPT.NRLIB/code.o ${OUT}/DRAWPT.o

@
<<DRAWPT.NRLIB (NRLIB from MID)>>=
${MID}/DRAWPT.NRLIB: ${MID}/DRAWPT.spad
	@ echo 1236 making ${MID}/DRAWPT.NRLIB from ${MID}/DRAWPT.spad
	@ (cd ${MID} ; 	echo ')co DRAWPT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DRAWPT.spad (SPAD from IN)>>=
${MID}/DRAWPT.spad: ${IN}/draw.spad.pamphlet
	@ echo 1237 making ${MID}/DRAWPT.spad from ${IN}/draw.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DRAWPT.NRLIB ; \
	${TANGLE} -R"package DRAWPT TopLevelDrawFunctionsForPoints" ${IN}/draw.spad.pamphlet >DRAWPT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<draw.spad.dvi (DOC from IN)>>=
${DOC}/draw.spad.dvi: ${IN}/draw.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1238 making ${DOC}/draw.spad.dvi from ${IN}/draw.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/draw.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} draw.spad ; \
	rm -f ${DOC}/draw.spad.pamphlet ; \
	rm -f ${DOC}/draw.spad.tex ; \
	rm -f ${DOC}/draw.spad )

@
\subsection{e01.spad \cite{1}}
<<e01.spad (SPAD from IN)>>=
${OUTSRC}/e01.spad: ${IN}/e01.spad.pamphlet
	@ echo 1239 making ${OUTSRC}/e01.spad from ${IN}/e01.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/e01.spad.pamphlet >e01.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGE01.o (O from NRLIB)>>=
${OUT}/NAGE01.o: ${MID}/NAGE01.NRLIB
	@ echo 1240-19 making ${OUT}/NAGE01.o from ${MID}/NAGE01.NRLIB
	@ cp ${MID}/NAGE01.NRLIB/code.o ${OUT}/NAGE01.o

@
<<NAGE01.NRLIB (NRLIB from MID)>>=
${MID}/NAGE01.NRLIB: ${MID}/NAGE01.spad
	@ echo 1241 making ${MID}/NAGE01.NRLIB from ${MID}/NAGE01.spad
	@ (cd ${MID} ; 	echo ')co NAGE01.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGE01.spad (SPAD from IN)>>=
${MID}/NAGE01.spad: ${IN}/e01.spad.pamphlet
	@ echo 1242 making ${MID}/NAGE01.spad from ${IN}/e01.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NAGE01.NRLIB ; \
	${TANGLE} -R"package NAGE01 NagInterpolationPackage" ${IN}/e01.spad.pamphlet >NAGE01.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<e01.spad.dvi (DOC from IN)>>=
${DOC}/e01.spad.dvi: ${IN}/e01.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1243 making ${DOC}/e01.spad.dvi from ${IN}/e01.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/e01.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} e01.spad ; \
	rm -f ${DOC}/e01.spad.pamphlet ; \
	rm -f ${DOC}/e01.spad.tex ; \
	rm -f ${DOC}/e01.spad )

@
\subsection{e02.spad \cite{1}}
<<e02.spad (SPAD from IN)>>=
${OUTSRC}/e02.spad: ${IN}/e02.spad.pamphlet
	@ echo 1244 making ${OUTSRC}/e02.spad from ${IN}/e02.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/e02.spad.pamphlet >e02.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGE02.o (O from NRLIB)>>=
${OUT}/NAGE02.o: ${MID}/NAGE02.NRLIB
	@ echo 1245-19 making ${OUT}/NAGE02.o from ${MID}/NAGE02.NRLIB
	@ cp ${MID}/NAGE02.NRLIB/code.o ${OUT}/NAGE02.o

@
<<NAGE02.NRLIB (NRLIB from MID)>>=
${MID}/NAGE02.NRLIB: ${MID}/NAGE02.spad
	@ echo 1246 making ${MID}/NAGE02.NRLIB from ${MID}/NAGE02.spad
	@ (cd ${MID} ; 	echo ')co NAGE02.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGE02.spad (SPAD from IN)>>=
${MID}/NAGE02.spad: ${IN}/e02.spad.pamphlet
	@ echo 1247 making ${MID}/NAGE02.spad from ${IN}/e02.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NAGE02.NRLIB ; \
	${TANGLE} -R"package NAGE02 NagFittingPackage" ${IN}/e02.spad.pamphlet >NAGE02.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<e02.spad.dvi (DOC from IN)>>=
${DOC}/e02.spad.dvi: ${IN}/e02.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1248 making ${DOC}/e02.spad.dvi from ${IN}/e02.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/e02.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} e02.spad ; \
	rm -f ${DOC}/e02.spad.pamphlet ; \
	rm -f ${DOC}/e02.spad.tex ; \
	rm -f ${DOC}/e02.spad )

@
\subsection{e04agents.spad \cite{1}}
<<e04agents.spad (SPAD from IN)>>=
${OUTSRC}/e04agents.spad: ${IN}/e04agents.spad.pamphlet
	@ echo 1249 making ${OUTSRC}/e04agents.spad from ${IN}/e04agents.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/e04agents.spad.pamphlet >e04agents.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<E04AGNT.o (O from NRLIB)>>=
${OUT}/E04AGNT.o: ${MID}/E04AGNT.NRLIB
	@ echo 1250-19 making ${OUT}/E04AGNT.o from ${MID}/E04AGNT.NRLIB
	@ cp ${MID}/E04AGNT.NRLIB/code.o ${OUT}/E04AGNT.o

@
<<E04AGNT.NRLIB (NRLIB from MID)>>=
${MID}/E04AGNT.NRLIB: ${MID}/E04AGNT.spad
	@ echo 1251 making ${MID}/E04AGNT.NRLIB from ${MID}/E04AGNT.spad
	@ (cd ${MID} ; 	echo ')co E04AGNT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<E04AGNT.spad (SPAD from IN)>>=
${MID}/E04AGNT.spad: ${IN}/e04agents.spad.pamphlet
	@ echo 1252 making ${MID}/E04AGNT.spad from ${IN}/e04agents.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf E04AGNT.NRLIB ; \
	${TANGLE} -R"package E04AGNT e04AgentsPackage" ${IN}/e04agents.spad.pamphlet >E04AGNT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<e04agents.spad.dvi (DOC from IN)>>=
${DOC}/e04agents.spad.dvi: ${IN}/e04agents.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1253 making ${DOC}/e04agents.spad.dvi from ${IN}/e04agents.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/e04agents.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} e04agents.spad ; \
	rm -f ${DOC}/e04agents.spad.pamphlet ; \
	rm -f ${DOC}/e04agents.spad.tex ; \
	rm -f ${DOC}/e04agents.spad )

@
\subsection{e04Package.spad \cite{1}}
<<e04Package.spad (SPAD from IN)>>=
${OUTSRC}/e04Package.spad: ${IN}/e04Package.spad.pamphlet
	@ echo 1254 making ${OUTSRC}/e04Package.spad from ${IN}/e04Package.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/e04Package.spad.pamphlet >e04Package.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OPTPACK.o (O from NRLIB)>>=
${OUT}/OPTPACK.o: ${MID}/OPTPACK.NRLIB
	@ echo 1255-19 making ${OUT}/OPTPACK.o from ${MID}/OPTPACK.NRLIB
	@ cp ${MID}/OPTPACK.NRLIB/code.o ${OUT}/OPTPACK.o

@
<<OPTPACK.NRLIB (NRLIB from MID)>>=
${MID}/OPTPACK.NRLIB: ${MID}/OPTPACK.spad
	@ echo 1256 making ${MID}/OPTPACK.NRLIB from ${MID}/OPTPACK.spad
	@ (cd ${MID} ; 	echo ')co OPTPACK.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OPTPACK.spad (SPAD from IN)>>=
${MID}/OPTPACK.spad: ${IN}/e04Package.spad.pamphlet
	@ echo 1257 making ${MID}/OPTPACK.spad from ${IN}/e04Package.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OPTPACK.NRLIB ; \
	${TANGLE} -R"package OPTPACK AnnaNumericalOptimizationPackage" ${IN}/e04Package.spad.pamphlet >OPTPACK.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<e04Package.spad.dvi (DOC from IN)>>=
${DOC}/e04Package.spad.dvi: ${IN}/e04Package.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1258 making ${DOC}/e04Package.spad.dvi from ${IN}/e04Package.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/e04Package.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} e04Package.spad ; \
	rm -f ${DOC}/e04Package.spad.pamphlet ; \
	rm -f ${DOC}/e04Package.spad.tex ; \
	rm -f ${DOC}/e04Package.spad )

@
\subsection{e04routine.spad \cite{1}}
<<e04routine.spad (SPAD from IN)>>=
${OUTSRC}/e04routine.spad: ${IN}/e04routine.spad.pamphlet
	@ echo 1259 making ${OUTSRC}/e04routine.spad from ${IN}/e04routine.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/e04routine.spad.pamphlet >e04routine.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<E04DGFA.o (O from NRLIB)>>=
${OUT}/E04DGFA.o: ${MID}/E04DGFA.NRLIB
	@ echo 1260-14 making ${OUT}/E04DGFA.o from ${MID}/E04DGFA.NRLIB
	@ cp ${MID}/E04DGFA.NRLIB/code.o ${OUT}/E04DGFA.o

@
<<E04DGFA.NRLIB (NRLIB from MID)>>=
${MID}/E04DGFA.NRLIB: ${MID}/E04DGFA.spad
	@ echo 1261 making ${MID}/E04DGFA.NRLIB from ${MID}/E04DGFA.spad
	@ (cd ${MID} ; 	echo ')co E04DGFA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<E04DGFA.spad (SPAD from IN)>>=
${MID}/E04DGFA.spad: ${IN}/e04routine.spad.pamphlet
	@ echo 1262 making ${MID}/E04DGFA.spad from ${IN}/e04routine.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf E04DGFA.NRLIB ; \
	${TANGLE} -R"domain E04DGFA e04dgfAnnaType" ${IN}/e04routine.spad.pamphlet >E04DGFA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<E04FDFA.o (O from NRLIB)>>=
${OUT}/E04FDFA.o: ${MID}/E04FDFA.NRLIB
	@ echo 1263-14 making ${OUT}/E04FDFA.o from ${MID}/E04FDFA.NRLIB
	@ cp ${MID}/E04FDFA.NRLIB/code.o ${OUT}/E04FDFA.o

@
<<E04FDFA.NRLIB (NRLIB from MID)>>=
${MID}/E04FDFA.NRLIB: ${MID}/E04FDFA.spad
	@ echo 1264 making ${MID}/E04FDFA.NRLIB from ${MID}/E04FDFA.spad
	@ (cd ${MID} ; 	echo ')co E04FDFA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<E04FDFA.spad (SPAD from IN)>>=
${MID}/E04FDFA.spad: ${IN}/e04routine.spad.pamphlet
	@ echo 1265 making ${MID}/E04FDFA.spad from ${IN}/e04routine.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf E04FDFA.NRLIB ; \
	${TANGLE} -R"domain E04FDFA e04fdfAnnaType" ${IN}/e04routine.spad.pamphlet >E04FDFA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<E04JAFA.o (O from NRLIB)>>=
${OUT}/E04JAFA.o: ${MID}/E04JAFA.NRLIB
	@ echo 1266-14 making ${OUT}/E04JAFA.o from ${MID}/E04JAFA.NRLIB
	@ cp ${MID}/E04JAFA.NRLIB/code.o ${OUT}/E04JAFA.o

@
<<E04JAFA.NRLIB (NRLIB from MID)>>=
${MID}/E04JAFA.NRLIB: ${MID}/E04JAFA.spad
	@ echo 1267 making ${MID}/E04JAFA.NRLIB from ${MID}/E04JAFA.spad
	@ (cd ${MID} ; 	echo ')co E04JAFA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<E04JAFA.spad (SPAD from IN)>>=
${MID}/E04JAFA.spad: ${IN}/e04routine.spad.pamphlet
	@ echo 1268 making ${MID}/E04JAFA.spad from ${IN}/e04routine.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf E04JAFA.NRLIB ; \
	${TANGLE} -R"domain E04JAFA e04jafAnnaType" ${IN}/e04routine.spad.pamphlet >E04JAFA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<E04GCFA.o (O from NRLIB)>>=
${OUT}/E04GCFA.o: ${MID}/E04GCFA.NRLIB
	@ echo 1269-14 making ${OUT}/E04GCFA.o from ${MID}/E04GCFA.NRLIB
	@ cp ${MID}/E04GCFA.NRLIB/code.o ${OUT}/E04GCFA.o

@
<<E04GCFA.NRLIB (NRLIB from MID)>>=
${MID}/E04GCFA.NRLIB: ${MID}/E04GCFA.spad
	@ echo 1270 making ${MID}/E04GCFA.NRLIB from ${MID}/E04GCFA.spad
	@ (cd ${MID} ; 	echo ')co E04GCFA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<E04GCFA.spad (SPAD from IN)>>=
${MID}/E04GCFA.spad: ${IN}/e04routine.spad.pamphlet
	@ echo 1271 making ${MID}/E04GCFA.spad from ${IN}/e04routine.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf E04GCFA.NRLIB ; \
	${TANGLE} -R"domain E04GCFA e04gcfAnnaType" ${IN}/e04routine.spad.pamphlet >E04GCFA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<E04MBFA.o (O from NRLIB)>>=
${OUT}/E04MBFA.o: ${MID}/E04MBFA.NRLIB
	@ echo 1272-11 making ${OUT}/E04MBFA.o from ${MID}/E04MBFA.NRLIB
	@ cp ${MID}/E04MBFA.NRLIB/code.o ${OUT}/E04MBFA.o

@
<<E04MBFA.NRLIB (NRLIB from MID)>>=
${MID}/E04MBFA.NRLIB: ${MID}/E04MBFA.spad
	@ echo 1273 making ${MID}/E04MBFA.NRLIB from ${MID}/E04MBFA.spad
	@ (cd ${MID} ; 	echo ')co E04MBFA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<E04MBFA.spad (SPAD from IN)>>=
${MID}/E04MBFA.spad: ${IN}/e04routine.spad.pamphlet
	@ echo 1274 making ${MID}/E04MBFA.spad from ${IN}/e04routine.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf E04MBFA.NRLIB ; \
	${TANGLE} -R"domain E04MBFA e04mbfAnnaType" ${IN}/e04routine.spad.pamphlet >E04MBFA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<E04NAFA.o (O from NRLIB)>>=
${OUT}/E04NAFA.o: ${MID}/E04NAFA.NRLIB
	@ echo 1275-20 making ${OUT}/E04NAFA.o from ${MID}/E04NAFA.NRLIB
	@ cp ${MID}/E04NAFA.NRLIB/code.o ${OUT}/E04NAFA.o

@
<<E04NAFA.NRLIB (NRLIB from MID)>>=
${MID}/E04NAFA.NRLIB: ${MID}/E04NAFA.spad
	@ echo 1276 making ${MID}/E04NAFA.NRLIB from ${MID}/E04NAFA.spad
	@ (cd ${MID} ; 	echo ')co E04NAFA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<E04NAFA.spad (SPAD from IN)>>=
${MID}/E04NAFA.spad: ${IN}/e04routine.spad.pamphlet
	@ echo 1277 making ${MID}/E04NAFA.spad from ${IN}/e04routine.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf E04NAFA.NRLIB ; \
	${TANGLE} -R"domain E04NAFA e04nafAnnaType" ${IN}/e04routine.spad.pamphlet >E04NAFA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<E04UCFA.o (O from NRLIB)>>=
${OUT}/E04UCFA.o: ${MID}/E04UCFA.NRLIB
	@ echo 1278-20 making ${OUT}/E04UCFA.o from ${MID}/E04UCFA.NRLIB
	@ cp ${MID}/E04UCFA.NRLIB/code.o ${OUT}/E04UCFA.o

@
<<E04UCFA.NRLIB (NRLIB from MID)>>=
${MID}/E04UCFA.NRLIB: ${MID}/E04UCFA.spad
	@ echo 1279 making ${MID}/E04UCFA.NRLIB from ${MID}/E04UCFA.spad
	@ (cd ${MID} ; 	echo ')co E04UCFA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<E04UCFA.spad (SPAD from IN)>>=
${MID}/E04UCFA.spad: ${IN}/e04routine.spad.pamphlet
	@ echo 1280 making ${MID}/E04UCFA.spad from ${IN}/e04routine.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf E04UCFA.NRLIB ; \
	${TANGLE} -R"domain E04UCFA e04ucfAnnaType" ${IN}/e04routine.spad.pamphlet >E04UCFA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<e04routine.spad.dvi (DOC from IN)>>=
${DOC}/e04routine.spad.dvi: ${IN}/e04routine.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1281 making ${DOC}/e04routine.spad.dvi from ${IN}/e04routine.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/e04routine.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} e04routine.spad ; \
	rm -f ${DOC}/e04routine.spad.pamphlet ; \
	rm -f ${DOC}/e04routine.spad.tex ; \
	rm -f ${DOC}/e04routine.spad )

@
\subsection{e04.spad \cite{1}}
<<e04.spad (SPAD from IN)>>=
${OUTSRC}/e04.spad: ${IN}/e04.spad.pamphlet
	@ echo 1282 making ${OUTSRC}/e04.spad from ${IN}/e04.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/e04.spad.pamphlet >e04.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGE04.o (O from NRLIB)>>=
${OUT}/NAGE04.o: ${MID}/NAGE04.NRLIB
	@ echo 1283-19 making ${OUT}/NAGE04.o from ${MID}/NAGE04.NRLIB
	@ cp ${MID}/NAGE04.NRLIB/code.o ${OUT}/NAGE04.o

@
<<NAGE04.NRLIB (NRLIB from MID)>>=
${MID}/NAGE04.NRLIB: ${MID}/NAGE04.spad
	@ echo 1284 making ${MID}/NAGE04.NRLIB from ${MID}/NAGE04.spad
	@ (cd ${MID} ; 	echo ')co NAGE04.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGE04.spad (SPAD from IN)>>=
${MID}/NAGE04.spad: ${IN}/e04.spad.pamphlet
	@ echo 1285 making ${MID}/NAGE04.spad from ${IN}/e04.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NAGE04.NRLIB ; \
	${TANGLE} -R"package NAGE04 NagOptimisationPackage" ${IN}/e04.spad.pamphlet >NAGE04.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<e04.spad.dvi (DOC from IN)>>=
${DOC}/e04.spad.dvi: ${IN}/e04.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1286 making ${DOC}/e04.spad.dvi from ${IN}/e04.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/e04.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} e04.spad ; \
	rm -f ${DOC}/e04.spad.pamphlet ; \
	rm -f ${DOC}/e04.spad.tex ; \
	rm -f ${DOC}/e04.spad )

@
\subsection{efstruc.spad \cite{1}}
<<efstruc.spad (SPAD from IN)>>=
${OUTSRC}/efstruc.spad: ${IN}/efstruc.spad.pamphlet
	@ echo 1287 making ${OUTSRC}/efstruc.spad from ${IN}/efstruc.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/efstruc.spad.pamphlet >efstruc.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CTRIGMNP.o (O from NRLIB)>>=
${OUT}/CTRIGMNP.o: ${MID}/CTRIGMNP.NRLIB
	@ echo 1288-20 making ${OUT}/CTRIGMNP.o from ${MID}/CTRIGMNP.NRLIB
	@ cp ${MID}/CTRIGMNP.NRLIB/code.o ${OUT}/CTRIGMNP.o

@
<<CTRIGMNP.NRLIB (NRLIB from MID)>>=
${MID}/CTRIGMNP.NRLIB: ${MID}/CTRIGMNP.spad
	@ echo 1289 making ${MID}/CTRIGMNP.NRLIB from ${MID}/CTRIGMNP.spad
	@ (cd ${MID} ; 	echo ')co CTRIGMNP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CTRIGMNP.spad (SPAD from IN)>>=
${MID}/CTRIGMNP.spad: ${IN}/efstruc.spad.pamphlet
	@ echo 1290 making ${MID}/CTRIGMNP.spad from ${IN}/efstruc.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CTRIGMNP.NRLIB ; \
	${TANGLE} -R"package CTRIGMNP ComplexTrigonometricManipulations" ${IN}/efstruc.spad.pamphlet >CTRIGMNP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EFSTRUC.o (O from NRLIB)>>=
${OUT}/EFSTRUC.o: ${MID}/EFSTRUC.NRLIB
	@ echo 1291-20 making ${OUT}/EFSTRUC.o from ${MID}/EFSTRUC.NRLIB
	@ cp ${MID}/EFSTRUC.NRLIB/code.o ${OUT}/EFSTRUC.o

@
<<EFSTRUC.NRLIB (NRLIB from MID)>>=
${MID}/EFSTRUC.NRLIB: ${MID}/EFSTRUC.spad
	@ echo 1292 making ${MID}/EFSTRUC.NRLIB from ${MID}/EFSTRUC.spad
	@ (cd ${MID} ; 	echo ')co EFSTRUC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EFSTRUC.spad (SPAD from IN)>>=
${MID}/EFSTRUC.spad: ${IN}/efstruc.spad.pamphlet
	@ echo 1293 making ${MID}/EFSTRUC.spad from ${IN}/efstruc.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf EFSTRUC.NRLIB ; \
	${TANGLE} -R"package EFSTRUC ElementaryFunctionStructurePackage" ${IN}/efstruc.spad.pamphlet >EFSTRUC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ITRIGMNP.o (O from NRLIB)>>=
${OUT}/ITRIGMNP.o: ${MID}/ITRIGMNP.NRLIB
	@ echo 1294-20 making ${OUT}/ITRIGMNP.o from ${MID}/ITRIGMNP.NRLIB
	@ cp ${MID}/ITRIGMNP.NRLIB/code.o ${OUT}/ITRIGMNP.o

@
<<ITRIGMNP.NRLIB (NRLIB from MID)>>=
${MID}/ITRIGMNP.NRLIB: ${MID}/ITRIGMNP.spad
	@ echo 1295 making ${MID}/ITRIGMNP.NRLIB from ${MID}/ITRIGMNP.spad
	@ (cd ${MID} ; 	echo ')co ITRIGMNP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ITRIGMNP.spad (SPAD from IN)>>=
${MID}/ITRIGMNP.spad: ${IN}/efstruc.spad.pamphlet
	@ echo 1296 making ${MID}/ITRIGMNP.spad from ${IN}/efstruc.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ITRIGMNP.NRLIB ; \
	${TANGLE} -R"package ITRIGMNP InnerTrigonometricManipulations" ${IN}/efstruc.spad.pamphlet >ITRIGMNP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SYMFUNC.o (O from NRLIB)>>=
${OUT}/SYMFUNC.o: ${MID}/SYMFUNC.NRLIB
	@ echo 1297-13 making ${OUT}/SYMFUNC.o from ${MID}/SYMFUNC.NRLIB
	@ cp ${MID}/SYMFUNC.NRLIB/code.o ${OUT}/SYMFUNC.o

@
<<SYMFUNC.NRLIB (NRLIB from MID)>>=
${MID}/SYMFUNC.NRLIB: ${MID}/SYMFUNC.spad
	@ echo 1298 making ${MID}/SYMFUNC.NRLIB from ${MID}/SYMFUNC.spad
	@ (cd ${MID} ; 	echo ')co SYMFUNC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SYMFUNC.spad (SPAD from IN)>>=
${MID}/SYMFUNC.spad: ${IN}/efstruc.spad.pamphlet
	@ echo 1299 making ${MID}/SYMFUNC.spad from ${IN}/efstruc.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SYMFUNC.NRLIB ; \
	${TANGLE} -R"package SYMFUNC SymmetricFunctions" ${IN}/efstruc.spad.pamphlet >SYMFUNC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TRIGMNIP.o (O from NRLIB)>>=
${OUT}/TRIGMNIP.o: ${MID}/TRIGMNIP.NRLIB
	@ echo 1300-20 making ${OUT}/TRIGMNIP.o from ${MID}/TRIGMNIP.NRLIB
	@ cp ${MID}/TRIGMNIP.NRLIB/code.o ${OUT}/TRIGMNIP.o

@
<<TRIGMNIP.NRLIB (NRLIB from MID)>>=
${MID}/TRIGMNIP.NRLIB: ${MID}/TRIGMNIP.spad
	@ echo 1301 making ${MID}/TRIGMNIP.NRLIB from ${MID}/TRIGMNIP.spad
	@ (cd ${MID} ; 	echo ')co TRIGMNIP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TRIGMNIP.spad (SPAD from IN)>>=
${MID}/TRIGMNIP.spad: ${IN}/efstruc.spad.pamphlet
	@ echo 1302 making ${MID}/TRIGMNIP.spad from ${IN}/efstruc.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf TRIGMNIP.NRLIB ; \
	${TANGLE} -R"package TRIGMNIP TrigonometricManipulations" ${IN}/efstruc.spad.pamphlet >TRIGMNIP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TANEXP.o (O from NRLIB)>>=
${OUT}/TANEXP.o: ${MID}/TANEXP.NRLIB
	@ echo 1303-14 making ${OUT}/TANEXP.o from ${MID}/TANEXP.NRLIB
	@ cp ${MID}/TANEXP.NRLIB/code.o ${OUT}/TANEXP.o

@
<<TANEXP.NRLIB (NRLIB from MID)>>=
${MID}/TANEXP.NRLIB: ${MID}/TANEXP.spad
	@ echo 1304 making ${MID}/TANEXP.NRLIB from ${MID}/TANEXP.spad
	@ (cd ${MID} ; 	echo ')co TANEXP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TANEXP.spad (SPAD from IN)>>=
${MID}/TANEXP.spad: ${IN}/efstruc.spad.pamphlet
	@ echo 1305 making ${MID}/TANEXP.spad from ${IN}/efstruc.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf TANEXP.NRLIB ; \
	${TANGLE} -R"package TANEXP TangentExpansions" ${IN}/efstruc.spad.pamphlet >TANEXP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<efstruc.spad.dvi (DOC from IN)>>=
${DOC}/efstruc.spad.dvi: ${IN}/efstruc.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1306 making ${DOC}/efstruc.spad.dvi from ${IN}/efstruc.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/efstruc.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} efstruc.spad ; \
	rm -f ${DOC}/efstruc.spad.pamphlet ; \
	rm -f ${DOC}/efstruc.spad.tex ; \
	rm -f ${DOC}/efstruc.spad )

@
\subsection{efuls.spad \cite{1}}
<<efuls.spad (SPAD from IN)>>=
${OUTSRC}/efuls.spad: ${IN}/efuls.spad.pamphlet
	@ echo 1307 making ${OUTSRC}/efuls.spad from ${IN}/efuls.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/efuls.spad.pamphlet >efuls.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EFULS.o (O from NRLIB)>>=
${OUT}/EFULS.o: ${MID}/EFULS.NRLIB
	@ echo 1308-21 making ${OUT}/EFULS.o from ${MID}/EFULS.NRLIB
	@ cp ${MID}/EFULS.NRLIB/code.o ${OUT}/EFULS.o

@
<<EFULS.NRLIB (NRLIB from MID)>>=
${MID}/EFULS.NRLIB: ${MID}/EFULS.spad
	@ echo 1309 making ${MID}/EFULS.NRLIB from ${MID}/EFULS.spad
	@ (cd ${MID} ; 	echo ')co EFULS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EFULS.spad (SPAD from IN)>>=
${MID}/EFULS.spad: ${IN}/efuls.spad.pamphlet
	@ echo 1310 making ${MID}/EFULS.spad from ${IN}/efuls.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf EFULS.NRLIB ; \
	${TANGLE} -R"package EFULS ElementaryFunctionsUnivariateLaurentSeries" ${IN}/efuls.spad.pamphlet >EFULS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<efuls.spad.dvi (DOC from IN)>>=
${DOC}/efuls.spad.dvi: ${IN}/efuls.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1311 making ${DOC}/efuls.spad.dvi from ${IN}/efuls.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/efuls.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} efuls.spad ; \
	rm -f ${DOC}/efuls.spad.pamphlet ; \
	rm -f ${DOC}/efuls.spad.tex ; \
	rm -f ${DOC}/efuls.spad )

@
\subsection{efupxs.spad \cite{1}}
<<efupxs.spad (SPAD from IN)>>=
${OUTSRC}/efupxs.spad: ${IN}/efupxs.spad.pamphlet
	@ echo 1312 making ${OUTSRC}/efupxs.spad from ${IN}/efupxs.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/efupxs.spad.pamphlet >efupxs.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EFUPXS.o (O from NRLIB)>>=
${OUT}/EFUPXS.o: ${MID}/EFUPXS.NRLIB
	@ echo 1313-16 making ${OUT}/EFUPXS.o from ${MID}/EFUPXS.NRLIB
	@ cp ${MID}/EFUPXS.NRLIB/code.o ${OUT}/EFUPXS.o

@
<<EFUPXS.NRLIB (NRLIB from MID)>>=
${MID}/EFUPXS.NRLIB: ${MID}/EFUPXS.spad
	@ echo 1314 making ${MID}/EFUPXS.NRLIB from ${MID}/EFUPXS.spad
	@ (cd ${MID} ; 	echo ')co EFUPXS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EFUPXS.spad (SPAD from IN)>>=
${MID}/EFUPXS.spad: ${IN}/efupxs.spad.pamphlet
	@ echo 1315 making ${MID}/EFUPXS.spad from ${IN}/efupxs.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf EFUPXS.NRLIB ; \
	${TANGLE} -R"package EFUPXS ElementaryFunctionsUnivariatePuiseuxSeries" ${IN}/efupxs.spad.pamphlet >EFUPXS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<efupxs.spad.dvi (DOC from IN)>>=
${DOC}/efupxs.spad.dvi: ${IN}/efupxs.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1316 making ${DOC}/efupxs.spad.dvi from ${IN}/efupxs.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/efupxs.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} efupxs.spad ; \
	rm -f ${DOC}/efupxs.spad.pamphlet ; \
	rm -f ${DOC}/efupxs.spad.tex ; \
	rm -f ${DOC}/efupxs.spad )

@
\subsection{eigen.spad \cite{1}}
<<eigen.spad (SPAD from IN)>>=
${OUTSRC}/eigen.spad: ${IN}/eigen.spad.pamphlet
	@ echo 1317 making ${OUTSRC}/eigen.spad from ${IN}/eigen.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/eigen.spad.pamphlet >eigen.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CHARPOL.o (O from NRLIB)>>=
${OUT}/CHARPOL.o: ${MID}/CHARPOL.NRLIB
	@ echo 1318-6 making ${OUT}/CHARPOL.o from ${MID}/CHARPOL.NRLIB
	@ cp ${MID}/CHARPOL.NRLIB/code.o ${OUT}/CHARPOL.o

@
<<CHARPOL.NRLIB (NRLIB from MID)>>=
${MID}/CHARPOL.NRLIB: ${MID}/CHARPOL.spad
	@ echo 1319 making ${MID}/CHARPOL.NRLIB from ${MID}/CHARPOL.spad
	@ (cd ${MID} ; 	echo ')co CHARPOL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CHARPOL.spad (SPAD from IN)>>=
${MID}/CHARPOL.spad: ${IN}/eigen.spad.pamphlet
	@ echo 1320 making ${MID}/CHARPOL.spad from ${IN}/eigen.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CHARPOL.NRLIB ; \
	${TANGLE} -R"package CHARPOL CharacteristicPolynomialPackage" ${IN}/eigen.spad.pamphlet >CHARPOL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EP.o (O from NRLIB)>>=
${OUT}/EP.o: ${MID}/EP.NRLIB
	@ echo 1321-19 making ${OUT}/EP.o from ${MID}/EP.NRLIB
	@ cp ${MID}/EP.NRLIB/code.o ${OUT}/EP.o

@
<<EP.NRLIB (NRLIB from MID)>>=
${MID}/EP.NRLIB: ${MID}/EP.spad
	@ echo 1322 making ${MID}/EP.NRLIB from ${MID}/EP.spad
	@ (cd ${MID} ; 	echo ')co EP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EP.spad (SPAD from IN)>>=
${MID}/EP.spad: ${IN}/eigen.spad.pamphlet
	@ echo 1323 making ${MID}/EP.spad from ${IN}/eigen.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf EP.NRLIB ; \
	${TANGLE} -R"package EP EigenPackage" ${IN}/eigen.spad.pamphlet >EP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<eigen.spad.dvi (DOC from IN)>>=
${DOC}/eigen.spad.dvi: ${IN}/eigen.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1324 making ${DOC}/eigen.spad.dvi from ${IN}/eigen.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/eigen.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} eigen.spad ; \
	rm -f ${DOC}/eigen.spad.pamphlet ; \
	rm -f ${DOC}/eigen.spad.tex ; \
	rm -f ${DOC}/eigen.spad )

@
\subsection{elemntry.spad \cite{1}}
<<elemntry.spad (SPAD from IN)>>=
${OUTSRC}/elemntry.spad: ${IN}/elemntry.spad.pamphlet
	@ echo 1325 making ${OUTSRC}/elemntry.spad from ${IN}/elemntry.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/elemntry.spad.pamphlet >elemntry.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EF.o (O from NRLIB)>>=
${OUT}/EF.o: ${MID}/EF.NRLIB
	@ echo 1326-20 making ${OUT}/EF.o from ${MID}/EF.NRLIB
	@ cp ${MID}/EF.NRLIB/code.o ${OUT}/EF.o

@
<<EF.NRLIB (NRLIB from MID)>>=
${MID}/EF.NRLIB: ${MID}/EF.spad
	@ echo 1327 making ${MID}/EF.NRLIB from ${MID}/EF.spad
	@ (cd ${MID} ; 	echo ')co EF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EF.spad (SPAD from IN)>>=
${MID}/EF.spad: ${IN}/elemntry.spad.pamphlet
	@ echo 1328 making ${MID}/EF.spad from ${IN}/elemntry.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf EF.NRLIB ; \
	${TANGLE} -R"package EF ElementaryFunction" ${IN}/elemntry.spad.pamphlet >EF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<elemntry.spad.dvi (DOC from IN)>>=
${DOC}/elemntry.spad.dvi: ${IN}/elemntry.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1329 making ${DOC}/elemntry.spad.dvi from ${IN}/elemntry.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/elemntry.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} elemntry.spad ; \
	rm -f ${DOC}/elemntry.spad.pamphlet ; \
	rm -f ${DOC}/elemntry.spad.tex ; \
	rm -f ${DOC}/elemntry.spad )

@
\subsection{elfuts.spad \cite{1}}
<<elfuts.spad (SPAD from IN)>>=
${OUTSRC}/elfuts.spad: ${IN}/elfuts.spad.pamphlet
	@ echo 1330 making ${OUTSRC}/elfuts.spad from ${IN}/elfuts.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/elfuts.spad.pamphlet >elfuts.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ELFUTS.o (O from NRLIB)>>=
${OUT}/ELFUTS.o: ${MID}/ELFUTS.NRLIB
	@ echo 1331-20 making ${OUT}/ELFUTS.o from ${MID}/ELFUTS.NRLIB
	@ cp ${MID}/ELFUTS.NRLIB/code.o ${OUT}/ELFUTS.o

@
<<ELFUTS.NRLIB (NRLIB from MID)>>=
${MID}/ELFUTS.NRLIB: ${MID}/ELFUTS.spad
	@ echo 1332 making ${MID}/ELFUTS.NRLIB from ${MID}/ELFUTS.spad
	@ (cd ${MID} ; 	echo ')co ELFUTS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ELFUTS.spad (SPAD from IN)>>=
${MID}/ELFUTS.spad: ${IN}/elfuts.spad.pamphlet
	@ echo 1333 making ${MID}/ELFUTS.spad from ${IN}/elfuts.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ELFUTS.NRLIB ; \
	${TANGLE} -R"package ELFUTS EllipticFunctionsUnivariateTaylorSeries" ${IN}/elfuts.spad.pamphlet >ELFUTS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@

<<elfuts.spad.dvi (DOC from IN)>>=
${DOC}/elfuts.spad.dvi: ${IN}/elfuts.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1334 making ${DOC}/elfuts.spad.dvi from ${IN}/elfuts.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/elfuts.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} elfuts.spad ; \
	rm -f ${DOC}/elfuts.spad.pamphlet ; \
	rm -f ${DOC}/elfuts.spad.tex ; \
	rm -f ${DOC}/elfuts.spad )

@
\subsection{equation1.spad \cite{1}}
<<equation1.spad (SPAD from IN)>>=
${OUTSRC}/equation1.spad: ${IN}/equation1.spad.pamphlet
	@ echo 1335 making ${OUTSRC}/equation1.spad from ${IN}/equation1.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/equation1.spad.pamphlet >equation1.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EVALAB-.o (O from NRLIB)>>=
${OUT}/EVALAB-.o: ${MID}/EVALAB.NRLIB
	@ echo 1336-5 making ${OUT}/EVALAB-.o from ${MID}/EVALAB-.NRLIB
	@ cp ${MID}/EVALAB-.NRLIB/code.o ${OUT}/EVALAB-.o

@
<<EVALAB-.NRLIB (NRLIB from MID)>>=
${MID}/EVALAB-.NRLIB: ${MID}/EVALAB.spad 
	@ echo 1337 making ${MID}/EVALAB-.NRLIB from ${MID}/EVALAB.spad
	@ (cd ${MID} ; 	echo ')co EVALAB.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EVALAB.o (O from NRLIB)>>=
${OUT}/EVALAB.o: ${MID}/EVALAB.NRLIB
	@ echo 1338-5 making ${OUT}/EVALAB.o from ${MID}/EVALAB.NRLIB
	@ cp ${MID}/EVALAB.NRLIB/code.o ${OUT}/EVALAB.o

@
<<EVALAB.NRLIB (NRLIB from MID)>>=
${MID}/EVALAB.NRLIB: ${MID}/EVALAB.spad
	@ echo 1339 making ${MID}/EVALAB.NRLIB from ${MID}/EVALAB.spad
	@ (cd ${MID} ; 	echo ')co EVALAB.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EVALAB.spad (SPAD from IN)>>=
${MID}/EVALAB.spad: ${IN}/equation1.spad.pamphlet
	@ echo 1340 making ${MID}/EVALAB.spad from ${IN}/equation1.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf EVALAB.NRLIB ; \
	${TANGLE} -R"category EVALAB Evalable" ${IN}/equation1.spad.pamphlet >EVALAB.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IEVALAB-.o (O from NRLIB)>>=
${OUT}/IEVALAB-.o: ${MID}/IEVALAB.NRLIB
	@ echo 1341-4 making ${OUT}/IEVALAB-.o from ${MID}/IEVALAB-.NRLIB
	@ cp ${MID}/IEVALAB-.NRLIB/code.o ${OUT}/IEVALAB-.o

@
<<IEVALAB-.NRLIB (NRLIB from MID)>>=
${MID}/IEVALAB-.NRLIB: ${MID}/IEVALAB.spad 
	@ echo 1342 making ${MID}/IEVALAB-.NRLIB from ${MID}/IEVALAB.spad
	@ (cd ${MID} ; 	echo ')co IEVALAB.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IEVALAB.o (O from NRLIB)>>=
${OUT}/IEVALAB.o: ${MID}/IEVALAB.NRLIB
	@ echo 1343-4 making ${OUT}/IEVALAB.o from ${MID}/IEVALAB.NRLIB
	@ cp ${MID}/IEVALAB.NRLIB/code.o ${OUT}/IEVALAB.o

@
<<IEVALAB.NRLIB (NRLIB from MID)>>=
${MID}/IEVALAB.NRLIB: ${MID}/IEVALAB.spad
	@ echo 1344 making ${MID}/IEVALAB.NRLIB from ${MID}/IEVALAB.spad
	@ (cd ${MID} ; 	echo ')co IEVALAB.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IEVALAB.spad (SPAD from IN)>>=
${MID}/IEVALAB.spad: ${IN}/equation1.spad.pamphlet
	@ echo 1345 making ${MID}/IEVALAB.spad from ${IN}/equation1.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IEVALAB.NRLIB ; \
	${TANGLE} -R"category IEVALAB InnerEvalable" ${IN}/equation1.spad.pamphlet >IEVALAB.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<equation1.spad.dvi (DOC from IN)>>=
${DOC}/equation1.spad.dvi: ${IN}/equation1.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1346 making ${DOC}/equation1.spad.dvi from ${IN}/equation1.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/equation1.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} equation1.spad ; \
	rm -f ${DOC}/equation1.spad.pamphlet ; \
	rm -f ${DOC}/equation1.spad.tex ; \
	rm -f ${DOC}/equation1.spad )

@
\subsection{equation2.spad \cite{1}}
<<equation2.spad (SPAD from IN)>>=
${OUTSRC}/equation2.spad: ${IN}/equation2.spad.pamphlet
	@ echo 1347 making ${OUTSRC}/equation2.spad from ${IN}/equation2.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/equation2.spad.pamphlet >equation2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EQ.o (O from NRLIB)>>=
${OUT}/EQ.o: ${MID}/EQ.NRLIB
	@ echo 1348-14 making ${OUT}/EQ.o from ${MID}/EQ.NRLIB
	@ cp ${MID}/EQ.NRLIB/code.o ${OUT}/EQ.o

@
<<EQ.NRLIB (NRLIB from MID)>>=
${MID}/EQ.NRLIB: ${MID}/EQ.spad
	@ echo 1349 making ${MID}/EQ.NRLIB from ${MID}/EQ.spad
	@ (cd ${MID} ; 	echo ')co EQ.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EQ.spad (SPAD from IN)>>=
${MID}/EQ.spad: ${IN}/equation2.spad.pamphlet
	@ echo 1350 making ${MID}/EQ.spad from ${IN}/equation2.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf EQ.NRLIB ; \
	${TANGLE} -R"domain EQ Equation" ${IN}/equation2.spad.pamphlet >EQ.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EQ2.o (O from NRLIB)>>=
${OUT}/EQ2.o: ${MID}/EQ2.NRLIB
	@ echo 1351-1 making ${OUT}/EQ2.o from ${MID}/EQ2.NRLIB
	@ cp ${MID}/EQ2.NRLIB/code.o ${OUT}/EQ2.o

@
<<EQ2.NRLIB (NRLIB from MID)>>=
${MID}/EQ2.NRLIB: ${MID}/EQ2.spad
	@ echo 1352 making ${MID}/EQ2.NRLIB from ${MID}/EQ2.spad
	@ (cd ${MID} ; 	echo ')co EQ2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EQ2.spad (SPAD from IN)>>=
${MID}/EQ2.spad: ${IN}/equation2.spad.pamphlet
	@ echo 1353 making ${MID}/EQ2.spad from ${IN}/equation2.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf EQ2.NRLIB ; \
	${TANGLE} -R"package EQ2 EquationFunctions2" ${IN}/equation2.spad.pamphlet >EQ2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FEVALAB-.o (O from NRLIB)>>=
${OUT}/FEVALAB-.o: ${MID}/FEVALAB.NRLIB
	@ echo 1354-5 making ${OUT}/FEVALAB-.o from ${MID}/FEVALAB-.NRLIB
	@ cp ${MID}/FEVALAB-.NRLIB/code.o ${OUT}/FEVALAB-.o

@
<<FEVALAB-.NRLIB (NRLIB from MID)>>=
${MID}/FEVALAB-.NRLIB: ${MID}/FEVALAB.spad 
	@ echo 1355 making ${MID}/FEVALAB-.NRLIB from ${MID}/FEVALAB.spad
	@ (cd ${MID} ; 	echo ')co FEVALAB.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FEVALAB.o (O from NRLIB)>>=
${OUT}/FEVALAB.o: ${MID}/FEVALAB.NRLIB
	@ echo 1356-5 making ${OUT}/FEVALAB.o from ${MID}/FEVALAB.NRLIB
	@ cp ${MID}/FEVALAB.NRLIB/code.o ${OUT}/FEVALAB.o

@
<<FEVALAB.NRLIB (NRLIB from MID)>>=
${MID}/FEVALAB.NRLIB: ${MID}/FEVALAB.spad
	@ echo 1357 making ${MID}/FEVALAB.NRLIB from ${MID}/FEVALAB.spad
	@ (cd ${MID} ; 	echo ')co FEVALAB.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FEVALAB.spad (SPAD from IN)>>=
${MID}/FEVALAB.spad: ${IN}/equation2.spad.pamphlet
	@ echo 1358 making ${MID}/FEVALAB.spad from ${IN}/equation2.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FEVALAB.NRLIB ; \
	${TANGLE} -R"category FEVALAB FullyEvalableOver" ${IN}/equation2.spad.pamphlet >FEVALAB.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<equation2.spad.dvi (DOC from IN)>>=
${DOC}/equation2.spad.dvi: ${IN}/equation2.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1359 making ${DOC}/equation2.spad.dvi from ${IN}/equation2.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/equation2.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} equation2.spad ; \
	rm -f ${DOC}/equation2.spad.pamphlet ; \
	rm -f ${DOC}/equation2.spad.tex ; \
	rm -f ${DOC}/equation2.spad )

@
\subsection{error.spad \cite{1}}
<<error.spad (SPAD from IN)>>=
${OUTSRC}/error.spad: ${IN}/error.spad.pamphlet
	@ echo 1360 making ${OUTSRC}/error.spad from ${IN}/error.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/error.spad.pamphlet >error.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ERROR.o (O from NRLIB)>>=
${OUT}/ERROR.o: ${MID}/ERROR.NRLIB
	@ echo 1361-14 making ${OUT}/ERROR.o from ${MID}/ERROR.NRLIB
	@ cp ${MID}/ERROR.NRLIB/code.o ${OUT}/ERROR.o

@
<<ERROR.NRLIB (NRLIB from MID)>>=
${MID}/ERROR.NRLIB: ${MID}/ERROR.spad
	@ echo 1362 making ${MID}/ERROR.NRLIB from ${MID}/ERROR.spad
	@ (cd ${MID} ; 	echo ')co ERROR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ERROR.spad (SPAD from IN)>>=
${MID}/ERROR.spad: ${IN}/error.spad.pamphlet
	@ echo 1363 making ${MID}/ERROR.spad from ${IN}/error.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ERROR.NRLIB ; \
	${TANGLE} -R"package ERROR ErrorFunctions" ${IN}/error.spad.pamphlet >ERROR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<error.spad.dvi (DOC from IN)>>=
${DOC}/error.spad.dvi: ${IN}/error.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1364 making ${DOC}/error.spad.dvi from ${IN}/error.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/error.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} error.spad ; \
	rm -f ${DOC}/error.spad.pamphlet ; \
	rm -f ${DOC}/error.spad.tex ; \
	rm -f ${DOC}/error.spad )

@
\subsection{expexpan.spad \cite{1}}
<<expexpan.spad (SPAD from IN)>>=
${OUTSRC}/expexpan.spad: ${IN}/expexpan.spad.pamphlet
	@ echo 1365 making ${OUTSRC}/expexpan.spad from ${IN}/expexpan.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/expexpan.spad.pamphlet >expexpan.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EXPEXPAN.o (O from NRLIB)>>=
${OUT}/EXPEXPAN.o: ${MID}/EXPEXPAN.NRLIB
	@ echo 1366-20 making ${OUT}/EXPEXPAN.o from ${MID}/EXPEXPAN.NRLIB
	@ cp ${MID}/EXPEXPAN.NRLIB/code.o ${OUT}/EXPEXPAN.o

@
<<EXPEXPAN.NRLIB (NRLIB from MID)>>=
${MID}/EXPEXPAN.NRLIB: ${MID}/EXPEXPAN.spad
	@ echo 1367 making ${MID}/EXPEXPAN.NRLIB from ${MID}/EXPEXPAN.spad
	@ (cd ${MID} ; 	echo ')co EXPEXPAN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EXPEXPAN.spad (SPAD from IN)>>=
${MID}/EXPEXPAN.spad: ${IN}/expexpan.spad.pamphlet
	@ echo 1368 making ${MID}/EXPEXPAN.spad from ${IN}/expexpan.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf EXPEXPAN.NRLIB ; \
	${TANGLE} -R"domain EXPEXPAN ExponentialExpansion" ${IN}/expexpan.spad.pamphlet >EXPEXPAN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EXPUPXS.o (O from NRLIB)>>=
${OUT}/EXPUPXS.o: ${MID}/EXPUPXS.NRLIB
	@ echo 1369-15 making ${OUT}/EXPUPXS.o from ${MID}/EXPUPXS.NRLIB
	@ cp ${MID}/EXPUPXS.NRLIB/code.o ${OUT}/EXPUPXS.o

@
<<EXPUPXS.NRLIB (NRLIB from MID)>>=
${MID}/EXPUPXS.NRLIB: ${MID}/EXPUPXS.spad
	@ echo 1370 making ${MID}/EXPUPXS.NRLIB from ${MID}/EXPUPXS.spad
	@ (cd ${MID} ; 	echo ')co EXPUPXS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EXPUPXS.spad (SPAD from IN)>>=
${MID}/EXPUPXS.spad: ${IN}/expexpan.spad.pamphlet
	@ echo 1371 making ${MID}/EXPUPXS.spad from ${IN}/expexpan.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf EXPUPXS.NRLIB ; \
	${TANGLE} -R"domain EXPUPXS ExponentialOfUnivariatePuiseuxSeries" ${IN}/expexpan.spad.pamphlet >EXPUPXS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPXSSING.o (O from NRLIB)>>=
${OUT}/UPXSSING.o: ${MID}/UPXSSING.NRLIB
	@ echo 1372-20 making ${OUT}/UPXSSING.o from ${MID}/UPXSSING.NRLIB
	@ cp ${MID}/UPXSSING.NRLIB/code.o ${OUT}/UPXSSING.o

@
<<UPXSSING.NRLIB (NRLIB from MID)>>=
${MID}/UPXSSING.NRLIB: ${MID}/UPXSSING.spad
	@ echo 1373 making ${MID}/UPXSSING.NRLIB from ${MID}/UPXSSING.spad
	@ (cd ${MID} ; 	echo ')co UPXSSING.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPXSSING.spad (SPAD from IN)>>=
${MID}/UPXSSING.spad: ${IN}/expexpan.spad.pamphlet
	@ echo 1374 making ${MID}/UPXSSING.spad from ${IN}/expexpan.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UPXSSING.NRLIB ; \
	${TANGLE} -R"domain UPXSSING UnivariatePuiseuxSeriesWithExponentialSingularity" ${IN}/expexpan.spad.pamphlet >UPXSSING.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<expexpan.spad.dvi (DOC from IN)>>=
${DOC}/expexpan.spad.dvi: ${IN}/expexpan.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1375 making ${DOC}/expexpan.spad.dvi from ${IN}/expexpan.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/expexpan.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} expexpan.spad ; \
	rm -f ${DOC}/expexpan.spad.pamphlet ; \
	rm -f ${DOC}/expexpan.spad.tex ; \
	rm -f ${DOC}/expexpan.spad )

@
\subsection{exposed.lsp \cite{1}}
Note that exposed.lsp is actually built in [[src/interp/Makefile.pamphlet]]
as it is needed when the system is built. We only build the documentation
here. The actual file, [[exposed.lsp.pamphlet]] is kept in the algebra
subdirectory because it is algebra related.

<<exposed.lsp.dvi (DOC from IN)>>=
${DOC}/exposed.lsp.dvi: ${IN}/exposed.lsp.pamphlet ${DOC}/axiom.sty
	@ echo 1376 making ${DOC}/exposed.lsp.dvi from ${IN}/exposed.lsp.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/exposed.lsp.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} exposed.lsp ; \
	rm -f ${DOC}/exposed.lsp.pamphlet ; \
	rm -f ${DOC}/exposed.lsp.tex ; \
	rm -f ${DOC}/exposed.lsp )

@
\subsection{expr2ups.spad \cite{1}}
<<expr2ups.spad (SPAD from IN)>>=
${OUTSRC}/expr2ups.spad: ${IN}/expr2ups.spad.pamphlet
	@ echo 1377 making ${OUTSRC}/expr2ups.spad from ${IN}/expr2ups.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/expr2ups.spad.pamphlet >expr2ups.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EXPR2UPS.o (O from NRLIB)>>=
${OUT}/EXPR2UPS.o: ${MID}/EXPR2UPS.NRLIB
	@ echo 1378-21 making ${OUT}/EXPR2UPS.o from ${MID}/EXPR2UPS.NRLIB
	@ cp ${MID}/EXPR2UPS.NRLIB/code.o ${OUT}/EXPR2UPS.o

@
<<EXPR2UPS.NRLIB (NRLIB from MID)>>=
${MID}/EXPR2UPS.NRLIB: ${MID}/EXPR2UPS.spad
	@ echo 1379 making ${MID}/EXPR2UPS.NRLIB from ${MID}/EXPR2UPS.spad
	@ (cd ${MID} ; 	echo ')co EXPR2UPS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EXPR2UPS.spad (SPAD from IN)>>=
${MID}/EXPR2UPS.spad: ${IN}/expr2ups.spad.pamphlet
	@ echo 1380 making ${MID}/EXPR2UPS.spad from ${IN}/expr2ups.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf EXPR2UPS.NRLIB ; \
	${TANGLE} -R"package EXPR2UPS ExpressionToUnivariatePowerSeries" ${IN}/expr2ups.spad.pamphlet >EXPR2UPS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<expr2ups.spad.dvi (DOC from IN)>>=
${DOC}/expr2ups.spad.dvi: ${IN}/expr2ups.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1381 making ${DOC}/expr2ups.spad.dvi from ${IN}/expr2ups.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/expr2ups.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} expr2ups.spad ; \
	rm -f ${DOC}/expr2ups.spad.pamphlet ; \
	rm -f ${DOC}/expr2ups.spad.tex ; \
	rm -f ${DOC}/expr2ups.spad )

@
\subsection{exprode.spad \cite{1}}
<<exprode.spad (SPAD from IN)>>=
${OUTSRC}/exprode.spad: ${IN}/exprode.spad.pamphlet
	@ echo 1382 making ${OUTSRC}/exprode.spad from ${IN}/exprode.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/exprode.spad.pamphlet >exprode.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EXPRODE.o (O from NRLIB)>>=
${OUT}/EXPRODE.o: ${MID}/EXPRODE.NRLIB
	@ echo 1383-20 making ${OUT}/EXPRODE.o from ${MID}/EXPRODE.NRLIB
	@ cp ${MID}/EXPRODE.NRLIB/code.o ${OUT}/EXPRODE.o

@
<<EXPRODE.NRLIB (NRLIB from MID)>>=
${MID}/EXPRODE.NRLIB: ${MID}/EXPRODE.spad
	@ echo 1384 making ${MID}/EXPRODE.NRLIB from ${MID}/EXPRODE.spad
	@ (cd ${MID} ; 	echo ')co EXPRODE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EXPRODE.spad (SPAD from IN)>>=
${MID}/EXPRODE.spad: ${IN}/exprode.spad.pamphlet
	@ echo 1385 making ${MID}/EXPRODE.spad from ${IN}/exprode.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf EXPRODE.NRLIB ; \
	${TANGLE} -R"package EXPRODE ExpressionSpaceODESolver" ${IN}/exprode.spad.pamphlet >EXPRODE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<exprode.spad.dvi (DOC from IN)>>=
${DOC}/exprode.spad.dvi: ${IN}/exprode.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1386 making ${DOC}/exprode.spad.dvi from ${IN}/exprode.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/exprode.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} exprode.spad ; \
	rm -f ${DOC}/exprode.spad.pamphlet ; \
	rm -f ${DOC}/exprode.spad.tex ; \
	rm -f ${DOC}/exprode.spad )

@
\subsection{expr.spad \cite{1}}
<<expr.spad (SPAD from IN)>>=
${OUTSRC}/expr.spad: ${IN}/expr.spad.pamphlet
	@ echo 1387 making ${OUTSRC}/expr.spad from ${IN}/expr.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/expr.spad.pamphlet >expr.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EXPR.o (O from NRLIB)>>=
${OUT}/EXPR.o: ${MID}/EXPR.NRLIB
	@ echo 1388-21 making ${OUT}/EXPR.o from ${MID}/EXPR.NRLIB
	@ cp ${MID}/EXPR.NRLIB/code.o ${OUT}/EXPR.o

@
<<EXPR.NRLIB (NRLIB from MID)>>=
${MID}/EXPR.NRLIB: ${MID}/EXPR.spad
	@ echo 1389 making ${MID}/EXPR.NRLIB from ${MID}/EXPR.spad
	@ (cd ${MID} ; 	echo ')co EXPR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EXPR.spad (SPAD from IN)>>=
${MID}/EXPR.spad: ${IN}/expr.spad.pamphlet
	@ echo 1390 making ${MID}/EXPR.spad from ${IN}/expr.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf EXPR.NRLIB ; \
	${TANGLE} -R"domain EXPR Expression" ${IN}/expr.spad.pamphlet >EXPR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EXPR2.o (O from NRLIB)>>=
${OUT}/EXPR2.o: ${MID}/EXPR2.NRLIB
	@ echo 1391-20 making ${OUT}/EXPR2.o from ${MID}/EXPR2.NRLIB
	@ cp ${MID}/EXPR2.NRLIB/code.o ${OUT}/EXPR2.o

@
<<EXPR2.NRLIB (NRLIB from MID)>>=
${MID}/EXPR2.NRLIB: ${MID}/EXPR2.spad
	@ echo 1392 making ${MID}/EXPR2.NRLIB from ${MID}/EXPR2.spad
	@ (cd ${MID} ; 	echo ')co EXPR2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EXPR2.spad (SPAD from IN)>>=
${MID}/EXPR2.spad: ${IN}/expr.spad.pamphlet
	@ echo 1393 making ${MID}/EXPR2.spad from ${IN}/expr.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf EXPR2.NRLIB ; \
	${TANGLE} -R"package EXPR2 ExpressionFunctions2" ${IN}/expr.spad.pamphlet >EXPR2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<HACKPI.o (O from NRLIB)>>=
${OUT}/HACKPI.o: ${MID}/HACKPI.NRLIB
	@ echo 1394-19 making ${OUT}/HACKPI.o from ${MID}/HACKPI.NRLIB
	@ cp ${MID}/HACKPI.NRLIB/code.o ${OUT}/HACKPI.o

@
<<HACKPI.NRLIB (NRLIB from MID)>>=
${MID}/HACKPI.NRLIB: ${MID}/HACKPI.spad
	@ echo 1395 making ${MID}/HACKPI.NRLIB from ${MID}/HACKPI.spad
	@ (cd ${MID} ; 	echo ')co HACKPI.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<HACKPI.spad (SPAD from IN)>>=
${MID}/HACKPI.spad: ${IN}/expr.spad.pamphlet
	@ echo 1396 making ${MID}/HACKPI.spad from ${IN}/expr.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf HACKPI.NRLIB ; \
	${TANGLE} -R"domain HACKPI Pi" ${IN}/expr.spad.pamphlet >HACKPI.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PAN2EXPR.o (O from NRLIB)>>=
${OUT}/PAN2EXPR.o: ${MID}/PAN2EXPR.NRLIB
	@ echo 1397-20 making ${OUT}/PAN2EXPR.o from ${MID}/PAN2EXPR.NRLIB
	@ cp ${MID}/PAN2EXPR.NRLIB/code.o ${OUT}/PAN2EXPR.o

@
<<PAN2EXPR.NRLIB (NRLIB from MID)>>=
${MID}/PAN2EXPR.NRLIB: ${MID}/PAN2EXPR.spad
	@ echo 1398 making ${MID}/PAN2EXPR.NRLIB from ${MID}/PAN2EXPR.spad
	@ (cd ${MID} ; 	echo ')co PAN2EXPR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PAN2EXPR.spad (SPAD from IN)>>=
${MID}/PAN2EXPR.spad: ${IN}/expr.spad.pamphlet
	@ echo 1399 making ${MID}/PAN2EXPR.spad from ${IN}/expr.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PAN2EXPR.NRLIB ; \
	${TANGLE} -R"package PAN2EXPR PolynomialAN2Expression" ${IN}/expr.spad.pamphlet >PAN2EXPR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PICOERCE.o (O from NRLIB)>>=
${OUT}/PICOERCE.o: ${MID}/PICOERCE.NRLIB
	@ echo 1400-20 making ${OUT}/PICOERCE.o from ${MID}/PICOERCE.NRLIB
	@ cp ${MID}/PICOERCE.NRLIB/code.o ${OUT}/PICOERCE.o

@
<<PICOERCE.NRLIB (NRLIB from MID)>>=
${MID}/PICOERCE.NRLIB: ${MID}/PICOERCE.spad
	@ echo 1401 making ${MID}/PICOERCE.NRLIB from ${MID}/PICOERCE.spad
	@ (cd ${MID} ; 	echo ')co PICOERCE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PICOERCE.spad (SPAD from IN)>>=
${MID}/PICOERCE.spad: ${IN}/expr.spad.pamphlet
	@ echo 1402 making ${MID}/PICOERCE.spad from ${IN}/expr.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PICOERCE.NRLIB ; \
	${TANGLE} -R"package PICOERCE PiCoercions" ${IN}/expr.spad.pamphlet >PICOERCE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PMASS.o (O from NRLIB)>>=
${OUT}/PMASS.o: ${MID}/PMASS.NRLIB
	@ echo 1403-9 making ${OUT}/PMASS.o from ${MID}/PMASS.NRLIB
	@ cp ${MID}/PMASS.NRLIB/code.o ${OUT}/PMASS.o

@
<<PMASS.NRLIB (NRLIB from MID)>>=
${MID}/PMASS.NRLIB: ${MID}/PMASS.spad
	@ echo 1404 making ${MID}/PMASS.NRLIB from ${MID}/PMASS.spad
	@ (cd ${MID} ; 	echo ')co PMASS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PMASS.spad (SPAD from IN)>>=
${MID}/PMASS.spad: ${IN}/expr.spad.pamphlet
	@ echo 1405 making ${MID}/PMASS.spad from ${IN}/expr.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PMASS.NRLIB ; \
	${TANGLE} -R"package PMASS PatternMatchAssertions" ${IN}/expr.spad.pamphlet >PMASS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PMASSFS.o (O from NRLIB)>>=
${OUT}/PMASSFS.o: ${MID}/PMASSFS.NRLIB
	@ echo 1406-20 making ${OUT}/PMASSFS.o from ${MID}/PMASSFS.NRLIB
	@ cp ${MID}/PMASSFS.NRLIB/code.o ${OUT}/PMASSFS.o

@
<<PMASSFS.NRLIB (NRLIB from MID)>>=
${MID}/PMASSFS.NRLIB: ${MID}/PMASSFS.spad
	@ echo 1407 making ${MID}/PMASSFS.NRLIB from ${MID}/PMASSFS.spad
	@ (cd ${MID} ; 	echo ')co PMASSFS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PMASSFS.spad (SPAD from IN)>>=
${MID}/PMASSFS.spad: ${IN}/expr.spad.pamphlet
	@ echo 1408 making ${MID}/PMASSFS.spad from ${IN}/expr.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PMASSFS.NRLIB ; \
	${TANGLE} -R"package PMASSFS FunctionSpaceAssertions" ${IN}/expr.spad.pamphlet >PMASSFS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PMPRED.o (O from NRLIB)>>=
${OUT}/PMPRED.o: ${MID}/PMPRED.NRLIB
	@ echo 1409-9 making ${OUT}/PMPRED.o from ${MID}/PMPRED.NRLIB
	@ cp ${MID}/PMPRED.NRLIB/code.o ${OUT}/PMPRED.o

@
<<PMPRED.NRLIB (NRLIB from MID)>>=
${MID}/PMPRED.NRLIB: ${MID}/PMPRED.spad
	@ echo 1410 making ${MID}/PMPRED.NRLIB from ${MID}/PMPRED.spad
	@ (cd ${MID} ; 	echo ')co PMPRED.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PMPRED.spad (SPAD from IN)>>=
${MID}/PMPRED.spad: ${IN}/expr.spad.pamphlet
	@ echo 1411 making ${MID}/PMPRED.spad from ${IN}/expr.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PMPRED.NRLIB ; \
	${TANGLE} -R"package PMPRED AttachPredicates" ${IN}/expr.spad.pamphlet >PMPRED.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PMPREDFS.o (O from NRLIB)>>=
${OUT}/PMPREDFS.o: ${MID}/PMPREDFS.NRLIB
	@ echo 1412-20 making ${OUT}/PMPREDFS.o from ${MID}/PMPREDFS.NRLIB
	@ cp ${MID}/PMPREDFS.NRLIB/code.o ${OUT}/PMPREDFS.o

@
<<PMPREDFS.NRLIB (NRLIB from MID)>>=
${MID}/PMPREDFS.NRLIB: ${MID}/PMPREDFS.spad
	@ echo 1413 making ${MID}/PMPREDFS.NRLIB from ${MID}/PMPREDFS.spad
	@ (cd ${MID} ; 	echo ')co PMPREDFS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PMPREDFS.spad (SPAD from IN)>>=
${MID}/PMPREDFS.spad: ${IN}/expr.spad.pamphlet
	@ echo 1414 making ${MID}/PMPREDFS.spad from ${IN}/expr.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PMPREDFS.NRLIB ; \
	${TANGLE} -R"package PMPREDFS FunctionSpaceAttachPredicates" ${IN}/expr.spad.pamphlet >PMPREDFS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<expr.spad.dvi (DOC from IN)>>=
${DOC}/expr.spad.dvi: ${IN}/expr.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1415 making ${DOC}/expr.spad.dvi from ${IN}/expr.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/expr.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} expr.spad ; \
	rm -f ${DOC}/expr.spad.pamphlet ; \
	rm -f ${DOC}/expr.spad.tex ; \
	rm -f ${DOC}/expr.spad )

@
\subsection{f01.spad \cite{1}}
<<f01.spad (SPAD from IN)>>=
${OUTSRC}/f01.spad: ${IN}/f01.spad.pamphlet
	@ echo 1416 making ${OUTSRC}/f01.spad from ${IN}/f01.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/f01.spad.pamphlet >f01.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGF01.o (O from NRLIB)>>=
${OUT}/NAGF01.o: ${MID}/NAGF01.NRLIB
	@ echo 1417-20 making ${OUT}/NAGF01.o from ${MID}/NAGF01.NRLIB
	@ cp ${MID}/NAGF01.NRLIB/code.o ${OUT}/NAGF01.o

@
<<NAGF01.NRLIB (NRLIB from MID)>>=
${MID}/NAGF01.NRLIB: ${MID}/NAGF01.spad
	@ echo 1418 making ${MID}/NAGF01.NRLIB from ${MID}/NAGF01.spad
	@ (cd ${MID} ; 	echo ')co NAGF01.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGF01.spad (SPAD from IN)>>=
${MID}/NAGF01.spad: ${IN}/f01.spad.pamphlet
	@ echo 1419 making ${MID}/NAGF01.spad from ${IN}/f01.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NAGF01.NRLIB ; \
	${TANGLE} -R"package NAGF01 NagMatrixOperationsPackage" ${IN}/f01.spad.pamphlet >NAGF01.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<f01.spad.dvi (DOC from IN)>>=
${DOC}/f01.spad.dvi: ${IN}/f01.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1420 making ${DOC}/f01.spad.dvi from ${IN}/f01.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/f01.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} f01.spad ; \
	rm -f ${DOC}/f01.spad.pamphlet ; \
	rm -f ${DOC}/f01.spad.tex ; \
	rm -f ${DOC}/f01.spad )

@
\subsection{f02.spad \cite{1}}
<<f02.spad (SPAD from IN)>>=
${OUTSRC}/f02.spad: ${IN}/f02.spad.pamphlet
	@ echo 1421 making ${OUTSRC}/f02.spad from ${IN}/f02.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/f02.spad.pamphlet >f02.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGF02.o (O from NRLIB)>>=
${OUT}/NAGF02.o: ${MID}/NAGF02.NRLIB
	@ echo 1422-20 making ${OUT}/NAGF02.o from ${MID}/NAGF02.NRLIB
	@ cp ${MID}/NAGF02.NRLIB/code.o ${OUT}/NAGF02.o

@
<<NAGF02.NRLIB (NRLIB from MID)>>=
${MID}/NAGF02.NRLIB: ${MID}/NAGF02.spad
	@ echo 1423 making ${MID}/NAGF02.NRLIB from ${MID}/NAGF02.spad
	@ (cd ${MID} ; 	echo ')co NAGF02.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGF02.spad (SPAD from IN)>>=
${MID}/NAGF02.spad: ${IN}/f02.spad.pamphlet
	@ echo 1424 making ${MID}/NAGF02.spad from ${IN}/f02.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NAGF02.NRLIB ; \
	${TANGLE} -R"package NAGF02 NagEigenPackage" ${IN}/f02.spad.pamphlet >NAGF02.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<f02.spad.dvi (DOC from IN)>>=
${DOC}/f02.spad.dvi: ${IN}/f02.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1425 making ${DOC}/f02.spad.dvi from ${IN}/f02.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/f02.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} f02.spad ; \
	rm -f ${DOC}/f02.spad.pamphlet ; \
	rm -f ${DOC}/f02.spad.tex ; \
	rm -f ${DOC}/f02.spad )

@
\subsection{f04.spad \cite{1}}
<<f04.spad (SPAD from IN)>>=
${OUTSRC}/f04.spad: ${IN}/f04.spad.pamphlet
	@ echo 1426 making ${OUTSRC}/f04.spad from ${IN}/f04.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/f04.spad.pamphlet >f04.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGF04.o (O from NRLIB)>>=
${OUT}/NAGF04.o: ${MID}/NAGF04.NRLIB
	@ echo 1427-20 making ${OUT}/NAGF04.o from ${MID}/NAGF04.NRLIB
	@ cp ${MID}/NAGF04.NRLIB/code.o ${OUT}/NAGF04.o

@
<<NAGF04.NRLIB (NRLIB from MID)>>=
${MID}/NAGF04.NRLIB: ${MID}/NAGF04.spad
	@ echo 1428 making ${MID}/NAGF04.NRLIB from ${MID}/NAGF04.spad
	@ (cd ${MID} ; 	echo ')co NAGF04.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGF04.spad (SPAD from IN)>>=
${MID}/NAGF04.spad: ${IN}/f04.spad.pamphlet
	@ echo 1429 making ${MID}/NAGF04.spad from ${IN}/f04.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NAGF04.NRLIB ; \
	${TANGLE} -R"package NAGF04 NagLinearEquationSolvingPackage" ${IN}/f04.spad.pamphlet >NAGF04.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<f04.spad.dvi (DOC from IN)>>=
${DOC}/f04.spad.dvi: ${IN}/f04.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1430 making ${DOC}/f04.spad.dvi from ${IN}/f04.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/f04.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} f04.spad ; \
	rm -f ${DOC}/f04.spad.pamphlet ; \
	rm -f ${DOC}/f04.spad.tex ; \
	rm -f ${DOC}/f04.spad )

@
\subsection{f07.spad \cite{1}}
<<f07.spad (SPAD from IN)>>=
${OUTSRC}/f07.spad: ${IN}/f07.spad.pamphlet
	@ echo 1431 making ${OUTSRC}/f07.spad from ${IN}/f07.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/f07.spad.pamphlet >f07.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGF07.o (O from NRLIB)>>=
${OUT}/NAGF07.o: ${MID}/NAGF07.NRLIB
	@ echo 1432-19 making ${OUT}/NAGF07.o from ${MID}/NAGF07.NRLIB
	@ cp ${MID}/NAGF07.NRLIB/code.o ${OUT}/NAGF07.o

@
<<NAGF07.NRLIB (NRLIB from MID)>>=
${MID}/NAGF07.NRLIB: ${MID}/NAGF07.spad
	@ echo 1433 making ${MID}/NAGF07.NRLIB from ${MID}/NAGF07.spad
	@ (cd ${MID} ; 	echo ')co NAGF07.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGF07.spad (SPAD from IN)>>=
${MID}/NAGF07.spad: ${IN}/f07.spad.pamphlet
	@ echo 1434 making ${MID}/NAGF07.spad from ${IN}/f07.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NAGF07.NRLIB ; \
	${TANGLE} -R"package NAGF07 NagLapack" ${IN}/f07.spad.pamphlet >NAGF07.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<f07.spad.dvi (DOC from IN)>>=
${DOC}/f07.spad.dvi: ${IN}/f07.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1435 making ${DOC}/f07.spad.dvi from ${IN}/f07.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/f07.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} f07.spad ; \
	rm -f ${DOC}/f07.spad.pamphlet ; \
	rm -f ${DOC}/f07.spad.tex ; \
	rm -f ${DOC}/f07.spad )

@
\subsection{facutil.spad \cite{1}}
<<facutil.spad (SPAD from IN)>>=
${OUTSRC}/facutil.spad: ${IN}/facutil.spad.pamphlet
	@ echo 1436 making ${OUTSRC}/facutil.spad from ${IN}/facutil.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/facutil.spad.pamphlet >facutil.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FACUTIL.o (O from NRLIB)>>=
${OUT}/FACUTIL.o: ${MID}/FACUTIL.NRLIB
	@ echo 1437-14 making ${OUT}/FACUTIL.o from ${MID}/FACUTIL.NRLIB
	@ cp ${MID}/FACUTIL.NRLIB/code.o ${OUT}/FACUTIL.o

@
<<FACUTIL.NRLIB (NRLIB from MID)>>=
${MID}/FACUTIL.NRLIB: ${MID}/FACUTIL.spad
	@ echo 1438 making ${MID}/FACUTIL.NRLIB from ${MID}/FACUTIL.spad
	@ (cd ${MID} ; 	echo ')co FACUTIL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FACUTIL.spad (SPAD from IN)>>=
${MID}/FACUTIL.spad: ${IN}/facutil.spad.pamphlet
	@ echo 1439 making ${MID}/FACUTIL.spad from ${IN}/facutil.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FACUTIL.NRLIB ; \
	${TANGLE} -R"package FACUTIL FactoringUtilities" ${IN}/facutil.spad.pamphlet >FACUTIL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PUSHVAR.o (O from NRLIB)>>=
${OUT}/PUSHVAR.o: ${MID}/PUSHVAR.NRLIB
	@ echo 1440-14 making ${OUT}/PUSHVAR.o from ${MID}/PUSHVAR.NRLIB
	@ cp ${MID}/PUSHVAR.NRLIB/code.o ${OUT}/PUSHVAR.o

@
<<PUSHVAR.NRLIB (NRLIB from MID)>>=
${MID}/PUSHVAR.NRLIB: ${MID}/PUSHVAR.spad
	@ echo 1441 making ${MID}/PUSHVAR.NRLIB from ${MID}/PUSHVAR.spad
	@ (cd ${MID} ; 	echo ')co PUSHVAR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PUSHVAR.spad (SPAD from IN)>>=
${MID}/PUSHVAR.spad: ${IN}/facutil.spad.pamphlet
	@ echo 1442 making ${MID}/PUSHVAR.spad from ${IN}/facutil.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PUSHVAR.NRLIB ; \
	${TANGLE} -R"package PUSHVAR PushVariables" ${IN}/facutil.spad.pamphlet >PUSHVAR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<facutil.spad.dvi (DOC from IN)>>=
${DOC}/facutil.spad.dvi: ${IN}/facutil.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1443 making ${DOC}/facutil.spad.dvi from ${IN}/facutil.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/facutil.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} facutil.spad ; \
	rm -f ${DOC}/facutil.spad.pamphlet ; \
	rm -f ${DOC}/facutil.spad.tex ; \
	rm -f ${DOC}/facutil.spad )

@
\subsection{ffcat.spad \cite{1}}
<<ffcat.spad (SPAD from IN)>>=
${OUTSRC}/ffcat.spad: ${IN}/ffcat.spad.pamphlet
	@ echo 1444 making ${OUTSRC}/ffcat.spad from ${IN}/ffcat.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/ffcat.spad.pamphlet >ffcat.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DLP.o (O from NRLIB)>>=
${OUT}/DLP.o: ${MID}/DLP.NRLIB
	@ echo 1445-9 making ${OUT}/DLP.o from ${MID}/DLP.NRLIB
	@ cp ${MID}/DLP.NRLIB/code.o ${OUT}/DLP.o

@
<<DLP.NRLIB (NRLIB from MID)>>=
${MID}/DLP.NRLIB: ${MID}/DLP.spad
	@ echo 1446 making ${MID}/DLP.NRLIB from ${MID}/DLP.spad
	@ (cd ${MID} ; 	echo ')co DLP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DLP.spad (SPAD from IN)>>=
${MID}/DLP.spad: ${IN}/ffcat.spad.pamphlet
	@ echo 1447 making ${MID}/DLP.spad from ${IN}/ffcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DLP.NRLIB ; \
	${TANGLE} -R"package DLP DiscreteLogarithmPackage" ${IN}/ffcat.spad.pamphlet >DLP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FAXF-.o (O from NRLIB)>>=
${OUT}/FAXF-.o: ${MID}/FAXF.NRLIB
	@ echo 1448-13 making ${OUT}/FAXF-.o from ${MID}/FAXF-.NRLIB
	@ cp ${MID}/FAXF-.NRLIB/code.o ${OUT}/FAXF-.o

@
<<FAXF-.NRLIB (NRLIB from MID)>>=
${MID}/FAXF-.NRLIB: ${MID}/FAXF.spad 
	@ echo 1449 making ${MID}/FAXF-.NRLIB from ${MID}/FAXF.spad
	@ (cd ${MID} ; 	echo ')co FAXF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FAXF.o (O from NRLIB)>>=
${OUT}/FAXF.o: ${MID}/FAXF.NRLIB
	@ echo 1450-13 making ${OUT}/FAXF.o from ${MID}/FAXF.NRLIB
	@ cp ${MID}/FAXF.NRLIB/code.o ${OUT}/FAXF.o

@
<<FAXF.NRLIB (NRLIB from MID)>>=
${MID}/FAXF.NRLIB: ${MID}/FAXF.spad
	@ echo 1451 making ${MID}/FAXF.NRLIB from ${MID}/FAXF.spad
	@ (cd ${MID} ; 	echo ')co FAXF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FAXF.spad (SPAD from IN)>>=
${MID}/FAXF.spad: ${IN}/ffcat.spad.pamphlet
	@ echo 1452 making ${MID}/FAXF.spad from ${IN}/ffcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FAXF.NRLIB ; \
	${TANGLE} -R"category FAXF FiniteAlgebraicExtensionField" ${IN}/ffcat.spad.pamphlet >FAXF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFIELDC-.o (O from NRLIB)>>=
${OUT}/FFIELDC-.o: ${MID}/FFIELDC.NRLIB
	@ echo 1453 making ${OUT}/FFIELDC-.o from ${MID}/FFIELDC-.NRLIB
	@ cp ${MID}/FFIELDC-.NRLIB/code.o ${OUT}/FFIELDC-.o

@
<<FFIELDC-.NRLIB (NRLIB from MID)>>=
${MID}/FFIELDC-.NRLIB: ${MID}/FFIELDC.spad 
	@ echo 1454 making ${MID}/FFIELDC-.NRLIB from ${MID}/FFIELDC.spad
	@ (cd ${MID} ; 	echo ')co FFIELDC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFIELDC.o (O from NRLIB)>>=
${OUT}/FFIELDC.o: ${MID}/FFIELDC.NRLIB
	@ echo 1455-0c making ${OUT}/FFIELDC.o from ${MID}/FFIELDC.NRLIB
	@ cp ${MID}/FFIELDC.NRLIB/code.o ${OUT}/FFIELDC.o

@
<<FFIELDC.NRLIB (NRLIB from MID)>>=
${MID}/FFIELDC.NRLIB: ${MID}/FFIELDC.spad
	@ echo 1456 making ${MID}/FFIELDC.NRLIB from ${MID}/FFIELDC.spad
	@ (cd ${MID} ; 	echo ')co FFIELDC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFIELDC.spad (SPAD from IN)>>=
${MID}/FFIELDC.spad: ${IN}/ffcat.spad.pamphlet
	@ echo 1457 making ${MID}/FFIELDC.spad from ${IN}/ffcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FFIELDC.NRLIB ; \
	${TANGLE} -R"category FFIELDC FiniteFieldCategory" ${IN}/ffcat.spad.pamphlet >FFIELDC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFIELDC-.o (BOOTSTRAP from MID)>>=
${MID}/FFIELDC-.o: ${MID}/FFIELDC-.lsp 
	@ echo 1458-0b making ${MID}/FFIELDC-.o from ${MID}/FFIELDC-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "FFIELDC-.lsp" :output-file "FFIELDC-.o"))' | ${DEPSYS} )
	@ cp ${MID}/FFIELDC-.o ${OUT}/FFIELDC-.o

@
<<FFIELDC-.lsp (LISP from IN)>>=
${MID}/FFIELDC-.lsp: ${IN}/ffcat.spad.pamphlet
	@ echo 1459 making ${MID}/FFIELDC-.lsp from ${IN}/ffcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FFIELDC-.NRLIB ; \
	rm -rf ${OUT}/FFIELDC-.o ; \
	${TANGLE} -R"FFIELDC-.lsp BOOTSTRAP" ${IN}/ffcat.spad.pamphlet >FFIELDC-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFIELDC.o (BOOTSTRAP from MID)>>=
${MID}/FFIELDC.o: ${MID}/FFIELDC.lsp 
	@ echo 1460-0b making ${MID}/FFIELDC.o from ${MID}/FFIELDC.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "FFIELDC.lsp" :output-file "FFIELDC.o"))' | ${DEPSYS} )
	@ cp ${MID}/FFIELDC.o ${OUT}/FFIELDC.o

@
<<FFIELDC.lsp (LISP from IN)>>=
${MID}/FFIELDC.lsp: ${IN}/ffcat.spad.pamphlet
	@ echo 1461 making ${MID}/FFIELDC.lsp from ${IN}/ffcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FFIELDC.NRLIB ; \
	rm -rf ${OUT}/FFIELDC.o ; \
	${TANGLE} -R"FFIELDC.lsp BOOTSTRAP" ${IN}/ffcat.spad.pamphlet >FFIELDC.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFSLPE.o (O from NRLIB)>>=
${OUT}/FFSLPE.o: ${MID}/FFSLPE.NRLIB
	@ echo 1462-14 making ${OUT}/FFSLPE.o from ${MID}/FFSLPE.NRLIB
	@ cp ${MID}/FFSLPE.NRLIB/code.o ${OUT}/FFSLPE.o

@
<<FFSLPE.NRLIB (NRLIB from MID)>>=
${MID}/FFSLPE.NRLIB: ${MID}/FFSLPE.spad
	@ echo 1463 making ${MID}/FFSLPE.NRLIB from ${MID}/FFSLPE.spad
	@ (cd ${MID} ; 	echo ')co FFSLPE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFSLPE.spad (SPAD from IN)>>=
${MID}/FFSLPE.spad: ${IN}/ffcat.spad.pamphlet
	@ echo 1464 making ${MID}/FFSLPE.spad from ${IN}/ffcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FFSLPE.NRLIB ; \
	${TANGLE} -R"package FFSLPE FiniteFieldSolveLinearPolynomialEquation" ${IN}/ffcat.spad.pamphlet >FFSLPE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FPC-.o (O from NRLIB)>>=
${OUT}/FPC-.o: ${MID}/FPC.NRLIB
	@ echo 1465-10 making ${OUT}/FPC-.o from ${MID}/FPC-.NRLIB
	@ cp ${MID}/FPC-.NRLIB/code.o ${OUT}/FPC-.o

@
<<FPC-.NRLIB (NRLIB from MID)>>=
${MID}/FPC-.NRLIB: ${MID}/FPC.spad 
	@ echo 1466 making ${MID}/FPC-.NRLIB from ${MID}/FPC.spad
	@ (cd ${MID} ; 	echo ')co FPC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FPC.o (O from NRLIB)>>=
${OUT}/FPC.o: ${MID}/FPC.NRLIB
	@ echo 1467-10 making ${OUT}/FPC.o from ${MID}/FPC.NRLIB
	@ cp ${MID}/FPC.NRLIB/code.o ${OUT}/FPC.o

@
<<FPC.NRLIB (NRLIB from MID)>>=
${MID}/FPC.NRLIB: ${MID}/FPC.spad
	@ echo 1468 making ${MID}/FPC.NRLIB from ${MID}/FPC.spad
	@ (cd ${MID} ; 	echo ')co FPC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FPC.spad (SPAD from IN)>>=
${MID}/FPC.spad: ${IN}/ffcat.spad.pamphlet
	@ echo 1469 making ${MID}/FPC.spad from ${IN}/ffcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FPC.NRLIB ; \
	${TANGLE} -R"category FPC FieldOfPrimeCharacteristic" ${IN}/ffcat.spad.pamphlet >FPC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<XF-.o (O from NRLIB)>>=
${OUT}/XF-.o: ${MID}/XF.NRLIB
	@ echo 1470-11 making ${OUT}/XF-.o from ${MID}/XF-.NRLIB
	@ cp ${MID}/XF-.NRLIB/code.o ${OUT}/XF-.o

@
<<XF-.NRLIB (NRLIB from MID)>>=
${MID}/XF-.NRLIB: ${MID}/XF.spad 
	@ echo 1471 making ${MID}/XF-.NRLIB from ${MID}/XF.spad
	@ (cd ${MID} ; 	echo ')co XF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<XF.o (O from NRLIB)>>=
${OUT}/XF.o: ${MID}/XF.NRLIB
	@ echo 1472-11 making ${OUT}/XF.o from ${MID}/XF.NRLIB
	@ cp ${MID}/XF.NRLIB/code.o ${OUT}/XF.o

@
<<XF.NRLIB (NRLIB from MID)>>=
${MID}/XF.NRLIB: ${MID}/XF.spad
	@ echo 1473 making ${MID}/XF.NRLIB from ${MID}/XF.spad
	@ (cd ${MID} ; 	echo ')co XF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<XF.spad (SPAD from IN)>>=
${MID}/XF.spad: ${IN}/ffcat.spad.pamphlet
	@ echo 1474 making ${MID}/XF.spad from ${IN}/ffcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf XF.NRLIB ; \
	${TANGLE} -R"category XF ExtensionField" ${IN}/ffcat.spad.pamphlet >XF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ffcat.spad.dvi (DOC from IN)>>=
${DOC}/ffcat.spad.dvi: ${IN}/ffcat.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1475 making ${DOC}/ffcat.spad.dvi from ${IN}/ffcat.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/ffcat.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} ffcat.spad ; \
	rm -f ${DOC}/ffcat.spad.pamphlet ; \
	rm -f ${DOC}/ffcat.spad.tex ; \
	rm -f ${DOC}/ffcat.spad )

@
\subsection{ffcg.spad \cite{1}}
<<ffcg.spad (SPAD from IN)>>=
${OUTSRC}/ffcg.spad: ${IN}/ffcg.spad.pamphlet
	@ echo 1476 making ${OUTSRC}/ffcg.spad from ${IN}/ffcg.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/ffcg.spad.pamphlet >ffcg.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFCG.o (O from NRLIB)>>=
${OUT}/FFCG.o: ${MID}/FFCG.NRLIB
	@ echo 1477-14 making ${OUT}/FFCG.o from ${MID}/FFCG.NRLIB
	@ cp ${MID}/FFCG.NRLIB/code.o ${OUT}/FFCG.o

@
<<FFCG.NRLIB (NRLIB from MID)>>=
${MID}/FFCG.NRLIB: ${MID}/FFCG.spad
	@ echo 1478 making ${MID}/FFCG.NRLIB from ${MID}/FFCG.spad
	@ (cd ${MID} ; 	echo ')co FFCG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFCG.spad (SPAD from IN)>>=
${MID}/FFCG.spad: ${IN}/ffcg.spad.pamphlet
	@ echo 1479 making ${MID}/FFCG.spad from ${IN}/ffcg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FFCG.NRLIB ; \
	${TANGLE} -R"domain FFCG FiniteFieldCyclicGroup" ${IN}/ffcg.spad.pamphlet >FFCG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFCGP.o (O from NRLIB)>>=
${OUT}/FFCGP.o: ${MID}/FFCGP.NRLIB
	@ echo 1480-19 making ${OUT}/FFCGP.o from ${MID}/FFCGP.NRLIB
	@ cp ${MID}/FFCGP.NRLIB/code.o ${OUT}/FFCGP.o

@
<<FFCGP.NRLIB (NRLIB from MID)>>=
${MID}/FFCGP.NRLIB: ${MID}/FFCGP.spad
	@ echo 1481 making ${MID}/FFCGP.NRLIB from ${MID}/FFCGP.spad
	@ (cd ${MID} ; 	echo ')co FFCGP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFCGP.spad (SPAD from IN)>>=
${MID}/FFCGP.spad: ${IN}/ffcg.spad.pamphlet
	@ echo 1482 making ${MID}/FFCGP.spad from ${IN}/ffcg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FFCGP.NRLIB ; \
	${TANGLE} -R"domain FFCGP FiniteFieldCyclicGroupExtensionByPolynomial" ${IN}/ffcg.spad.pamphlet >FFCGP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFCGX.o (O from NRLIB)>>=
${OUT}/FFCGX.o: ${MID}/FFCGX.NRLIB
	@ echo 1483-14 making ${OUT}/FFCGX.o from ${MID}/FFCGX.NRLIB
	@ cp ${MID}/FFCGX.NRLIB/code.o ${OUT}/FFCGX.o

@
<<FFCGX.NRLIB (NRLIB from MID)>>=
${MID}/FFCGX.NRLIB: ${MID}/FFCGX.spad
	@ echo 1484 making ${MID}/FFCGX.NRLIB from ${MID}/FFCGX.spad
	@ (cd ${MID} ; 	echo ')co FFCGX.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFCGX.spad (SPAD from IN)>>=
${MID}/FFCGX.spad: ${IN}/ffcg.spad.pamphlet
	@ echo 1485 making ${MID}/FFCGX.spad from ${IN}/ffcg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FFCGX.NRLIB ; \
	${TANGLE} -R"domain FFCGX FiniteFieldCyclicGroupExtension" ${IN}/ffcg.spad.pamphlet >FFCGX.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ffcg.spad.dvi (DOC from IN)>>=
${DOC}/ffcg.spad.dvi: ${IN}/ffcg.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1486 making ${DOC}/ffcg.spad.dvi from ${IN}/ffcg.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/ffcg.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} ffcg.spad ; \
	rm -f ${DOC}/ffcg.spad.pamphlet ; \
	rm -f ${DOC}/ffcg.spad.tex ; \
	rm -f ${DOC}/ffcg.spad )

@
\subsection{fff.spad \cite{1}}
<<fff.spad (SPAD from IN)>>=
${OUTSRC}/fff.spad: ${IN}/fff.spad.pamphlet
	@ echo 1487 making ${OUTSRC}/fff.spad from ${IN}/fff.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/fff.spad.pamphlet >fff.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFF.o (O from NRLIB)>>=
${OUT}/FFF.o: ${MID}/FFF.NRLIB
	@ echo 1488-14 making ${OUT}/FFF.o from ${MID}/FFF.NRLIB
	@ cp ${MID}/FFF.NRLIB/code.o ${OUT}/FFF.o

@
<<FFF.NRLIB (NRLIB from MID)>>=
${MID}/FFF.NRLIB: ${MID}/FFF.spad
	@ echo 1489 making ${MID}/FFF.NRLIB from ${MID}/FFF.spad
	@ (cd ${MID} ; 	echo ')co FFF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFF.spad (SPAD from IN)>>=
${MID}/FFF.spad: ${IN}/fff.spad.pamphlet
	@ echo 1490 making ${MID}/FFF.spad from ${IN}/fff.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FFF.NRLIB ; \
	${TANGLE} -R"package FFF FiniteFieldFunctions" ${IN}/fff.spad.pamphlet >FFF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<fff.spad.dvi (DOC from IN)>>=
${DOC}/fff.spad.dvi: ${IN}/fff.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1491 making ${DOC}/fff.spad.dvi from ${IN}/fff.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/fff.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} fff.spad ; \
	rm -f ${DOC}/fff.spad.pamphlet ; \
	rm -f ${DOC}/fff.spad.tex ; \
	rm -f ${DOC}/fff.spad )

@
\subsection{ffhom.spad \cite{1}}
<<ffhom.spad (SPAD from IN)>>=
${OUTSRC}/ffhom.spad: ${IN}/ffhom.spad.pamphlet
	@ echo 1492 making ${OUTSRC}/ffhom.spad from ${IN}/ffhom.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/ffhom.spad.pamphlet >ffhom.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFHOM.o (O from NRLIB)>>=
${OUT}/FFHOM.o: ${MID}/FFHOM.NRLIB
	@ echo 1493-14 making ${OUT}/FFHOM.o from ${MID}/FFHOM.NRLIB
	@ cp ${MID}/FFHOM.NRLIB/code.o ${OUT}/FFHOM.o

@
<<FFHOM.NRLIB (NRLIB from MID)>>=
${MID}/FFHOM.NRLIB: ${MID}/FFHOM.spad
	@ echo 1494 making ${MID}/FFHOM.NRLIB from ${MID}/FFHOM.spad
	@ (cd ${MID} ; 	echo ')co FFHOM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFHOM.spad (SPAD from IN)>>=
${MID}/FFHOM.spad: ${IN}/ffhom.spad.pamphlet
	@ echo 1495 making ${MID}/FFHOM.spad from ${IN}/ffhom.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FFHOM.NRLIB ; \
	${TANGLE} -R"package FFHOM FiniteFieldHomomorphisms" ${IN}/ffhom.spad.pamphlet >FFHOM.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ffhom.spad.dvi (DOC from IN)>>=
${DOC}/ffhom.spad.dvi: ${IN}/ffhom.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1496 making ${DOC}/ffhom.spad.dvi from ${IN}/ffhom.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/ffhom.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} ffhom.spad ; \
	rm -f ${DOC}/ffhom.spad.pamphlet ; \
	rm -f ${DOC}/ffhom.spad.tex ; \
	rm -f ${DOC}/ffhom.spad )

@
\subsection{ffnb.spad \cite{1}}
<<ffnb.spad (SPAD from IN)>>=
${OUTSRC}/ffnb.spad: ${IN}/ffnb.spad.pamphlet
	@ echo 1497 making ${OUTSRC}/ffnb.spad from ${IN}/ffnb.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/ffnb.spad.pamphlet >ffnb.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFNB.o (O from NRLIB)>>=
${OUT}/FFNB.o: ${MID}/FFNB.NRLIB
	@ echo 1498-14 making ${OUT}/FFNB.o from ${MID}/FFNB.NRLIB
	@ cp ${MID}/FFNB.NRLIB/code.o ${OUT}/FFNB.o

@
<<FFNB.NRLIB (NRLIB from MID)>>=
${MID}/FFNB.NRLIB: ${MID}/FFNB.spad
	@ echo 1499 making ${MID}/FFNB.NRLIB from ${MID}/FFNB.spad
	@ (cd ${MID} ; 	echo ')co FFNB.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFNB.spad (SPAD from IN)>>=
${MID}/FFNB.spad: ${IN}/ffnb.spad.pamphlet
	@ echo 1500 making ${MID}/FFNB.spad from ${IN}/ffnb.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FFNB.NRLIB ; \
	${TANGLE} -R"domain FFNB FiniteFieldNormalBasis" ${IN}/ffnb.spad.pamphlet >FFNB.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFNBP.o (O from NRLIB)>>=
${OUT}/FFNBP.o: ${MID}/FFNBP.NRLIB
	@ echo 1501-19 making ${OUT}/FFNBP.o from ${MID}/FFNBP.NRLIB
	@ cp ${MID}/FFNBP.NRLIB/code.o ${OUT}/FFNBP.o

@
<<FFNBP.NRLIB (NRLIB from MID)>>=
${MID}/FFNBP.NRLIB: ${MID}/FFNBP.spad
	@ echo 1502 making ${MID}/FFNBP.NRLIB from ${MID}/FFNBP.spad
	@ (cd ${MID} ; 	echo ')co FFNBP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFNBP.spad (SPAD from IN)>>=
${MID}/FFNBP.spad: ${IN}/ffnb.spad.pamphlet
	@ echo 1503 making ${MID}/FFNBP.spad from ${IN}/ffnb.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FFNBP.NRLIB ; \
	${TANGLE} -R"domain FFNBP FiniteFieldNormalBasisExtensionByPolynomial" ${IN}/ffnb.spad.pamphlet >FFNBP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFNBX.o (O from NRLIB)>>=
${OUT}/FFNBX.o: ${MID}/FFNBX.NRLIB
	@ echo 1504-14 making ${OUT}/FFNBX.o from ${MID}/FFNBX.NRLIB
	@ cp ${MID}/FFNBX.NRLIB/code.o ${OUT}/FFNBX.o

@
<<FFNBX.NRLIB (NRLIB from MID)>>=
${MID}/FFNBX.NRLIB: ${MID}/FFNBX.spad
	@ echo 1505 making ${MID}/FFNBX.NRLIB from ${MID}/FFNBX.spad
	@ (cd ${MID} ; 	echo ')co FFNBX.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFNBX.spad (SPAD from IN)>>=
${MID}/FFNBX.spad: ${IN}/ffnb.spad.pamphlet
	@ echo 1506 making ${MID}/FFNBX.spad from ${IN}/ffnb.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FFNBX.NRLIB ; \
	${TANGLE} -R"domain FFNBX FiniteFieldNormalBasisExtension" ${IN}/ffnb.spad.pamphlet >FFNBX.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INBFF.o (O from NRLIB)>>=
${OUT}/INBFF.o: ${MID}/INBFF.NRLIB
	@ echo 1507-22 making ${OUT}/INBFF.o from ${MID}/INBFF.NRLIB
	@ cp ${MID}/INBFF.NRLIB/code.o ${OUT}/INBFF.o

@
<<INBFF.NRLIB (NRLIB from MID)>>=
${MID}/INBFF.NRLIB: ${MID}/INBFF.spad
	@ echo 1508 making ${MID}/INBFF.NRLIB from ${MID}/INBFF.spad
	@ (cd ${MID} ; 	echo ')co INBFF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INBFF.spad (SPAD from IN)>>=
${MID}/INBFF.spad: ${IN}/ffnb.spad.pamphlet
	@ echo 1509 making ${MID}/INBFF.spad from ${IN}/ffnb.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INBFF.NRLIB ; \
	${TANGLE} -R"package INBFF InnerNormalBasisFieldFunctions" ${IN}/ffnb.spad.pamphlet >INBFF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ffnb.spad.dvi (DOC from IN)>>=
${DOC}/ffnb.spad.dvi: ${IN}/ffnb.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1510 making ${DOC}/ffnb.spad.dvi from ${IN}/ffnb.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/ffnb.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} ffnb.spad ; \
	rm -f ${DOC}/ffnb.spad.pamphlet ; \
	rm -f ${DOC}/ffnb.spad.tex ; \
	rm -f ${DOC}/ffnb.spad )

@
\subsection{ffpoly2.spad \cite{1}}
<<ffpoly2.spad (SPAD from IN)>>=
${OUTSRC}/ffpoly2.spad: ${IN}/ffpoly2.spad.pamphlet
	@ echo 1511 making ${OUTSRC}/ffpoly2.spad from ${IN}/ffpoly2.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/ffpoly2.spad.pamphlet >ffpoly2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFPOLY2.o (O from NRLIB)>>=
${OUT}/FFPOLY2.o: ${MID}/FFPOLY2.NRLIB
	@ echo 1512-13 making ${OUT}/FFPOLY2.o from ${MID}/FFPOLY2.NRLIB
	@ cp ${MID}/FFPOLY2.NRLIB/code.o ${OUT}/FFPOLY2.o

@
<<FFPOLY2.NRLIB (NRLIB from MID)>>=
${MID}/FFPOLY2.NRLIB: ${MID}/FFPOLY2.spad
	@ echo 1513 making ${MID}/FFPOLY2.NRLIB from ${MID}/FFPOLY2.spad
	@ (cd ${MID} ; 	echo ')co FFPOLY2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFPOLY2.spad (SPAD from IN)>>=
${MID}/FFPOLY2.spad: ${IN}/ffpoly2.spad.pamphlet
	@ echo 1514 making ${MID}/FFPOLY2.spad from ${IN}/ffpoly2.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FFPOLY2.NRLIB ; \
	${TANGLE} -R"package FFPOLY2 FiniteFieldPolynomialPackage2" ${IN}/ffpoly2.spad.pamphlet >FFPOLY2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ffpoly2.spad.dvi (DOC from IN)>>=
${DOC}/ffpoly2.spad.dvi: ${IN}/ffpoly2.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1515 making ${DOC}/ffpoly2.spad.dvi from ${IN}/ffpoly2.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/ffpoly2.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} ffpoly2.spad ; \
	rm -f ${DOC}/ffpoly2.spad.pamphlet ; \
	rm -f ${DOC}/ffpoly2.spad.tex ; \
	rm -f ${DOC}/ffpoly2.spad )

@
\subsection{ffpoly.spad \cite{1}}
<<ffpoly.spad (SPAD from IN)>>=
${OUTSRC}/ffpoly.spad: ${IN}/ffpoly.spad.pamphlet
	@ echo 1516 making ${OUTSRC}/ffpoly.spad from ${IN}/ffpoly.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/ffpoly.spad.pamphlet >ffpoly.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFPOLY.o (O from NRLIB)>>=
${OUT}/FFPOLY.o: ${MID}/FFPOLY.NRLIB
	@ echo 1517-14 making ${OUT}/FFPOLY.o from ${MID}/FFPOLY.NRLIB
	@ cp ${MID}/FFPOLY.NRLIB/code.o ${OUT}/FFPOLY.o

@
<<FFPOLY.NRLIB (NRLIB from MID)>>=
${MID}/FFPOLY.NRLIB: ${MID}/FFPOLY.spad
	@ echo 1518 making ${MID}/FFPOLY.NRLIB from ${MID}/FFPOLY.spad
	@ (cd ${MID} ; 	echo ')co FFPOLY.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFPOLY.spad (SPAD from IN)>>=
${MID}/FFPOLY.spad: ${IN}/ffpoly.spad.pamphlet
	@ echo 1519 making ${MID}/FFPOLY.spad from ${IN}/ffpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FFPOLY.NRLIB ; \
	${TANGLE} -R"package FFPOLY FiniteFieldPolynomialPackage" ${IN}/ffpoly.spad.pamphlet >FFPOLY.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ffpoly.spad.dvi (DOC from IN)>>=
${DOC}/ffpoly.spad.dvi: ${IN}/ffpoly.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1520 making ${DOC}/ffpoly.spad.dvi from ${IN}/ffpoly.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/ffpoly.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} ffpoly.spad ; \
	rm -f ${DOC}/ffpoly.spad.pamphlet ; \
	rm -f ${DOC}/ffpoly.spad.tex ; \
	rm -f ${DOC}/ffpoly.spad )

@
\subsection{ffp.spad \cite{1}}
<<ffp.spad (SPAD from IN)>>=
${OUTSRC}/ffp.spad: ${IN}/ffp.spad.pamphlet
	@ echo 1521 making ${OUTSRC}/ffp.spad from ${IN}/ffp.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/ffp.spad.pamphlet >ffp.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IFF.o (O from NRLIB)>>=
${OUT}/IFF.o: ${MID}/IFF.NRLIB
	@ echo 1522-14 making ${OUT}/IFF.o from ${MID}/IFF.NRLIB
	@ cp ${MID}/IFF.NRLIB/code.o ${OUT}/IFF.o

@
<<IFF.NRLIB (NRLIB from MID)>>=
${MID}/IFF.NRLIB: ${MID}/IFF.spad
	@ echo 1523 making ${MID}/IFF.NRLIB from ${MID}/IFF.spad
	@ (cd ${MID} ; 	echo ')co IFF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IFF.spad (SPAD from IN)>>=
${MID}/IFF.spad: ${IN}/ffp.spad.pamphlet
	@ echo 1524 making ${MID}/IFF.spad from ${IN}/ffp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IFF.NRLIB ; \
	${TANGLE} -R"domain IFF InnerFiniteField" ${IN}/ffp.spad.pamphlet >IFF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FF.o (O from NRLIB)>>=
${OUT}/FF.o: ${MID}/FF.NRLIB
	@ echo 1525-14 making ${OUT}/FF.o from ${MID}/FF.NRLIB
	@ cp ${MID}/FF.NRLIB/code.o ${OUT}/FF.o

@
<<FF.NRLIB (NRLIB from MID)>>=
${MID}/FF.NRLIB: ${MID}/FF.spad
	@ echo 1526 making ${MID}/FF.NRLIB from ${MID}/FF.spad
	@ (cd ${MID} ; 	echo ')co FF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FF.spad (SPAD from IN)>>=
${MID}/FF.spad: ${IN}/ffp.spad.pamphlet
	@ echo 1527 making ${MID}/FF.spad from ${IN}/ffp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FF.NRLIB ; \
	${TANGLE} -R"domain FF FiniteField" ${IN}/ffp.spad.pamphlet >FF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFP.o (O from NRLIB)>>=
${OUT}/FFP.o: ${MID}/FFP.NRLIB
	@ echo 1528-19 making ${OUT}/FFP.o from ${MID}/FFP.NRLIB
	@ cp ${MID}/FFP.NRLIB/code.o ${OUT}/FFP.o

@
<<FFP.NRLIB (NRLIB from MID)>>=
${MID}/FFP.NRLIB: ${MID}/FFP.spad
	@ echo 1529 making ${MID}/FFP.NRLIB from ${MID}/FFP.spad
	@ (cd ${MID} ; 	echo ')co FFP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFP.spad (SPAD from IN)>>=
${MID}/FFP.spad: ${IN}/ffp.spad.pamphlet
	@ echo 1530 making ${MID}/FFP.spad from ${IN}/ffp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FFP.NRLIB ; \
	${TANGLE} -R"domain FFP FiniteFieldExtensionByPolynomial" ${IN}/ffp.spad.pamphlet >FFP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFX.o (O from NRLIB)>>=
${OUT}/FFX.o: ${MID}/FFX.NRLIB
	@ echo 1531-14 making ${OUT}/FFX.o from ${MID}/FFX.NRLIB
	@ cp ${MID}/FFX.NRLIB/code.o ${OUT}/FFX.o

@
<<FFX.NRLIB (NRLIB from MID)>>=
${MID}/FFX.NRLIB: ${MID}/FFX.spad
	@ echo 1532 making ${MID}/FFX.NRLIB from ${MID}/FFX.spad
	@ (cd ${MID} ; 	echo ')co FFX.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFX.spad (SPAD from IN)>>=
${MID}/FFX.spad: ${IN}/ffp.spad.pamphlet
	@ echo 1533 making ${MID}/FFX.spad from ${IN}/ffp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FFX.NRLIB ; \
	${TANGLE} -R"domain FFX FiniteFieldExtension" ${IN}/ffp.spad.pamphlet >FFX.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ffp.spad.dvi (DOC from IN)>>=
${DOC}/ffp.spad.dvi: ${IN}/ffp.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1534 making ${DOC}/ffp.spad.dvi from ${IN}/ffp.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/ffp.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} ffp.spad ; \
	rm -f ${DOC}/ffp.spad.pamphlet ; \
	rm -f ${DOC}/ffp.spad.tex ; \
	rm -f ${DOC}/ffp.spad )

@
\subsection{ffrac.as \cite{1}}
<<ffrac.as (SPAD from IN)>>=
${OUTSRC}/ffrac.as: ${IN}/ffrac.as.pamphlet
	@ echo 1535 making ${OUTSRC}/ffrac.as from ${IN}/ffrac.as.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/ffrac.as.pamphlet >ffrac.as )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ffrac.as.dvi (DOC from IN)>>=
${DOC}/ffrac.as.dvi: ${IN}/ffrac.as.pamphlet ${DOC}/axiom.sty
	@ echo 1536 making ${DOC}/ffrac.as.dvi from ${IN}/ffrac.as.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/ffrac.as.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} ffrac.as ; \
	rm -f ${DOC}/ffrac.as.pamphlet ; \
	rm -f ${DOC}/ffrac.as.tex ; \
	rm -f ${DOC}/ffrac.as )

@
\subsection{ffx.spad \cite{1}}
<<ffx.spad (SPAD from IN)>>=
${OUTSRC}/ffx.spad: ${IN}/ffx.spad.pamphlet
	@ echo 1537 making ${OUTSRC}/ffx.spad from ${IN}/ffx.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/ffx.spad.pamphlet >ffx.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IRREDFFX.o (O from NRLIB)>>=
${OUT}/IRREDFFX.o: ${MID}/IRREDFFX.NRLIB
	@ echo 1538-11 making ${OUT}/IRREDFFX.o from ${MID}/IRREDFFX.NRLIB
	@ cp ${MID}/IRREDFFX.NRLIB/code.o ${OUT}/IRREDFFX.o

@
<<IRREDFFX.NRLIB (NRLIB from MID)>>=
${MID}/IRREDFFX.NRLIB: ${MID}/IRREDFFX.spad
	@ echo 1539 making ${MID}/IRREDFFX.NRLIB from ${MID}/IRREDFFX.spad
	@ (cd ${MID} ; 	echo ')co IRREDFFX.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IRREDFFX.spad (SPAD from IN)>>=
${MID}/IRREDFFX.spad: ${IN}/ffx.spad.pamphlet
	@ echo 1540 making ${MID}/IRREDFFX.spad from ${IN}/ffx.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IRREDFFX.NRLIB ; \
	${TANGLE} -R"package IRREDFFX IrredPolyOverFiniteField" ${IN}/ffx.spad.pamphlet >IRREDFFX.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ffx.spad.dvi (DOC from IN)>>=
${DOC}/ffx.spad.dvi: ${IN}/ffx.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1541 making ${DOC}/ffx.spad.dvi from ${IN}/ffx.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/ffx.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} ffx.spad ; \
	rm -f ${DOC}/ffx.spad.pamphlet ; \
	rm -f ${DOC}/ffx.spad.tex ; \
	rm -f ${DOC}/ffx.spad )

@
\subsection{files.spad \cite{1}}
<<files.spad (SPAD from IN)>>=
${OUTSRC}/files.spad: ${IN}/files.spad.pamphlet
	@ echo 1542 making ${OUTSRC}/files.spad from ${IN}/files.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/files.spad.pamphlet >files.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BINFILE.o (O from NRLIB)>>=
${OUT}/BINFILE.o: ${MID}/BINFILE.NRLIB
	@ echo 1543-14 making ${OUT}/BINFILE.o from ${MID}/BINFILE.NRLIB
	@ cp ${MID}/BINFILE.NRLIB/code.o ${OUT}/BINFILE.o

@
<<BINFILE.NRLIB (NRLIB from MID)>>=
${MID}/BINFILE.NRLIB: ${MID}/BINFILE.spad
	@ echo 1544 making ${MID}/BINFILE.NRLIB from ${MID}/BINFILE.spad
	@ (cd ${MID} ; 	echo ')co BINFILE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BINFILE.spad (SPAD from IN)>>=
${MID}/BINFILE.spad: ${IN}/files.spad.pamphlet
	@ echo 1545 making ${MID}/BINFILE.spad from ${IN}/files.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf BINFILE.NRLIB ; \
	${TANGLE} -R"domain BINFILE BinaryFile" ${IN}/files.spad.pamphlet >BINFILE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FILE.o (O from NRLIB)>>=
${OUT}/FILE.o: ${MID}/FILE.NRLIB
	@ echo 1546-14 making ${OUT}/FILE.o from ${MID}/FILE.NRLIB
	@ cp ${MID}/FILE.NRLIB/code.o ${OUT}/FILE.o

@
<<FILE.NRLIB (NRLIB from MID)>>=
${MID}/FILE.NRLIB: ${MID}/FILE.spad
	@ echo 1547 making ${MID}/FILE.NRLIB from ${MID}/FILE.spad
	@ (cd ${MID} ; 	echo ')co FILE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FILE.spad (SPAD from IN)>>=
${MID}/FILE.spad: ${IN}/files.spad.pamphlet
	@ echo 1548 making ${MID}/FILE.spad from ${IN}/files.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FILE.NRLIB ; \
	${TANGLE} -R"domain FILE File" ${IN}/files.spad.pamphlet >FILE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FILECAT.o (O from NRLIB)>>=
${OUT}/FILECAT.o: ${MID}/FILECAT.NRLIB
	@ echo 1549-4 making ${OUT}/FILECAT.o from ${MID}/FILECAT.NRLIB
	@ cp ${MID}/FILECAT.NRLIB/code.o ${OUT}/FILECAT.o

@
<<FILECAT.NRLIB (NRLIB from MID)>>=
${MID}/FILECAT.NRLIB: ${MID}/FILECAT.spad
	@ echo 1550 making ${MID}/FILECAT.NRLIB from ${MID}/FILECAT.spad
	@ (cd ${MID} ; 	echo ')co FILECAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FILECAT.spad (SPAD from IN)>>=
${MID}/FILECAT.spad: ${IN}/files.spad.pamphlet
	@ echo 1551 making ${MID}/FILECAT.spad from ${IN}/files.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FILECAT.NRLIB ; \
	${TANGLE} -R"category FILECAT FileCategory" ${IN}/files.spad.pamphlet >FILECAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<KAFILE.o (O from NRLIB)>>=
${OUT}/KAFILE.o: ${MID}/KAFILE.NRLIB
	@ echo 1552-18 making ${OUT}/KAFILE.o from ${MID}/KAFILE.NRLIB
	@ cp ${MID}/KAFILE.NRLIB/code.o ${OUT}/KAFILE.o

@
<<KAFILE.NRLIB (NRLIB from MID)>>=
${MID}/KAFILE.NRLIB: ${MID}/KAFILE.spad
	@ echo 1553 making ${MID}/KAFILE.NRLIB from ${MID}/KAFILE.spad
	@ (cd ${MID} ; 	echo ')co KAFILE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<KAFILE.spad (SPAD from IN)>>=
${MID}/KAFILE.spad: ${IN}/files.spad.pamphlet
	@ echo 1554 making ${MID}/KAFILE.spad from ${IN}/files.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf KAFILE.NRLIB ; \
	${TANGLE} -R"domain KAFILE KeyedAccessFile" ${IN}/files.spad.pamphlet >KAFILE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LIB.o (O from NRLIB)>>=
${OUT}/LIB.o: ${MID}/LIB.NRLIB
	@ echo 1555-19 making ${OUT}/LIB.o from ${MID}/LIB.NRLIB
	@ cp ${MID}/LIB.NRLIB/code.o ${OUT}/LIB.o

@
<<LIB.NRLIB (NRLIB from MID)>>=
${MID}/LIB.NRLIB: ${MID}/LIB.spad
	@ echo 1556 making ${MID}/LIB.NRLIB from ${MID}/LIB.spad
	@ (cd ${MID} ; 	echo ')co LIB.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LIB.spad (SPAD from IN)>>=
${MID}/LIB.spad: ${IN}/files.spad.pamphlet
	@ echo 1557 making ${MID}/LIB.spad from ${IN}/files.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LIB.NRLIB ; \
	${TANGLE} -R"domain LIB Library" ${IN}/files.spad.pamphlet >LIB.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TEXTFILE.o (O from NRLIB)>>=
${OUT}/TEXTFILE.o: ${MID}/TEXTFILE.NRLIB
	@ echo 1558-14 making ${OUT}/TEXTFILE.o from ${MID}/TEXTFILE.NRLIB
	@ cp ${MID}/TEXTFILE.NRLIB/code.o ${OUT}/TEXTFILE.o

@
<<TEXTFILE.NRLIB (NRLIB from MID)>>=
${MID}/TEXTFILE.NRLIB: ${MID}/TEXTFILE.spad
	@ echo 1559 making ${MID}/TEXTFILE.NRLIB from ${MID}/TEXTFILE.spad
	@ (cd ${MID} ; 	echo ')co TEXTFILE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TEXTFILE.spad (SPAD from IN)>>=
${MID}/TEXTFILE.spad: ${IN}/files.spad.pamphlet
	@ echo 1560 making ${MID}/TEXTFILE.spad from ${IN}/files.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf TEXTFILE.NRLIB ; \
	${TANGLE} -R"domain TEXTFILE TextFile" ${IN}/files.spad.pamphlet >TEXTFILE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<files.spad.dvi (DOC from IN)>>=
${DOC}/files.spad.dvi: ${IN}/files.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1561 making ${DOC}/files.spad.dvi from ${IN}/files.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/files.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} files.spad ; \
	rm -f ${DOC}/files.spad.pamphlet ; \
	rm -f ${DOC}/files.spad.tex ; \
	rm -f ${DOC}/files.spad )

@
\subsection{float.spad \cite{1}}
<<float.spad (SPAD from IN)>>=
${OUTSRC}/float.spad: ${IN}/float.spad.pamphlet
	@ echo 1562 making ${OUTSRC}/float.spad from ${IN}/float.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/float.spad.pamphlet >float.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FLOAT.o (O from NRLIB)>>=
${OUT}/FLOAT.o: ${MID}/FLOAT.NRLIB
	@ echo 1563-19 making ${OUT}/FLOAT.o from ${MID}/FLOAT.NRLIB
	@ cp ${MID}/FLOAT.NRLIB/code.o ${OUT}/FLOAT.o

@
<<FLOAT.NRLIB (NRLIB from MID)>>=
${MID}/FLOAT.NRLIB: ${MID}/FLOAT.spad
	@ echo 1564 making ${MID}/FLOAT.NRLIB from ${MID}/FLOAT.spad
	@ (cd ${MID} ; 	echo ')co FLOAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FLOAT.spad (SPAD from IN)>>=
${MID}/FLOAT.spad: ${IN}/float.spad.pamphlet
	@ echo 1565 making ${MID}/FLOAT.spad from ${IN}/float.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FLOAT.NRLIB ; \
	${TANGLE} -R"domain FLOAT Float" ${IN}/float.spad.pamphlet >FLOAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<float.spad.dvi (DOC from IN)>>=
${DOC}/float.spad.dvi: ${IN}/float.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1566 making ${DOC}/float.spad.dvi from ${IN}/float.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/float.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} float.spad ; \
	rm -f ${DOC}/float.spad.pamphlet ; \
	rm -f ${DOC}/float.spad.tex ; \
	rm -f ${DOC}/float.spad )

@
\subsection{fmod.spad \cite{1}}
<<fmod.spad (SPAD from IN)>>=
${OUTSRC}/fmod.spad: ${IN}/fmod.spad.pamphlet
	@ echo 1567 making ${OUTSRC}/fmod.spad from ${IN}/fmod.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/fmod.spad.pamphlet >fmod.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ZMOD.o (O from NRLIB)>>=
${OUT}/ZMOD.o: ${MID}/ZMOD.NRLIB
	@ echo 1568-6 making ${OUT}/ZMOD.o from ${MID}/ZMOD.NRLIB
	@ cp ${MID}/ZMOD.NRLIB/code.o ${OUT}/ZMOD.o

@
<<ZMOD.NRLIB (NRLIB from MID)>>=
${MID}/ZMOD.NRLIB: ${MID}/ZMOD.spad
	@ echo 1569 making ${MID}/ZMOD.NRLIB from ${MID}/ZMOD.spad
	@ (cd ${MID} ; 	echo ')co ZMOD.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ZMOD.spad (SPAD from IN)>>=
${MID}/ZMOD.spad: ${IN}/fmod.spad.pamphlet
	@ echo 1570 making ${MID}/ZMOD.spad from ${IN}/fmod.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ZMOD.NRLIB ; \
	${TANGLE} -R"domain ZMOD IntegerMod" ${IN}/fmod.spad.pamphlet >ZMOD.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<fmod.spad.dvi (DOC from IN)>>=
${DOC}/fmod.spad.dvi: ${IN}/fmod.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1571 making ${DOC}/fmod.spad.dvi from ${IN}/fmod.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/fmod.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} fmod.spad ; \
	rm -f ${DOC}/fmod.spad.pamphlet ; \
	rm -f ${DOC}/fmod.spad.tex ; \
	rm -f ${DOC}/fmod.spad )

@
\subsection{fname.spad \cite{1}}
<<fname.spad (SPAD from IN)>>=
${OUTSRC}/fname.spad: ${IN}/fname.spad.pamphlet
	@ echo 1572 making ${OUTSRC}/fname.spad from ${IN}/fname.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/fname.spad.pamphlet >fname.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FNAME.o (O from NRLIB)>>=
${OUT}/FNAME.o: ${MID}/FNAME.NRLIB
	@ echo 1573-14 making ${OUT}/FNAME.o from ${MID}/FNAME.NRLIB
	@ cp ${MID}/FNAME.NRLIB/code.o ${OUT}/FNAME.o

@
<<FNAME.NRLIB (NRLIB from MID)>>=
${MID}/FNAME.NRLIB: ${MID}/FNAME.spad
	@ echo 1574 making ${MID}/FNAME.NRLIB from ${MID}/FNAME.spad
	@ (cd ${MID} ; 	echo ')co FNAME.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FNAME.spad (SPAD from IN)>>=
${MID}/FNAME.spad: ${IN}/fname.spad.pamphlet
	@ echo 1575 making ${MID}/FNAME.spad from ${IN}/fname.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FNAME.NRLIB ; \
	${TANGLE} -R"domain FNAME FileName" ${IN}/fname.spad.pamphlet >FNAME.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FNCAT.o (O from NRLIB)>>=
${OUT}/FNCAT.o: ${MID}/FNCAT.NRLIB
	@ echo 1576-4 making ${OUT}/FNCAT.o from ${MID}/FNCAT.NRLIB
	@ cp ${MID}/FNCAT.NRLIB/code.o ${OUT}/FNCAT.o

@
<<FNCAT.NRLIB (NRLIB from MID)>>=
${MID}/FNCAT.NRLIB: ${MID}/FNCAT.spad
	@ echo 1577 making ${MID}/FNCAT.NRLIB from ${MID}/FNCAT.spad
	@ (cd ${MID} ; 	echo ')co FNCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FNCAT.spad (SPAD from IN)>>=
${MID}/FNCAT.spad: ${IN}/fname.spad.pamphlet
	@ echo 1578 making ${MID}/FNCAT.spad from ${IN}/fname.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FNCAT.NRLIB ; \
	${TANGLE} -R"category FNCAT FileNameCategory" ${IN}/fname.spad.pamphlet >FNCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<fname.spad.dvi (DOC from IN)>>=
${DOC}/fname.spad.dvi: ${IN}/fname.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1579 making ${DOC}/fname.spad.dvi from ${IN}/fname.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/fname.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} fname.spad ; \
	rm -f ${DOC}/fname.spad.pamphlet ; \
	rm -f ${DOC}/fname.spad.tex ; \
	rm -f ${DOC}/fname.spad )

@
\subsection{fnla.spad \cite{1}}
<<fnla.spad (SPAD from IN)>>=
${OUTSRC}/fnla.spad: ${IN}/fnla.spad.pamphlet
	@ echo 1580 making ${OUTSRC}/fnla.spad from ${IN}/fnla.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/fnla.spad.pamphlet >fnla.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COMM.o (O from NRLIB)>>=
${OUT}/COMM.o: ${MID}/COMM.NRLIB
	@ echo 1581-4 making ${OUT}/COMM.o from ${MID}/COMM.NRLIB
	@ cp ${MID}/COMM.NRLIB/code.o ${OUT}/COMM.o

@
<<COMM.NRLIB (NRLIB from MID)>>=
${MID}/COMM.NRLIB: ${MID}/COMM.spad
	@ echo 1582 making ${MID}/COMM.NRLIB from ${MID}/COMM.spad
	@ (cd ${MID} ; 	echo ')co COMM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COMM.spad (SPAD from IN)>>=
${MID}/COMM.spad: ${IN}/fnla.spad.pamphlet
	@ echo 1583 making ${MID}/COMM.spad from ${IN}/fnla.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf COMM.NRLIB ; \
	${TANGLE} -R"domain COMM Commutator" ${IN}/fnla.spad.pamphlet >COMM.spad )
	@ rm -f ${INT}/algebra/dbcomplete
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FNLA.o (O from NRLIB)>>=
${OUT}/FNLA.o: ${MID}/FNLA.NRLIB
	@ echo 1584-13 making ${OUT}/FNLA.o from ${MID}/FNLA.NRLIB
	@ cp ${MID}/FNLA.NRLIB/code.o ${OUT}/FNLA.o

@
<<FNLA.NRLIB (NRLIB from MID)>>=
${MID}/FNLA.NRLIB: ${MID}/FNLA.spad
	@ echo 1585 making ${MID}/FNLA.NRLIB from ${MID}/FNLA.spad
	@ (cd ${MID} ; 	echo ')co FNLA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FNLA.spad (SPAD from IN)>>=
${MID}/FNLA.spad: ${IN}/fnla.spad.pamphlet
	@ echo 1586 making ${MID}/FNLA.spad from ${IN}/fnla.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FNLA.NRLIB ; \
	${TANGLE} -R"domain FNLA FreeNilpotentLie" ${IN}/fnla.spad.pamphlet >FNLA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<HB.o (O from NRLIB)>>=
${OUT}/HB.o: ${MID}/HB.NRLIB
	@ echo 1587-13 making ${OUT}/HB.o from ${MID}/HB.NRLIB
	@ cp ${MID}/HB.NRLIB/code.o ${OUT}/HB.o

@
<<HB.NRLIB (NRLIB from MID)>>=
${MID}/HB.NRLIB: ${MID}/HB.spad
	@ echo 1588 making ${MID}/HB.NRLIB from ${MID}/HB.spad
	@ (cd ${MID} ; 	echo ')co HB.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<HB.spad (SPAD from IN)>>=
${MID}/HB.spad: ${IN}/fnla.spad.pamphlet
	@ echo 1589 making ${MID}/HB.spad from ${IN}/fnla.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf HB.NRLIB ; \
	${TANGLE} -R"package HB HallBasis" ${IN}/fnla.spad.pamphlet >HB.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OSI.o (O from NRLIB)>>=
${OUT}/OSI.o: ${MID}/OSI.NRLIB
	@ echo 1590-19 making ${OUT}/OSI.o from ${MID}/OSI.NRLIB
	@ cp ${MID}/OSI.NRLIB/code.o ${OUT}/OSI.o

@
<<OSI.NRLIB (NRLIB from MID)>>=
${MID}/OSI.NRLIB: ${MID}/OSI.spad
	@ echo 1591 making ${MID}/OSI.NRLIB from ${MID}/OSI.spad
	@ (cd ${MID} ; 	echo ')co OSI.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OSI.spad (SPAD from IN)>>=
${MID}/OSI.spad: ${IN}/fnla.spad.pamphlet
	@ echo 1592 making ${MID}/OSI.spad from ${IN}/fnla.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OSI.NRLIB ; \
	${TANGLE} -R"domain OSI OrdSetInts" ${IN}/fnla.spad.pamphlet >OSI.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<fnla.spad.dvi (DOC from IN)>>=
${DOC}/fnla.spad.dvi: ${IN}/fnla.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1593 making ${DOC}/fnla.spad.dvi from ${IN}/fnla.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/fnla.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} fnla.spad ; \
	rm -f ${DOC}/fnla.spad.pamphlet ; \
	rm -f ${DOC}/fnla.spad.tex ; \
	rm -f ${DOC}/fnla.spad )

@
\subsection{formula.spad \cite{1}}
<<formula.spad (SPAD from IN)>>=
${OUTSRC}/formula.spad: ${IN}/formula.spad.pamphlet
	@ echo 1594 making ${OUTSRC}/formula.spad from ${IN}/formula.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/formula.spad.pamphlet >formula.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FORMULA.o (O from NRLIB)>>=
${OUT}/FORMULA.o: ${MID}/FORMULA.NRLIB
	@ echo 1595-14 making ${OUT}/FORMULA.o from ${MID}/FORMULA.NRLIB
	@ cp ${MID}/FORMULA.NRLIB/code.o ${OUT}/FORMULA.o

@
<<FORMULA.NRLIB (NRLIB from MID)>>=
${MID}/FORMULA.NRLIB: ${MID}/FORMULA.spad
	@ echo 1596 making ${MID}/FORMULA.NRLIB from ${MID}/FORMULA.spad
	@ (cd ${MID} ; 	echo ')co FORMULA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FORMULA.spad (SPAD from IN)>>=
${MID}/FORMULA.spad: ${IN}/formula.spad.pamphlet
	@ echo 1597 making ${MID}/FORMULA.spad from ${IN}/formula.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FORMULA.NRLIB ; \
	${TANGLE} -R"domain FORMULA ScriptFormulaFormat" ${IN}/formula.spad.pamphlet >FORMULA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FORMULA1.o (O from NRLIB)>>=
${OUT}/FORMULA1.o: ${MID}/FORMULA1.NRLIB
	@ echo 1598-4 making ${OUT}/FORMULA1.o from ${MID}/FORMULA1.NRLIB
	@ cp ${MID}/FORMULA1.NRLIB/code.o ${OUT}/FORMULA1.o

@
<<FORMULA1.NRLIB (NRLIB from MID)>>=
${MID}/FORMULA1.NRLIB: ${MID}/FORMULA1.spad
	@ echo 1599 making ${MID}/FORMULA1.NRLIB from ${MID}/FORMULA1.spad
	@ (cd ${MID} ; 	echo ')co FORMULA1.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FORMULA1.spad (SPAD from IN)>>=
${MID}/FORMULA1.spad: ${IN}/formula.spad.pamphlet
	@ echo 1600 making ${MID}/FORMULA1.spad from ${IN}/formula.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FORMULA1.NRLIB ; \
	${TANGLE} -R"package FORMULA1 ScriptFormulaFormat1" ${IN}/formula.spad.pamphlet >FORMULA1.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<formula.spad.dvi (DOC from IN)>>=
${DOC}/formula.spad.dvi: ${IN}/formula.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1601 making ${DOC}/formula.spad.dvi from ${IN}/formula.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/formula.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} formula.spad ; \
	rm -f ${DOC}/formula.spad.pamphlet ; \
	rm -f ${DOC}/formula.spad.tex ; \
	rm -f ${DOC}/formula.spad )

@
\subsection{fortcat.spad \cite{1}}
<<fortcat.spad (SPAD from IN)>>=
${OUTSRC}/fortcat.spad: ${IN}/fortcat.spad.pamphlet
	@ echo 1602 making ${OUTSRC}/fortcat.spad from ${IN}/fortcat.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/fortcat.spad.pamphlet >fortcat.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FMTC.o (O from NRLIB)>>=
${OUT}/FMTC.o: ${MID}/FMTC.NRLIB
	@ echo 1603-8 making ${OUT}/FMTC.o from ${MID}/FMTC.NRLIB
	@ cp ${MID}/FMTC.NRLIB/code.o ${OUT}/FMTC.o

@
<<FMTC.NRLIB (NRLIB from MID)>>=
${MID}/FMTC.NRLIB: ${MID}/FMTC.spad
	@ echo 1604 making ${MID}/FMTC.NRLIB from ${MID}/FMTC.spad
	@ (cd ${MID} ; 	echo ')co FMTC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FMTC.spad (SPAD from IN)>>=
${MID}/FMTC.spad: ${IN}/fortcat.spad.pamphlet
	@ echo 1605 making ${MID}/FMTC.spad from ${IN}/fortcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FMTC.NRLIB ; \
	${TANGLE} -R"category FMTC FortranMachineTypeCategory" ${IN}/fortcat.spad.pamphlet >FMTC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FORTCAT.o (O from NRLIB)>>=
${OUT}/FORTCAT.o: ${MID}/FORTCAT.NRLIB
	@ echo 1606-1 making ${OUT}/FORTCAT.o from ${MID}/FORTCAT.NRLIB
	@ cp ${MID}/FORTCAT.NRLIB/code.o ${OUT}/FORTCAT.o

@
<<FORTCAT.NRLIB (NRLIB from MID)>>=
${MID}/FORTCAT.NRLIB: ${MID}/FORTCAT.spad
	@ echo 1607 making ${MID}/FORTCAT.NRLIB from ${MID}/FORTCAT.spad
	@ (cd ${MID} ; 	echo ')co FORTCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FORTCAT.spad (SPAD from IN)>>=
${MID}/FORTCAT.spad: ${IN}/fortcat.spad.pamphlet
	@ echo 1608 making ${MID}/FORTCAT.spad from ${IN}/fortcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FORTCAT.NRLIB ; \
	${TANGLE} -R"category FORTCAT FortranProgramCategory" ${IN}/fortcat.spad.pamphlet >FORTCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FORTFN.o (O from NRLIB)>>=
${OUT}/FORTFN.o: ${MID}/FORTFN.NRLIB
	@ echo 1609-2 making ${OUT}/FORTFN.o from ${MID}/FORTFN.NRLIB
	@ cp ${MID}/FORTFN.NRLIB/code.o ${OUT}/FORTFN.o

@
<<FORTFN.NRLIB (NRLIB from MID)>>=
${MID}/FORTFN.NRLIB: ${MID}/FORTFN.spad
	@ echo 1610 making ${MID}/FORTFN.NRLIB from ${MID}/FORTFN.spad
	@ (cd ${MID} ; 	echo ')co FORTFN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FORTFN.spad (SPAD from IN)>>=
${MID}/FORTFN.spad: ${IN}/fortcat.spad.pamphlet
	@ echo 1611 making ${MID}/FORTFN.spad from ${IN}/fortcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FORTFN.NRLIB ; \
	${TANGLE} -R"category FORTFN FortranFunctionCategory" ${IN}/fortcat.spad.pamphlet >FORTFN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FVC.o (O from NRLIB)>>=
${OUT}/FVC.o: ${MID}/FVC.NRLIB
	@ echo 1612-2 making ${OUT}/FVC.o from ${MID}/FVC.NRLIB
	@ cp ${MID}/FVC.NRLIB/code.o ${OUT}/FVC.o

@
<<FVC.NRLIB (NRLIB from MID)>>=
${MID}/FVC.NRLIB: ${MID}/FVC.spad
	@ echo 1613 making ${MID}/FVC.NRLIB from ${MID}/FVC.spad
	@ (cd ${MID} ; 	echo ')co FVC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FVC.spad (SPAD from IN)>>=
${MID}/FVC.spad: ${IN}/fortcat.spad.pamphlet
	@ echo 1614 making ${MID}/FVC.spad from ${IN}/fortcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FVC.NRLIB ; \
	${TANGLE} -R"category FVC FortranVectorCategory" ${IN}/fortcat.spad.pamphlet >FVC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FVFUN.o (O from NRLIB)>>=
${OUT}/FVFUN.o: ${MID}/FVFUN.NRLIB
	@ echo 1615-2 making ${OUT}/FVFUN.o from ${MID}/FVFUN.NRLIB
	@ cp ${MID}/FVFUN.NRLIB/code.o ${OUT}/FVFUN.o

@
<<FVFUN.NRLIB (NRLIB from MID)>>=
${MID}/FVFUN.NRLIB: ${MID}/FVFUN.spad
	@ echo 1616 making ${MID}/FVFUN.NRLIB from ${MID}/FVFUN.spad
	@ (cd ${MID} ; 	echo ')co FVFUN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FVFUN.spad (SPAD from IN)>>=
${MID}/FVFUN.spad: ${IN}/fortcat.spad.pamphlet
	@ echo 1617 making ${MID}/FVFUN.spad from ${IN}/fortcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FVFUN.NRLIB ; \
	${TANGLE} -R"category FVFUN FortranVectorFunctionCategory" ${IN}/fortcat.spad.pamphlet >FVFUN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FMC.o (O from NRLIB)>>=
${OUT}/FMC.o: ${MID}/FMC.NRLIB
	@ echo 1618-2 making ${OUT}/FMC.o from ${MID}/FMC.NRLIB
	@ cp ${MID}/FMC.NRLIB/code.o ${OUT}/FMC.o

@
<<FMC.NRLIB (NRLIB from MID)>>=
${MID}/FMC.NRLIB: ${MID}/FMC.spad
	@ echo 1619 making ${MID}/FMC.NRLIB from ${MID}/FMC.spad
	@ (cd ${MID} ; 	echo ')co FMC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FMC.spad (SPAD from IN)>>=
${MID}/FMC.spad: ${IN}/fortcat.spad.pamphlet
	@ echo 1620 making ${MID}/FMC.spad from ${IN}/fortcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FMC.NRLIB ; \
	${TANGLE} -R"category FMC FortranMatrixCategory" ${IN}/fortcat.spad.pamphlet >FMC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FMFUN.o (O from NRLIB)>>=
${OUT}/FMFUN.o: ${MID}/FMFUN.NRLIB
	@ echo 1621-2 making ${OUT}/FMFUN.o from ${MID}/FMFUN.NRLIB
	@ cp ${MID}/FMFUN.NRLIB/code.o ${OUT}/FMFUN.o

@
<<FMFUN.NRLIB (NRLIB from MID)>>=
${MID}/FMFUN.NRLIB: ${MID}/FMFUN.spad
	@ echo 1622 making ${MID}/FMFUN.NRLIB from ${MID}/FMFUN.spad
	@ (cd ${MID} ; 	echo ')co FMFUN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FMFUN.spad (SPAD from IN)>>=
${MID}/FMFUN.spad: ${IN}/fortcat.spad.pamphlet
	@ echo 1623 making ${MID}/FMFUN.spad from ${IN}/fortcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FMFUN.NRLIB ; \
	${TANGLE} -R"category FMFUN FortranMatrixFunctionCategory" ${IN}/fortcat.spad.pamphlet >FMFUN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<fortcat.spad.dvi (DOC from IN)>>=
${DOC}/fortcat.spad.dvi: ${IN}/fortcat.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1624 making ${DOC}/fortcat.spad.dvi from ${IN}/fortcat.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/fortcat.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} fortcat.spad ; \
	rm -f ${DOC}/fortcat.spad.pamphlet ; \
	rm -f ${DOC}/fortcat.spad.tex ; \
	rm -f ${DOC}/fortcat.spad )

@
\subsection{fortmac.spad \cite{1}}
<<fortmac.spad (SPAD from IN)>>=
${OUTSRC}/fortmac.spad: ${IN}/fortmac.spad.pamphlet
	@ echo 1625 making ${OUTSRC}/fortmac.spad from ${IN}/fortmac.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/fortmac.spad.pamphlet >fortmac.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MCMPLX.o (O from NRLIB)>>=
${OUT}/MCMPLX.o: ${MID}/MCMPLX.NRLIB
	@ echo 1626-20 making ${OUT}/MCMPLX.o from ${MID}/MCMPLX.NRLIB
	@ cp ${MID}/MCMPLX.NRLIB/code.o ${OUT}/MCMPLX.o

@
<<MCMPLX.NRLIB (NRLIB from MID)>>=
${MID}/MCMPLX.NRLIB: ${MID}/MCMPLX.spad
	@ echo 1627 making ${MID}/MCMPLX.NRLIB from ${MID}/MCMPLX.spad
	@ (cd ${MID} ; 	echo ')co MCMPLX.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MCMPLX.spad (SPAD from IN)>>=
${MID}/MCMPLX.spad: ${IN}/fortmac.spad.pamphlet
	@ echo 1628 making ${MID}/MCMPLX.spad from ${IN}/fortmac.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MCMPLX.NRLIB ; \
	${TANGLE} -R"domain MCMPLX MachineComplex" ${IN}/fortmac.spad.pamphlet >MCMPLX.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MFLOAT.o (O from NRLIB)>>=
${OUT}/MFLOAT.o: ${MID}/MFLOAT.NRLIB
	@ echo 1629-14 making ${OUT}/MFLOAT.o from ${MID}/MFLOAT.NRLIB
	@ cp ${MID}/MFLOAT.NRLIB/code.o ${OUT}/MFLOAT.o

@
<<MFLOAT.NRLIB (NRLIB from MID)>>=
${MID}/MFLOAT.NRLIB: ${MID}/MFLOAT.spad
	@ echo 1630 making ${MID}/MFLOAT.NRLIB from ${MID}/MFLOAT.spad
	@ (cd ${MID} ; 	echo ')co MFLOAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MFLOAT.spad (SPAD from IN)>>=
${MID}/MFLOAT.spad: ${IN}/fortmac.spad.pamphlet
	@ echo 1631 making ${MID}/MFLOAT.spad from ${IN}/fortmac.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MFLOAT.NRLIB ; \
	${TANGLE} -R"domain MFLOAT MachineFloat" ${IN}/fortmac.spad.pamphlet >MFLOAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MINT.o (O from NRLIB)>>=
${OUT}/MINT.o: ${MID}/MINT.NRLIB
	@ echo 1632-14 making ${OUT}/MINT.o from ${MID}/MINT.NRLIB
	@ cp ${MID}/MINT.NRLIB/code.o ${OUT}/MINT.o

@
<<MINT.NRLIB (NRLIB from MID)>>=
${MID}/MINT.NRLIB: ${MID}/MINT.spad
	@ echo 1633 making ${MID}/MINT.NRLIB from ${MID}/MINT.spad
	@ (cd ${MID} ; 	echo ')co MINT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MINT.spad (SPAD from IN)>>=
${MID}/MINT.spad: ${IN}/fortmac.spad.pamphlet
	@ echo 1634 making ${MID}/MINT.spad from ${IN}/fortmac.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MINT.NRLIB ; \
	${TANGLE} -R"domain MINT MachineInteger" ${IN}/fortmac.spad.pamphlet >MINT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<fortmac.spad.dvi (DOC from IN)>>=
${DOC}/fortmac.spad.dvi: ${IN}/fortmac.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1635 making ${DOC}/fortmac.spad.dvi from ${IN}/fortmac.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/fortmac.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} fortmac.spad ; \
	rm -f ${DOC}/fortmac.spad.pamphlet ; \
	rm -f ${DOC}/fortmac.spad.tex ; \
	rm -f ${DOC}/fortmac.spad )

@
\subsection{fortpak.spad \cite{1}}
<<fortpak.spad (SPAD from IN)>>=
${OUTSRC}/fortpak.spad: ${IN}/fortpak.spad.pamphlet
	@ echo 1636 making ${OUTSRC}/fortpak.spad from ${IN}/fortpak.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/fortpak.spad.pamphlet >fortpak.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FCPAK1.o (O from NRLIB)>>=
${OUT}/FCPAK1.o: ${MID}/FCPAK1.NRLIB
	@ echo 1637-19 making ${OUT}/FCPAK1.o from ${MID}/FCPAK1.NRLIB
	@ cp ${MID}/FCPAK1.NRLIB/code.o ${OUT}/FCPAK1.o

@
<<FCPAK1.NRLIB (NRLIB from MID)>>=
${MID}/FCPAK1.NRLIB: ${MID}/FCPAK1.spad
	@ echo 1638 making ${MID}/FCPAK1.NRLIB from ${MID}/FCPAK1.spad
	@ (cd ${MID} ; 	echo ')co FCPAK1.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FCPAK1.spad (SPAD from IN)>>=
${MID}/FCPAK1.spad: ${IN}/fortpak.spad.pamphlet
	@ echo 1639 making ${MID}/FCPAK1.spad from ${IN}/fortpak.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FCPAK1.NRLIB ; \
	${TANGLE} -R"package FCPAK1 FortranCodePackage1" ${IN}/fortpak.spad.pamphlet >FCPAK1.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FOP.o (O from NRLIB)>>=
${OUT}/FOP.o: ${MID}/FOP.NRLIB
	@ echo 1640-14 making ${OUT}/FOP.o from ${MID}/FOP.NRLIB
	@ cp ${MID}/FOP.NRLIB/code.o ${OUT}/FOP.o

@
<<FOP.NRLIB (NRLIB from MID)>>=
${MID}/FOP.NRLIB: ${MID}/FOP.spad
	@ echo 1641 making ${MID}/FOP.NRLIB from ${MID}/FOP.spad
	@ (cd ${MID} ; 	echo ')co FOP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FOP.spad (SPAD from IN)>>=
${MID}/FOP.spad: ${IN}/fortpak.spad.pamphlet
	@ echo 1642 making ${MID}/FOP.spad from ${IN}/fortpak.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FOP.NRLIB ; \
	${TANGLE} -R"package FOP FortranOutputStackPackage" ${IN}/fortpak.spad.pamphlet >FOP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FORT.o (O from NRLIB)>>=
${OUT}/FORT.o: ${MID}/FORT.NRLIB
	@ echo 1643-14 making ${OUT}/FORT.o from ${MID}/FORT.NRLIB
	@ cp ${MID}/FORT.NRLIB/code.o ${OUT}/FORT.o

@
<<FORT.NRLIB (NRLIB from MID)>>=
${MID}/FORT.NRLIB: ${MID}/FORT.spad
	@ echo 1644 making ${MID}/FORT.NRLIB from ${MID}/FORT.spad
	@ (cd ${MID} ; 	echo ')co FORT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FORT.spad (SPAD from IN)>>=
${MID}/FORT.spad: ${IN}/fortpak.spad.pamphlet
	@ echo 1645 making ${MID}/FORT.spad from ${IN}/fortpak.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FORT.NRLIB ; \
	${TANGLE} -R"package FORT FortranPackage" ${IN}/fortpak.spad.pamphlet >FORT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MCALCFN.o (O from NRLIB)>>=
${OUT}/MCALCFN.o: ${MID}/MCALCFN.NRLIB
	@ echo 1646-13 making ${OUT}/MCALCFN.o from ${MID}/MCALCFN.NRLIB
	@ cp ${MID}/MCALCFN.NRLIB/code.o ${OUT}/MCALCFN.o

@
<<MCALCFN.NRLIB (NRLIB from MID)>>=
${MID}/MCALCFN.NRLIB: ${MID}/MCALCFN.spad
	@ echo 1647 making ${MID}/MCALCFN.NRLIB from ${MID}/MCALCFN.spad
	@ (cd ${MID} ; 	echo ')co MCALCFN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MCALCFN.spad (SPAD from IN)>>=
${MID}/MCALCFN.spad: ${IN}/fortpak.spad.pamphlet
	@ echo 1648 making ${MID}/MCALCFN.spad from ${IN}/fortpak.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MCALCFN.NRLIB ; \
	${TANGLE} -R"package MCALCFN MultiVariableCalculusFunctions" ${IN}/fortpak.spad.pamphlet >MCALCFN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGSP.o (O from NRLIB)>>=
${OUT}/NAGSP.o: ${MID}/NAGSP.NRLIB
	@ echo 1649-19 making ${OUT}/NAGSP.o from ${MID}/NAGSP.NRLIB
	@ cp ${MID}/NAGSP.NRLIB/code.o ${OUT}/NAGSP.o

@
<<NAGSP.NRLIB (NRLIB from MID)>>=
${MID}/NAGSP.NRLIB: ${MID}/NAGSP.spad
	@ echo 1650 making ${MID}/NAGSP.NRLIB from ${MID}/NAGSP.spad
	@ (cd ${MID} ; 	echo ')co NAGSP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGSP.spad (SPAD from IN)>>=
${MID}/NAGSP.spad: ${IN}/fortpak.spad.pamphlet
	@ echo 1651 making ${MID}/NAGSP.spad from ${IN}/fortpak.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NAGSP.NRLIB ; \
	${TANGLE} -R"package NAGSP NAGLinkSupportPackage" ${IN}/fortpak.spad.pamphlet >NAGSP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TEMUTL.o (O from NRLIB)>>=
${OUT}/TEMUTL.o: ${MID}/TEMUTL.NRLIB
	@ echo 1652-14 making ${OUT}/TEMUTL.o from ${MID}/TEMUTL.NRLIB
	@ cp ${MID}/TEMUTL.NRLIB/code.o ${OUT}/TEMUTL.o

@
<<TEMUTL.NRLIB (NRLIB from MID)>>=
${MID}/TEMUTL.NRLIB: ${MID}/TEMUTL.spad
	@ echo 1653 making ${MID}/TEMUTL.NRLIB from ${MID}/TEMUTL.spad
	@ (cd ${MID} ; 	echo ')co TEMUTL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TEMUTL.spad (SPAD from IN)>>=
${MID}/TEMUTL.spad: ${IN}/fortpak.spad.pamphlet
	@ echo 1654 making ${MID}/TEMUTL.spad from ${IN}/fortpak.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf TEMUTL.NRLIB ; \
	${TANGLE} -R"package TEMUTL TemplateUtilities" ${IN}/fortpak.spad.pamphlet >TEMUTL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<fortpak.spad.dvi (DOC from IN)>>=
${DOC}/fortpak.spad.dvi: ${IN}/fortpak.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1655 making ${DOC}/fortpak.spad.dvi from ${IN}/fortpak.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/fortpak.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} fortpak.spad ; \
	rm -f ${DOC}/fortpak.spad.pamphlet ; \
	rm -f ${DOC}/fortpak.spad.tex ; \
	rm -f ${DOC}/fortpak.spad )

@
\subsection{fortran.spad \cite{1}}
<<fortran.spad (SPAD from IN)>>=
${OUTSRC}/fortran.spad: ${IN}/fortran.spad.pamphlet
	@ echo 1656 making ${OUTSRC}/fortran.spad from ${IN}/fortran.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/fortran.spad.pamphlet >fortran.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FC.o (O from NRLIB)>>=
${OUT}/FC.o: ${MID}/FC.NRLIB
	@ echo 1657-20 making ${OUT}/FC.o from ${MID}/FC.NRLIB
	@ cp ${MID}/FC.NRLIB/code.o ${OUT}/FC.o

@
<<FC.NRLIB (NRLIB from MID)>>=
${MID}/FC.NRLIB: ${MID}/FC.spad
	@ echo 1658 making ${MID}/FC.NRLIB from ${MID}/FC.spad
	@ (cd ${MID} ; 	echo ')co FC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FC.spad (SPAD from IN)>>=
${MID}/FC.spad: ${IN}/fortran.spad.pamphlet
	@ echo 1659 making ${MID}/FC.spad from ${IN}/fortran.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FC.NRLIB ; \
	${TANGLE} -R"domain FC FortranCode" ${IN}/fortran.spad.pamphlet >FC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FEXPR.o (O from NRLIB)>>=
${OUT}/FEXPR.o: ${MID}/FEXPR.NRLIB
	@ echo 1660-19 making ${OUT}/FEXPR.o from ${MID}/FEXPR.NRLIB
	@ cp ${MID}/FEXPR.NRLIB/code.o ${OUT}/FEXPR.o

@
<<FEXPR.NRLIB (NRLIB from MID)>>=
${MID}/FEXPR.NRLIB: ${MID}/FEXPR.spad
	@ echo 1661 making ${MID}/FEXPR.NRLIB from ${MID}/FEXPR.spad
	@ (cd ${MID} ; 	echo ')co FEXPR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FEXPR.spad (SPAD from IN)>>=
${MID}/FEXPR.spad: ${IN}/fortran.spad.pamphlet
	@ echo 1662 making ${MID}/FEXPR.spad from ${IN}/fortran.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FEXPR.NRLIB ; \
	${TANGLE} -R"domain FEXPR FortranExpression" ${IN}/fortran.spad.pamphlet >FEXPR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FTEM.o (O from NRLIB)>>=
${OUT}/FTEM.o: ${MID}/FTEM.NRLIB
	@ echo 1663-14 making ${OUT}/FTEM.o from ${MID}/FTEM.NRLIB
	@ cp ${MID}/FTEM.NRLIB/code.o ${OUT}/FTEM.o

@
<<FTEM.NRLIB (NRLIB from MID)>>=
${MID}/FTEM.NRLIB: ${MID}/FTEM.spad
	@ echo 1664 making ${MID}/FTEM.NRLIB from ${MID}/FTEM.spad
	@ (cd ${MID} ; 	echo ')co FTEM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FTEM.spad (SPAD from IN)>>=
${MID}/FTEM.spad: ${IN}/fortran.spad.pamphlet
	@ echo 1665 making ${MID}/FTEM.spad from ${IN}/fortran.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FTEM.NRLIB ; \
	${TANGLE} -R"domain FTEM FortranTemplate" ${IN}/fortran.spad.pamphlet >FTEM.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FORTRAN.o (O from NRLIB)>>=
${OUT}/FORTRAN.o: ${MID}/FORTRAN.NRLIB
	@ echo 1666-20 making ${OUT}/FORTRAN.o from ${MID}/FORTRAN.NRLIB
	@ cp ${MID}/FORTRAN.NRLIB/code.o ${OUT}/FORTRAN.o

@
<<FORTRAN.NRLIB (NRLIB from MID)>>=
${MID}/FORTRAN.NRLIB: ${MID}/FORTRAN.spad
	@ echo 1667 making ${MID}/FORTRAN.NRLIB from ${MID}/FORTRAN.spad
	@ (cd ${MID} ; 	echo ')co FORTRAN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FORTRAN.spad (SPAD from IN)>>=
${MID}/FORTRAN.spad: ${IN}/fortran.spad.pamphlet
	@ echo 1668 making ${MID}/FORTRAN.spad from ${IN}/fortran.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FORTRAN.NRLIB ; \
	${TANGLE} -R"domain FORTRAN FortranProgram" ${IN}/fortran.spad.pamphlet >FORTRAN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<M3D.o (O from NRLIB)>>=
${OUT}/M3D.o: ${MID}/M3D.NRLIB
	@ echo 1669-19 making ${OUT}/M3D.o from ${MID}/M3D.NRLIB
	@ cp ${MID}/M3D.NRLIB/code.o ${OUT}/M3D.o

@
<<M3D.NRLIB (NRLIB from MID)>>=
${MID}/M3D.NRLIB: ${MID}/M3D.spad
	@ echo 1670 making ${MID}/M3D.NRLIB from ${MID}/M3D.spad
	@ (cd ${MID} ; 	echo ')co M3D.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<M3D.spad (SPAD from IN)>>=
${MID}/M3D.spad: ${IN}/fortran.spad.pamphlet
	@ echo 1671 making ${MID}/M3D.spad from ${IN}/fortran.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf M3D.NRLIB ; \
	${TANGLE} -R"domain M3D ThreeDimensionalMatrix" ${IN}/fortran.spad.pamphlet >M3D.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RESULT.o (O from NRLIB)>>=
${OUT}/RESULT.o: ${MID}/RESULT.NRLIB
	@ echo 1672-19 making ${OUT}/RESULT.o from ${MID}/RESULT.NRLIB
	@ cp ${MID}/RESULT.NRLIB/code.o ${OUT}/RESULT.o

@
<<RESULT.NRLIB (NRLIB from MID)>>=
${MID}/RESULT.NRLIB: ${MID}/RESULT.spad
	@ echo 1673 making ${MID}/RESULT.NRLIB from ${MID}/RESULT.spad
	@ (cd ${MID} ; 	echo ')co RESULT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RESULT.spad (SPAD from IN)>>=
${MID}/RESULT.spad: ${IN}/fortran.spad.pamphlet
	@ echo 1674 making ${MID}/RESULT.spad from ${IN}/fortran.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RESULT.NRLIB ; \
	${TANGLE} -R"domain RESULT Result" ${IN}/fortran.spad.pamphlet >RESULT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SFORT.o (O from NRLIB)>>=
${OUT}/SFORT.o: ${MID}/SFORT.NRLIB
	@ echo 1675-20 making ${OUT}/SFORT.o from ${MID}/SFORT.NRLIB
	@ cp ${MID}/SFORT.NRLIB/code.o ${OUT}/SFORT.o

@
<<SFORT.NRLIB (NRLIB from MID)>>=
${MID}/SFORT.NRLIB: ${MID}/SFORT.spad
	@ echo 1676 making ${MID}/SFORT.NRLIB from ${MID}/SFORT.spad
	@ (cd ${MID} ; 	echo ')co SFORT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SFORT.spad (SPAD from IN)>>=
${MID}/SFORT.spad: ${IN}/fortran.spad.pamphlet
	@ echo 1677 making ${MID}/SFORT.spad from ${IN}/fortran.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SFORT.NRLIB ; \
	${TANGLE} -R"domain SFORT SimpleFortranProgram" ${IN}/fortran.spad.pamphlet >SFORT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SWITCH.o (O from NRLIB)>>=
${OUT}/SWITCH.o: ${MID}/SWITCH.NRLIB
	@ echo 1678-19 making ${OUT}/SWITCH.o from ${MID}/SWITCH.NRLIB
	@ cp ${MID}/SWITCH.NRLIB/code.o ${OUT}/SWITCH.o

@
<<SWITCH.NRLIB (NRLIB from MID)>>=
${MID}/SWITCH.NRLIB: ${MID}/SWITCH.spad
	@ echo 1679 making ${MID}/SWITCH.NRLIB from ${MID}/SWITCH.spad
	@ (cd ${MID} ; 	echo ')co SWITCH.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SWITCH.spad (SPAD from IN)>>=
${MID}/SWITCH.spad: ${IN}/fortran.spad.pamphlet
	@ echo 1680 making ${MID}/SWITCH.spad from ${IN}/fortran.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SWITCH.NRLIB ; \
	${TANGLE} -R"domain SWITCH Switch" ${IN}/fortran.spad.pamphlet >SWITCH.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<fortran.spad.dvi (DOC from IN)>>=
${DOC}/fortran.spad.dvi: ${IN}/fortran.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1681 making ${DOC}/fortran.spad.dvi from ${IN}/fortran.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/fortran.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} fortran.spad ; \
	rm -f ${DOC}/fortran.spad.pamphlet ; \
	rm -f ${DOC}/fortran.spad.tex ; \
	rm -f ${DOC}/fortran.spad )

@
\subsection{forttyp.spad \cite{1}}
<<forttyp.spad (SPAD from IN)>>=
${OUTSRC}/forttyp.spad: ${IN}/forttyp.spad.pamphlet
	@ echo 1682 making ${OUTSRC}/forttyp.spad from ${IN}/forttyp.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/forttyp.spad.pamphlet >forttyp.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FST.o (O from NRLIB)>>=
${OUT}/FST.o: ${MID}/FST.NRLIB
	@ echo 1683-19 making ${OUT}/FST.o from ${MID}/FST.NRLIB
	@ cp ${MID}/FST.NRLIB/code.o ${OUT}/FST.o

@
<<FST.NRLIB (NRLIB from MID)>>=
${MID}/FST.NRLIB: ${MID}/FST.spad
	@ echo 1684 making ${MID}/FST.NRLIB from ${MID}/FST.spad
	@ (cd ${MID} ; 	echo ')co FST.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FST.spad (SPAD from IN)>>=
${MID}/FST.spad: ${IN}/forttyp.spad.pamphlet
	@ echo 1685 making ${MID}/FST.spad from ${IN}/forttyp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FST.NRLIB ; \
	${TANGLE} -R"domain FST FortranScalarType" ${IN}/forttyp.spad.pamphlet >FST.spad )

@
<<FT.o (O from NRLIB)>>=
${OUT}/FT.o: ${MID}/FT.NRLIB
	@ echo 1686-9 making ${OUT}/FT.o from ${MID}/FT.NRLIB
	@ cp ${MID}/FT.NRLIB/code.o ${OUT}/FT.o

@
<<FT.NRLIB (NRLIB from MID)>>=
${MID}/FT.NRLIB: ${MID}/FT.spad
	@ echo 1687 making ${MID}/FT.NRLIB from ${MID}/FT.spad
	@ (cd ${MID} ; 	echo ')co FT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FT.spad (SPAD from IN)>>=
${MID}/FT.spad: ${IN}/forttyp.spad.pamphlet
	@ echo 1688 making ${MID}/FT.spad from ${IN}/forttyp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FT.NRLIB ; \
	${TANGLE} -R"domain FT FortranType" ${IN}/forttyp.spad.pamphlet >FT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SYMS.o (O from NRLIB)>>=
${OUT}/SYMS.o: ${MID}/SYMS.NRLIB
	@ echo 1689-19 making ${OUT}/SYMS.o from ${MID}/SYMS.NRLIB
	@ cp ${MID}/SYMS.NRLIB/code.o ${OUT}/SYMS.o

@
<<SYMS.NRLIB (NRLIB from MID)>>=
${MID}/SYMS.NRLIB: ${MID}/SYMS.spad
	@ echo 1690 making ${MID}/SYMS.NRLIB from ${MID}/SYMS.spad
	@ (cd ${MID} ; 	echo ')co SYMS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SYMS.spad (SPAD from IN)>>=
${MID}/SYMS.spad: ${IN}/forttyp.spad.pamphlet
	@ echo 1691 making ${MID}/SYMS.spad from ${IN}/forttyp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SYMS.NRLIB ; \
	${TANGLE} -R"domain SYMS TheSymbolTable" ${IN}/forttyp.spad.pamphlet >SYMS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SYMTAB.o (O from NRLIB)>>=
${OUT}/SYMTAB.o: ${MID}/SYMTAB.NRLIB
	@ echo 1692-19 making ${OUT}/SYMTAB.o from ${MID}/SYMTAB.NRLIB
	@ cp ${MID}/SYMTAB.NRLIB/code.o ${OUT}/SYMTAB.o

@
<<SYMTAB.NRLIB (NRLIB from MID)>>=
${MID}/SYMTAB.NRLIB: ${MID}/SYMTAB.spad
	@ echo 1693 making ${MID}/SYMTAB.NRLIB from ${MID}/SYMTAB.spad
	@ (cd ${MID} ; 	echo ')co SYMTAB.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SYMTAB.spad (SPAD from IN)>>=
${MID}/SYMTAB.spad: ${IN}/forttyp.spad.pamphlet
	@ echo 1694 making ${MID}/SYMTAB.spad from ${IN}/forttyp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SYMTAB.NRLIB ; \
	${TANGLE} -R"domain SYMTAB SymbolTable" ${IN}/forttyp.spad.pamphlet >SYMTAB.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<forttyp.spad.dvi (DOC from IN)>>=
${DOC}/forttyp.spad.dvi: ${IN}/forttyp.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1695 making ${DOC}/forttyp.spad.dvi from ${IN}/forttyp.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/forttyp.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} forttyp.spad ; \
	rm -f ${DOC}/forttyp.spad.pamphlet ; \
	rm -f ${DOC}/forttyp.spad.tex ; \
	rm -f ${DOC}/forttyp.spad )

@
\subsection{fourier.spad \cite{1}}
<<fourier.spad (SPAD from IN)>>=
${OUTSRC}/fourier.spad: ${IN}/fourier.spad.pamphlet
	@ echo 1696 making ${OUTSRC}/fourier.spad from ${IN}/fourier.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/fourier.spad.pamphlet >fourier.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FCOMP.o (O from NRLIB)>>=
${OUT}/FCOMP.o: ${MID}/FCOMP.NRLIB
	@ echo 1697-5 making ${OUT}/FCOMP.o from ${MID}/FCOMP.NRLIB
	@ cp ${MID}/FCOMP.NRLIB/code.o ${OUT}/FCOMP.o

@
<<FCOMP.NRLIB (NRLIB from MID)>>=
${MID}/FCOMP.NRLIB: ${MID}/FCOMP.spad
	@ echo 1698 making ${MID}/FCOMP.NRLIB from ${MID}/FCOMP.spad
	@ (cd ${MID} ; 	echo ')co FCOMP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FCOMP.spad (SPAD from IN)>>=
${MID}/FCOMP.spad: ${IN}/fourier.spad.pamphlet
	@ echo 1699 making ${MID}/FCOMP.spad from ${IN}/fourier.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FCOMP.NRLIB ; \
	${TANGLE} -R"domain FCOMP FourierComponent" ${IN}/fourier.spad.pamphlet >FCOMP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FSERIES.o (O from NRLIB)>>=
${OUT}/FSERIES.o: ${MID}/FSERIES.NRLIB
	@ echo 1700-9 making ${OUT}/FSERIES.o from ${MID}/FSERIES.NRLIB
	@ cp ${MID}/FSERIES.NRLIB/code.o ${OUT}/FSERIES.o

@
<<FSERIES.NRLIB (NRLIB from MID)>>=
${MID}/FSERIES.NRLIB: ${MID}/FSERIES.spad
	@ echo 1701 making ${MID}/FSERIES.NRLIB from ${MID}/FSERIES.spad
	@ (cd ${MID} ; 	echo ')co FSERIES.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FSERIES.spad (SPAD from IN)>>=
${MID}/FSERIES.spad: ${IN}/fourier.spad.pamphlet
	@ echo 1702 making ${MID}/FSERIES.spad from ${IN}/fourier.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FSERIES.NRLIB ; \
	${TANGLE} -R"domain FSERIES FourierSeries" ${IN}/fourier.spad.pamphlet >FSERIES.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<fourier.spad.dvi (DOC from IN)>>=
${DOC}/fourier.spad.dvi: ${IN}/fourier.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1703 making ${DOC}/fourier.spad.dvi from ${IN}/fourier.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/fourier.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} fourier.spad ; \
	rm -f ${DOC}/fourier.spad.pamphlet ; \
	rm -f ${DOC}/fourier.spad.tex ; \
	rm -f ${DOC}/fourier.spad )

@
\subsection{fparfrac.spad \cite{1}}
<<fparfrac.spad (SPAD from IN)>>=
${OUTSRC}/fparfrac.spad: ${IN}/fparfrac.spad.pamphlet
	@ echo 1704 making ${OUTSRC}/fparfrac.spad from ${IN}/fparfrac.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/fparfrac.spad.pamphlet >fparfrac.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FPARFRAC.o (O from NRLIB)>>=
${OUT}/FPARFRAC.o: ${MID}/FPARFRAC.NRLIB
	@ echo 1705-19 making ${OUT}/FPARFRAC.o from ${MID}/FPARFRAC.NRLIB
	@ cp ${MID}/FPARFRAC.NRLIB/code.o ${OUT}/FPARFRAC.o

@
<<FPARFRAC.NRLIB (NRLIB from MID)>>=
${MID}/FPARFRAC.NRLIB: ${MID}/FPARFRAC.spad
	@ echo 1706 making ${MID}/FPARFRAC.NRLIB from ${MID}/FPARFRAC.spad
	@ (cd ${MID} ; 	echo ')co FPARFRAC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FPARFRAC.spad (SPAD from IN)>>=
${MID}/FPARFRAC.spad: ${IN}/fparfrac.spad.pamphlet
	@ echo 1707 making ${MID}/FPARFRAC.spad from ${IN}/fparfrac.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FPARFRAC.NRLIB ; \
	${TANGLE} -R"domain FPARFRAC FullPartialFractionExpansion" ${IN}/fparfrac.spad.pamphlet >FPARFRAC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<fparfrac.spad.dvi (DOC from IN)>>=
${DOC}/fparfrac.spad.dvi: ${IN}/fparfrac.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1708 making ${DOC}/fparfrac.spad.dvi from ${IN}/fparfrac.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/fparfrac.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} fparfrac.spad ; \
	rm -f ${DOC}/fparfrac.spad.pamphlet ; \
	rm -f ${DOC}/fparfrac.spad.tex ; \
	rm -f ${DOC}/fparfrac.spad )

@
\subsection{fraction.spad \cite{1}}
<<fraction.spad (SPAD from IN)>>=
${OUTSRC}/fraction.spad: ${IN}/fraction.spad.pamphlet
	@ echo 1709 making ${OUTSRC}/fraction.spad from ${IN}/fraction.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/fraction.spad.pamphlet >fraction.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FRAC.o (O from NRLIB)>>=
${OUT}/FRAC.o: ${MID}/FRAC.NRLIB
	@ echo 1710-14 making ${OUT}/FRAC.o from ${MID}/FRAC.NRLIB
	@ cp ${MID}/FRAC.NRLIB/code.o ${OUT}/FRAC.o

@
<<FRAC.NRLIB (NRLIB from MID)>>=
${MID}/FRAC.NRLIB: ${MID}/FRAC.spad
	@ echo 1711 making ${MID}/FRAC.NRLIB from ${MID}/FRAC.spad
	@ (cd ${MID} ; 	echo ')co FRAC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FRAC.spad (SPAD from IN)>>=
${MID}/FRAC.spad: ${IN}/fraction.spad.pamphlet
	@ echo 1712 making ${MID}/FRAC.spad from ${IN}/fraction.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FRAC.NRLIB ; \
	${TANGLE} -R"domain FRAC Fraction" ${IN}/fraction.spad.pamphlet >FRAC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FRAC2.o (O from NRLIB)>>=
${OUT}/FRAC2.o: ${MID}/FRAC2.NRLIB
	@ echo 1713-8 making ${OUT}/FRAC2.o from ${MID}/FRAC2.NRLIB
	@ cp ${MID}/FRAC2.NRLIB/code.o ${OUT}/FRAC2.o

@
<<FRAC2.NRLIB (NRLIB from MID)>>=
${MID}/FRAC2.NRLIB: ${MID}/FRAC2.spad
	@ echo 1714 making ${MID}/FRAC2.NRLIB from ${MID}/FRAC2.spad
	@ (cd ${MID} ; 	echo ')co FRAC2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FRAC2.spad (SPAD from IN)>>=
${MID}/FRAC2.spad: ${IN}/fraction.spad.pamphlet
	@ echo 1715 making ${MID}/FRAC2.spad from ${IN}/fraction.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FRAC2.NRLIB ; \
	${TANGLE} -R"package FRAC2 FractionFunctions2" ${IN}/fraction.spad.pamphlet >FRAC2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LA.o (O from NRLIB)>>=
${OUT}/LA.o: ${MID}/LA.NRLIB
	@ echo 1716-9 making ${OUT}/LA.o from ${MID}/LA.NRLIB
	@ cp ${MID}/LA.NRLIB/code.o ${OUT}/LA.o

@
<<LA.NRLIB (NRLIB from MID)>>=
${MID}/LA.NRLIB: ${MID}/LA.spad
	@ echo 1717 making ${MID}/LA.NRLIB from ${MID}/LA.spad
	@ (cd ${MID} ; 	echo ')co LA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LA.spad (SPAD from IN)>>=
${MID}/LA.spad: ${IN}/fraction.spad.pamphlet
	@ echo 1718 making ${MID}/LA.spad from ${IN}/fraction.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LA.NRLIB ; \
	${TANGLE} -R"domain LA LocalAlgebra" ${IN}/fraction.spad.pamphlet >LA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LO.o (O from NRLIB)>>=
${OUT}/LO.o: ${MID}/LO.NRLIB
	@ echo 1719-14 making ${OUT}/LO.o from ${MID}/LO.NRLIB
	@ cp ${MID}/LO.NRLIB/code.o ${OUT}/LO.o

@
<<LO.NRLIB (NRLIB from MID)>>=
${MID}/LO.NRLIB: ${MID}/LO.spad
	@ echo 1720 making ${MID}/LO.NRLIB from ${MID}/LO.spad
	@ (cd ${MID} ; 	echo ')co LO.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LO.spad (SPAD from IN)>>=
${MID}/LO.spad: ${IN}/fraction.spad.pamphlet
	@ echo 1721 making ${MID}/LO.spad from ${IN}/fraction.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LO.NRLIB ; \
	${TANGLE} -R"domain LO Localize" ${IN}/fraction.spad.pamphlet >LO.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LPEFRAC.o (O from NRLIB)>>=
${OUT}/LPEFRAC.o: ${MID}/LPEFRAC.NRLIB
	@ echo 1722-14 making ${OUT}/LPEFRAC.o from ${MID}/LPEFRAC.NRLIB
	@ cp ${MID}/LPEFRAC.NRLIB/code.o ${OUT}/LPEFRAC.o

@
<<LPEFRAC.NRLIB (NRLIB from MID)>>=
${MID}/LPEFRAC.NRLIB: ${MID}/LPEFRAC.spad
	@ echo 1723 making ${MID}/LPEFRAC.NRLIB from ${MID}/LPEFRAC.spad
	@ (cd ${MID} ; 	echo ')co LPEFRAC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LPEFRAC.spad (SPAD from IN)>>=
${MID}/LPEFRAC.spad: ${IN}/fraction.spad.pamphlet
	@ echo 1724 making ${MID}/LPEFRAC.spad from ${IN}/fraction.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LPEFRAC.NRLIB ; \
	${TANGLE} -R"package LPEFRAC LinearPolynomialEquationByFractions" ${IN}/fraction.spad.pamphlet >LPEFRAC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<QFCAT-.o (O from NRLIB)>>=
${OUT}/QFCAT-.o: ${MID}/QFCAT.NRLIB
	@ echo 1725-0c making ${OUT}/QFCAT-.o from ${MID}/QFCAT-.NRLIB
	@ cp ${MID}/QFCAT-.NRLIB/code.o ${OUT}/QFCAT-.o

@
<<QFCAT-.NRLIB (NRLIB from MID)>>=
${MID}/QFCAT-.NRLIB: ${MID}/QFCAT.spad 
	@ echo 1726 making ${MID}/QFCAT-.NRLIB from ${MID}/QFCAT.spad
	@ (cd ${MID} ; 	echo ')co QFCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<QFCAT.o (O from NRLIB)>>=
${OUT}/QFCAT.o: ${MID}/QFCAT.NRLIB
	@ echo 1727-0c making ${OUT}/QFCAT.o from ${MID}/QFCAT.NRLIB
	@ cp ${MID}/QFCAT.NRLIB/code.o ${OUT}/QFCAT.o

@
<<QFCAT.NRLIB (NRLIB from MID)>>=
${MID}/QFCAT.NRLIB: ${MID}/QFCAT.spad
	@ echo 1728 making ${MID}/QFCAT.NRLIB from ${MID}/QFCAT.spad
	@ (cd ${MID} ; 	echo ')co QFCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<QFCAT.spad (SPAD from IN)>>=
${MID}/QFCAT.spad: ${IN}/fraction.spad.pamphlet
	@ echo 1729 making ${MID}/QFCAT.spad from ${IN}/fraction.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf QFCAT.NRLIB ; \
	${TANGLE} -R"category QFCAT QuotientFieldCategory" ${IN}/fraction.spad.pamphlet >QFCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<QFCAT-.o (BOOTSTRAP from MID)>>=
${MID}/QFCAT-.o: ${MID}/QFCAT-.lsp 
	@ echo 1730-0b making ${MID}/QFCAT-.o from ${MID}/QFCAT-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "QFCAT-.lsp" :output-file "QFCAT-.o"))' | ${DEPSYS} )
	@ cp ${MID}/QFCAT-.o ${OUT}/QFCAT-.o

@
<<QFCAT-.lsp (LISP from IN)>>=
${MID}/QFCAT-.lsp: ${IN}/fraction.spad.pamphlet
	@ echo 1731 making ${MID}/QFCAT-.lsp from ${IN}/fraction.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf QFCAT-.NRLIB ; \
	rm -rf ${OUT}/QFCAT-.o ; \
	${TANGLE} -R"QFCAT-.lsp BOOTSTRAP" ${IN}/fraction.spad.pamphlet >QFCAT-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<QFCAT.o (BOOTSTRAP from MID)>>=
${MID}/QFCAT.o: ${MID}/QFCAT.lsp 
	@ echo 1732-0b making ${MID}/QFCAT.o from ${MID}/QFCAT.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "QFCAT.lsp" :output-file "QFCAT.o"))' | ${DEPSYS} )
	@ cp ${MID}/QFCAT.o ${OUT}/QFCAT.o

@
<<QFCAT.lsp (LISP from IN)>>=
${MID}/QFCAT.lsp: ${IN}/fraction.spad.pamphlet
	@ echo 1733 making ${MID}/QFCAT.lsp from ${IN}/fraction.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf QFCAT.NRLIB ; \
	rm -rf ${OUT}/QFCAT.o ; \
	${TANGLE} -R"QFCAT.lsp BOOTSTRAP" ${IN}/fraction.spad.pamphlet >QFCAT.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<QFCAT2.o (O from NRLIB)>>=
${OUT}/QFCAT2.o: ${MID}/QFCAT2.NRLIB
	@ echo 1734-14 making ${OUT}/QFCAT2.o from ${MID}/QFCAT2.NRLIB
	@ cp ${MID}/QFCAT2.NRLIB/code.o ${OUT}/QFCAT2.o

@
<<QFCAT2.NRLIB (NRLIB from MID)>>=
${MID}/QFCAT2.NRLIB: ${MID}/QFCAT2.spad
	@ echo 1735 making ${MID}/QFCAT2.NRLIB from ${MID}/QFCAT2.spad
	@ (cd ${MID} ; 	echo ')co QFCAT2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<QFCAT2.spad (SPAD from IN)>>=
${MID}/QFCAT2.spad: ${IN}/fraction.spad.pamphlet
	@ echo 1736 making ${MID}/QFCAT2.spad from ${IN}/fraction.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf QFCAT2.NRLIB ; \
	${TANGLE} -R"package QFCAT2 QuotientFieldCategoryFunctions2" ${IN}/fraction.spad.pamphlet >QFCAT2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<fraction.spad.dvi (DOC from IN)>>=
${DOC}/fraction.spad.dvi: ${IN}/fraction.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1737 making ${DOC}/fraction.spad.dvi from ${IN}/fraction.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/fraction.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} fraction.spad ; \
	rm -f ${DOC}/fraction.spad.pamphlet ; \
	rm -f ${DOC}/fraction.spad.tex ; \
	rm -f ${DOC}/fraction.spad )

@
\subsection{free.spad \cite{1}}
<<free.spad (SPAD from IN)>>=
${OUTSRC}/free.spad: ${IN}/free.spad.pamphlet
	@ echo 1738 making ${OUTSRC}/free.spad from ${IN}/free.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/free.spad.pamphlet >free.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FAGROUP.o (O from NRLIB)>>=
${OUT}/FAGROUP.o: ${MID}/FAGROUP.NRLIB
	@ echo 1739-9 making ${OUT}/FAGROUP.o from ${MID}/FAGROUP.NRLIB
	@ cp ${MID}/FAGROUP.NRLIB/code.o ${OUT}/FAGROUP.o

@
<<FAGROUP.NRLIB (NRLIB from MID)>>=
${MID}/FAGROUP.NRLIB: ${MID}/FAGROUP.spad
	@ echo 1740 making ${MID}/FAGROUP.NRLIB from ${MID}/FAGROUP.spad
	@ (cd ${MID} ; 	echo ')co FAGROUP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FAGROUP.spad (SPAD from IN)>>=
${MID}/FAGROUP.spad: ${IN}/free.spad.pamphlet
	@ echo 1741 making ${MID}/FAGROUP.spad from ${IN}/free.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FAGROUP.NRLIB ; \
	${TANGLE} -R"domain FAGROUP FreeAbelianGroup" ${IN}/free.spad.pamphlet >FAGROUP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FAMONC.o (O from NRLIB)>>=
${OUT}/FAMONC.o: ${MID}/FAMONC.NRLIB
	@ echo 1742-4 making ${OUT}/FAMONC.o from ${MID}/FAMONC.NRLIB
	@ cp ${MID}/FAMONC.NRLIB/code.o ${OUT}/FAMONC.o

@
<<FAMONC.NRLIB (NRLIB from MID)>>=
${MID}/FAMONC.NRLIB: ${MID}/FAMONC.spad
	@ echo 1743 making ${MID}/FAMONC.NRLIB from ${MID}/FAMONC.spad
	@ (cd ${MID} ; 	echo ')co FAMONC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FAMONC.spad (SPAD from IN)>>=
${MID}/FAMONC.spad: ${IN}/free.spad.pamphlet
	@ echo 1744 making ${MID}/FAMONC.spad from ${IN}/free.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FAMONC.NRLIB ; \
	${TANGLE} -R"category FAMONC FreeAbelianMonoidCategory" ${IN}/free.spad.pamphlet >FAMONC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FGROUP.o (O from NRLIB)>>=
${OUT}/FGROUP.o: ${MID}/FGROUP.NRLIB
	@ echo 1745-10 making ${OUT}/FGROUP.o from ${MID}/FGROUP.NRLIB
	@ cp ${MID}/FGROUP.NRLIB/code.o ${OUT}/FGROUP.o

@
<<FGROUP.NRLIB (NRLIB from MID)>>=
${MID}/FGROUP.NRLIB: ${MID}/FGROUP.spad
	@ echo 1746 making ${MID}/FGROUP.NRLIB from ${MID}/FGROUP.spad
	@ (cd ${MID} ; 	echo ')co FGROUP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FGROUP.spad (SPAD from IN)>>=
${MID}/FGROUP.spad: ${IN}/free.spad.pamphlet
	@ echo 1747 making ${MID}/FGROUP.spad from ${IN}/free.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FGROUP.NRLIB ; \
	${TANGLE} -R"domain FGROUP FreeGroup" ${IN}/free.spad.pamphlet >FGROUP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FAMONOID.o (O from NRLIB)>>=
${OUT}/FAMONOID.o: ${MID}/FAMONOID.NRLIB
	@ echo 1748-9 making ${OUT}/FAMONOID.o from ${MID}/FAMONOID.NRLIB
	@ cp ${MID}/FAMONOID.NRLIB/code.o ${OUT}/FAMONOID.o

@
<<FAMONOID.NRLIB (NRLIB from MID)>>=
${MID}/FAMONOID.NRLIB: ${MID}/FAMONOID.spad
	@ echo 1749 making ${MID}/FAMONOID.NRLIB from ${MID}/FAMONOID.spad
	@ (cd ${MID} ; 	echo ')co FAMONOID.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FAMONOID.spad (SPAD from IN)>>=
${MID}/FAMONOID.spad: ${IN}/free.spad.pamphlet
	@ echo 1750 making ${MID}/FAMONOID.spad from ${IN}/free.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FAMONOID.NRLIB ; \
	${TANGLE} -R"domain FAMONOID FreeAbelianMonoid" ${IN}/free.spad.pamphlet >FAMONOID.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FMONOID.o (O from NRLIB)>>=
${OUT}/FMONOID.o: ${MID}/FMONOID.NRLIB
	@ echo 1751-10 making ${OUT}/FMONOID.o from ${MID}/FMONOID.NRLIB
	@ cp ${MID}/FMONOID.NRLIB/code.o ${OUT}/FMONOID.o

@
<<FMONOID.NRLIB (NRLIB from MID)>>=
${MID}/FMONOID.NRLIB: ${MID}/FMONOID.spad
	@ echo 1752 making ${MID}/FMONOID.NRLIB from ${MID}/FMONOID.spad
	@ (cd ${MID} ; 	echo ')co FMONOID.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FMONOID.spad (SPAD from IN)>>=
${MID}/FMONOID.spad: ${IN}/free.spad.pamphlet
	@ echo 1753 making ${MID}/FMONOID.spad from ${IN}/free.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FMONOID.NRLIB ; \
	${TANGLE} -R"domain FMONOID FreeMonoid" ${IN}/free.spad.pamphlet >FMONOID.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IFAMON.o (O from NRLIB)>>=
${OUT}/IFAMON.o: ${MID}/IFAMON.NRLIB
	@ echo 1754-7 making ${OUT}/IFAMON.o from ${MID}/IFAMON.NRLIB
	@ cp ${MID}/IFAMON.NRLIB/code.o ${OUT}/IFAMON.o

@
<<IFAMON.NRLIB (NRLIB from MID)>>=
${MID}/IFAMON.NRLIB: ${MID}/IFAMON.spad
	@ echo 1755 making ${MID}/IFAMON.NRLIB from ${MID}/IFAMON.spad
	@ (cd ${MID} ; 	echo ')co IFAMON.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IFAMON.spad (SPAD from IN)>>=
${MID}/IFAMON.spad: ${IN}/free.spad.pamphlet
	@ echo 1756 making ${MID}/IFAMON.spad from ${IN}/free.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IFAMON.NRLIB ; \
	${TANGLE} -R"domain IFAMON InnerFreeAbelianMonoid" ${IN}/free.spad.pamphlet >IFAMON.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LMOPS.o (O from NRLIB)>>=
${OUT}/LMOPS.o: ${MID}/LMOPS.NRLIB
	@ echo 1757-10 making ${OUT}/LMOPS.o from ${MID}/LMOPS.NRLIB
	@ cp ${MID}/LMOPS.NRLIB/code.o ${OUT}/LMOPS.o

@
<<LMOPS.NRLIB (NRLIB from MID)>>=
${MID}/LMOPS.NRLIB: ${MID}/LMOPS.spad
	@ echo 1758 making ${MID}/LMOPS.NRLIB from ${MID}/LMOPS.spad
	@ (cd ${MID} ; 	echo ')co LMOPS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LMOPS.spad (SPAD from IN)>>=
${MID}/LMOPS.spad: ${IN}/free.spad.pamphlet
	@ echo 1759 making ${MID}/LMOPS.spad from ${IN}/free.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LMOPS.NRLIB ; \
	${TANGLE} -R"domain LMOPS ListMonoidOps" ${IN}/free.spad.pamphlet >LMOPS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<free.spad.dvi (DOC from IN)>>=
${DOC}/free.spad.dvi: ${IN}/free.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1760 making ${DOC}/free.spad.dvi from ${IN}/free.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/free.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} free.spad ; \
	rm -f ${DOC}/free.spad.pamphlet ; \
	rm -f ${DOC}/free.spad.tex ; \
	rm -f ${DOC}/free.spad )

@
\subsection{fr.spad \cite{1}}
<<fr.spad (SPAD from IN)>>=
${OUTSRC}/fr.spad: ${IN}/fr.spad.pamphlet
	@ echo 1761 making ${OUTSRC}/fr.spad from ${IN}/fr.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/fr.spad.pamphlet >fr.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FR.o (O from NRLIB)>>=
${OUT}/FR.o: ${MID}/FR.NRLIB
	@ echo 1762-19 making ${OUT}/FR.o from ${MID}/FR.NRLIB
	@ cp ${MID}/FR.NRLIB/code.o ${OUT}/FR.o

@
<<FR.NRLIB (NRLIB from MID)>>=
${MID}/FR.NRLIB: ${MID}/FR.spad
	@ echo 1763 making ${MID}/FR.NRLIB from ${MID}/FR.spad
	@ (cd ${MID} ; 	echo ')co FR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FR.spad (SPAD from IN)>>=
${MID}/FR.spad: ${IN}/fr.spad.pamphlet
	@ echo 1764 making ${MID}/FR.spad from ${IN}/fr.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FR.NRLIB ; \
	${TANGLE} -R"domain FR Factored" ${IN}/fr.spad.pamphlet >FR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FR2.o (O from NRLIB)>>=
${OUT}/FR2.o: ${MID}/FR2.NRLIB
	@ echo 1765-8 making ${OUT}/FR2.o from ${MID}/FR2.NRLIB
	@ cp ${MID}/FR2.NRLIB/code.o ${OUT}/FR2.o

@
<<FR2.NRLIB (NRLIB from MID)>>=
${MID}/FR2.NRLIB: ${MID}/FR2.spad
	@ echo 1766 making ${MID}/FR2.NRLIB from ${MID}/FR2.spad
	@ (cd ${MID} ; 	echo ')co FR2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FR2.spad (SPAD from IN)>>=
${MID}/FR2.spad: ${IN}/fr.spad.pamphlet
	@ echo 1767 making ${MID}/FR2.spad from ${IN}/fr.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FR2.NRLIB ; \
	${TANGLE} -R"package FR2 FactoredFunctions2" ${IN}/fr.spad.pamphlet >FR2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FRUTIL.o (O from NRLIB)>>=
${OUT}/FRUTIL.o: ${MID}/FRUTIL.NRLIB
	@ echo 1768-8 making ${OUT}/FRUTIL.o from ${MID}/FRUTIL.NRLIB
	@ cp ${MID}/FRUTIL.NRLIB/code.o ${OUT}/FRUTIL.o

@
<<FRUTIL.NRLIB (NRLIB from MID)>>=
${MID}/FRUTIL.NRLIB: ${MID}/FRUTIL.spad
	@ echo 1769 making ${MID}/FRUTIL.NRLIB from ${MID}/FRUTIL.spad
	@ (cd ${MID} ; 	echo ')co FRUTIL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FRUTIL.spad (SPAD from IN)>>=
${MID}/FRUTIL.spad: ${IN}/fr.spad.pamphlet
	@ echo 1770 making ${MID}/FRUTIL.spad from ${IN}/fr.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FRUTIL.NRLIB ; \
	${TANGLE} -R"package FRUTIL FactoredFunctionUtilities" ${IN}/fr.spad.pamphlet >FRUTIL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<fr.spad.dvi (DOC from IN)>>=
${DOC}/fr.spad.dvi: ${IN}/fr.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1771 making ${DOC}/fr.spad.dvi from ${IN}/fr.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/fr.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} fr.spad ; \
	rm -f ${DOC}/fr.spad.pamphlet ; \
	rm -f ${DOC}/fr.spad.tex ; \
	rm -f ${DOC}/fr.spad )

@
\subsection{fs2expxp.spad \cite{1}}
<<fs2expxp.spad (SPAD from IN)>>=
${OUTSRC}/fs2expxp.spad: ${IN}/fs2expxp.spad.pamphlet
	@ echo 1772 making ${OUTSRC}/fs2expxp.spad from ${IN}/fs2expxp.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/fs2expxp.spad.pamphlet >fs2expxp.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FS2EXPXP.o (O from NRLIB)>>=
${OUT}/FS2EXPXP.o: ${MID}/FS2EXPXP.NRLIB
	@ echo 1773-21 making ${OUT}/FS2EXPXP.o from ${MID}/FS2EXPXP.NRLIB
	@ cp ${MID}/FS2EXPXP.NRLIB/code.o ${OUT}/FS2EXPXP.o

@
<<FS2EXPXP.NRLIB (NRLIB from MID)>>=
${MID}/FS2EXPXP.NRLIB: ${MID}/FS2EXPXP.spad
	@ echo 1774 making ${MID}/FS2EXPXP.NRLIB from ${MID}/FS2EXPXP.spad
	@ (cd ${MID} ; 	echo ')co FS2EXPXP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FS2EXPXP.spad (SPAD from IN)>>=
${MID}/FS2EXPXP.spad: ${IN}/fs2expxp.spad.pamphlet
	@ echo 1775 making ${MID}/FS2EXPXP.spad from ${IN}/fs2expxp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FS2EXPXP.NRLIB ; \
	${TANGLE} -R"package FS2EXPXP FunctionSpaceToExponentialExpansion" ${IN}/fs2expxp.spad.pamphlet >FS2EXPXP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<fs2expxp.spad.dvi (DOC from IN)>>=
${DOC}/fs2expxp.spad.dvi: ${IN}/fs2expxp.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1776 making ${DOC}/fs2expxp.spad.dvi from ${IN}/fs2expxp.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/fs2expxp.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} fs2expxp.spad ; \
	rm -f ${DOC}/fs2expxp.spad.pamphlet ; \
	rm -f ${DOC}/fs2expxp.spad.tex ; \
	rm -f ${DOC}/fs2expxp.spad )

@
\subsection{fs2ups.spad \cite{1}}
<<fs2ups.spad (SPAD from IN)>>=
${OUTSRC}/fs2ups.spad: ${IN}/fs2ups.spad.pamphlet
	@ echo 1777 making ${OUTSRC}/fs2ups.spad from ${IN}/fs2ups.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/fs2ups.spad.pamphlet >fs2ups.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FS2UPS.o (O from NRLIB)>>=
${OUT}/FS2UPS.o: ${MID}/FS2UPS.NRLIB
	@ echo 1778-20 making ${OUT}/FS2UPS.o from ${MID}/FS2UPS.NRLIB
	@ cp ${MID}/FS2UPS.NRLIB/code.o ${OUT}/FS2UPS.o

@
<<FS2UPS.NRLIB (NRLIB from MID)>>=
${MID}/FS2UPS.NRLIB: ${MID}/FS2UPS.spad
	@ echo 1779 making ${MID}/FS2UPS.NRLIB from ${MID}/FS2UPS.spad
	@ (cd ${MID} ; 	echo ')co FS2UPS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FS2UPS.spad (SPAD from IN)>>=
${MID}/FS2UPS.spad: ${IN}/fs2ups.spad.pamphlet
	@ echo 1780 making ${MID}/FS2UPS.spad from ${IN}/fs2ups.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FS2UPS.NRLIB ; \
	${TANGLE} -R"package FS2UPS FunctionSpaceToUnivariatePowerSeries" ${IN}/fs2ups.spad.pamphlet >FS2UPS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<fs2ups.spad.dvi (DOC from IN)>>=
${DOC}/fs2ups.spad.dvi: ${IN}/fs2ups.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1781 making ${DOC}/fs2ups.spad.dvi from ${IN}/fs2ups.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/fs2ups.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} fs2ups.spad ; \
	rm -f ${DOC}/fs2ups.spad.pamphlet ; \
	rm -f ${DOC}/fs2ups.spad.tex ; \
	rm -f ${DOC}/fs2ups.spad )

@
\subsection{fspace.spad \cite{1}}
<<fspace.spad (SPAD from IN)>>=
${OUTSRC}/fspace.spad: ${IN}/fspace.spad.pamphlet
	@ echo 1782 making ${OUTSRC}/fspace.spad from ${IN}/fspace.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/fspace.spad.pamphlet >fspace.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ES-.o (O from NRLIB)>>=
${OUT}/ES-.o: ${MID}/ES.NRLIB
	@ echo 1783-0c making ${OUT}/ES-.o from ${MID}/ES-.NRLIB
	@ cp ${MID}/ES-.NRLIB/code.o ${OUT}/ES-.o

@
<<ES-.NRLIB (NRLIB from MID)>>=
${MID}/ES-.NRLIB: ${MID}/ES.spad 
	@ echo 1784 making ${MID}/ES-.NRLIB from ${MID}/ES.spad
	@ (cd ${MID} ; 	echo ')co ES.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ES.o (O from NRLIB)>>=
${OUT}/ES.o: ${MID}/ES.NRLIB
	@ echo 1785-0c making ${OUT}/ES.o from ${MID}/ES.NRLIB
	@ cp ${MID}/ES.NRLIB/code.o ${OUT}/ES.o

@
<<ES.NRLIB (NRLIB from MID)>>=
${MID}/ES.NRLIB: ${MID}/ES.spad
	@ echo 1786 making ${MID}/ES.NRLIB from ${MID}/ES.spad
	@ (cd ${MID} ; 	echo ')co ES.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ES.spad (SPAD from IN)>>=
${MID}/ES.spad: ${IN}/fspace.spad.pamphlet
	@ echo 1787 making ${MID}/ES.spad from ${IN}/fspace.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ES.NRLIB ; \
	${TANGLE} -R"category ES ExpressionSpace" ${IN}/fspace.spad.pamphlet >ES.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ES-.o (BOOTSTRAP from MID)>>=
${MID}/ES-.o: ${MID}/ES-.lsp 
	@ echo 1788-0b making ${MID}/ES-.o from ${MID}/ES-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "ES-.lsp" :output-file "ES-.o"))' | ${DEPSYS} )
	@ cp ${MID}/ES-.o ${OUT}/ES-.o

@
<<ES-.lsp (LISP from IN)>>=
${MID}/ES-.lsp: ${IN}/fspace.spad.pamphlet
	@ echo 1789 making ${MID}/ES-.lsp from ${IN}/fspace.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ES-.NRLIB ; \
	rm -rf ${OUT}/ES-.o ; \
	${TANGLE} -R"ES-.lsp BOOTSTRAP" ${IN}/fspace.spad.pamphlet >ES-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ES.o (BOOTSTRAP from MID)>>=
${MID}/ES.o: ${MID}/ES.lsp 
	@ echo 1790-0b making ${MID}/ES.o from ${MID}/ES.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "ES.lsp" :output-file "ES.o"))' | ${DEPSYS} )
	@ cp ${MID}/ES.o ${OUT}/ES.o

@
<<ES.lsp (LISP from IN)>>=
${MID}/ES.lsp: ${IN}/fspace.spad.pamphlet
	@ echo 1791 making ${MID}/ES.lsp from ${IN}/fspace.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ES.NRLIB ; \
	rm -rf ${OUT}/ES.o ; \
	${TANGLE} -R"ES.lsp BOOTSTRAP" ${IN}/fspace.spad.pamphlet >ES.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ES1.o (O from NRLIB)>>=
${OUT}/ES1.o: ${MID}/ES1.NRLIB
	@ echo 1792-6 making ${OUT}/ES1.o from ${MID}/ES1.NRLIB
	@ cp ${MID}/ES1.NRLIB/code.o ${OUT}/ES1.o

@
<<ES1.NRLIB (NRLIB from MID)>>=
${MID}/ES1.NRLIB: ${MID}/ES1.spad
	@ echo 1793 making ${MID}/ES1.NRLIB from ${MID}/ES1.spad
	@ (cd ${MID} ; 	echo ')co ES1.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ES1.spad (SPAD from IN)>>=
${MID}/ES1.spad: ${IN}/fspace.spad.pamphlet
	@ echo 1794 making ${MID}/ES1.spad from ${IN}/fspace.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ES1.NRLIB ; \
	${TANGLE} -R"package ES1 ExpressionSpaceFunctions1" ${IN}/fspace.spad.pamphlet >ES1.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ES2.o (O from NRLIB)>>=
${OUT}/ES2.o: ${MID}/ES2.NRLIB
	@ echo 1795-6 making ${OUT}/ES2.o from ${MID}/ES2.NRLIB
	@ cp ${MID}/ES2.NRLIB/code.o ${OUT}/ES2.o

@
<<ES2.NRLIB (NRLIB from MID)>>=
${MID}/ES2.NRLIB: ${MID}/ES2.spad
	@ echo 1796 making ${MID}/ES2.NRLIB from ${MID}/ES2.spad
	@ (cd ${MID} ; 	echo ')co ES2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ES2.spad (SPAD from IN)>>=
${MID}/ES2.spad: ${IN}/fspace.spad.pamphlet
	@ echo 1797 making ${MID}/ES2.spad from ${IN}/fspace.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ES2.NRLIB ; \
	${TANGLE} -R"package ES2 ExpressionSpaceFunctions2" ${IN}/fspace.spad.pamphlet >ES2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FS-.o (O from NRLIB)>>=
${OUT}/FS-.o: ${MID}/FS.NRLIB
	@ echo 1798-19 making ${OUT}/FS-.o from ${MID}/FS-.NRLIB
	@ cp ${MID}/FS-.NRLIB/code.o ${OUT}/FS-.o

@
<<FS-.NRLIB (NRLIB from MID)>>=
${MID}/FS-.NRLIB: ${MID}/FS.spad 
	@ echo 1799 making ${MID}/FS-.NRLIB from ${MID}/FS.spad
	@ (cd ${MID} ; 	echo ')co FS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FS.o (O from NRLIB)>>=
${OUT}/FS.o: ${MID}/FS.NRLIB
	@ echo 1800-19 making ${OUT}/FS.o from ${MID}/FS.NRLIB
	@ cp ${MID}/FS.NRLIB/code.o ${OUT}/FS.o

@
<<FS.NRLIB (NRLIB from MID)>>=
${MID}/FS.NRLIB: ${MID}/FS.spad
	@ echo 1801 making ${MID}/FS.NRLIB from ${MID}/FS.spad
	@ (cd ${MID} ; 	echo ')co FS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FS.spad (SPAD from IN)>>=
${MID}/FS.spad: ${IN}/fspace.spad.pamphlet
	@ echo 1802 making ${MID}/FS.spad from ${IN}/fspace.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FS.NRLIB ; \
	${TANGLE} -R"category FS FunctionSpace" ${IN}/fspace.spad.pamphlet >FS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FS2.o (O from NRLIB)>>=
${OUT}/FS2.o: ${MID}/FS2.NRLIB
	@ echo 1803-20 making ${OUT}/FS2.o from ${MID}/FS2.NRLIB
	@ cp ${MID}/FS2.NRLIB/code.o ${OUT}/FS2.o

@
<<FS2.NRLIB (NRLIB from MID)>>=
${MID}/FS2.NRLIB: ${MID}/FS2.spad
	@ echo 1804 making ${MID}/FS2.NRLIB from ${MID}/FS2.spad
	@ (cd ${MID} ; 	echo ')co FS2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FS2.spad (SPAD from IN)>>=
${MID}/FS2.spad: ${IN}/fspace.spad.pamphlet
	@ echo 1805 making ${MID}/FS2.spad from ${IN}/fspace.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FS2.NRLIB ; \
	${TANGLE} -R"package FS2 FunctionSpaceFunctions2" ${IN}/fspace.spad.pamphlet >FS2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<fspace.spad.dvi (DOC from IN)>>=
${DOC}/fspace.spad.dvi: ${IN}/fspace.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1806 making ${DOC}/fspace.spad.dvi from ${IN}/fspace.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/fspace.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} fspace.spad ; \
	rm -f ${DOC}/fspace.spad.pamphlet ; \
	rm -f ${DOC}/fspace.spad.tex ; \
	rm -f ${DOC}/fspace.spad )

@
\subsection{funcpkgs.spad \cite{1}}
<<funcpkgs.spad (SPAD from IN)>>=
${OUTSRC}/funcpkgs.spad: ${IN}/funcpkgs.spad.pamphlet
	@ echo 1807 making ${OUTSRC}/funcpkgs.spad from ${IN}/funcpkgs.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/funcpkgs.spad.pamphlet >funcpkgs.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FSUPFACT.o (O from NRLIB)>>=
${OUT}/FSUPFACT.o: ${MID}/FSUPFACT.NRLIB
	@ echo 1808-20 making ${OUT}/FSUPFACT.o from ${MID}/FSUPFACT.NRLIB
	@ cp ${MID}/FSUPFACT.NRLIB/code.o ${OUT}/FSUPFACT.o

@
<<FSUPFACT.NRLIB (NRLIB from MID)>>=
${MID}/FSUPFACT.NRLIB: ${MID}/FSUPFACT.spad
	@ echo 1809 making ${MID}/FSUPFACT.NRLIB from ${MID}/FSUPFACT.spad
	@ (cd ${MID} ; 	echo ')co FSUPFACT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FSUPFACT.spad (SPAD from IN)>>=
${MID}/FSUPFACT.spad: ${IN}/funcpkgs.spad.pamphlet
	@ echo 1810 making ${MID}/FSUPFACT.spad from ${IN}/funcpkgs.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FSUPFACT.NRLIB ; \
	${TANGLE} -R"package FSUPFACT FunctionSpaceUnivariatePolynomialFactor" ${IN}/funcpkgs.spad.pamphlet >FSUPFACT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<funcpkgs.spad.dvi (DOC from IN)>>=
${DOC}/funcpkgs.spad.dvi: ${IN}/funcpkgs.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1811 making ${DOC}/funcpkgs.spad.dvi from ${IN}/funcpkgs.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/funcpkgs.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} funcpkgs.spad ; \
	rm -f ${DOC}/funcpkgs.spad.pamphlet ; \
	rm -f ${DOC}/funcpkgs.spad.tex ; \
	rm -f ${DOC}/funcpkgs.spad )

@
\subsection{functions.spad \cite{1}}
<<functions.spad (SPAD from IN)>>=
${OUTSRC}/functions.spad: ${IN}/functions.spad.pamphlet
	@ echo 1812 making ${OUTSRC}/functions.spad from ${IN}/functions.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/functions.spad.pamphlet >functions.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BFUNCT.o (O from NRLIB)>>=
${OUT}/BFUNCT.o: ${MID}/BFUNCT.NRLIB
	@ echo 1813-10 making ${OUT}/BFUNCT.o from ${MID}/BFUNCT.NRLIB
	@ cp ${MID}/BFUNCT.NRLIB/code.o ${OUT}/BFUNCT.o

@
<<BFUNCT.NRLIB (NRLIB from MID)>>=
${MID}/BFUNCT.NRLIB: ${MID}/BFUNCT.spad
	@ echo 1814 making ${MID}/BFUNCT.NRLIB from ${MID}/BFUNCT.spad
	@ (cd ${MID} ; 	echo ')co BFUNCT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BFUNCT.spad (SPAD from IN)>>=
${MID}/BFUNCT.spad: ${IN}/functions.spad.pamphlet
	@ echo 1815 making ${MID}/BFUNCT.spad from ${IN}/functions.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf BFUNCT.NRLIB ; \
	${TANGLE} -R"domain BFUNCT BasicFunctions" ${IN}/functions.spad.pamphlet >BFUNCT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<functions.spad.dvi (DOC from IN)>>=
${DOC}/functions.spad.dvi: ${IN}/functions.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1816 making ${DOC}/functions.spad.dvi from ${IN}/functions.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/functions.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} functions.spad ; \
	rm -f ${DOC}/functions.spad.pamphlet ; \
	rm -f ${DOC}/functions.spad.tex ; \
	rm -f ${DOC}/functions.spad )

@
\subsection{galfact.spad \cite{1}}
<<galfact.spad (SPAD from IN)>>=
${OUTSRC}/galfact.spad: ${IN}/galfact.spad.pamphlet
	@ echo 1817 making ${OUTSRC}/galfact.spad from ${IN}/galfact.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/galfact.spad.pamphlet >galfact.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GALFACT.o (O from NRLIB)>>=
${OUT}/GALFACT.o: ${MID}/GALFACT.NRLIB
	@ echo 1818-17 making ${OUT}/GALFACT.o from ${MID}/GALFACT.NRLIB
	@ cp ${MID}/GALFACT.NRLIB/code.o ${OUT}/GALFACT.o

@
<<GALFACT.NRLIB (NRLIB from MID)>>=
${MID}/GALFACT.NRLIB: ${MID}/GALFACT.spad
	@ echo 1819 making ${MID}/GALFACT.NRLIB from ${MID}/GALFACT.spad
	@ (cd ${MID} ; 	echo ')co GALFACT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GALFACT.spad (SPAD from IN)>>=
${MID}/GALFACT.spad: ${IN}/galfact.spad.pamphlet
	@ echo 1820 making ${MID}/GALFACT.spad from ${IN}/galfact.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GALFACT.NRLIB ; \
	${TANGLE} -R"package GALFACT GaloisGroupFactorizer" ${IN}/galfact.spad.pamphlet >GALFACT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<galfact.spad.dvi (DOC from IN)>>=
${DOC}/galfact.spad.dvi: ${IN}/galfact.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1821 making ${DOC}/galfact.spad.dvi from ${IN}/galfact.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/galfact.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} galfact.spad ; \
	rm -f ${DOC}/galfact.spad.pamphlet ; \
	rm -f ${DOC}/galfact.spad.tex ; \
	rm -f ${DOC}/galfact.spad )

@
\subsection{galfactu.spad \cite{1}}
<<galfactu.spad (SPAD from IN)>>=
${OUTSRC}/galfactu.spad: ${IN}/galfactu.spad.pamphlet
	@ echo 1822 making ${OUTSRC}/galfactu.spad from ${IN}/galfactu.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/galfactu.spad.pamphlet >galfactu.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GALFACTU.o (O from NRLIB)>>=
${OUT}/GALFACTU.o: ${MID}/GALFACTU.NRLIB
	@ echo 1823-14 making ${OUT}/GALFACTU.o from ${MID}/GALFACTU.NRLIB
	@ cp ${MID}/GALFACTU.NRLIB/code.o ${OUT}/GALFACTU.o

@
<<GALFACTU.NRLIB (NRLIB from MID)>>=
${MID}/GALFACTU.NRLIB: ${MID}/GALFACTU.spad
	@ echo 1824 making ${MID}/GALFACTU.NRLIB from ${MID}/GALFACTU.spad
	@ (cd ${MID} ; 	echo ')co GALFACTU.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GALFACTU.spad (SPAD from IN)>>=
${MID}/GALFACTU.spad: ${IN}/galfactu.spad.pamphlet
	@ echo 1825 making ${MID}/GALFACTU.spad from ${IN}/galfactu.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GALFACTU.NRLIB ; \
	${TANGLE} -R"package GALFACTU GaloisGroupFactorizationUtilities" ${IN}/galfactu.spad.pamphlet >GALFACTU.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<galfactu.spad.dvi (DOC from IN)>>=
${DOC}/galfactu.spad.dvi: ${IN}/galfactu.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1826 making ${DOC}/galfactu.spad.dvi from ${IN}/galfactu.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/galfactu.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} galfactu.spad ; \
	rm -f ${DOC}/galfactu.spad.pamphlet ; \
	rm -f ${DOC}/galfactu.spad.tex ; \
	rm -f ${DOC}/galfactu.spad )

@
\subsection{galpolyu.spad \cite{1}}
<<galpolyu.spad (SPAD from IN)>>=
${OUTSRC}/galpolyu.spad: ${IN}/galpolyu.spad.pamphlet
	@ echo 1827 making ${OUTSRC}/galpolyu.spad from ${IN}/galpolyu.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/galpolyu.spad.pamphlet >galpolyu.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GALPOLYU.o (O from NRLIB)>>=
${OUT}/GALPOLYU.o: ${MID}/GALPOLYU.NRLIB
	@ echo 1828-14 making ${OUT}/GALPOLYU.o from ${MID}/GALPOLYU.NRLIB
	@ cp ${MID}/GALPOLYU.NRLIB/code.o ${OUT}/GALPOLYU.o

@
<<GALPOLYU.NRLIB (NRLIB from MID)>>=
${MID}/GALPOLYU.NRLIB: ${MID}/GALPOLYU.spad
	@ echo 1829 making ${MID}/GALPOLYU.NRLIB from ${MID}/GALPOLYU.spad
	@ (cd ${MID} ; 	echo ')co GALPOLYU.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GALPOLYU.spad (SPAD from IN)>>=
${MID}/GALPOLYU.spad: ${IN}/galpolyu.spad.pamphlet
	@ echo 1830 making ${MID}/GALPOLYU.spad from ${IN}/galpolyu.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GALPOLYU.NRLIB ; \
	${TANGLE} -R"package GALPOLYU GaloisGroupPolynomialUtilities" ${IN}/galpolyu.spad.pamphlet >GALPOLYU.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<galpolyu.spad.dvi (DOC from IN)>>=
${DOC}/galpolyu.spad.dvi: ${IN}/galpolyu.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1831 making ${DOC}/galpolyu.spad.dvi from ${IN}/galpolyu.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/galpolyu.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} galpolyu.spad ; \
	rm -f ${DOC}/galpolyu.spad.pamphlet ; \
	rm -f ${DOC}/galpolyu.spad.tex ; \
	rm -f ${DOC}/galpolyu.spad )

@
\subsection{galutil.spad \cite{1}}
<<galutil.spad (SPAD from IN)>>=
${OUTSRC}/galutil.spad: ${IN}/galutil.spad.pamphlet
	@ echo 1832 making ${OUTSRC}/galutil.spad from ${IN}/galutil.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/galutil.spad.pamphlet >galutil.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GALUTIL.o (O from NRLIB)>>=
${OUT}/GALUTIL.o: ${MID}/GALUTIL.NRLIB
	@ echo 1833-11 making ${OUT}/GALUTIL.o from ${MID}/GALUTIL.NRLIB
	@ cp ${MID}/GALUTIL.NRLIB/code.o ${OUT}/GALUTIL.o

@
<<GALUTIL.NRLIB (NRLIB from MID)>>=
${MID}/GALUTIL.NRLIB: ${MID}/GALUTIL.spad
	@ echo 1834 making ${MID}/GALUTIL.NRLIB from ${MID}/GALUTIL.spad
	@ (cd ${MID} ; 	echo ')co GALUTIL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GALUTIL.spad (SPAD from IN)>>=
${MID}/GALUTIL.spad: ${IN}/galutil.spad.pamphlet
	@ echo 1835 making ${MID}/GALUTIL.spad from ${IN}/galutil.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GALUTIL.NRLIB ; \
	${TANGLE} -R"package GALUTIL GaloisGroupUtilities" ${IN}/galutil.spad.pamphlet >GALUTIL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<galutil.spad.dvi (DOC from IN)>>=
${DOC}/galutil.spad.dvi: ${IN}/galutil.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1836 making ${DOC}/galutil.spad.dvi from ${IN}/galutil.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/galutil.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} galutil.spad ; \
	rm -f ${DOC}/galutil.spad.pamphlet ; \
	rm -f ${DOC}/galutil.spad.tex ; \
	rm -f ${DOC}/galutil.spad )

@
\subsection{gaussfac.spad \cite{1}}
<<gaussfac.spad (SPAD from IN)>>=
${OUTSRC}/gaussfac.spad: ${IN}/gaussfac.spad.pamphlet
	@ echo 1837 making ${OUTSRC}/gaussfac.spad from ${IN}/gaussfac.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/gaussfac.spad.pamphlet >gaussfac.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GAUSSFAC.o (O from NRLIB)>>=
${OUT}/GAUSSFAC.o: ${MID}/GAUSSFAC.NRLIB
	@ echo 1838-20 making ${OUT}/GAUSSFAC.o from ${MID}/GAUSSFAC.NRLIB
	@ cp ${MID}/GAUSSFAC.NRLIB/code.o ${OUT}/GAUSSFAC.o

@
<<GAUSSFAC.NRLIB (NRLIB from MID)>>=
${MID}/GAUSSFAC.NRLIB: ${MID}/GAUSSFAC.spad
	@ echo 1839 making ${MID}/GAUSSFAC.NRLIB from ${MID}/GAUSSFAC.spad
	@ (cd ${MID} ; 	echo ')co GAUSSFAC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GAUSSFAC.spad (SPAD from IN)>>=
${MID}/GAUSSFAC.spad: ${IN}/gaussfac.spad.pamphlet
	@ echo 1840 making ${MID}/GAUSSFAC.spad from ${IN}/gaussfac.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GAUSSFAC.NRLIB ; \
	${TANGLE} -R"package GAUSSFAC GaussianFactorizationPackage" ${IN}/gaussfac.spad.pamphlet >GAUSSFAC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<gaussfac.spad.dvi (DOC from IN)>>=
${DOC}/gaussfac.spad.dvi: ${IN}/gaussfac.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1841 making ${DOC}/gaussfac.spad.dvi from ${IN}/gaussfac.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/gaussfac.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} gaussfac.spad ; \
	rm -f ${DOC}/gaussfac.spad.pamphlet ; \
	rm -f ${DOC}/gaussfac.spad.tex ; \
	rm -f ${DOC}/gaussfac.spad )

@
\subsection{gaussian.spad \cite{1}}
<<gaussian.spad (SPAD from IN)>>=
${OUTSRC}/gaussian.spad: ${IN}/gaussian.spad.pamphlet
	@ echo 1842 making ${OUTSRC}/gaussian.spad from ${IN}/gaussian.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/gaussian.spad.pamphlet >gaussian.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CINTSLPE.o (O from NRLIB)>>=
${OUT}/CINTSLPE.o: ${MID}/CINTSLPE.NRLIB
	@ echo 1843-20 making ${OUT}/CINTSLPE.o from ${MID}/CINTSLPE.NRLIB
	@ cp ${MID}/CINTSLPE.NRLIB/code.o ${OUT}/CINTSLPE.o

@
<<CINTSLPE.NRLIB (NRLIB from MID)>>=
${MID}/CINTSLPE.NRLIB: ${MID}/CINTSLPE.spad
	@ echo 1844 making ${MID}/CINTSLPE.NRLIB from ${MID}/CINTSLPE.spad
	@ (cd ${MID} ; 	echo ')co CINTSLPE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CINTSLPE.spad (SPAD from IN)>>=
${MID}/CINTSLPE.spad: ${IN}/gaussian.spad.pamphlet
	@ echo 1845 making ${MID}/CINTSLPE.spad from ${IN}/gaussian.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CINTSLPE.NRLIB ; \
	${TANGLE} -R"package CINTSLPE ComplexIntegerSolveLinearPolynomialEquation" ${IN}/gaussian.spad.pamphlet >CINTSLPE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COMPCAT-.o (O from NRLIB)>>=
${OUT}/COMPCAT-.o: ${MID}/COMPCAT.NRLIB
	@ echo 1846-19 making ${OUT}/COMPCAT-.o from ${MID}/COMPCAT-.NRLIB
	@ cp ${MID}/COMPCAT-.NRLIB/code.o ${OUT}/COMPCAT-.o

@
<<COMPCAT-.NRLIB (NRLIB from MID)>>=
${MID}/COMPCAT-.NRLIB: ${MID}/COMPCAT.spad 
	@ echo 1847 making ${MID}/COMPCAT-.NRLIB from ${MID}/COMPCAT.spad
	@ (cd ${MID} ; 	echo ')co COMPCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COMPCAT.o (O from NRLIB)>>=
${OUT}/COMPCAT.o: ${MID}/COMPCAT.NRLIB
	@ echo 1848-19 making ${OUT}/COMPCAT.o from ${MID}/COMPCAT.NRLIB
	@ cp ${MID}/COMPCAT.NRLIB/code.o ${OUT}/COMPCAT.o

@
<<COMPCAT.NRLIB (NRLIB from MID)>>=
${MID}/COMPCAT.NRLIB: ${MID}/COMPCAT.spad
	@ echo 1849 making ${MID}/COMPCAT.NRLIB from ${MID}/COMPCAT.spad
	@ (cd ${MID} ; 	echo ')co COMPCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COMPCAT.spad (SPAD from IN)>>=
${MID}/COMPCAT.spad: ${IN}/gaussian.spad.pamphlet
	@ echo 1850 making ${MID}/COMPCAT.spad from ${IN}/gaussian.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf COMPCAT.NRLIB ; \
	${TANGLE} -R"category COMPCAT ComplexCategory" ${IN}/gaussian.spad.pamphlet >COMPCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COMPFACT.o (O from NRLIB)>>=
${OUT}/COMPFACT.o: ${MID}/COMPFACT.NRLIB
	@ echo 1851-20 making ${OUT}/COMPFACT.o from ${MID}/COMPFACT.NRLIB
	@ cp ${MID}/COMPFACT.NRLIB/code.o ${OUT}/COMPFACT.o

@
<<COMPFACT.NRLIB (NRLIB from MID)>>=
${MID}/COMPFACT.NRLIB: ${MID}/COMPFACT.spad
	@ echo 1852 making ${MID}/COMPFACT.NRLIB from ${MID}/COMPFACT.spad
	@ (cd ${MID} ; 	echo ')co COMPFACT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COMPFACT.spad (SPAD from IN)>>=
${MID}/COMPFACT.spad: ${IN}/gaussian.spad.pamphlet
	@ echo 1853 making ${MID}/COMPFACT.spad from ${IN}/gaussian.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf COMPFACT.NRLIB ; \
	${TANGLE} -R"package COMPFACT ComplexFactorization" ${IN}/gaussian.spad.pamphlet >COMPFACT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COMPLEX.o (O from NRLIB)>>=
${OUT}/COMPLEX.o: ${MID}/COMPLEX.NRLIB
	@ echo 1854-20 making ${OUT}/COMPLEX.o from ${MID}/COMPLEX.NRLIB
	@ cp ${MID}/COMPLEX.NRLIB/code.o ${OUT}/COMPLEX.o

@
<<COMPLEX.NRLIB (NRLIB from MID)>>=
${MID}/COMPLEX.NRLIB: ${MID}/COMPLEX.spad
	@ echo 1855 making ${MID}/COMPLEX.NRLIB from ${MID}/COMPLEX.spad
	@ (cd ${MID} ; 	echo ')co COMPLEX.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COMPLEX.spad (SPAD from IN)>>=
${MID}/COMPLEX.spad: ${IN}/gaussian.spad.pamphlet
	@ echo 1856 making ${MID}/COMPLEX.spad from ${IN}/gaussian.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf COMPLEX.NRLIB ; \
	${TANGLE} -R"domain COMPLEX Complex" ${IN}/gaussian.spad.pamphlet >COMPLEX.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COMPLEX2.o (O from NRLIB)>>=
${OUT}/COMPLEX2.o: ${MID}/COMPLEX2.NRLIB
	@ echo 1857-6 making ${OUT}/COMPLEX2.o from ${MID}/COMPLEX2.NRLIB
	@ cp ${MID}/COMPLEX2.NRLIB/code.o ${OUT}/COMPLEX2.o

@
<<COMPLEX2.NRLIB (NRLIB from MID)>>=
${MID}/COMPLEX2.NRLIB: ${MID}/COMPLEX2.spad
	@ echo 1858 making ${MID}/COMPLEX2.NRLIB from ${MID}/COMPLEX2.spad
	@ (cd ${MID} ; 	echo ')co COMPLEX2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COMPLEX2.spad (SPAD from IN)>>=
${MID}/COMPLEX2.spad: ${IN}/gaussian.spad.pamphlet
	@ echo 1859 making ${MID}/COMPLEX2.spad from ${IN}/gaussian.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf COMPLEX2.NRLIB ; \
	${TANGLE} -R"package COMPLEX2 ComplexFunctions2" ${IN}/gaussian.spad.pamphlet >COMPLEX2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COMPLPAT.o (O from NRLIB)>>=
${OUT}/COMPLPAT.o: ${MID}/COMPLPAT.NRLIB
	@ echo 1860-20 making ${OUT}/COMPLPAT.o from ${MID}/COMPLPAT.NRLIB
	@ cp ${MID}/COMPLPAT.NRLIB/code.o ${OUT}/COMPLPAT.o

@
<<COMPLPAT.NRLIB (NRLIB from MID)>>=
${MID}/COMPLPAT.NRLIB: ${MID}/COMPLPAT.spad
	@ echo 1861 making ${MID}/COMPLPAT.NRLIB from ${MID}/COMPLPAT.spad
	@ (cd ${MID} ; 	echo ')co COMPLPAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COMPLPAT.spad (SPAD from IN)>>=
${MID}/COMPLPAT.spad: ${IN}/gaussian.spad.pamphlet
	@ echo 1862 making ${MID}/COMPLPAT.spad from ${IN}/gaussian.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf COMPLPAT.NRLIB ; \
	${TANGLE} -R"package COMPLPAT ComplexPattern" ${IN}/gaussian.spad.pamphlet >COMPLPAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CPMATCH.o (O from NRLIB)>>=
${OUT}/CPMATCH.o: ${MID}/CPMATCH.NRLIB
	@ echo 1863-20 making ${OUT}/CPMATCH.o from ${MID}/CPMATCH.NRLIB
	@ cp ${MID}/CPMATCH.NRLIB/code.o ${OUT}/CPMATCH.o

@
<<CPMATCH.NRLIB (NRLIB from MID)>>=
${MID}/CPMATCH.NRLIB: ${MID}/CPMATCH.spad
	@ echo 1864 making ${MID}/CPMATCH.NRLIB from ${MID}/CPMATCH.spad
	@ (cd ${MID} ; 	echo ')co CPMATCH.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CPMATCH.spad (SPAD from IN)>>=
${MID}/CPMATCH.spad: ${IN}/gaussian.spad.pamphlet
	@ echo 1865 making ${MID}/CPMATCH.spad from ${IN}/gaussian.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CPMATCH.NRLIB ; \
	${TANGLE} -R"package CPMATCH ComplexPatternMatch" ${IN}/gaussian.spad.pamphlet >CPMATCH.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<gaussian.spad.dvi (DOC from IN)>>=
${DOC}/gaussian.spad.dvi: ${IN}/gaussian.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1866 making ${DOC}/gaussian.spad.dvi from ${IN}/gaussian.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/gaussian.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} gaussian.spad ; \
	rm -f ${DOC}/gaussian.spad.pamphlet ; \
	rm -f ${DOC}/gaussian.spad.tex ; \
	rm -f ${DOC}/gaussian.spad )

@
\subsection{gbeuclid.spad \cite{1}}
<<gbeuclid.spad (SPAD from IN)>>=
${OUTSRC}/gbeuclid.spad: ${IN}/gbeuclid.spad.pamphlet
	@ echo 1867 making ${OUTSRC}/gbeuclid.spad from ${IN}/gbeuclid.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/gbeuclid.spad.pamphlet >gbeuclid.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GBEUCLID.o (O from NRLIB)>>=
${OUT}/GBEUCLID.o: ${MID}/GBEUCLID.NRLIB
	@ echo 1868-14 making ${OUT}/GBEUCLID.o from ${MID}/GBEUCLID.NRLIB
	@ cp ${MID}/GBEUCLID.NRLIB/code.o ${OUT}/GBEUCLID.o

@
<<GBEUCLID.NRLIB (NRLIB from MID)>>=
${MID}/GBEUCLID.NRLIB: ${MID}/GBEUCLID.spad
	@ echo 1869 making ${MID}/GBEUCLID.NRLIB from ${MID}/GBEUCLID.spad
	@ (cd ${MID} ; 	echo ')co GBEUCLID.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GBEUCLID.spad (SPAD from IN)>>=
${MID}/GBEUCLID.spad: ${IN}/gbeuclid.spad.pamphlet
	@ echo 1870 making ${MID}/GBEUCLID.spad from ${IN}/gbeuclid.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GBEUCLID.NRLIB ; \
	${TANGLE} -R"package GBEUCLID EuclideanGroebnerBasisPackage" ${IN}/gbeuclid.spad.pamphlet >GBEUCLID.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<gbeuclid.spad.dvi (DOC from IN)>>=
${DOC}/gbeuclid.spad.dvi: ${IN}/gbeuclid.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1871 making ${DOC}/gbeuclid.spad.dvi from ${IN}/gbeuclid.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/gbeuclid.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} gbeuclid.spad ; \
	rm -f ${DOC}/gbeuclid.spad.pamphlet ; \
	rm -f ${DOC}/gbeuclid.spad.tex ; \
	rm -f ${DOC}/gbeuclid.spad )

@
\subsection{gbintern.spad \cite{1}}
<<gbintern.spad (SPAD from IN)>>=
${OUTSRC}/gbintern.spad: ${IN}/gbintern.spad.pamphlet
	@ echo 1872 making ${OUTSRC}/gbintern.spad from ${IN}/gbintern.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/gbintern.spad.pamphlet >gbintern.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GBINTERN.o (O from NRLIB)>>=
${OUT}/GBINTERN.o: ${MID}/GBINTERN.NRLIB
	@ echo 1873-14 making ${OUT}/GBINTERN.o from ${MID}/GBINTERN.NRLIB
	@ cp ${MID}/GBINTERN.NRLIB/code.o ${OUT}/GBINTERN.o

@
<<GBINTERN.NRLIB (NRLIB from MID)>>=
${MID}/GBINTERN.NRLIB: ${MID}/GBINTERN.spad
	@ echo 1874 making ${MID}/GBINTERN.NRLIB from ${MID}/GBINTERN.spad
	@ (cd ${MID} ; 	echo ')co GBINTERN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GBINTERN.spad (SPAD from IN)>>=
${MID}/GBINTERN.spad: ${IN}/gbintern.spad.pamphlet
	@ echo 1875 making ${MID}/GBINTERN.spad from ${IN}/gbintern.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GBINTERN.NRLIB ; \
	${TANGLE} -R"package GBINTERN GroebnerInternalPackage" ${IN}/gbintern.spad.pamphlet >GBINTERN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<gbintern.spad.dvi (DOC from IN)>>=
${DOC}/gbintern.spad.dvi: ${IN}/gbintern.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1876 making ${DOC}/gbintern.spad.dvi from ${IN}/gbintern.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/gbintern.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} gbintern.spad ; \
	rm -f ${DOC}/gbintern.spad.pamphlet ; \
	rm -f ${DOC}/gbintern.spad.tex ; \
	rm -f ${DOC}/gbintern.spad )

@
\subsection{gb.spad \cite{1}}
<<gb.spad (SPAD from IN)>>=
${OUTSRC}/gb.spad: ${IN}/gb.spad.pamphlet
	@ echo 1877 making ${OUTSRC}/gb.spad from ${IN}/gb.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/gb.spad.pamphlet >gb.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GB.o (O from NRLIB)>>=
${OUT}/GB.o: ${MID}/GB.NRLIB
	@ echo 1878-14 making ${OUT}/GB.o from ${MID}/GB.NRLIB
	@ cp ${MID}/GB.NRLIB/code.o ${OUT}/GB.o

@
<<GB.NRLIB (NRLIB from MID)>>=
${MID}/GB.NRLIB: ${MID}/GB.spad
	@ echo 1879 making ${MID}/GB.NRLIB from ${MID}/GB.spad
	@ (cd ${MID} ; 	echo ')co GB.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GB.spad (SPAD from IN)>>=
${MID}/GB.spad: ${IN}/gb.spad.pamphlet
	@ echo 1880 making ${MID}/GB.spad from ${IN}/gb.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GB.NRLIB ; \
	${TANGLE} -R"package GB GroebnerPackage" ${IN}/gb.spad.pamphlet >GB.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<gb.spad.dvi (DOC from IN)>>=
${DOC}/gb.spad.dvi: ${IN}/gb.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1881 making ${DOC}/gb.spad.dvi from ${IN}/gb.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/gb.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} gb.spad ; \
	rm -f ${DOC}/gb.spad.pamphlet ; \
	rm -f ${DOC}/gb.spad.tex ; \
	rm -f ${DOC}/gb.spad )

@
\subsection{gdirprod.spad \cite{1}}
<<gdirprod.spad (SPAD from IN)>>=
${OUTSRC}/gdirprod.spad: ${IN}/gdirprod.spad.pamphlet
	@ echo 1882 making ${OUTSRC}/gdirprod.spad from ${IN}/gdirprod.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/gdirprod.spad.pamphlet >gdirprod.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<HDP.o (O from NRLIB)>>=
${OUT}/HDP.o: ${MID}/HDP.NRLIB
	@ echo 1883-14 making ${OUT}/HDP.o from ${MID}/HDP.NRLIB
	@ cp ${MID}/HDP.NRLIB/code.o ${OUT}/HDP.o

@
<<HDP.NRLIB (NRLIB from MID)>>=
${MID}/HDP.NRLIB: ${MID}/HDP.spad
	@ echo 1884 making ${MID}/HDP.NRLIB from ${MID}/HDP.spad
	@ (cd ${MID} ; 	echo ')co HDP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<HDP.spad (SPAD from IN)>>=
${MID}/HDP.spad: ${IN}/gdirprod.spad.pamphlet
	@ echo 1885 making ${MID}/HDP.spad from ${IN}/gdirprod.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf HDP.NRLIB ; \
	${TANGLE} -R"domain HDP HomogeneousDirectProduct" ${IN}/gdirprod.spad.pamphlet >HDP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ORDFUNS.o (O from NRLIB)>>=
${OUT}/ORDFUNS.o: ${MID}/ORDFUNS.NRLIB
	@ echo 1886-13 making ${OUT}/ORDFUNS.o from ${MID}/ORDFUNS.NRLIB
	@ cp ${MID}/ORDFUNS.NRLIB/code.o ${OUT}/ORDFUNS.o

@
<<ORDFUNS.NRLIB (NRLIB from MID)>>=
${MID}/ORDFUNS.NRLIB: ${MID}/ORDFUNS.spad
	@ echo 1887 making ${MID}/ORDFUNS.NRLIB from ${MID}/ORDFUNS.spad
	@ (cd ${MID} ; 	echo ')co ORDFUNS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ORDFUNS.spad (SPAD from IN)>>=
${MID}/ORDFUNS.spad: ${IN}/gdirprod.spad.pamphlet
	@ echo 1888 making ${MID}/ORDFUNS.spad from ${IN}/gdirprod.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ORDFUNS.NRLIB ; \
	${TANGLE} -R"package ORDFUNS OrderingFunctions" ${IN}/gdirprod.spad.pamphlet >ORDFUNS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODP.o (O from NRLIB)>>=
${OUT}/ODP.o: ${MID}/ODP.NRLIB
	@ echo 1889-14 making ${OUT}/ODP.o from ${MID}/ODP.NRLIB
	@ cp ${MID}/ODP.NRLIB/code.o ${OUT}/ODP.o

@
<<ODP.NRLIB (NRLIB from MID)>>=
${MID}/ODP.NRLIB: ${MID}/ODP.spad
	@ echo 1890 making ${MID}/ODP.NRLIB from ${MID}/ODP.spad
	@ (cd ${MID} ; 	echo ')co ODP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODP.spad (SPAD from IN)>>=
${MID}/ODP.spad: ${IN}/gdirprod.spad.pamphlet
	@ echo 1891 making ${MID}/ODP.spad from ${IN}/gdirprod.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ODP.NRLIB ; \
	${TANGLE} -R"domain ODP OrderedDirectProduct" ${IN}/gdirprod.spad.pamphlet >ODP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SHDP.o (O from NRLIB)>>=
${OUT}/SHDP.o: ${MID}/SHDP.NRLIB
	@ echo 1892-14 making ${OUT}/SHDP.o from ${MID}/SHDP.NRLIB
	@ cp ${MID}/SHDP.NRLIB/code.o ${OUT}/SHDP.o

@
<<SHDP.NRLIB (NRLIB from MID)>>=
${MID}/SHDP.NRLIB: ${MID}/SHDP.spad
	@ echo 1893 making ${MID}/SHDP.NRLIB from ${MID}/SHDP.spad
	@ (cd ${MID} ; 	echo ')co SHDP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SHDP.spad (SPAD from IN)>>=
${MID}/SHDP.spad: ${IN}/gdirprod.spad.pamphlet
	@ echo 1894 making ${MID}/SHDP.spad from ${IN}/gdirprod.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SHDP.NRLIB ; \
	${TANGLE} -R"domain SHDP SplitHomogeneousDirectProduct" ${IN}/gdirprod.spad.pamphlet >SHDP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<gdirprod.spad.dvi (DOC from IN)>>=
${DOC}/gdirprod.spad.dvi: ${IN}/gdirprod.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1895 making ${DOC}/gdirprod.spad.dvi from ${IN}/gdirprod.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/gdirprod.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} gdirprod.spad ; \
	rm -f ${DOC}/gdirprod.spad.pamphlet ; \
	rm -f ${DOC}/gdirprod.spad.tex ; \
	rm -f ${DOC}/gdirprod.spad )

@
\subsection{gdpoly.spad \cite{1}}
<<gdpoly.spad (SPAD from IN)>>=
${OUTSRC}/gdpoly.spad: ${IN}/gdpoly.spad.pamphlet
	@ echo 1896 making ${OUTSRC}/gdpoly.spad from ${IN}/gdpoly.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/gdpoly.spad.pamphlet >gdpoly.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DMP.o (O from NRLIB)>>=
${OUT}/DMP.o: ${MID}/DMP.NRLIB
	@ echo 1897-14 making ${OUT}/DMP.o from ${MID}/DMP.NRLIB
	@ cp ${MID}/DMP.NRLIB/code.o ${OUT}/DMP.o

@
<<DMP.NRLIB (NRLIB from MID)>>=
${MID}/DMP.NRLIB: ${MID}/DMP.spad
	@ echo 1898 making ${MID}/DMP.NRLIB from ${MID}/DMP.spad
	@ (cd ${MID} ; 	echo ')co DMP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DMP.spad (SPAD from IN)>>=
${MID}/DMP.spad: ${IN}/gdpoly.spad.pamphlet
	@ echo 1899 making ${MID}/DMP.spad from ${IN}/gdpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DMP.NRLIB ; \
	${TANGLE} -R"domain DMP DistributedMultivariatePolynomial" ${IN}/gdpoly.spad.pamphlet >DMP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GDMP.o (O from NRLIB)>>=
${OUT}/GDMP.o: ${MID}/GDMP.NRLIB
	@ echo 1900-19 making ${OUT}/GDMP.o from ${MID}/GDMP.NRLIB
	@ cp ${MID}/GDMP.NRLIB/code.o ${OUT}/GDMP.o

@
<<GDMP.NRLIB (NRLIB from MID)>>=
${MID}/GDMP.NRLIB: ${MID}/GDMP.spad
	@ echo 1901 making ${MID}/GDMP.NRLIB from ${MID}/GDMP.spad
	@ (cd ${MID} ; 	echo ')co GDMP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GDMP.spad (SPAD from IN)>>=
${MID}/GDMP.spad: ${IN}/gdpoly.spad.pamphlet
	@ echo 1902 making ${MID}/GDMP.spad from ${IN}/gdpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GDMP.NRLIB ; \
	${TANGLE} -R"domain GDMP GeneralDistributedMultivariatePolynomial" ${IN}/gdpoly.spad.pamphlet >GDMP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<HDMP.o (O from NRLIB)>>=
${OUT}/HDMP.o: ${MID}/HDMP.NRLIB
	@ echo 1903-14 making ${OUT}/HDMP.o from ${MID}/HDMP.NRLIB
	@ cp ${MID}/HDMP.NRLIB/code.o ${OUT}/HDMP.o

@
<<HDMP.NRLIB (NRLIB from MID)>>=
${MID}/HDMP.NRLIB: ${MID}/HDMP.spad
	@ echo 1904 making ${MID}/HDMP.NRLIB from ${MID}/HDMP.spad
	@ (cd ${MID} ; 	echo ')co HDMP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<HDMP.spad (SPAD from IN)>>=
${MID}/HDMP.spad: ${IN}/gdpoly.spad.pamphlet
	@ echo 1905 making ${MID}/HDMP.spad from ${IN}/gdpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf HDMP.NRLIB ; \
	${TANGLE} -R"domain HDMP HomogeneousDistributedMultivariatePolynomial" ${IN}/gdpoly.spad.pamphlet >HDMP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<gdpoly.spad.dvi (DOC from IN)>>=
${DOC}/gdpoly.spad.dvi: ${IN}/gdpoly.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1906 making ${DOC}/gdpoly.spad.dvi from ${IN}/gdpoly.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/gdpoly.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} gdpoly.spad ; \
	rm -f ${DOC}/gdpoly.spad.pamphlet ; \
	rm -f ${DOC}/gdpoly.spad.tex ; \
	rm -f ${DOC}/gdpoly.spad )

@
\subsection{geneez.spad \cite{1}}
<<geneez.spad (SPAD from IN)>>=
${OUTSRC}/geneez.spad: ${IN}/geneez.spad.pamphlet
	@ echo 1907 making ${OUTSRC}/geneez.spad from ${IN}/geneez.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/geneez.spad.pamphlet >geneez.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GENEEZ.o (O from NRLIB)>>=
${OUT}/GENEEZ.o: ${MID}/GENEEZ.NRLIB
	@ echo 1908-14 making ${OUT}/GENEEZ.o from ${MID}/GENEEZ.NRLIB
	@ cp ${MID}/GENEEZ.NRLIB/code.o ${OUT}/GENEEZ.o

@
<<GENEEZ.NRLIB (NRLIB from MID)>>=
${MID}/GENEEZ.NRLIB: ${MID}/GENEEZ.spad
	@ echo 1909 making ${MID}/GENEEZ.NRLIB from ${MID}/GENEEZ.spad
	@ (cd ${MID} ; 	echo ')co GENEEZ.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GENEEZ.spad (SPAD from IN)>>=
${MID}/GENEEZ.spad: ${IN}/geneez.spad.pamphlet
	@ echo 1910 making ${MID}/GENEEZ.spad from ${IN}/geneez.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GENEEZ.NRLIB ; \
	${TANGLE} -R"package GENEEZ GenExEuclid" ${IN}/geneez.spad.pamphlet >GENEEZ.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<geneez.spad.dvi (DOC from IN)>>=
${DOC}/geneez.spad.dvi: ${IN}/geneez.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1911 making ${DOC}/geneez.spad.dvi from ${IN}/geneez.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/geneez.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} geneez.spad ; \
	rm -f ${DOC}/geneez.spad.pamphlet ; \
	rm -f ${DOC}/geneez.spad.tex ; \
	rm -f ${DOC}/geneez.spad )

@
\subsection{generic.spad \cite{1}}
<<generic.spad (SPAD from IN)>>=
${OUTSRC}/generic.spad: ${IN}/generic.spad.pamphlet
	@ echo 1912 making ${OUTSRC}/generic.spad from ${IN}/generic.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/generic.spad.pamphlet >generic.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CVMP.o (O from NRLIB)>>=
${OUT}/CVMP.o: ${MID}/CVMP.NRLIB
	@ echo 1913-14 making ${OUT}/CVMP.o from ${MID}/CVMP.NRLIB
	@ cp ${MID}/CVMP.NRLIB/code.o ${OUT}/CVMP.o

@
<<CVMP.NRLIB (NRLIB from MID)>>=
${MID}/CVMP.NRLIB: ${MID}/CVMP.spad
	@ echo 1914 making ${MID}/CVMP.NRLIB from ${MID}/CVMP.spad
	@ (cd ${MID} ; 	echo ')co CVMP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CVMP.spad (SPAD from IN)>>=
${MID}/CVMP.spad: ${IN}/generic.spad.pamphlet
	@ echo 1915 making ${MID}/CVMP.spad from ${IN}/generic.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CVMP.NRLIB ; \
	${TANGLE} -R"package CVMP CoerceVectorMatrixPackage" ${IN}/generic.spad.pamphlet >CVMP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GCNAALG.o (O from NRLIB)>>=
${OUT}/GCNAALG.o: ${MID}/GCNAALG.NRLIB
	@ echo 1916-20 making ${OUT}/GCNAALG.o from ${MID}/GCNAALG.NRLIB
	@ cp ${MID}/GCNAALG.NRLIB/code.o ${OUT}/GCNAALG.o

@
<<GCNAALG.NRLIB (NRLIB from MID)>>=
${MID}/GCNAALG.NRLIB: ${MID}/GCNAALG.spad
	@ echo 1917 making ${MID}/GCNAALG.NRLIB from ${MID}/GCNAALG.spad
	@ (cd ${MID} ; 	echo ')co GCNAALG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GCNAALG.spad (SPAD from IN)>>=
${MID}/GCNAALG.spad: ${IN}/generic.spad.pamphlet
	@ echo 1918 making ${MID}/GCNAALG.spad from ${IN}/generic.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GCNAALG.NRLIB ; \
	${TANGLE} -R"domain GCNAALG GenericNonAssociativeAlgebra" ${IN}/generic.spad.pamphlet >GCNAALG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<generic.spad.dvi (DOC from IN)>>=
${DOC}/generic.spad.dvi: ${IN}/generic.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1919 making ${DOC}/generic.spad.dvi from ${IN}/generic.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/generic.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} generic.spad ; \
	rm -f ${DOC}/generic.spad.pamphlet ; \
	rm -f ${DOC}/generic.spad.tex ; \
	rm -f ${DOC}/generic.spad )

@
\subsection{genufact.spad \cite{1}}
<<genufact.spad (SPAD from IN)>>=
${OUTSRC}/genufact.spad: ${IN}/genufact.spad.pamphlet
	@ echo 1920 making ${OUTSRC}/genufact.spad from ${IN}/genufact.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/genufact.spad.pamphlet >genufact.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GENUFACT.o (O from NRLIB)>>=
${OUT}/GENUFACT.o: ${MID}/GENUFACT.NRLIB
	@ echo 1921-20 making ${OUT}/GENUFACT.o from ${MID}/GENUFACT.NRLIB
	@ cp ${MID}/GENUFACT.NRLIB/code.o ${OUT}/GENUFACT.o

@
<<GENUFACT.NRLIB (NRLIB from MID)>>=
${MID}/GENUFACT.NRLIB: ${MID}/GENUFACT.spad
	@ echo 1922 making ${MID}/GENUFACT.NRLIB from ${MID}/GENUFACT.spad
	@ (cd ${MID} ; 	echo ')co GENUFACT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GENUFACT.spad (SPAD from IN)>>=
${MID}/GENUFACT.spad: ${IN}/genufact.spad.pamphlet
	@ echo 1923 making ${MID}/GENUFACT.spad from ${IN}/genufact.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GENUFACT.NRLIB ; \
	${TANGLE} -R"package GENUFACT GenUFactorize" ${IN}/genufact.spad.pamphlet >GENUFACT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<genufact.spad.dvi (DOC from IN)>>=
${DOC}/genufact.spad.dvi: ${IN}/genufact.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1924 making ${DOC}/genufact.spad.dvi from ${IN}/genufact.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/genufact.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} genufact.spad ; \
	rm -f ${DOC}/genufact.spad.pamphlet ; \
	rm -f ${DOC}/genufact.spad.tex ; \
	rm -f ${DOC}/genufact.spad )

@
\subsection{genups.spad \cite{1}}
<<genups.spad (SPAD from IN)>>=
${OUTSRC}/genups.spad: ${IN}/genups.spad.pamphlet
	@ echo 1925 making ${OUTSRC}/genups.spad from ${IN}/genups.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/genups.spad.pamphlet >genups.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GENUPS.o (O from NRLIB)>>=
${OUT}/GENUPS.o: ${MID}/GENUPS.NRLIB
	@ echo 1926-20 making ${OUT}/GENUPS.o from ${MID}/GENUPS.NRLIB
	@ cp ${MID}/GENUPS.NRLIB/code.o ${OUT}/GENUPS.o

@
<<GENUPS.NRLIB (NRLIB from MID)>>=
${MID}/GENUPS.NRLIB: ${MID}/GENUPS.spad
	@ echo 1927 making ${MID}/GENUPS.NRLIB from ${MID}/GENUPS.spad
	@ (cd ${MID} ; 	echo ')co GENUPS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GENUPS.spad (SPAD from IN)>>=
${MID}/GENUPS.spad: ${IN}/genups.spad.pamphlet
	@ echo 1928 making ${MID}/GENUPS.spad from ${IN}/genups.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GENUPS.NRLIB ; \
	${TANGLE} -R"package GENUPS GenerateUnivariatePowerSeries" ${IN}/genups.spad.pamphlet >GENUPS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<genups.spad.dvi (DOC from IN)>>=
${DOC}/genups.spad.dvi: ${IN}/genups.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1929 making ${DOC}/genups.spad.dvi from ${IN}/genups.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/genups.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} genups.spad ; \
	rm -f ${DOC}/genups.spad.pamphlet ; \
	rm -f ${DOC}/genups.spad.tex ; \
	rm -f ${DOC}/genups.spad )

@
\subsection{ghensel.spad \cite{1}}
<<ghensel.spad (SPAD from IN)>>=
${OUTSRC}/ghensel.spad: ${IN}/ghensel.spad.pamphlet
	@ echo 1930 making ${OUTSRC}/ghensel.spad from ${IN}/ghensel.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/ghensel.spad.pamphlet >ghensel.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GHENSEL.o (O from NRLIB)>>=
${OUT}/GHENSEL.o: ${MID}/GHENSEL.NRLIB
	@ echo 1931-14 making ${OUT}/GHENSEL.o from ${MID}/GHENSEL.NRLIB
	@ cp ${MID}/GHENSEL.NRLIB/code.o ${OUT}/GHENSEL.o

@
<<GHENSEL.NRLIB (NRLIB from MID)>>=
${MID}/GHENSEL.NRLIB: ${MID}/GHENSEL.spad
	@ echo 1932 making ${MID}/GHENSEL.NRLIB from ${MID}/GHENSEL.spad
	@ (cd ${MID} ; 	echo ')co GHENSEL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GHENSEL.spad (SPAD from IN)>>=
${MID}/GHENSEL.spad: ${IN}/ghensel.spad.pamphlet
	@ echo 1933 making ${MID}/GHENSEL.spad from ${IN}/ghensel.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GHENSEL.NRLIB ; \
	${TANGLE} -R"package GHENSEL GeneralHenselPackage" ${IN}/ghensel.spad.pamphlet >GHENSEL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ghensel.spad.dvi (DOC from IN)>>=
${DOC}/ghensel.spad.dvi: ${IN}/ghensel.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1934 making ${DOC}/ghensel.spad.dvi from ${IN}/ghensel.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/ghensel.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} ghensel.spad ; \
	rm -f ${DOC}/ghensel.spad.pamphlet ; \
	rm -f ${DOC}/ghensel.spad.tex ; \
	rm -f ${DOC}/ghensel.spad )

@
\subsection{gpgcd.spad \cite{1}}
<<gpgcd.spad (SPAD from IN)>>=
${OUTSRC}/gpgcd.spad: ${IN}/gpgcd.spad.pamphlet
	@ echo 1935 making ${OUTSRC}/gpgcd.spad from ${IN}/gpgcd.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/gpgcd.spad.pamphlet >gpgcd.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GENPGCD.o (O from NRLIB)>>=
${OUT}/GENPGCD.o: ${MID}/GENPGCD.NRLIB
	@ echo 1936-14 making ${OUT}/GENPGCD.o from ${MID}/GENPGCD.NRLIB
	@ cp ${MID}/GENPGCD.NRLIB/code.o ${OUT}/GENPGCD.o

@
<<GENPGCD.NRLIB (NRLIB from MID)>>=
${MID}/GENPGCD.NRLIB: ${MID}/GENPGCD.spad
	@ echo 1937 making ${MID}/GENPGCD.NRLIB from ${MID}/GENPGCD.spad
	@ (cd ${MID} ; 	echo ')co GENPGCD.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GENPGCD.spad (SPAD from IN)>>=
${MID}/GENPGCD.spad: ${IN}/gpgcd.spad.pamphlet
	@ echo 1938 making ${MID}/GENPGCD.spad from ${IN}/gpgcd.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GENPGCD.NRLIB ; \
	${TANGLE} -R"package GENPGCD GeneralPolynomialGcdPackage" ${IN}/gpgcd.spad.pamphlet >GENPGCD.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<gpgcd.spad.dvi (DOC from IN)>>=
${DOC}/gpgcd.spad.dvi: ${IN}/gpgcd.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1939 making ${DOC}/gpgcd.spad.dvi from ${IN}/gpgcd.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/gpgcd.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} gpgcd.spad ; \
	rm -f ${DOC}/gpgcd.spad.pamphlet ; \
	rm -f ${DOC}/gpgcd.spad.tex ; \
	rm -f ${DOC}/gpgcd.spad )

@
\subsection{gpol.spad \cite{1}}
<<gpol.spad (SPAD from IN)>>=
${OUTSRC}/gpol.spad: ${IN}/gpol.spad.pamphlet
	@ echo 1940 making ${OUTSRC}/gpol.spad from ${IN}/gpol.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/gpol.spad.pamphlet >gpol.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LAUPOL.o (O from NRLIB)>>=
${OUT}/LAUPOL.o: ${MID}/LAUPOL.NRLIB
	@ echo 1941-14 making ${OUT}/LAUPOL.o from ${MID}/LAUPOL.NRLIB
	@ cp ${MID}/LAUPOL.NRLIB/code.o ${OUT}/LAUPOL.o

@
<<LAUPOL.NRLIB (NRLIB from MID)>>=
${MID}/LAUPOL.NRLIB: ${MID}/LAUPOL.spad
	@ echo 1942 making ${MID}/LAUPOL.NRLIB from ${MID}/LAUPOL.spad
	@ (cd ${MID} ; 	echo ')co LAUPOL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LAUPOL.spad (SPAD from IN)>>=
${MID}/LAUPOL.spad: ${IN}/gpol.spad.pamphlet
	@ echo 1943 making ${MID}/LAUPOL.spad from ${IN}/gpol.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LAUPOL.NRLIB ; \
	${TANGLE} -R"domain LAUPOL LaurentPolynomial" ${IN}/gpol.spad.pamphlet >LAUPOL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<gpol.spad.dvi (DOC from IN)>>=
${DOC}/gpol.spad.dvi: ${IN}/gpol.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1944 making ${DOC}/gpol.spad.dvi from ${IN}/gpol.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/gpol.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} gpol.spad ; \
	rm -f ${DOC}/gpol.spad.pamphlet ; \
	rm -f ${DOC}/gpol.spad.tex ; \
	rm -f ${DOC}/gpol.spad )

@
\subsection{grdef.spad \cite{1}}
<<grdef.spad (SPAD from IN)>>=
${OUTSRC}/grdef.spad: ${IN}/grdef.spad.pamphlet
	@ echo 1945 making ${OUTSRC}/grdef.spad from ${IN}/grdef.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/grdef.spad.pamphlet >grdef.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GRDEF.o (O from NRLIB)>>=
${OUT}/GRDEF.o: ${MID}/GRDEF.NRLIB
	@ echo 1946-3 making ${OUT}/GRDEF.o from ${MID}/GRDEF.NRLIB
	@ cp ${MID}/GRDEF.NRLIB/code.o ${OUT}/GRDEF.o

@
<<GRDEF.NRLIB (NRLIB from MID)>>=
${MID}/GRDEF.NRLIB: ${MID}/GRDEF.spad
	@ echo 1947 making ${MID}/GRDEF.NRLIB from ${MID}/GRDEF.spad
	@ (cd ${MID} ; 	echo ')co GRDEF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GRDEF.spad (SPAD from IN)>>=
${MID}/GRDEF.spad: ${IN}/grdef.spad.pamphlet
	@ echo 1948 making ${MID}/GRDEF.spad from ${IN}/grdef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GRDEF.NRLIB ; \
	${TANGLE} -R"package GRDEF GraphicsDefaults" ${IN}/grdef.spad.pamphlet >GRDEF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<grdef.spad.dvi (DOC from IN)>>=
${DOC}/grdef.spad.dvi: ${IN}/grdef.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1949 making ${DOC}/grdef.spad.dvi from ${IN}/grdef.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/grdef.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} grdef.spad ; \
	rm -f ${DOC}/grdef.spad.pamphlet ; \
	rm -f ${DOC}/grdef.spad.tex ; \
	rm -f ${DOC}/grdef.spad )

@
\subsection{groebf.spad \cite{1}}
<<groebf.spad (SPAD from IN)>>=
${OUTSRC}/groebf.spad: ${IN}/groebf.spad.pamphlet
	@ echo 1950 making ${OUTSRC}/groebf.spad from ${IN}/groebf.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/groebf.spad.pamphlet >groebf.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GBF.o (O from NRLIB)>>=
${OUT}/GBF.o: ${MID}/GBF.NRLIB
	@ echo 1951-14 making ${OUT}/GBF.o from ${MID}/GBF.NRLIB
	@ cp ${MID}/GBF.NRLIB/code.o ${OUT}/GBF.o

@
<<GBF.NRLIB (NRLIB from MID)>>=
${MID}/GBF.NRLIB: ${MID}/GBF.spad
	@ echo 1952 making ${MID}/GBF.NRLIB from ${MID}/GBF.spad
	@ (cd ${MID} ; 	echo ')co GBF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GBF.spad (SPAD from IN)>>=
${MID}/GBF.spad: ${IN}/groebf.spad.pamphlet
	@ echo 1953 making ${MID}/GBF.spad from ${IN}/groebf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GBF.NRLIB ; \
	${TANGLE} -R"package GBF GroebnerFactorizationPackage" ${IN}/groebf.spad.pamphlet >GBF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<groebf.spad.dvi (DOC from IN)>>=
${DOC}/groebf.spad.dvi: ${IN}/groebf.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1954 making ${DOC}/groebf.spad.dvi from ${IN}/groebf.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/groebf.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} groebf.spad ; \
	rm -f ${DOC}/groebf.spad.pamphlet ; \
	rm -f ${DOC}/groebf.spad.tex ; \
	rm -f ${DOC}/groebf.spad )

@
\subsection{groebsol.spad \cite{1}}
<<groebsol.spad (SPAD from IN)>>=
${OUTSRC}/groebsol.spad: ${IN}/groebsol.spad.pamphlet
	@ echo 1955 making ${OUTSRC}/groebsol.spad from ${IN}/groebsol.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/groebsol.spad.pamphlet >groebsol.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GROEBSOL.o (O from NRLIB)>>=
${OUT}/GROEBSOL.o: ${MID}/GROEBSOL.NRLIB
	@ echo 1956-14 making ${OUT}/GROEBSOL.o from ${MID}/GROEBSOL.NRLIB
	@ cp ${MID}/GROEBSOL.NRLIB/code.o ${OUT}/GROEBSOL.o

@
<<GROEBSOL.NRLIB (NRLIB from MID)>>=
${MID}/GROEBSOL.NRLIB: ${MID}/GROEBSOL.spad
	@ echo 1957 making ${MID}/GROEBSOL.NRLIB from ${MID}/GROEBSOL.spad
	@ (cd ${MID} ; 	echo ')co GROEBSOL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GROEBSOL.spad (SPAD from IN)>>=
${MID}/GROEBSOL.spad: ${IN}/groebsol.spad.pamphlet
	@ echo 1958 making ${MID}/GROEBSOL.spad from ${IN}/groebsol.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GROEBSOL.NRLIB ; \
	${TANGLE} -R"package GROEBSOL GroebnerSolve" ${IN}/groebsol.spad.pamphlet >GROEBSOL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<groebsol.spad.dvi (DOC from IN)>>=
${DOC}/groebsol.spad.dvi: ${IN}/groebsol.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1959 making ${DOC}/groebsol.spad.dvi from ${IN}/groebsol.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/groebsol.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} groebsol.spad ; \
	rm -f ${DOC}/groebsol.spad.pamphlet ; \
	rm -f ${DOC}/groebsol.spad.tex ; \
	rm -f ${DOC}/groebsol.spad )

@
\subsection{gseries.spad \cite{1}}
<<gseries.spad (SPAD from IN)>>=
${OUTSRC}/gseries.spad: ${IN}/gseries.spad.pamphlet
	@ echo 1960 making ${OUTSRC}/gseries.spad from ${IN}/gseries.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/gseries.spad.pamphlet >gseries.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GSERIES.o (O from NRLIB)>>=
${OUT}/GSERIES.o: ${MID}/GSERIES.NRLIB
	@ echo 1961-21 making ${OUT}/GSERIES.o from ${MID}/GSERIES.NRLIB
	@ cp ${MID}/GSERIES.NRLIB/code.o ${OUT}/GSERIES.o

@
<<GSERIES.NRLIB (NRLIB from MID)>>=
${MID}/GSERIES.NRLIB: ${MID}/GSERIES.spad
	@ echo 1962 making ${MID}/GSERIES.NRLIB from ${MID}/GSERIES.spad
	@ (cd ${MID} ; 	echo ')co GSERIES.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GSERIES.spad (SPAD from IN)>>=
${MID}/GSERIES.spad: ${IN}/gseries.spad.pamphlet
	@ echo 1963 making ${MID}/GSERIES.spad from ${IN}/gseries.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GSERIES.NRLIB ; \
	${TANGLE} -R"domain GSERIES GeneralUnivariatePowerSeries" ${IN}/gseries.spad.pamphlet >GSERIES.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<gseries.spad.dvi (DOC from IN)>>=
${DOC}/gseries.spad.dvi: ${IN}/gseries.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1964 making ${DOC}/gseries.spad.dvi from ${IN}/gseries.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/gseries.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} gseries.spad ; \
	rm -f ${DOC}/gseries.spad.pamphlet ; \
	rm -f ${DOC}/gseries.spad.tex ; \
	rm -f ${DOC}/gseries.spad )

@
\subsection{herm.as \cite{1}}
<<herm.as (SPAD from IN)>>=
${OUTSRC}/herm.as: ${IN}/herm.as.pamphlet
	@ echo 1965 making ${OUTSRC}/herm.as from ${IN}/herm.as.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/herm.as.pamphlet >herm.as )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<herm.as.dvi (DOC from IN)>>=
${DOC}/herm.as.dvi: ${IN}/herm.as.pamphlet ${DOC}/axiom.sty
	@ echo 1966 making ${DOC}/herm.as.dvi from ${IN}/herm.as.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/herm.as.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} herm.as ; \
	rm -f ${DOC}/herm.as.pamphlet ; \
	rm -f ${DOC}/herm.as.tex ; \
	rm -f ${DOC}/herm.as )

@
\subsection{ideal.spad \cite{1}}
<<ideal.spad (SPAD from IN)>>=
${OUTSRC}/ideal.spad: ${IN}/ideal.spad.pamphlet
	@ echo 1967 making ${OUTSRC}/ideal.spad from ${IN}/ideal.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/ideal.spad.pamphlet >ideal.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IDEAL.o (O from NRLIB)>>=
${OUT}/IDEAL.o: ${MID}/IDEAL.NRLIB
	@ echo 1968-19 making ${OUT}/IDEAL.o from ${MID}/IDEAL.NRLIB
	@ cp ${MID}/IDEAL.NRLIB/code.o ${OUT}/IDEAL.o

@
<<IDEAL.NRLIB (NRLIB from MID)>>=
${MID}/IDEAL.NRLIB: ${MID}/IDEAL.spad
	@ echo 1969 making ${MID}/IDEAL.NRLIB from ${MID}/IDEAL.spad
	@ (cd ${MID} ; 	echo ')co IDEAL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IDEAL.spad (SPAD from IN)>>=
${MID}/IDEAL.spad: ${IN}/ideal.spad.pamphlet
	@ echo 1970 making ${MID}/IDEAL.spad from ${IN}/ideal.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IDEAL.NRLIB ; \
	${TANGLE} -R"domain IDEAL PolynomialIdeals" ${IN}/ideal.spad.pamphlet >IDEAL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ideal.spad.dvi (DOC from IN)>>=
${DOC}/ideal.spad.dvi: ${IN}/ideal.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1971 making ${DOC}/ideal.spad.dvi from ${IN}/ideal.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/ideal.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} ideal.spad ; \
	rm -f ${DOC}/ideal.spad.pamphlet ; \
	rm -f ${DOC}/ideal.spad.tex ; \
	rm -f ${DOC}/ideal.spad )

@
\subsection{idecomp.spad \cite{1}}
<<idecomp.spad (SPAD from IN)>>=
${OUTSRC}/idecomp.spad: ${IN}/idecomp.spad.pamphlet
	@ echo 1972 making ${OUTSRC}/idecomp.spad from ${IN}/idecomp.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/idecomp.spad.pamphlet >idecomp.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IDECOMP.o (O from NRLIB)>>=
${OUT}/IDECOMP.o: ${MID}/IDECOMP.NRLIB
	@ echo 1973-14 making ${OUT}/IDECOMP.o from ${MID}/IDECOMP.NRLIB
	@ cp ${MID}/IDECOMP.NRLIB/code.o ${OUT}/IDECOMP.o

@
<<IDECOMP.NRLIB (NRLIB from MID)>>=
${MID}/IDECOMP.NRLIB: ${MID}/IDECOMP.spad
	@ echo 1974 making ${MID}/IDECOMP.NRLIB from ${MID}/IDECOMP.spad
	@ (cd ${MID} ; 	echo ')co IDECOMP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IDECOMP.spad (SPAD from IN)>>=
${MID}/IDECOMP.spad: ${IN}/idecomp.spad.pamphlet
	@ echo 1975 making ${MID}/IDECOMP.spad from ${IN}/idecomp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IDECOMP.NRLIB ; \
	${TANGLE} -R"package IDECOMP IdealDecompositionPackage" ${IN}/idecomp.spad.pamphlet >IDECOMP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<idecomp.spad.dvi (DOC from IN)>>=
${DOC}/idecomp.spad.dvi: ${IN}/idecomp.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1976 making ${DOC}/idecomp.spad.dvi from ${IN}/idecomp.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/idecomp.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} idecomp.spad ; \
	rm -f ${DOC}/idecomp.spad.pamphlet ; \
	rm -f ${DOC}/idecomp.spad.tex ; \
	rm -f ${DOC}/idecomp.spad )

@
\subsection{indexedp.spad \cite{1}}
<<indexedp.spad (SPAD from IN)>>=
${OUTSRC}/indexedp.spad: ${IN}/indexedp.spad.pamphlet
	@ echo 1977 making ${OUTSRC}/indexedp.spad from ${IN}/indexedp.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/indexedp.spad.pamphlet >indexedp.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IDPAG.o (O from NRLIB)>>=
${OUT}/IDPAG.o: ${MID}/IDPAG.NRLIB
	@ echo 1978-9 making ${OUT}/IDPAG.o from ${MID}/IDPAG.NRLIB
	@ cp ${MID}/IDPAG.NRLIB/code.o ${OUT}/IDPAG.o

@
<<IDPAG.NRLIB (NRLIB from MID)>>=
${MID}/IDPAG.NRLIB: ${MID}/IDPAG.spad
	@ echo 1979 making ${MID}/IDPAG.NRLIB from ${MID}/IDPAG.spad
	@ (cd ${MID} ; 	echo ')co IDPAG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IDPAG.spad (SPAD from IN)>>=
${MID}/IDPAG.spad: ${IN}/indexedp.spad.pamphlet
	@ echo 1980 making ${MID}/IDPAG.spad from ${IN}/indexedp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IDPAG.NRLIB ; \
	${TANGLE} -R"domain IDPAG IndexedDirectProductAbelianGroup" ${IN}/indexedp.spad.pamphlet >IDPAG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IDPAM.o (O from NRLIB)>>=
${OUT}/IDPAM.o: ${MID}/IDPAM.NRLIB
	@ echo 1981-5 making ${OUT}/IDPAM.o from ${MID}/IDPAM.NRLIB
	@ cp ${MID}/IDPAM.NRLIB/code.o ${OUT}/IDPAM.o

@
<<IDPAM.NRLIB (NRLIB from MID)>>=
${MID}/IDPAM.NRLIB: ${MID}/IDPAM.spad
	@ echo 1982 making ${MID}/IDPAM.NRLIB from ${MID}/IDPAM.spad
	@ (cd ${MID} ; 	echo ')co IDPAM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IDPAM.spad (SPAD from IN)>>=
${MID}/IDPAM.spad: ${IN}/indexedp.spad.pamphlet
	@ echo 1983 making ${MID}/IDPAM.spad from ${IN}/indexedp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IDPAM.NRLIB ; \
	${TANGLE} -R"domain IDPAM IndexedDirectProductAbelianMonoid" ${IN}/indexedp.spad.pamphlet >IDPAM.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IDPC.o (O from NRLIB)>>=
${OUT}/IDPC.o: ${MID}/IDPC.NRLIB
	@ echo 1984-4 making ${OUT}/IDPC.o from ${MID}/IDPC.NRLIB
	@ cp ${MID}/IDPC.NRLIB/code.o ${OUT}/IDPC.o

@
<<IDPC.NRLIB (NRLIB from MID)>>=
${MID}/IDPC.NRLIB: ${MID}/IDPC.spad
	@ echo 1985 making ${MID}/IDPC.NRLIB from ${MID}/IDPC.spad
	@ (cd ${MID} ; 	echo ')co IDPC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IDPC.spad (SPAD from IN)>>=
${MID}/IDPC.spad: ${IN}/indexedp.spad.pamphlet
	@ echo 1986 making ${MID}/IDPC.spad from ${IN}/indexedp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IDPC.NRLIB ; \
	${TANGLE} -R"category IDPC IndexedDirectProductCategory" ${IN}/indexedp.spad.pamphlet >IDPC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IDPO.o (O from NRLIB)>>=
${OUT}/IDPO.o: ${MID}/IDPO.NRLIB
	@ echo 1987-5 making ${OUT}/IDPO.o from ${MID}/IDPO.NRLIB
	@ cp ${MID}/IDPO.NRLIB/code.o ${OUT}/IDPO.o

@
<<IDPO.NRLIB (NRLIB from MID)>>=
${MID}/IDPO.NRLIB: ${MID}/IDPO.spad
	@ echo 1988 making ${MID}/IDPO.NRLIB from ${MID}/IDPO.spad
	@ (cd ${MID} ; 	echo ')co IDPO.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IDPO.spad (SPAD from IN)>>=
${MID}/IDPO.spad: ${IN}/indexedp.spad.pamphlet
	@ echo 1989 making ${MID}/IDPO.spad from ${IN}/indexedp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IDPO.NRLIB ; \
	${TANGLE} -R"domain IDPO IndexedDirectProductObject" ${IN}/indexedp.spad.pamphlet >IDPO.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IDPOAM.o (O from NRLIB)>>=
${OUT}/IDPOAM.o: ${MID}/IDPOAM.NRLIB
	@ echo 1990-7 making ${OUT}/IDPOAM.o from ${MID}/IDPOAM.NRLIB
	@ cp ${MID}/IDPOAM.NRLIB/code.o ${OUT}/IDPOAM.o

@
<<IDPOAM.NRLIB (NRLIB from MID)>>=
${MID}/IDPOAM.NRLIB: ${MID}/IDPOAM.spad
	@ echo 1991 making ${MID}/IDPOAM.NRLIB from ${MID}/IDPOAM.spad
	@ (cd ${MID} ; 	echo ')co IDPOAM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IDPOAM.spad (SPAD from IN)>>=
${MID}/IDPOAM.spad: ${IN}/indexedp.spad.pamphlet
	@ echo 1992 making ${MID}/IDPOAM.spad from ${IN}/indexedp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IDPOAM.NRLIB ; \
	${TANGLE} -R"domain IDPOAM IndexedDirectProductOrderedAbelianMonoid" ${IN}/indexedp.spad.pamphlet >IDPOAM.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IDPOAMS.o (O from NRLIB)>>=
${OUT}/IDPOAMS.o: ${MID}/IDPOAMS.NRLIB
	@ echo 1993-9 making ${OUT}/IDPOAMS.o from ${MID}/IDPOAMS.NRLIB
	@ cp ${MID}/IDPOAMS.NRLIB/code.o ${OUT}/IDPOAMS.o

@
<<IDPOAMS.NRLIB (NRLIB from MID)>>=
${MID}/IDPOAMS.NRLIB: ${MID}/IDPOAMS.spad
	@ echo 1994 making ${MID}/IDPOAMS.NRLIB from ${MID}/IDPOAMS.spad
	@ (cd ${MID} ; 	echo ')co IDPOAMS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IDPOAMS.spad (SPAD from IN)>>=
${MID}/IDPOAMS.spad: ${IN}/indexedp.spad.pamphlet
	@ echo 1995 making ${MID}/IDPOAMS.spad from ${IN}/indexedp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IDPOAMS.NRLIB ; \
	${TANGLE} -R"domain IDPOAMS IndexedDirectProductOrderedAbelianMonoidSup" ${IN}/indexedp.spad.pamphlet >IDPOAMS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<indexedp.spad.dvi (DOC from IN)>>=
${DOC}/indexedp.spad.dvi: ${IN}/indexedp.spad.pamphlet ${DOC}/axiom.sty
	@ echo 1996 making ${DOC}/indexedp.spad.dvi from ${IN}/indexedp.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/indexedp.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} indexedp.spad ; \
	rm -f ${DOC}/indexedp.spad.pamphlet ; \
	rm -f ${DOC}/indexedp.spad.tex ; \
	rm -f ${DOC}/indexedp.spad )

@
\subsection{infprod.spad \cite{1}}
<<infprod.spad (SPAD from IN)>>=
${OUTSRC}/infprod.spad: ${IN}/infprod.spad.pamphlet
	@ echo 1997 making ${OUTSRC}/infprod.spad from ${IN}/infprod.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/infprod.spad.pamphlet >infprod.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INFPROD0.o (O from NRLIB)>>=
${OUT}/INFPROD0.o: ${MID}/INFPROD0.NRLIB
	@ echo 1998-20 making ${OUT}/INFPROD0.o from ${MID}/INFPROD0.NRLIB
	@ cp ${MID}/INFPROD0.NRLIB/code.o ${OUT}/INFPROD0.o

@
<<INFPROD0.NRLIB (NRLIB from MID)>>=
${MID}/INFPROD0.NRLIB: ${MID}/INFPROD0.spad
	@ echo 1999 making ${MID}/INFPROD0.NRLIB from ${MID}/INFPROD0.spad
	@ (cd ${MID} ; 	echo ')co INFPROD0.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INFPROD0.spad (SPAD from IN)>>=
${MID}/INFPROD0.spad: ${IN}/infprod.spad.pamphlet
	@ echo 2000 making ${MID}/INFPROD0.spad from ${IN}/infprod.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INFPROD0.NRLIB ; \
	${TANGLE} -R"package INFPROD0 InfiniteProductCharacteristicZero" ${IN}/infprod.spad.pamphlet >INFPROD0.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INPRODFF.o (O from NRLIB)>>=
${OUT}/INPRODFF.o: ${MID}/INPRODFF.NRLIB
	@ echo 2001-20 making ${OUT}/INPRODFF.o from ${MID}/INPRODFF.NRLIB
	@ cp ${MID}/INPRODFF.NRLIB/code.o ${OUT}/INPRODFF.o

@
<<INPRODFF.NRLIB (NRLIB from MID)>>=
${MID}/INPRODFF.NRLIB: ${MID}/INPRODFF.spad
	@ echo 2002 making ${MID}/INPRODFF.NRLIB from ${MID}/INPRODFF.spad
	@ (cd ${MID} ; 	echo ')co INPRODFF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INPRODFF.spad (SPAD from IN)>>=
${MID}/INPRODFF.spad: ${IN}/infprod.spad.pamphlet
	@ echo 2003 making ${MID}/INPRODFF.spad from ${IN}/infprod.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INPRODFF.NRLIB ; \
	${TANGLE} -R"package INPRODFF InfiniteProductFiniteField" ${IN}/infprod.spad.pamphlet >INPRODFF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INPRODPF.o (O from NRLIB)>>=
${OUT}/INPRODPF.o: ${MID}/INPRODPF.NRLIB
	@ echo 2004-20 making ${OUT}/INPRODPF.o from ${MID}/INPRODPF.NRLIB
	@ cp ${MID}/INPRODPF.NRLIB/code.o ${OUT}/INPRODPF.o

@
<<INPRODPF.NRLIB (NRLIB from MID)>>=
${MID}/INPRODPF.NRLIB: ${MID}/INPRODPF.spad
	@ echo 2005 making ${MID}/INPRODPF.NRLIB from ${MID}/INPRODPF.spad
	@ (cd ${MID} ; 	echo ')co INPRODPF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INPRODPF.spad (SPAD from IN)>>=
${MID}/INPRODPF.spad: ${IN}/infprod.spad.pamphlet
	@ echo 2006 making ${MID}/INPRODPF.spad from ${IN}/infprod.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INPRODPF.NRLIB ; \
	${TANGLE} -R"package INPRODPF InfiniteProductPrimeField" ${IN}/infprod.spad.pamphlet >INPRODPF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STINPROD.o (O from NRLIB)>>=
${OUT}/STINPROD.o: ${MID}/STINPROD.NRLIB
	@ echo 2007-14 making ${OUT}/STINPROD.o from ${MID}/STINPROD.NRLIB
	@ cp ${MID}/STINPROD.NRLIB/code.o ${OUT}/STINPROD.o

@
<<STINPROD.NRLIB (NRLIB from MID)>>=
${MID}/STINPROD.NRLIB: ${MID}/STINPROD.spad
	@ echo 2008 making ${MID}/STINPROD.NRLIB from ${MID}/STINPROD.spad
	@ (cd ${MID} ; 	echo ')co STINPROD.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STINPROD.spad (SPAD from IN)>>=
${MID}/STINPROD.spad: ${IN}/infprod.spad.pamphlet
	@ echo 2009 making ${MID}/STINPROD.spad from ${IN}/infprod.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf STINPROD.NRLIB ; \
	${TANGLE} -R"package STINPROD StreamInfiniteProduct" ${IN}/infprod.spad.pamphlet >STINPROD.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<infprod.spad.dvi (DOC from IN)>>=
${DOC}/infprod.spad.dvi: ${IN}/infprod.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2010 making ${DOC}/infprod.spad.dvi from ${IN}/infprod.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/infprod.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} infprod.spad ; \
	rm -f ${DOC}/infprod.spad.pamphlet ; \
	rm -f ${DOC}/infprod.spad.tex ; \
	rm -f ${DOC}/infprod.spad )

@
\subsection{intaf.spad \cite{1}}
<<intaf.spad (SPAD from IN)>>=
${OUTSRC}/intaf.spad: ${IN}/intaf.spad.pamphlet
	@ echo 2011 making ${OUTSRC}/intaf.spad from ${IN}/intaf.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/intaf.spad.pamphlet >intaf.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTAF.o (O from NRLIB)>>=
${OUT}/INTAF.o: ${MID}/INTAF.NRLIB
	@ echo 2012-20 making ${OUT}/INTAF.o from ${MID}/INTAF.NRLIB
	@ cp ${MID}/INTAF.NRLIB/code.o ${OUT}/INTAF.o

@
<<INTAF.NRLIB (NRLIB from MID)>>=
${MID}/INTAF.NRLIB: ${MID}/INTAF.spad
	@ echo 2013 making ${MID}/INTAF.NRLIB from ${MID}/INTAF.spad
	@ (cd ${MID} ; 	echo ')co INTAF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTAF.spad (SPAD from IN)>>=
${MID}/INTAF.spad: ${IN}/intaf.spad.pamphlet
	@ echo 2014 making ${MID}/INTAF.spad from ${IN}/intaf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INTAF.NRLIB ; \
	${TANGLE} -R"package INTAF AlgebraicIntegration" ${IN}/intaf.spad.pamphlet >INTAF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTG0.o (O from NRLIB)>>=
${OUT}/INTG0.o: ${MID}/INTG0.NRLIB
	@ echo 2015-20 making ${OUT}/INTG0.o from ${MID}/INTG0.NRLIB
	@ cp ${MID}/INTG0.NRLIB/code.o ${OUT}/INTG0.o

@
<<INTG0.NRLIB (NRLIB from MID)>>=
${MID}/INTG0.NRLIB: ${MID}/INTG0.spad
	@ echo 2016 making ${MID}/INTG0.NRLIB from ${MID}/INTG0.spad
	@ (cd ${MID} ; 	echo ')co INTG0.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTG0.spad (SPAD from IN)>>=
${MID}/INTG0.spad: ${IN}/intaf.spad.pamphlet
	@ echo 2017 making ${MID}/INTG0.spad from ${IN}/intaf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INTG0.NRLIB ; \
	${TANGLE} -R"package INTG0 GenusZeroIntegration" ${IN}/intaf.spad.pamphlet >INTG0.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTPAF.o (O from NRLIB)>>=
${OUT}/INTPAF.o: ${MID}/INTPAF.NRLIB
	@ echo 2018-20 making ${OUT}/INTPAF.o from ${MID}/INTPAF.NRLIB
	@ cp ${MID}/INTPAF.NRLIB/code.o ${OUT}/INTPAF.o

@
<<INTPAF.NRLIB (NRLIB from MID)>>=
${MID}/INTPAF.NRLIB: ${MID}/INTPAF.spad
	@ echo 2019 making ${MID}/INTPAF.NRLIB from ${MID}/INTPAF.spad
	@ (cd ${MID} ; 	echo ')co INTPAF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTPAF.spad (SPAD from IN)>>=
${MID}/INTPAF.spad: ${IN}/intaf.spad.pamphlet
	@ echo 2020 making ${MID}/INTPAF.spad from ${IN}/intaf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INTPAF.NRLIB ; \
	${TANGLE} -R"package INTPAF PureAlgebraicIntegration" ${IN}/intaf.spad.pamphlet >INTPAF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<intaf.spad.dvi (DOC from IN)>>=
${DOC}/intaf.spad.dvi: ${IN}/intaf.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2021 making ${DOC}/intaf.spad.dvi from ${IN}/intaf.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/intaf.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} intaf.spad ; \
	rm -f ${DOC}/intaf.spad.pamphlet ; \
	rm -f ${DOC}/intaf.spad.tex ; \
	rm -f ${DOC}/intaf.spad )

@
\subsection{intalg.spad \cite{1}}
<<intalg.spad (SPAD from IN)>>=
${OUTSRC}/intalg.spad: ${IN}/intalg.spad.pamphlet
	@ echo 2022 making ${OUTSRC}/intalg.spad from ${IN}/intalg.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/intalg.spad.pamphlet >intalg.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DBLRESP.o (O from NRLIB)>>=
${OUT}/DBLRESP.o: ${MID}/DBLRESP.NRLIB
	@ echo 2023-20 making ${OUT}/DBLRESP.o from ${MID}/DBLRESP.NRLIB
	@ cp ${MID}/DBLRESP.NRLIB/code.o ${OUT}/DBLRESP.o

@
<<DBLRESP.NRLIB (NRLIB from MID)>>=
${MID}/DBLRESP.NRLIB: ${MID}/DBLRESP.spad
	@ echo 2024 making ${MID}/DBLRESP.NRLIB from ${MID}/DBLRESP.spad
	@ (cd ${MID} ; 	echo ')co DBLRESP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DBLRESP.spad (SPAD from IN)>>=
${MID}/DBLRESP.spad: ${IN}/intalg.spad.pamphlet
	@ echo 2025 making ${MID}/DBLRESP.spad from ${IN}/intalg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DBLRESP.NRLIB ; \
	${TANGLE} -R"package DBLRESP DoubleResultantPackage" ${IN}/intalg.spad.pamphlet >DBLRESP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTALG.o (O from NRLIB)>>=
${OUT}/INTALG.o: ${MID}/INTALG.NRLIB
	@ echo 2026-20 making ${OUT}/INTALG.o from ${MID}/INTALG.NRLIB
	@ cp ${MID}/INTALG.NRLIB/code.o ${OUT}/INTALG.o

@
<<INTALG.NRLIB (NRLIB from MID)>>=
${MID}/INTALG.NRLIB: ${MID}/INTALG.spad
	@ echo 2027 making ${MID}/INTALG.NRLIB from ${MID}/INTALG.spad
	@ (cd ${MID} ; 	echo ')co INTALG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTALG.spad (SPAD from IN)>>=
${MID}/INTALG.spad: ${IN}/intalg.spad.pamphlet
	@ echo 2028 making ${MID}/INTALG.spad from ${IN}/intalg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INTALG.NRLIB ; \
	${TANGLE} -R"package INTALG AlgebraicIntegrate" ${IN}/intalg.spad.pamphlet >INTALG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTHERAL.o (O from NRLIB)>>=
${OUT}/INTHERAL.o: ${MID}/INTHERAL.NRLIB
	@ echo 2029-20 making ${OUT}/INTHERAL.o from ${MID}/INTHERAL.NRLIB
	@ cp ${MID}/INTHERAL.NRLIB/code.o ${OUT}/INTHERAL.o

@
<<INTHERAL.NRLIB (NRLIB from MID)>>=
${MID}/INTHERAL.NRLIB: ${MID}/INTHERAL.spad
	@ echo 2030 making ${MID}/INTHERAL.NRLIB from ${MID}/INTHERAL.spad
	@ (cd ${MID} ; 	echo ')co INTHERAL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTHERAL.spad (SPAD from IN)>>=
${MID}/INTHERAL.spad: ${IN}/intalg.spad.pamphlet
	@ echo 2031 making ${MID}/INTHERAL.spad from ${IN}/intalg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INTHERAL.NRLIB ; \
	${TANGLE} -R"package INTHERAL AlgebraicHermiteIntegration" ${IN}/intalg.spad.pamphlet >INTHERAL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<intalg.spad.dvi (DOC from IN)>>=
${DOC}/intalg.spad.dvi: ${IN}/intalg.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2032 making ${DOC}/intalg.spad.dvi from ${IN}/intalg.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/intalg.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} intalg.spad ; \
	rm -f ${DOC}/intalg.spad.pamphlet ; \
	rm -f ${DOC}/intalg.spad.tex ; \
	rm -f ${DOC}/intalg.spad )

@
\subsection{intaux.spad \cite{1}}
<<intaux.spad (SPAD from IN)>>=
${OUTSRC}/intaux.spad: ${IN}/intaux.spad.pamphlet
	@ echo 2033 making ${OUTSRC}/intaux.spad from ${IN}/intaux.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/intaux.spad.pamphlet >intaux.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IR.o (O from NRLIB)>>=
${OUT}/IR.o: ${MID}/IR.NRLIB
	@ echo 2034-19 making ${OUT}/IR.o from ${MID}/IR.NRLIB
	@ cp ${MID}/IR.NRLIB/code.o ${OUT}/IR.o

@
<<IR.NRLIB (NRLIB from MID)>>=
${MID}/IR.NRLIB: ${MID}/IR.spad
	@ echo 2035 making ${MID}/IR.NRLIB from ${MID}/IR.spad
	@ (cd ${MID} ; 	echo ')co IR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IR.spad (SPAD from IN)>>=
${MID}/IR.spad: ${IN}/intaux.spad.pamphlet
	@ echo 2036 making ${MID}/IR.spad from ${IN}/intaux.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IR.NRLIB ; \
	${TANGLE} -R"domain IR IntegrationResult" ${IN}/intaux.spad.pamphlet >IR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IR2.o (O from NRLIB)>>=
${OUT}/IR2.o: ${MID}/IR2.NRLIB
	@ echo 2037-10 making ${OUT}/IR2.o from ${MID}/IR2.NRLIB
	@ cp ${MID}/IR2.NRLIB/code.o ${OUT}/IR2.o

@
<<IR2.NRLIB (NRLIB from MID)>>=
${MID}/IR2.NRLIB: ${MID}/IR2.spad
	@ echo 2038 making ${MID}/IR2.NRLIB from ${MID}/IR2.spad
	@ (cd ${MID} ; 	echo ')co IR2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IR2.spad (SPAD from IN)>>=
${MID}/IR2.spad: ${IN}/intaux.spad.pamphlet
	@ echo 2039 making ${MID}/IR2.spad from ${IN}/intaux.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IR2.NRLIB ; \
	${TANGLE} -R"package IR2 IntegrationResultFunctions2" ${IN}/intaux.spad.pamphlet >IR2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<intaux.spad.dvi (DOC from IN)>>=
${DOC}/intaux.spad.dvi: ${IN}/intaux.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2040 making ${DOC}/intaux.spad.dvi from ${IN}/intaux.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/intaux.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} intaux.spad ; \
	rm -f ${DOC}/intaux.spad.pamphlet ; \
	rm -f ${DOC}/intaux.spad.tex ; \
	rm -f ${DOC}/intaux.spad )

@
\subsection{intclos.spad \cite{1}}
<<intclos.spad (SPAD from IN)>>=
${OUTSRC}/intclos.spad: ${IN}/intclos.spad.pamphlet
	@ echo 2041 making ${OUTSRC}/intclos.spad from ${IN}/intclos.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/intclos.spad.pamphlet >intclos.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IBATOOL.o (O from NRLIB)>>=
${OUT}/IBATOOL.o: ${MID}/IBATOOL.NRLIB
	@ echo 2042-16 making ${OUT}/IBATOOL.o from ${MID}/IBATOOL.NRLIB
	@ cp ${MID}/IBATOOL.NRLIB/code.o ${OUT}/IBATOOL.o

@
<<IBATOOL.NRLIB (NRLIB from MID)>>=
${MID}/IBATOOL.NRLIB: ${MID}/IBATOOL.spad
	@ echo 2043 making ${MID}/IBATOOL.NRLIB from ${MID}/IBATOOL.spad
	@ (cd ${MID} ; 	echo ')co IBATOOL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IBATOOL.spad (SPAD from IN)>>=
${MID}/IBATOOL.spad: ${IN}/intclos.spad.pamphlet
	@ echo 2044 making ${MID}/IBATOOL.spad from ${IN}/intclos.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IBATOOL.NRLIB ; \
	${TANGLE} -R"package IBATOOL IntegralBasisTools" ${IN}/intclos.spad.pamphlet >IBATOOL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFINTBAS.o (O from NRLIB)>>=
${OUT}/FFINTBAS.o: ${MID}/FFINTBAS.NRLIB
	@ echo 2045-16 making ${OUT}/FFINTBAS.o from ${MID}/FFINTBAS.NRLIB
	@ cp ${MID}/FFINTBAS.NRLIB/code.o ${OUT}/FFINTBAS.o

@
<<FFINTBAS.NRLIB (NRLIB from MID)>>=
${MID}/FFINTBAS.NRLIB: ${MID}/FFINTBAS.spad
	@ echo 2046 making ${MID}/FFINTBAS.NRLIB from ${MID}/FFINTBAS.spad
	@ (cd ${MID} ; 	echo ')co FFINTBAS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FFINTBAS.spad (SPAD from IN)>>=
${MID}/FFINTBAS.spad: ${IN}/intclos.spad.pamphlet
	@ echo 2047 making ${MID}/FFINTBAS.spad from ${IN}/intclos.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FFINTBAS.NRLIB ; \
	${TANGLE} -R"package FFINTBAS FunctionFieldIntegralBasis" ${IN}/intclos.spad.pamphlet >FFINTBAS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NFINTBAS.o (O from NRLIB)>>=
${OUT}/NFINTBAS.o: ${MID}/NFINTBAS.NRLIB
	@ echo 2048-16 making ${OUT}/NFINTBAS.o from ${MID}/NFINTBAS.NRLIB
	@ cp ${MID}/NFINTBAS.NRLIB/code.o ${OUT}/NFINTBAS.o

@
<<NFINTBAS.NRLIB (NRLIB from MID)>>=
${MID}/NFINTBAS.NRLIB: ${MID}/NFINTBAS.spad
	@ echo 2049 making ${MID}/NFINTBAS.NRLIB from ${MID}/NFINTBAS.spad
	@ (cd ${MID} ; 	echo ')co NFINTBAS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NFINTBAS.spad (SPAD from IN)>>=
${MID}/NFINTBAS.spad: ${IN}/intclos.spad.pamphlet
	@ echo 2050 making ${MID}/NFINTBAS.spad from ${IN}/intclos.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NFINTBAS.NRLIB ; \
	${TANGLE} -R"package NFINTBAS NumberFieldIntegralBasis" ${IN}/intclos.spad.pamphlet >NFINTBAS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TRIMAT.o (O from NRLIB)>>=
${OUT}/TRIMAT.o: ${MID}/TRIMAT.NRLIB
	@ echo 2051-12 making ${OUT}/TRIMAT.o from ${MID}/TRIMAT.NRLIB
	@ cp ${MID}/TRIMAT.NRLIB/code.o ${OUT}/TRIMAT.o

@
<<TRIMAT.NRLIB (NRLIB from MID)>>=
${MID}/TRIMAT.NRLIB: ${MID}/TRIMAT.spad
	@ echo 2052 making ${MID}/TRIMAT.NRLIB from ${MID}/TRIMAT.spad
	@ (cd ${MID} ; 	echo ')co TRIMAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TRIMAT.spad (SPAD from IN)>>=
${MID}/TRIMAT.spad: ${IN}/intclos.spad.pamphlet
	@ echo 2053 making ${MID}/TRIMAT.spad from ${IN}/intclos.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf TRIMAT.NRLIB ; \
	${TANGLE} -R"package TRIMAT TriangularMatrixOperations" ${IN}/intclos.spad.pamphlet >TRIMAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<WFFINTBS.o (O from NRLIB)>>=
${OUT}/WFFINTBS.o: ${MID}/WFFINTBS.NRLIB
	@ echo 2054-19 making ${OUT}/WFFINTBS.o from ${MID}/WFFINTBS.NRLIB
	@ cp ${MID}/WFFINTBS.NRLIB/code.o ${OUT}/WFFINTBS.o

@
<<WFFINTBS.NRLIB (NRLIB from MID)>>=
${MID}/WFFINTBS.NRLIB: ${MID}/WFFINTBS.spad
	@ echo 2055 making ${MID}/WFFINTBS.NRLIB from ${MID}/WFFINTBS.spad
	@ (cd ${MID} ; 	echo ')co WFFINTBS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<WFFINTBS.spad (SPAD from IN)>>=
${MID}/WFFINTBS.spad: ${IN}/intclos.spad.pamphlet
	@ echo 2056 making ${MID}/WFFINTBS.spad from ${IN}/intclos.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf WFFINTBS.NRLIB ; \
	${TANGLE} -R"package WFFINTBS WildFunctionFieldIntegralBasis" ${IN}/intclos.spad.pamphlet >WFFINTBS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<intclos.spad.dvi (DOC from IN)>>=
${DOC}/intclos.spad.dvi: ${IN}/intclos.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2057 making ${DOC}/intclos.spad.dvi from ${IN}/intclos.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/intclos.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} intclos.spad ; \
	rm -f ${DOC}/intclos.spad.pamphlet ; \
	rm -f ${DOC}/intclos.spad.tex ; \
	rm -f ${DOC}/intclos.spad )

@
\subsection{intef.spad \cite{1}}
<<intef.spad (SPAD from IN)>>=
${OUTSRC}/intef.spad: ${IN}/intef.spad.pamphlet
	@ echo 2058 making ${OUTSRC}/intef.spad from ${IN}/intef.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/intef.spad.pamphlet >intef.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTEF.o (O from NRLIB)>>=
${OUT}/INTEF.o: ${MID}/INTEF.NRLIB
	@ echo 2059-20 making ${OUT}/INTEF.o from ${MID}/INTEF.NRLIB
	@ cp ${MID}/INTEF.NRLIB/code.o ${OUT}/INTEF.o

@
<<INTEF.NRLIB (NRLIB from MID)>>=
${MID}/INTEF.NRLIB: ${MID}/INTEF.spad
	@ echo 2060 making ${MID}/INTEF.NRLIB from ${MID}/INTEF.spad
	@ (cd ${MID} ; 	echo ')co INTEF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTEF.spad (SPAD from IN)>>=
${MID}/INTEF.spad: ${IN}/intef.spad.pamphlet
	@ echo 2061 making ${MID}/INTEF.spad from ${IN}/intef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INTEF.NRLIB ; \
	${TANGLE} -R"package INTEF ElementaryIntegration" ${IN}/intef.spad.pamphlet >INTEF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<intef.spad.dvi (DOC from IN)>>=
${DOC}/intef.spad.dvi: ${IN}/intef.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2062 making ${DOC}/intef.spad.dvi from ${IN}/intef.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/intef.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} intef.spad ; \
	rm -f ${DOC}/intef.spad.pamphlet ; \
	rm -f ${DOC}/intef.spad.tex ; \
	rm -f ${DOC}/intef.spad )

@
\subsection{integer.spad \cite{1}}
<<integer.spad (SPAD from IN)>>=
${OUTSRC}/integer.spad: ${IN}/integer.spad.pamphlet
	@ echo 2063 making ${OUTSRC}/integer.spad from ${IN}/integer.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/integer.spad.pamphlet >integer.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INT.o (O from NRLIB)>>=
${OUT}/INT.o: ${MID}/INT.NRLIB
	@ echo 2064-0c making ${OUT}/INT.o from ${MID}/INT.NRLIB
	@ cp ${MID}/INT.NRLIB/code.o ${OUT}/INT.o

@
<<INT.NRLIB (NRLIB from MID)>>=
${MID}/INT.NRLIB: ${MID}/INT.spad
	@ echo 2065 making ${MID}/INT.NRLIB from ${MID}/INT.spad
	@ (cd ${MID} ; 	echo ')co INT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INT.spad (SPAD from IN)>>=
${MID}/INT.spad: ${IN}/integer.spad.pamphlet
	@ echo 2066 making ${MID}/INT.spad from ${IN}/integer.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INT.NRLIB ; \
	${TANGLE} -R"domain INT Integer" ${IN}/integer.spad.pamphlet >INT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INT.o (BOOTSTRAP from MID)>>=
${MID}/INT.o: ${MID}/INT.lsp
	@ echo 2067-0b making ${MID}/INT.o from ${MID}/INT.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "INT.lsp" :output-file "INT.o"))' | ${DEPSYS} )
	@ cp ${MID}/INT.o ${OUT}/INT.o

@
<<INT.lsp (LISP from IN)>>=
${MID}/INT.lsp: ${IN}/integer.spad.pamphlet
	@ echo 2068 making ${MID}/INT.lsp from ${IN}/integer.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INT.NRLIB ; \
	rm -rf ${OUT}/INT.o ; \
	${TANGLE} -R"INT.lsp BOOTSTRAP" ${IN}/integer.spad.pamphlet >INT.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTSLPE.o (O from NRLIB)>>=
${OUT}/INTSLPE.o: ${MID}/INTSLPE.NRLIB
	@ echo 2069-14 making ${OUT}/INTSLPE.o from ${MID}/INTSLPE.NRLIB
	@ cp ${MID}/INTSLPE.NRLIB/code.o ${OUT}/INTSLPE.o

@
<<INTSLPE.NRLIB (NRLIB from MID)>>=
${MID}/INTSLPE.NRLIB: ${MID}/INTSLPE.spad
	@ echo 2070 making ${MID}/INTSLPE.NRLIB from ${MID}/INTSLPE.spad
	@ (cd ${MID} ; 	echo ')co INTSLPE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTSLPE.spad (SPAD from IN)>>=
${MID}/INTSLPE.spad: ${IN}/integer.spad.pamphlet
	@ echo 2071 making ${MID}/INTSLPE.spad from ${IN}/integer.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INTSLPE.NRLIB ; \
	${TANGLE} -R"package INTSLPE IntegerSolveLinearPolynomialEquation" ${IN}/integer.spad.pamphlet >INTSLPE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NNI.o (O from NRLIB)>>=
${OUT}/NNI.o: ${MID}/NNI.NRLIB
	@ echo 2072-0c making ${OUT}/NNI.o from ${MID}/NNI.NRLIB
	@ cp ${MID}/NNI.NRLIB/code.o ${OUT}/NNI.o

@
<<NNI.NRLIB (NRLIB from MID)>>=
${MID}/NNI.NRLIB: ${MID}/NNI.spad
	@ echo 2073 making ${MID}/NNI.NRLIB from ${MID}/NNI.spad
	@ (cd ${MID} ; 	echo ')co NNI.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NNI.spad (SPAD from IN)>>=
${MID}/NNI.spad: ${IN}/integer.spad.pamphlet
	@ echo 2074 making ${MID}/NNI.spad from ${IN}/integer.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NNI.NRLIB ; \
	${TANGLE} -R"domain NNI NonNegativeInteger" ${IN}/integer.spad.pamphlet >NNI.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NNI.o (BOOTSTRAP from MID)>>=
${MID}/NNI.o: ${MID}/NNI.lsp
	@ echo 2075-0b making ${MID}/NNI.o from ${MID}/NNI.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "NNI.lsp" :output-file "NNI.o"))' | ${DEPSYS} )
	@ cp ${MID}/NNI.o ${OUT}/NNI.o

@
<<NNI.lsp (LISP from IN)>>=
${MID}/NNI.lsp: ${IN}/integer.spad.pamphlet
	@ echo 2076 making ${MID}/NNI.lsp from ${IN}/integer.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NNI.NRLIB ; \
	rm -rf ${OUT}/NNI.o ; \
	${TANGLE} -R"NNI.lsp BOOTSTRAP" ${IN}/integer.spad.pamphlet >NNI.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PI.o (O from NRLIB)>>=
${OUT}/PI.o: ${MID}/PI.NRLIB
	@ echo 2077-0c making ${OUT}/PI.o from ${MID}/PI.NRLIB
	@ cp ${MID}/PI.NRLIB/code.o ${OUT}/PI.o

@
<<PI.NRLIB (NRLIB from MID)>>=
${MID}/PI.NRLIB: ${MID}/PI.spad
	@ echo 2078 making ${MID}/PI.NRLIB from ${MID}/PI.spad
	@ (cd ${MID} ; 	echo ')co PI.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PI.spad (SPAD from IN)>>=
${MID}/PI.spad: ${IN}/integer.spad.pamphlet
	@ echo 2079 making ${MID}/PI.spad from ${IN}/integer.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PI.NRLIB ; \
	${TANGLE} -R"domain PI PositiveInteger" ${IN}/integer.spad.pamphlet >PI.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PI.o (BOOTSTRAP from MID)>>=
${MID}/PI.o: ${MID}/PI.lsp
	@ echo 2080-0b making ${MID}/PI.o from ${MID}/PI.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "PI.lsp" :output-file "PI.o"))' | ${DEPSYS} )
	@ cp ${MID}/PI.o ${OUT}/PI.o

@
<<PI.lsp (LISP from IN)>>=
${MID}/PI.lsp: ${IN}/integer.spad.pamphlet
	@ echo 2081 making ${MID}/PI.lsp from ${IN}/integer.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PI.NRLIB ; \
	rm -rf ${OUT}/PI.o ; \
	${TANGLE} -R"PI.lsp BOOTSTRAP" ${IN}/integer.spad.pamphlet >PI.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ROMAN.o (O from NRLIB)>>=
${OUT}/ROMAN.o: ${MID}/ROMAN.NRLIB
	@ echo 2082-19 making ${OUT}/ROMAN.o from ${MID}/ROMAN.NRLIB
	@ cp ${MID}/ROMAN.NRLIB/code.o ${OUT}/ROMAN.o

@
<<ROMAN.NRLIB (NRLIB from MID)>>=
${MID}/ROMAN.NRLIB: ${MID}/ROMAN.spad
	@ echo 2083 making ${MID}/ROMAN.NRLIB from ${MID}/ROMAN.spad
	@ (cd ${MID} ; 	echo ')co ROMAN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ROMAN.spad (SPAD from IN)>>=
${MID}/ROMAN.spad: ${IN}/integer.spad.pamphlet
	@ echo 2084 making ${MID}/ROMAN.spad from ${IN}/integer.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ROMAN.NRLIB ; \
	${TANGLE} -R"domain ROMAN RomanNumeral" ${IN}/integer.spad.pamphlet >ROMAN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<integer.spad.dvi (DOC from IN)>>=
${DOC}/integer.spad.dvi: ${IN}/integer.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2085 making ${DOC}/integer.spad.dvi from ${IN}/integer.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/integer.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} integer.spad ; \
	rm -f ${DOC}/integer.spad.pamphlet ; \
	rm -f ${DOC}/integer.spad.tex ; \
	rm -f ${DOC}/integer.spad )

@
\subsection{integrat.spad \cite{1}}
<<integrat.spad (SPAD from IN)>>=
${OUTSRC}/integrat.spad: ${IN}/integrat.spad.pamphlet
	@ echo 2086 making ${OUTSRC}/integrat.spad from ${IN}/integrat.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/integrat.spad.pamphlet >integrat.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FSCINT.o (O from NRLIB)>>=
${OUT}/FSCINT.o: ${MID}/FSCINT.NRLIB
	@ echo 2087-21 making ${OUT}/FSCINT.o from ${MID}/FSCINT.NRLIB
	@ cp ${MID}/FSCINT.NRLIB/code.o ${OUT}/FSCINT.o

@
<<FSCINT.NRLIB (NRLIB from MID)>>=
${MID}/FSCINT.NRLIB: ${MID}/FSCINT.spad
	@ echo 2088 making ${MID}/FSCINT.NRLIB from ${MID}/FSCINT.spad
	@ (cd ${MID} ; 	echo ')co FSCINT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FSCINT.spad (SPAD from IN)>>=
${MID}/FSCINT.spad: ${IN}/integrat.spad.pamphlet
	@ echo 2089 making ${MID}/FSCINT.spad from ${IN}/integrat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FSCINT.NRLIB ; \
	${TANGLE} -R"package FSCINT FunctionSpaceComplexIntegration" ${IN}/integrat.spad.pamphlet >FSCINT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FSINT.o (O from NRLIB)>>=
${OUT}/FSINT.o: ${MID}/FSINT.NRLIB
	@ echo 2090-21 making ${OUT}/FSINT.o from ${MID}/FSINT.NRLIB
	@ cp ${MID}/FSINT.NRLIB/code.o ${OUT}/FSINT.o

@
<<FSINT.NRLIB (NRLIB from MID)>>=
${MID}/FSINT.NRLIB: ${MID}/FSINT.spad
	@ echo 2091 making ${MID}/FSINT.NRLIB from ${MID}/FSINT.spad
	@ (cd ${MID} ; 	echo ')co FSINT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FSINT.spad (SPAD from IN)>>=
${MID}/FSINT.spad: ${IN}/integrat.spad.pamphlet
	@ echo 2092 making ${MID}/FSINT.spad from ${IN}/integrat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FSINT.NRLIB ; \
	${TANGLE} -R"package FSINT FunctionSpaceIntegration" ${IN}/integrat.spad.pamphlet >FSINT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<integrat.spad.dvi (DOC from IN)>>=
${DOC}/integrat.spad.dvi: ${IN}/integrat.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2093 making ${DOC}/integrat.spad.dvi from ${IN}/integrat.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/integrat.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} integrat.spad ; \
	rm -f ${DOC}/integrat.spad.pamphlet ; \
	rm -f ${DOC}/integrat.spad.tex ; \
	rm -f ${DOC}/integrat.spad )

@
\subsection{interval.as \cite{1}}
<<interval.as (SPAD from IN)>>=
${OUTSRC}/interval.as: ${IN}/interval.as.pamphlet
	@ echo 2094 making ${OUTSRC}/interval.as from ${IN}/interval.as.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/interval.as.pamphlet >interval.as )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<interval.as.dvi (DOC from IN)>>=
${DOC}/interval.as.dvi: ${IN}/interval.as.pamphlet ${DOC}/axiom.sty
	@ echo 2095 making ${DOC}/interval.as.dvi from ${IN}/interval.as.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/interval.as.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} interval.as ; \
	rm -f ${DOC}/interval.as.pamphlet ; \
	rm -f ${DOC}/interval.as.tex ; \
	rm -f ${DOC}/interval.as )

@
\subsection{interval.spad \cite{1}}
<<interval.spad (SPAD from IN)>>=
${OUTSRC}/interval.spad: ${IN}/interval.spad.pamphlet
	@ echo 2096 making ${OUTSRC}/interval.spad from ${IN}/interval.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/interval.spad.pamphlet >interval.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTCAT.o (O from NRLIB)>>=
${OUT}/INTCAT.o: ${MID}/INTCAT.NRLIB
	@ echo 2097-11 making ${OUT}/INTCAT.o from ${MID}/INTCAT.NRLIB
	@ cp ${MID}/INTCAT.NRLIB/code.o ${OUT}/INTCAT.o

@
<<INTCAT.NRLIB (NRLIB from MID)>>=
${MID}/INTCAT.NRLIB: ${MID}/INTCAT.spad
	@ echo 2098 making ${MID}/INTCAT.NRLIB from ${MID}/INTCAT.spad
	@ (cd ${MID} ; 	echo ')co INTCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTCAT.spad (SPAD from IN)>>=
${MID}/INTCAT.spad: ${IN}/interval.spad.pamphlet
	@ echo 2099 making ${MID}/INTCAT.spad from ${IN}/interval.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INTCAT.NRLIB ; \
	${TANGLE} -R"category INTCAT IntervalCategory" ${IN}/interval.spad.pamphlet >INTCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTRVL.o (O from NRLIB)>>=
${OUT}/INTRVL.o: ${MID}/INTRVL.NRLIB
	@ echo 2100-23 making ${OUT}/INTRVL.o from ${MID}/INTRVL.NRLIB
	@ cp ${MID}/INTRVL.NRLIB/code.o ${OUT}/INTRVL.o

@
<<INTRVL.NRLIB (NRLIB from MID)>>=
${MID}/INTRVL.NRLIB: ${MID}/INTRVL.spad
	@ echo 2101 making ${MID}/INTRVL.NRLIB from ${MID}/INTRVL.spad
	@ (cd ${MID} ; 	echo ')co INTRVL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTRVL.spad (SPAD from IN)>>=
${MID}/INTRVL.spad: ${IN}/interval.spad.pamphlet
	@ echo 2102 making ${MID}/INTRVL.spad from ${IN}/interval.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INTRVL.NRLIB ; \
	${TANGLE} -R"domain INTRVL Interval" ${IN}/interval.spad.pamphlet >INTRVL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<interval.spad.dvi (DOC from IN)>>=
${DOC}/interval.spad.dvi: ${IN}/interval.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2103 making ${DOC}/interval.spad.dvi from ${IN}/interval.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/interval.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} interval.spad ; \
	rm -f ${DOC}/interval.spad.pamphlet ; \
	rm -f ${DOC}/interval.spad.tex ; \
	rm -f ${DOC}/interval.spad )

@
\subsection{intfact.spad \cite{1}}
<<intfact.spad (SPAD from IN)>>=
${OUTSRC}/intfact.spad: ${IN}/intfact.spad.pamphlet
	@ echo 2104 making ${OUTSRC}/intfact.spad from ${IN}/intfact.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/intfact.spad.pamphlet >intfact.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTFACT.o (O from NRLIB)>>=
${OUT}/INTFACT.o: ${MID}/INTFACT.NRLIB
	@ echo 2105-16 making ${OUT}/INTFACT.o from ${MID}/INTFACT.NRLIB
	@ cp ${MID}/INTFACT.NRLIB/code.o ${OUT}/INTFACT.o

@
<<INTFACT.NRLIB (NRLIB from MID)>>=
${MID}/INTFACT.NRLIB: ${MID}/INTFACT.spad
	@ echo 2106 making ${MID}/INTFACT.NRLIB from ${MID}/INTFACT.spad
	@ (cd ${MID} ; 	echo ')co INTFACT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTFACT.spad (SPAD from IN)>>=
${MID}/INTFACT.spad: ${IN}/intfact.spad.pamphlet
	@ echo 2107 making ${MID}/INTFACT.spad from ${IN}/intfact.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INTFACT.NRLIB ; \
	${TANGLE} -R"package INTFACT IntegerFactorizationPackage" ${IN}/intfact.spad.pamphlet >INTFACT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IROOT.o (O from NRLIB)>>=
${OUT}/IROOT.o: ${MID}/IROOT.NRLIB
	@ echo 2108-10 making ${OUT}/IROOT.o from ${MID}/IROOT.NRLIB
	@ cp ${MID}/IROOT.NRLIB/code.o ${OUT}/IROOT.o

@
<<IROOT.NRLIB (NRLIB from MID)>>=
${MID}/IROOT.NRLIB: ${MID}/IROOT.spad
	@ echo 2109 making ${MID}/IROOT.NRLIB from ${MID}/IROOT.spad
	@ (cd ${MID} ; 	echo ')co IROOT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IROOT.spad (SPAD from IN)>>=
${MID}/IROOT.spad: ${IN}/intfact.spad.pamphlet
	@ echo 2110 making ${MID}/IROOT.spad from ${IN}/intfact.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IROOT.NRLIB ; \
	${TANGLE} -R"package IROOT IntegerRoots" ${IN}/intfact.spad.pamphlet >IROOT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PRIMES.o (O from NRLIB)>>=
${OUT}/PRIMES.o: ${MID}/PRIMES.NRLIB
	@ echo 2111-17 making ${OUT}/PRIMES.o from ${MID}/PRIMES.NRLIB
	@ cp ${MID}/PRIMES.NRLIB/code.o ${OUT}/PRIMES.o

@
<<PRIMES.NRLIB (NRLIB from MID)>>=
${MID}/PRIMES.NRLIB: ${MID}/PRIMES.spad
	@ echo 2112 making ${MID}/PRIMES.NRLIB from ${MID}/PRIMES.spad
	@ (cd ${MID} ; 	echo ')co PRIMES.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PRIMES.spad (SPAD from IN)>>=
${MID}/PRIMES.spad: ${IN}/intfact.spad.pamphlet
	@ echo 2113 making ${MID}/PRIMES.spad from ${IN}/intfact.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PRIMES.NRLIB ; \
	${TANGLE} -R"package PRIMES IntegerPrimesPackage" ${IN}/intfact.spad.pamphlet >PRIMES.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<intfact.spad.dvi (DOC from IN)>>=
${DOC}/intfact.spad.dvi: ${IN}/intfact.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2114 making ${DOC}/intfact.spad.dvi from ${IN}/intfact.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/intfact.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} intfact.spad ; \
	rm -f ${DOC}/intfact.spad.pamphlet ; \
	rm -f ${DOC}/intfact.spad.tex ; \
	rm -f ${DOC}/intfact.spad )

@
\subsection{intpm.spad \cite{1}}
<<intpm.spad (SPAD from IN)>>=
${OUTSRC}/intpm.spad: ${IN}/intpm.spad.pamphlet
	@ echo 2115 making ${OUTSRC}/intpm.spad from ${IN}/intpm.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/intpm.spad.pamphlet >intpm.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTPM.o (O from NRLIB)>>=
${OUT}/INTPM.o: ${MID}/INTPM.NRLIB
	@ echo 2116-20 making ${OUT}/INTPM.o from ${MID}/INTPM.NRLIB
	@ cp ${MID}/INTPM.NRLIB/code.o ${OUT}/INTPM.o

@
<<INTPM.NRLIB (NRLIB from MID)>>=
${MID}/INTPM.NRLIB: ${MID}/INTPM.spad
	@ echo 2117 making ${MID}/INTPM.NRLIB from ${MID}/INTPM.spad
	@ (cd ${MID} ; 	echo ')co INTPM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTPM.spad (SPAD from IN)>>=
${MID}/INTPM.spad: ${IN}/intpm.spad.pamphlet
	@ echo 2118 making ${MID}/INTPM.spad from ${IN}/intpm.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INTPM.NRLIB ; \
	${TANGLE} -R"package INTPM PatternMatchIntegration" ${IN}/intpm.spad.pamphlet >INTPM.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<intpm.spad.dvi (DOC from IN)>>=
${DOC}/intpm.spad.dvi: ${IN}/intpm.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2119 making ${DOC}/intpm.spad.dvi from ${IN}/intpm.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/intpm.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} intpm.spad ; \
	rm -f ${DOC}/intpm.spad.pamphlet ; \
	rm -f ${DOC}/intpm.spad.tex ; \
	rm -f ${DOC}/intpm.spad )

@
\subsection{intrf.spad \cite{1}}
<<intrf.spad (SPAD from IN)>>=
${OUTSRC}/intrf.spad: ${IN}/intrf.spad.pamphlet
	@ echo 2120 making ${OUTSRC}/intrf.spad from ${IN}/intrf.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/intrf.spad.pamphlet >intrf.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTHERTR.o (O from NRLIB)>>=
${OUT}/INTHERTR.o: ${MID}/INTHERTR.NRLIB
	@ echo 2121-14 making ${OUT}/INTHERTR.o from ${MID}/INTHERTR.NRLIB
	@ cp ${MID}/INTHERTR.NRLIB/code.o ${OUT}/INTHERTR.o

@
<<INTHERTR.NRLIB (NRLIB from MID)>>=
${MID}/INTHERTR.NRLIB: ${MID}/INTHERTR.spad
	@ echo 2122 making ${MID}/INTHERTR.NRLIB from ${MID}/INTHERTR.spad
	@ (cd ${MID} ; 	echo ')co INTHERTR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTHERTR.spad (SPAD from IN)>>=
${MID}/INTHERTR.spad: ${IN}/intrf.spad.pamphlet
	@ echo 2123 making ${MID}/INTHERTR.spad from ${IN}/intrf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INTHERTR.NRLIB ; \
	${TANGLE} -R"package INTHERTR TranscendentalHermiteIntegration" ${IN}/intrf.spad.pamphlet >INTHERTR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTRAT.o (O from NRLIB)>>=
${OUT}/INTRAT.o: ${MID}/INTRAT.NRLIB
	@ echo 2124-14 making ${OUT}/INTRAT.o from ${MID}/INTRAT.NRLIB
	@ cp ${MID}/INTRAT.NRLIB/code.o ${OUT}/INTRAT.o

@
<<INTRAT.NRLIB (NRLIB from MID)>>=
${MID}/INTRAT.NRLIB: ${MID}/INTRAT.spad
	@ echo 2125 making ${MID}/INTRAT.NRLIB from ${MID}/INTRAT.spad
	@ (cd ${MID} ; 	echo ')co INTRAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTRAT.spad (SPAD from IN)>>=
${MID}/INTRAT.spad: ${IN}/intrf.spad.pamphlet
	@ echo 2126 making ${MID}/INTRAT.spad from ${IN}/intrf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INTRAT.NRLIB ; \
	${TANGLE} -R"package INTRAT RationalIntegration" ${IN}/intrf.spad.pamphlet >INTRAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTRF.o (O from NRLIB)>>=
${OUT}/INTRF.o: ${MID}/INTRF.NRLIB
	@ echo 2127-14 making ${OUT}/INTRF.o from ${MID}/INTRF.NRLIB
	@ cp ${MID}/INTRF.NRLIB/code.o ${OUT}/INTRF.o

@
<<INTRF.NRLIB (NRLIB from MID)>>=
${MID}/INTRF.NRLIB: ${MID}/INTRF.spad
	@ echo 2128 making ${MID}/INTRF.NRLIB from ${MID}/INTRF.spad
	@ (cd ${MID} ; 	echo ')co INTRF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTRF.spad (SPAD from IN)>>=
${MID}/INTRF.spad: ${IN}/intrf.spad.pamphlet
	@ echo 2129 making ${MID}/INTRF.spad from ${IN}/intrf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INTRF.NRLIB ; \
	${TANGLE} -R"package INTRF RationalFunctionIntegration" ${IN}/intrf.spad.pamphlet >INTRF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTTR.o (O from NRLIB)>>=
${OUT}/INTTR.o: ${MID}/INTTR.NRLIB
	@ echo 2130-14 making ${OUT}/INTTR.o from ${MID}/INTTR.NRLIB
	@ cp ${MID}/INTTR.NRLIB/code.o ${OUT}/INTTR.o

@
<<INTTR.NRLIB (NRLIB from MID)>>=
${MID}/INTTR.NRLIB: ${MID}/INTTR.spad
	@ echo 2131 making ${MID}/INTTR.NRLIB from ${MID}/INTTR.spad
	@ (cd ${MID} ; 	echo ')co INTTR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTTR.spad (SPAD from IN)>>=
${MID}/INTTR.spad: ${IN}/intrf.spad.pamphlet
	@ echo 2132 making ${MID}/INTTR.spad from ${IN}/intrf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INTTR.NRLIB ; \
	${TANGLE} -R"package INTTR TranscendentalIntegration" ${IN}/intrf.spad.pamphlet >INTTR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MONOTOOL.o (O from NRLIB)>>=
${OUT}/MONOTOOL.o: ${MID}/MONOTOOL.NRLIB
	@ echo 2133-14 making ${OUT}/MONOTOOL.o from ${MID}/MONOTOOL.NRLIB
	@ cp ${MID}/MONOTOOL.NRLIB/code.o ${OUT}/MONOTOOL.o

@
<<MONOTOOL.NRLIB (NRLIB from MID)>>=
${MID}/MONOTOOL.NRLIB: ${MID}/MONOTOOL.spad
	@ echo 2134 making ${MID}/MONOTOOL.NRLIB from ${MID}/MONOTOOL.spad
	@ (cd ${MID} ; 	echo ')co MONOTOOL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MONOTOOL.spad (SPAD from IN)>>=
${MID}/MONOTOOL.spad: ${IN}/intrf.spad.pamphlet
	@ echo 2135 making ${MID}/MONOTOOL.spad from ${IN}/intrf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MONOTOOL.NRLIB ; \
	${TANGLE} -R"package MONOTOOL MonomialExtensionTools" ${IN}/intrf.spad.pamphlet >MONOTOOL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SUBRESP.o (O from NRLIB)>>=
${OUT}/SUBRESP.o: ${MID}/SUBRESP.NRLIB
	@ echo 2136-14 making ${OUT}/SUBRESP.o from ${MID}/SUBRESP.NRLIB
	@ cp ${MID}/SUBRESP.NRLIB/code.o ${OUT}/SUBRESP.o

@
<<SUBRESP.NRLIB (NRLIB from MID)>>=
${MID}/SUBRESP.NRLIB: ${MID}/SUBRESP.spad
	@ echo 2137 making ${MID}/SUBRESP.NRLIB from ${MID}/SUBRESP.spad
	@ (cd ${MID} ; 	echo ')co SUBRESP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SUBRESP.spad (SPAD from IN)>>=
${MID}/SUBRESP.spad: ${IN}/intrf.spad.pamphlet
	@ echo 2138 making ${MID}/SUBRESP.spad from ${IN}/intrf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SUBRESP.NRLIB ; \
	${TANGLE} -R"package SUBRESP SubResultantPackage" ${IN}/intrf.spad.pamphlet >SUBRESP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<intrf.spad.dvi (DOC from IN)>>=
${DOC}/intrf.spad.dvi: ${IN}/intrf.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2139 making ${DOC}/intrf.spad.dvi from ${IN}/intrf.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/intrf.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} intrf.spad ; \
	rm -f ${DOC}/intrf.spad.pamphlet ; \
	rm -f ${DOC}/intrf.spad.tex ; \
	rm -f ${DOC}/intrf.spad )

@
\subsection{invnode.as \cite{1}}
<<invnode.as (SPAD from IN)>>=
${OUTSRC}/invnode.as: ${IN}/invnode.as.pamphlet
	@ echo 2140 making ${OUTSRC}/invnode.as from ${IN}/invnode.as.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/invnode.as.pamphlet >invnode.as )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<invnode.as.dvi (DOC from IN)>>=
${DOC}/invnode.as.dvi: ${IN}/invnode.as.pamphlet ${DOC}/axiom.sty
	@ echo 2141 making ${DOC}/invnode.as.dvi from ${IN}/invnode.as.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/invnode.as.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} invnode.as ; \
	rm -f ${DOC}/invnode.as.pamphlet ; \
	rm -f ${DOC}/invnode.as.tex ; \
	rm -f ${DOC}/invnode.as )

@
\subsection{invrender.as \cite{1}}
<<invrender.as (SPAD from IN)>>=
${OUTSRC}/invrender.as: ${IN}/invrender.as.pamphlet
	@ echo 2142 making ${OUTSRC}/invrender.as from ${IN}/invrender.as.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/invrender.as.pamphlet >invrender.as )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<invrender.as.dvi (DOC from IN)>>=
${DOC}/invrender.as.dvi: ${IN}/invrender.as.pamphlet ${DOC}/axiom.sty
	@ echo 2143 making ${DOC}/invrender.as.dvi from ${IN}/invrender.as.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/invrender.as.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} invrender.as ; \
	rm -f ${DOC}/invrender.as.pamphlet ; \
	rm -f ${DOC}/invrender.as.tex ; \
	rm -f ${DOC}/invrender.as )

@
\subsection{invtypes.as \cite{1}}
<<invtypes.as (SPAD from IN)>>=
${OUTSRC}/invtypes.as: ${IN}/invtypes.as.pamphlet
	@ echo 2144 making ${OUTSRC}/invtypes.as from ${IN}/invtypes.as.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/invtypes.as.pamphlet >invtypes.as )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<invtypes.as.dvi (DOC from IN)>>=
${DOC}/invtypes.as.dvi: ${IN}/invtypes.as.pamphlet ${DOC}/axiom.sty
	@ echo 2145 making ${DOC}/invtypes.as.dvi from ${IN}/invtypes.as.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/invtypes.as.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} invtypes.as ; \
	rm -f ${DOC}/invtypes.as.pamphlet ; \
	rm -f ${DOC}/invtypes.as.tex ; \
	rm -f ${DOC}/invtypes.as )

@
\subsection{invutils.as \cite{1}}
<<invutils.as (SPAD from IN)>>=
${OUTSRC}/invutils.as: ${IN}/invutils.as.pamphlet
	@ echo 2146 making ${OUTSRC}/invutils.as from ${IN}/invutils.as.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/invutils.as.pamphlet >invutils.as )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<invutils.as.dvi (DOC from IN)>>=
${DOC}/invutils.as.dvi: ${IN}/invutils.as.pamphlet ${DOC}/axiom.sty
	@ echo 2147 making ${DOC}/invutils.as.dvi from ${IN}/invutils.as.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/invutils.as.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} invutils.as ; \
	rm -f ${DOC}/invutils.as.pamphlet ; \
	rm -f ${DOC}/invutils.as.tex ; \
	rm -f ${DOC}/invutils.as )

@
\subsection{irexpand.spad \cite{1}}
<<irexpand.spad (SPAD from IN)>>=
${OUTSRC}/irexpand.spad: ${IN}/irexpand.spad.pamphlet
	@ echo 2148 making ${OUTSRC}/irexpand.spad from ${IN}/irexpand.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/irexpand.spad.pamphlet >irexpand.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IR2F.o (O from NRLIB)>>=
${OUT}/IR2F.o: ${MID}/IR2F.NRLIB
	@ echo 2149-21 making ${OUT}/IR2F.o from ${MID}/IR2F.NRLIB
	@ cp ${MID}/IR2F.NRLIB/code.o ${OUT}/IR2F.o

@
<<IR2F.NRLIB (NRLIB from MID)>>=
${MID}/IR2F.NRLIB: ${MID}/IR2F.spad
	@ echo 2150 making ${MID}/IR2F.NRLIB from ${MID}/IR2F.spad
	@ (cd ${MID} ; 	echo ')co IR2F.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IR2F.spad (SPAD from IN)>>=
${MID}/IR2F.spad: ${IN}/irexpand.spad.pamphlet
	@ echo 2151 making ${MID}/IR2F.spad from ${IN}/irexpand.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IR2F.NRLIB ; \
	${TANGLE} -R"package IR2F IntegrationResultToFunction" ${IN}/irexpand.spad.pamphlet >IR2F.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IRRF2F.o (O from NRLIB)>>=
${OUT}/IRRF2F.o: ${MID}/IRRF2F.NRLIB
	@ echo 2152-21 making ${OUT}/IRRF2F.o from ${MID}/IRRF2F.NRLIB
	@ cp ${MID}/IRRF2F.NRLIB/code.o ${OUT}/IRRF2F.o

@
<<IRRF2F.NRLIB (NRLIB from MID)>>=
${MID}/IRRF2F.NRLIB: ${MID}/IRRF2F.spad
	@ echo 2153 making ${MID}/IRRF2F.NRLIB from ${MID}/IRRF2F.spad
	@ (cd ${MID} ; 	echo ')co IRRF2F.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IRRF2F.spad (SPAD from IN)>>=
${MID}/IRRF2F.spad: ${IN}/irexpand.spad.pamphlet
	@ echo 2154 making ${MID}/IRRF2F.spad from ${IN}/irexpand.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IRRF2F.NRLIB ; \
	${TANGLE} -R"package IRRF2F IntegrationResultRFToFunction" ${IN}/irexpand.spad.pamphlet >IRRF2F.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<irexpand.spad.dvi (DOC from IN)>>=
${DOC}/irexpand.spad.dvi: ${IN}/irexpand.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2155 making ${DOC}/irexpand.spad.dvi from ${IN}/irexpand.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/irexpand.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} irexpand.spad ; \
	rm -f ${DOC}/irexpand.spad.pamphlet ; \
	rm -f ${DOC}/irexpand.spad.tex ; \
	rm -f ${DOC}/irexpand.spad )

@
\subsection{irsn.spad \cite{1}}
<<irsn.spad (SPAD from IN)>>=
${OUTSRC}/irsn.spad: ${IN}/irsn.spad.pamphlet
	@ echo 2156 making ${OUTSRC}/irsn.spad from ${IN}/irsn.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/irsn.spad.pamphlet >irsn.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IRSN.o (O from NRLIB)>>=
${OUT}/IRSN.o: ${MID}/IRSN.NRLIB
	@ echo 2157-13 making ${OUT}/IRSN.o from ${MID}/IRSN.NRLIB
	@ cp ${MID}/IRSN.NRLIB/code.o ${OUT}/IRSN.o

@
<<IRSN.NRLIB (NRLIB from MID)>>=
${MID}/IRSN.NRLIB: ${MID}/IRSN.spad
	@ echo 2158 making ${MID}/IRSN.NRLIB from ${MID}/IRSN.spad
	@ (cd ${MID} ; 	echo ')co IRSN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IRSN.spad (SPAD from IN)>>=
${MID}/IRSN.spad: ${IN}/irsn.spad.pamphlet
	@ echo 2159 making ${MID}/IRSN.spad from ${IN}/irsn.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IRSN.NRLIB ; \
	${TANGLE} -R"package IRSN IrrRepSymNatPackage" ${IN}/irsn.spad.pamphlet >IRSN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<irsn.spad.dvi (DOC from IN)>>=
${DOC}/irsn.spad.dvi: ${IN}/irsn.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2160 making ${DOC}/irsn.spad.dvi from ${IN}/irsn.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/irsn.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} irsn.spad ; \
	rm -f ${DOC}/irsn.spad.pamphlet ; \
	rm -f ${DOC}/irsn.spad.tex ; \
	rm -f ${DOC}/irsn.spad )

@
\subsection{ituple.spad \cite{1}}
<<ituple.spad (SPAD from IN)>>=
${OUTSRC}/ituple.spad: ${IN}/ituple.spad.pamphlet
	@ echo 2161 making ${OUTSRC}/ituple.spad from ${IN}/ituple.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/ituple.spad.pamphlet >ituple.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ITFUN2.o (O from NRLIB)>>=
${OUT}/ITFUN2.o: ${MID}/ITFUN2.NRLIB
	@ echo 2162-1 making ${OUT}/ITFUN2.o from ${MID}/ITFUN2.NRLIB
	@ cp ${MID}/ITFUN2.NRLIB/code.o ${OUT}/ITFUN2.o

@
<<ITFUN2.NRLIB (NRLIB from MID)>>=
${MID}/ITFUN2.NRLIB: ${MID}/ITFUN2.spad
	@ echo 2163 making ${MID}/ITFUN2.NRLIB from ${MID}/ITFUN2.spad
	@ (cd ${MID} ; 	echo ')co ITFUN2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ITFUN2.spad (SPAD from IN)>>=
${MID}/ITFUN2.spad: ${IN}/ituple.spad.pamphlet
	@ echo 2164 making ${MID}/ITFUN2.spad from ${IN}/ituple.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ITFUN2.NRLIB ; \
	${TANGLE} -R"package ITFUN2 InfiniteTupleFunctions2" ${IN}/ituple.spad.pamphlet >ITFUN2.spad )

@
<<ITFUN3.o (O from NRLIB)>>=
${OUT}/ITFUN3.o: ${MID}/ITFUN3.NRLIB
	@ echo 2165-1 making ${OUT}/ITFUN3.o from ${MID}/ITFUN3.NRLIB
	@ cp ${MID}/ITFUN3.NRLIB/code.o ${OUT}/ITFUN3.o

@
<<ITFUN3.NRLIB (NRLIB from MID)>>=
${MID}/ITFUN3.NRLIB: ${MID}/ITFUN3.spad
	@ echo 2166 making ${MID}/ITFUN3.NRLIB from ${MID}/ITFUN3.spad
	@ (cd ${MID} ; 	echo ')co ITFUN3.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ITFUN3.spad (SPAD from IN)>>=
${MID}/ITFUN3.spad: ${IN}/ituple.spad.pamphlet
	@ echo 2167 making ${MID}/ITFUN3.spad from ${IN}/ituple.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ITFUN3.NRLIB ; \
	${TANGLE} -R"package ITFUN3 InfiniteTupleFunctions3" ${IN}/ituple.spad.pamphlet >ITFUN3.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ITUPLE.o (O from NRLIB)>>=
${OUT}/ITUPLE.o: ${MID}/ITUPLE.NRLIB
	@ echo 2168-1 making ${OUT}/ITUPLE.o from ${MID}/ITUPLE.NRLIB
	@ cp ${MID}/ITUPLE.NRLIB/code.o ${OUT}/ITUPLE.o

@
<<ITUPLE.NRLIB (NRLIB from MID)>>=
${MID}/ITUPLE.NRLIB: ${MID}/ITUPLE.spad
	@ echo 2169 making ${MID}/ITUPLE.NRLIB from ${MID}/ITUPLE.spad
	@ (cd ${MID} ; 	echo ')co ITUPLE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ITUPLE.spad (SPAD from IN)>>=
${MID}/ITUPLE.spad: ${IN}/ituple.spad.pamphlet
	@ echo 2170 making ${MID}/ITUPLE.spad from ${IN}/ituple.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ITUPLE.NRLIB ; \
	${TANGLE} -R"domain ITUPLE InfiniteTuple" ${IN}/ituple.spad.pamphlet >ITUPLE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ituple.spad.dvi (DOC from IN)>>=
${DOC}/ituple.spad.dvi: ${IN}/ituple.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2171 making ${DOC}/ituple.spad.dvi from ${IN}/ituple.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/ituple.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} ituple.spad ; \
	rm -f ${DOC}/ituple.spad.pamphlet ; \
	rm -f ${DOC}/ituple.spad.tex ; \
	rm -f ${DOC}/ituple.spad )

@
\subsection{iviews.as \cite{1}}
<<iviews.as (SPAD from IN)>>=
${OUTSRC}/iviews.as: ${IN}/iviews.as.pamphlet
	@ echo 2172 making ${OUTSRC}/iviews.as from ${IN}/iviews.as.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/iviews.as.pamphlet >iviews.as )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<iviews.as.dvi (DOC from IN)>>=
${DOC}/iviews.as.dvi: ${IN}/iviews.as.pamphlet ${DOC}/axiom.sty
	@ echo 2173 making ${DOC}/iviews.as.dvi from ${IN}/iviews.as.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/iviews.as.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} iviews.as ; \
	rm -f ${DOC}/iviews.as.pamphlet ; \
	rm -f ${DOC}/iviews.as.tex ; \
	rm -f ${DOC}/iviews.as )

@
\subsection{kl.spad \cite{1}}
<<kl.spad (SPAD from IN)>>=
${OUTSRC}/kl.spad: ${IN}/kl.spad.pamphlet
	@ echo 2174 making ${OUTSRC}/kl.spad from ${IN}/kl.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/kl.spad.pamphlet >kl.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CACHSET.o (O from NRLIB)>>=
${OUT}/CACHSET.o: ${MID}/CACHSET.NRLIB
	@ echo 2175-5 making ${OUT}/CACHSET.o from ${MID}/CACHSET.NRLIB
	@ cp ${MID}/CACHSET.NRLIB/code.o ${OUT}/CACHSET.o

@
<<CACHSET.NRLIB (NRLIB from MID)>>=
${MID}/CACHSET.NRLIB: ${MID}/CACHSET.spad
	@ echo 2176 making ${MID}/CACHSET.NRLIB from ${MID}/CACHSET.spad
	@ (cd ${MID} ; 	echo ')co CACHSET.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CACHSET.spad (SPAD from IN)>>=
${MID}/CACHSET.spad: ${IN}/kl.spad.pamphlet
	@ echo 2177 making ${MID}/CACHSET.spad from ${IN}/kl.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CACHSET.NRLIB ; \
	${TANGLE} -R"category CACHSET CachableSet" ${IN}/kl.spad.pamphlet >CACHSET.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<KERNEL.o (O from NRLIB)>>=
${OUT}/KERNEL.o: ${MID}/KERNEL.NRLIB
	@ echo 2178-19 making ${OUT}/KERNEL.o from ${MID}/KERNEL.NRLIB
	@ cp ${MID}/KERNEL.NRLIB/code.o ${OUT}/KERNEL.o

@
<<KERNEL.NRLIB (NRLIB from MID)>>=
${MID}/KERNEL.NRLIB: ${MID}/KERNEL.spad
	@ echo 2179 making ${MID}/KERNEL.NRLIB from ${MID}/KERNEL.spad
	@ (cd ${MID} ; 	echo ')co KERNEL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<KERNEL.spad (SPAD from IN)>>=
${MID}/KERNEL.spad: ${IN}/kl.spad.pamphlet
	@ echo 2180 making ${MID}/KERNEL.spad from ${IN}/kl.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf KERNEL.NRLIB ; \
	${TANGLE} -R"domain KERNEL Kernel" ${IN}/kl.spad.pamphlet >KERNEL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<KERNEL2.o (O from NRLIB)>>=
${OUT}/KERNEL2.o: ${MID}/KERNEL2.NRLIB
	@ echo 2181-5 making ${OUT}/KERNEL2.o from ${MID}/KERNEL2.NRLIB
	@ cp ${MID}/KERNEL2.NRLIB/code.o ${OUT}/KERNEL2.o

@
<<KERNEL2.NRLIB (NRLIB from MID)>>=
${MID}/KERNEL2.NRLIB: ${MID}/KERNEL2.spad
	@ echo 2182 making ${MID}/KERNEL2.NRLIB from ${MID}/KERNEL2.spad
	@ (cd ${MID} ; 	echo ')co KERNEL2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<KERNEL2.spad (SPAD from IN)>>=
${MID}/KERNEL2.spad: ${IN}/kl.spad.pamphlet
	@ echo 2183 making ${MID}/KERNEL2.spad from ${IN}/kl.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf KERNEL2.NRLIB ; \
	${TANGLE} -R"package KERNEL2 KernelFunctions2" ${IN}/kl.spad.pamphlet >KERNEL2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MKCHSET.o (O from NRLIB)>>=
${OUT}/MKCHSET.o: ${MID}/MKCHSET.NRLIB
	@ echo 2184-6 making ${OUT}/MKCHSET.o from ${MID}/MKCHSET.NRLIB
	@ cp ${MID}/MKCHSET.NRLIB/code.o ${OUT}/MKCHSET.o

@
<<MKCHSET.NRLIB (NRLIB from MID)>>=
${MID}/MKCHSET.NRLIB: ${MID}/MKCHSET.spad
	@ echo 2185 making ${MID}/MKCHSET.NRLIB from ${MID}/MKCHSET.spad
	@ (cd ${MID} ; 	echo ')co MKCHSET.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MKCHSET.spad (SPAD from IN)>>=
${MID}/MKCHSET.spad: ${IN}/kl.spad.pamphlet
	@ echo 2186 making ${MID}/MKCHSET.spad from ${IN}/kl.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MKCHSET.NRLIB ; \
	${TANGLE} -R"domain MKCHSET MakeCachableSet" ${IN}/kl.spad.pamphlet >MKCHSET.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SCACHE.o (O from NRLIB)>>=
${OUT}/SCACHE.o: ${MID}/SCACHE.NRLIB
	@ echo 2187-10 making ${OUT}/SCACHE.o from ${MID}/SCACHE.NRLIB
	@ cp ${MID}/SCACHE.NRLIB/code.o ${OUT}/SCACHE.o

@
<<SCACHE.NRLIB (NRLIB from MID)>>=
${MID}/SCACHE.NRLIB: ${MID}/SCACHE.spad
	@ echo 2188 making ${MID}/SCACHE.NRLIB from ${MID}/SCACHE.spad
	@ (cd ${MID} ; 	echo ')co SCACHE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SCACHE.spad (SPAD from IN)>>=
${MID}/SCACHE.spad: ${IN}/kl.spad.pamphlet
	@ echo 2189 making ${MID}/SCACHE.spad from ${IN}/kl.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SCACHE.NRLIB ; \
	${TANGLE} -R"package SCACHE SortedCache" ${IN}/kl.spad.pamphlet >SCACHE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<kl.spad.dvi (DOC from IN)>>=
${DOC}/kl.spad.dvi: ${IN}/kl.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2190 making ${DOC}/kl.spad.dvi from ${IN}/kl.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/kl.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} kl.spad ; \
	rm -f ${DOC}/kl.spad.pamphlet ; \
	rm -f ${DOC}/kl.spad.tex ; \
	rm -f ${DOC}/kl.spad )

@
\subsection{kovacic.spad \cite{1}}
<<kovacic.spad (SPAD from IN)>>=
${OUTSRC}/kovacic.spad: ${IN}/kovacic.spad.pamphlet
	@ echo 2191 making ${OUTSRC}/kovacic.spad from ${IN}/kovacic.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/kovacic.spad.pamphlet >kovacic.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<KOVACIC.o (O from NRLIB)>>=
${OUT}/KOVACIC.o: ${MID}/KOVACIC.NRLIB
	@ echo 2192-20 making ${OUT}/KOVACIC.o from ${MID}/KOVACIC.NRLIB
	@ cp ${MID}/KOVACIC.NRLIB/code.o ${OUT}/KOVACIC.o

@
<<KOVACIC.NRLIB (NRLIB from MID)>>=
${MID}/KOVACIC.NRLIB: ${MID}/KOVACIC.spad
	@ echo 2193 making ${MID}/KOVACIC.NRLIB from ${MID}/KOVACIC.spad
	@ (cd ${MID} ; 	echo ')co KOVACIC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<KOVACIC.spad (SPAD from IN)>>=
${MID}/KOVACIC.spad: ${IN}/kovacic.spad.pamphlet
	@ echo 2194 making ${MID}/KOVACIC.spad from ${IN}/kovacic.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf KOVACIC.NRLIB ; \
	${TANGLE} -R"package KOVACIC Kovacic" ${IN}/kovacic.spad.pamphlet >KOVACIC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<kovacic.spad.dvi (DOC from IN)>>=
${DOC}/kovacic.spad.dvi: ${IN}/kovacic.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2195 making ${DOC}/kovacic.spad.dvi from ${IN}/kovacic.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/kovacic.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} kovacic.spad ; \
	rm -f ${DOC}/kovacic.spad.pamphlet ; \
	rm -f ${DOC}/kovacic.spad.tex ; \
	rm -f ${DOC}/kovacic.spad )

@
\subsection{laplace.spad \cite{1}}
<<laplace.spad (SPAD from IN)>>=
${OUTSRC}/laplace.spad: ${IN}/laplace.spad.pamphlet
	@ echo 2196 making ${OUTSRC}/laplace.spad from ${IN}/laplace.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/laplace.spad.pamphlet >laplace.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INVLAPLA.o (O from NRLIB)>>=
${OUT}/INVLAPLA.o: ${MID}/INVLAPLA.NRLIB
	@ echo 2197-21 making ${OUT}/INVLAPLA.o from ${MID}/INVLAPLA.NRLIB
	@ cp ${MID}/INVLAPLA.NRLIB/code.o ${OUT}/INVLAPLA.o

@
<<INVLAPLA.NRLIB (NRLIB from MID)>>=
${MID}/INVLAPLA.NRLIB: ${MID}/INVLAPLA.spad
	@ echo 2198 making ${MID}/INVLAPLA.NRLIB from ${MID}/INVLAPLA.spad
	@ (cd ${MID} ; 	echo ')co INVLAPLA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INVLAPLA.spad (SPAD from IN)>>=
${MID}/INVLAPLA.spad: ${IN}/laplace.spad.pamphlet
	@ echo 2199 making ${MID}/INVLAPLA.spad from ${IN}/laplace.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INVLAPLA.NRLIB ; \
	${TANGLE} -R"package INVLAPLA InverseLaplaceTransform" ${IN}/laplace.spad.pamphlet >INVLAPLA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LAPLACE.o (O from NRLIB)>>=
${OUT}/LAPLACE.o: ${MID}/LAPLACE.NRLIB
	@ echo 2200-21 making ${OUT}/LAPLACE.o from ${MID}/LAPLACE.NRLIB
	@ cp ${MID}/LAPLACE.NRLIB/code.o ${OUT}/LAPLACE.o

@
<<LAPLACE.NRLIB (NRLIB from MID)>>=
${MID}/LAPLACE.NRLIB: ${MID}/LAPLACE.spad
	@ echo 2201 making ${MID}/LAPLACE.NRLIB from ${MID}/LAPLACE.spad
	@ (cd ${MID} ; 	echo ')co LAPLACE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LAPLACE.spad (SPAD from IN)>>=
${MID}/LAPLACE.spad: ${IN}/laplace.spad.pamphlet
	@ echo 2202 making ${MID}/LAPLACE.spad from ${IN}/laplace.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LAPLACE.NRLIB ; \
	${TANGLE} -R"package LAPLACE LaplaceTransform" ${IN}/laplace.spad.pamphlet >LAPLACE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<laplace.spad.dvi (DOC from IN)>>=
${DOC}/laplace.spad.dvi: ${IN}/laplace.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2203 making ${DOC}/laplace.spad.dvi from ${IN}/laplace.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/laplace.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} laplace.spad ; \
	rm -f ${DOC}/laplace.spad.pamphlet ; \
	rm -f ${DOC}/laplace.spad.tex ; \
	rm -f ${DOC}/laplace.spad )

@
\subsection{laurent.spad \cite{1}}
<<laurent.spad (SPAD from IN)>>=
${OUTSRC}/laurent.spad: ${IN}/laurent.spad.pamphlet
	@ echo 2204 making ${OUTSRC}/laurent.spad from ${IN}/laurent.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/laurent.spad.pamphlet >laurent.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ULS.o (O from NRLIB)>>=
${OUT}/ULS.o: ${MID}/ULS.NRLIB
	@ echo 2205-21 making ${OUT}/ULS.o from ${MID}/ULS.NRLIB
	@ cp ${MID}/ULS.NRLIB/code.o ${OUT}/ULS.o

@
<<ULS.NRLIB (NRLIB from MID)>>=
${MID}/ULS.NRLIB: ${MID}/ULS.spad
	@ echo 2206 making ${MID}/ULS.NRLIB from ${MID}/ULS.spad
	@ (cd ${MID} ; 	echo ')co ULS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ULS.spad (SPAD from IN)>>=
${MID}/ULS.spad: ${IN}/laurent.spad.pamphlet
	@ echo 2207 making ${MID}/ULS.spad from ${IN}/laurent.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ULS.NRLIB ; \
	${TANGLE} -R"domain ULS UnivariateLaurentSeries" ${IN}/laurent.spad.pamphlet >ULS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ULSCCAT-.o (O from NRLIB)>>=
${OUT}/ULSCCAT-.o: ${MID}/ULSCCAT.NRLIB
	@ echo 2208-20 making ${OUT}/ULSCCAT-.o from ${MID}/ULSCCAT-.NRLIB
	@ cp ${MID}/ULSCCAT-.NRLIB/code.o ${OUT}/ULSCCAT-.o

@
<<ULSCCAT-.NRLIB (NRLIB from MID)>>=
${MID}/ULSCCAT-.NRLIB: ${MID}/ULSCCAT.spad 
	@ echo 2209 making ${MID}/ULSCCAT-.NRLIB from ${MID}/ULSCCAT.spad
	@ (cd ${MID} ; 	echo ')co ULSCCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ULSCCAT.o (O from NRLIB)>>=
${OUT}/ULSCCAT.o: ${MID}/ULSCCAT.NRLIB
	@ echo 2210-20 making ${OUT}/ULSCCAT.o from ${MID}/ULSCCAT.NRLIB
	@ cp ${MID}/ULSCCAT.NRLIB/code.o ${OUT}/ULSCCAT.o

@
<<ULSCCAT.NRLIB (NRLIB from MID)>>=
${MID}/ULSCCAT.NRLIB: ${MID}/ULSCCAT.spad
	@ echo 2211 making ${MID}/ULSCCAT.NRLIB from ${MID}/ULSCCAT.spad
	@ (cd ${MID} ; 	echo ')co ULSCCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ULSCCAT.spad (SPAD from IN)>>=
${MID}/ULSCCAT.spad: ${IN}/laurent.spad.pamphlet
	@ echo 2212 making ${MID}/ULSCCAT.spad from ${IN}/laurent.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ULSCCAT.NRLIB ; \
	${TANGLE} -R"category ULSCCAT UnivariateLaurentSeriesConstructorCategory" ${IN}/laurent.spad.pamphlet >ULSCCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ULSCONS.o (O from NRLIB)>>=
${OUT}/ULSCONS.o: ${MID}/ULSCONS.NRLIB
	@ echo 2213-21 making ${OUT}/ULSCONS.o from ${MID}/ULSCONS.NRLIB
	@ cp ${MID}/ULSCONS.NRLIB/code.o ${OUT}/ULSCONS.o

@
<<ULSCONS.NRLIB (NRLIB from MID)>>=
${MID}/ULSCONS.NRLIB: ${MID}/ULSCONS.spad
	@ echo 2214 making ${MID}/ULSCONS.NRLIB from ${MID}/ULSCONS.spad
	@ (cd ${MID} ; 	echo ')co ULSCONS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ULSCONS.spad (SPAD from IN)>>=
${MID}/ULSCONS.spad: ${IN}/laurent.spad.pamphlet
	@ echo 2215 making ${MID}/ULSCONS.spad from ${IN}/laurent.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ULSCONS.NRLIB ; \
	${TANGLE} -R"domain ULSCONS UnivariateLaurentSeriesConstructor" ${IN}/laurent.spad.pamphlet >ULSCONS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ULS2.o (O from NRLIB)>>=
${OUT}/ULS2.o: ${MID}/ULS2.NRLIB
	@ echo 2216-5 making ${OUT}/ULS2.o from ${MID}/ULS2.NRLIB
	@ cp ${MID}/ULS2.NRLIB/code.o ${OUT}/ULS2.o

@
<<ULS2.NRLIB (NRLIB from MID)>>=
${MID}/ULS2.NRLIB: ${MID}/ULS2.spad
	@ echo 2217 making ${MID}/ULS2.NRLIB from ${MID}/ULS2.spad
	@ (cd ${MID} ; 	echo ')co ULS2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ULS2.spad (SPAD from IN)>>=
${MID}/ULS2.spad: ${IN}/laurent.spad.pamphlet
	@ echo 2218 making ${MID}/ULS2.spad from ${IN}/laurent.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ULS2.NRLIB ; \
	${TANGLE} -R"package ULS2 UnivariateLaurentSeriesFunctions2" ${IN}/laurent.spad.pamphlet >ULS2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<laurent.spad.dvi (DOC from IN)>>=
${DOC}/laurent.spad.dvi: ${IN}/laurent.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2219 making ${DOC}/laurent.spad.dvi from ${IN}/laurent.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/laurent.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} laurent.spad ; \
	rm -f ${DOC}/laurent.spad.pamphlet ; \
	rm -f ${DOC}/laurent.spad.tex ; \
	rm -f ${DOC}/laurent.spad )

@
\subsection{leadcdet.spad \cite{1}}
<<leadcdet.spad (SPAD from IN)>>=
${OUTSRC}/leadcdet.spad: ${IN}/leadcdet.spad.pamphlet
	@ echo 2220 making ${OUTSRC}/leadcdet.spad from ${IN}/leadcdet.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/leadcdet.spad.pamphlet >leadcdet.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LEADCDET.o (O from NRLIB)>>=
${OUT}/LEADCDET.o: ${MID}/LEADCDET.NRLIB
	@ echo 2221-14 making ${OUT}/LEADCDET.o from ${MID}/LEADCDET.NRLIB
	@ cp ${MID}/LEADCDET.NRLIB/code.o ${OUT}/LEADCDET.o

@
<<LEADCDET.NRLIB (NRLIB from MID)>>=
${MID}/LEADCDET.NRLIB: ${MID}/LEADCDET.spad
	@ echo 2222 making ${MID}/LEADCDET.NRLIB from ${MID}/LEADCDET.spad
	@ (cd ${MID} ; 	echo ')co LEADCDET.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LEADCDET.spad (SPAD from IN)>>=
${MID}/LEADCDET.spad: ${IN}/leadcdet.spad.pamphlet
	@ echo 2223 making ${MID}/LEADCDET.spad from ${IN}/leadcdet.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LEADCDET.NRLIB ; \
	${TANGLE} -R"package LEADCDET LeadingCoefDetermination" ${IN}/leadcdet.spad.pamphlet >LEADCDET.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<leadcdet.spad.dvi (DOC from IN)>>=
${DOC}/leadcdet.spad.dvi: ${IN}/leadcdet.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2224 making ${DOC}/leadcdet.spad.dvi from ${IN}/leadcdet.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/leadcdet.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} leadcdet.spad ; \
	rm -f ${DOC}/leadcdet.spad.pamphlet ; \
	rm -f ${DOC}/leadcdet.spad.tex ; \
	rm -f ${DOC}/leadcdet.spad )

@
\subsection{lie.spad \cite{1}}
<<lie.spad (SPAD from IN)>>=
${OUTSRC}/lie.spad: ${IN}/lie.spad.pamphlet
	@ echo 2225 making ${OUTSRC}/lie.spad from ${IN}/lie.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/lie.spad.pamphlet >lie.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<JORDAN.o (O from NRLIB)>>=
${OUT}/JORDAN.o: ${MID}/JORDAN.NRLIB
	@ echo 2226-20 making ${OUT}/JORDAN.o from ${MID}/JORDAN.NRLIB
	@ cp ${MID}/JORDAN.NRLIB/code.o ${OUT}/JORDAN.o

@
<<JORDAN.NRLIB (NRLIB from MID)>>=
${MID}/JORDAN.NRLIB: ${MID}/JORDAN.spad
	@ echo 2227 making ${MID}/JORDAN.NRLIB from ${MID}/JORDAN.spad
	@ (cd ${MID} ; 	echo ')co JORDAN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<JORDAN.spad (SPAD from IN)>>=
${MID}/JORDAN.spad: ${IN}/lie.spad.pamphlet
	@ echo 2228 making ${MID}/JORDAN.spad from ${IN}/lie.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf JORDAN.NRLIB ; \
	${TANGLE} -R"domain JORDAN AssociatedJordanAlgebra" ${IN}/lie.spad.pamphlet >JORDAN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LIE.o (O from NRLIB)>>=
${OUT}/LIE.o: ${MID}/LIE.NRLIB
	@ echo 2229-20 making ${OUT}/LIE.o from ${MID}/LIE.NRLIB
	@ cp ${MID}/LIE.NRLIB/code.o ${OUT}/LIE.o

@
<<LIE.NRLIB (NRLIB from MID)>>=
${MID}/LIE.NRLIB: ${MID}/LIE.spad
	@ echo 2230 making ${MID}/LIE.NRLIB from ${MID}/LIE.spad
	@ (cd ${MID} ; 	echo ')co LIE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LIE.spad (SPAD from IN)>>=
${MID}/LIE.spad: ${IN}/lie.spad.pamphlet
	@ echo 2231 making ${MID}/LIE.spad from ${IN}/lie.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LIE.NRLIB ; \
	${TANGLE} -R"domain LIE AssociatedLieAlgebra" ${IN}/lie.spad.pamphlet >LIE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LSQM.o (O from NRLIB)>>=
${OUT}/LSQM.o: ${MID}/LSQM.NRLIB
	@ echo 2232-20 making ${OUT}/LSQM.o from ${MID}/LSQM.NRLIB
	@ cp ${MID}/LSQM.NRLIB/code.o ${OUT}/LSQM.o

@
<<LSQM.NRLIB (NRLIB from MID)>>=
${MID}/LSQM.NRLIB: ${MID}/LSQM.spad
	@ echo 2233 making ${MID}/LSQM.NRLIB from ${MID}/LSQM.spad
	@ (cd ${MID} ; 	echo ')co LSQM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LSQM.spad (SPAD from IN)>>=
${MID}/LSQM.spad: ${IN}/lie.spad.pamphlet
	@ echo 2234 making ${MID}/LSQM.spad from ${IN}/lie.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LSQM.NRLIB ; \
	${TANGLE} -R"domain LSQM LieSquareMatrix" ${IN}/lie.spad.pamphlet >LSQM.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<lie.spad.dvi (DOC from IN)>>=
${DOC}/lie.spad.dvi: ${IN}/lie.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2235 making ${DOC}/lie.spad.dvi from ${IN}/lie.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/lie.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} lie.spad ; \
	rm -f ${DOC}/lie.spad.pamphlet ; \
	rm -f ${DOC}/lie.spad.tex ; \
	rm -f ${DOC}/lie.spad )

@
\subsection{limitps.spad \cite{1}}
<<limitps.spad (SPAD from IN)>>=
${OUTSRC}/limitps.spad: ${IN}/limitps.spad.pamphlet
	@ echo 2236 making ${OUTSRC}/limitps.spad from ${IN}/limitps.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/limitps.spad.pamphlet >limitps.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LIMITPS.o (O from NRLIB)>>=
${OUT}/LIMITPS.o: ${MID}/LIMITPS.NRLIB
	@ echo 2237-21 making ${OUT}/LIMITPS.o from ${MID}/LIMITPS.NRLIB
	@ cp ${MID}/LIMITPS.NRLIB/code.o ${OUT}/LIMITPS.o

@
<<LIMITPS.NRLIB (NRLIB from MID)>>=
${MID}/LIMITPS.NRLIB: ${MID}/LIMITPS.spad
	@ echo 2238 making ${MID}/LIMITPS.NRLIB from ${MID}/LIMITPS.spad
	@ (cd ${MID} ; 	echo ')co LIMITPS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LIMITPS.spad (SPAD from IN)>>=
${MID}/LIMITPS.spad: ${IN}/limitps.spad.pamphlet
	@ echo 2239 making ${MID}/LIMITPS.spad from ${IN}/limitps.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LIMITPS.NRLIB ; \
	${TANGLE} -R"package LIMITPS PowerSeriesLimitPackage" ${IN}/limitps.spad.pamphlet >LIMITPS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SIGNEF.o (O from NRLIB)>>=
${OUT}/SIGNEF.o: ${MID}/SIGNEF.NRLIB
	@ echo 2240-22 making ${OUT}/SIGNEF.o from ${MID}/SIGNEF.NRLIB
	@ cp ${MID}/SIGNEF.NRLIB/code.o ${OUT}/SIGNEF.o

@
<<SIGNEF.NRLIB (NRLIB from MID)>>=
${MID}/SIGNEF.NRLIB: ${MID}/SIGNEF.spad
	@ echo 2241 making ${MID}/SIGNEF.NRLIB from ${MID}/SIGNEF.spad
	@ (cd ${MID} ; 	echo ')co SIGNEF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SIGNEF.spad (SPAD from IN)>>=
${MID}/SIGNEF.spad: ${IN}/limitps.spad.pamphlet
	@ echo 2242 making ${MID}/SIGNEF.spad from ${IN}/limitps.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SIGNEF.NRLIB ; \
	${TANGLE} -R"package SIGNEF ElementaryFunctionSign" ${IN}/limitps.spad.pamphlet >SIGNEF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<limitps.spad.dvi (DOC from IN)>>=
${DOC}/limitps.spad.dvi: ${IN}/limitps.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2243 making ${DOC}/limitps.spad.dvi from ${IN}/limitps.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/limitps.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} limitps.spad ; \
	rm -f ${DOC}/limitps.spad.pamphlet ; \
	rm -f ${DOC}/limitps.spad.tex ; \
	rm -f ${DOC}/limitps.spad )

@
\subsection{lindep.spad \cite{1}}
<<lindep.spad (SPAD from IN)>>=
${OUTSRC}/lindep.spad: ${IN}/lindep.spad.pamphlet
	@ echo 2244 making ${OUTSRC}/lindep.spad from ${IN}/lindep.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/lindep.spad.pamphlet >lindep.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LINDEP.o (O from NRLIB)>>=
${OUT}/LINDEP.o: ${MID}/LINDEP.NRLIB
	@ echo 2245-14 making ${OUT}/LINDEP.o from ${MID}/LINDEP.NRLIB
	@ cp ${MID}/LINDEP.NRLIB/code.o ${OUT}/LINDEP.o

@
<<LINDEP.NRLIB (NRLIB from MID)>>=
${MID}/LINDEP.NRLIB: ${MID}/LINDEP.spad
	@ echo 2246 making ${MID}/LINDEP.NRLIB from ${MID}/LINDEP.spad
	@ (cd ${MID} ; 	echo ')co LINDEP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LINDEP.spad (SPAD from IN)>>=
${MID}/LINDEP.spad: ${IN}/lindep.spad.pamphlet
	@ echo 2247 making ${MID}/LINDEP.spad from ${IN}/lindep.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LINDEP.NRLIB ; \
	${TANGLE} -R"package LINDEP LinearDependence" ${IN}/lindep.spad.pamphlet >LINDEP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ZLINDEP.o (O from NRLIB)>>=
${OUT}/ZLINDEP.o: ${MID}/ZLINDEP.NRLIB
	@ echo 2248-9 making ${OUT}/ZLINDEP.o from ${MID}/ZLINDEP.NRLIB
	@ cp ${MID}/ZLINDEP.NRLIB/code.o ${OUT}/ZLINDEP.o

@
<<ZLINDEP.NRLIB (NRLIB from MID)>>=
${MID}/ZLINDEP.NRLIB: ${MID}/ZLINDEP.spad
	@ echo 2249 making ${MID}/ZLINDEP.NRLIB from ${MID}/ZLINDEP.spad
	@ (cd ${MID} ; 	echo ')co ZLINDEP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ZLINDEP.spad (SPAD from IN)>>=
${MID}/ZLINDEP.spad: ${IN}/lindep.spad.pamphlet
	@ echo 2250 making ${MID}/ZLINDEP.spad from ${IN}/lindep.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ZLINDEP.NRLIB ; \
	${TANGLE} -R"package ZLINDEP IntegerLinearDependence" ${IN}/lindep.spad.pamphlet >ZLINDEP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<lindep.spad.dvi (DOC from IN)>>=
${DOC}/lindep.spad.dvi: ${IN}/lindep.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2251 making ${DOC}/lindep.spad.dvi from ${IN}/lindep.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/lindep.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} lindep.spad ; \
	rm -f ${DOC}/lindep.spad.pamphlet ; \
	rm -f ${DOC}/lindep.spad.tex ; \
	rm -f ${DOC}/lindep.spad )

@
\subsection{lingrob.spad \cite{1}}
<<lingrob.spad (SPAD from IN)>>=
${OUTSRC}/lingrob.spad: ${IN}/lingrob.spad.pamphlet
	@ echo 2252 making ${OUTSRC}/lingrob.spad from ${IN}/lingrob.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/lingrob.spad.pamphlet >lingrob.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LGROBP.o (O from NRLIB)>>=
${OUT}/LGROBP.o: ${MID}/LGROBP.NRLIB
	@ echo 2253-14 making ${OUT}/LGROBP.o from ${MID}/LGROBP.NRLIB
	@ cp ${MID}/LGROBP.NRLIB/code.o ${OUT}/LGROBP.o

@
<<LGROBP.NRLIB (NRLIB from MID)>>=
${MID}/LGROBP.NRLIB: ${MID}/LGROBP.spad
	@ echo 2254 making ${MID}/LGROBP.NRLIB from ${MID}/LGROBP.spad
	@ (cd ${MID} ; 	echo ')co LGROBP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LGROBP.spad (SPAD from IN)>>=
${MID}/LGROBP.spad: ${IN}/lingrob.spad.pamphlet
	@ echo 2255 making ${MID}/LGROBP.spad from ${IN}/lingrob.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LGROBP.NRLIB ; \
	${TANGLE} -R"package LGROBP LinGroebnerPackage" ${IN}/lingrob.spad.pamphlet >LGROBP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<lingrob.spad.dvi (DOC from IN)>>=
${DOC}/lingrob.spad.dvi: ${IN}/lingrob.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2256 making ${DOC}/lingrob.spad.dvi from ${IN}/lingrob.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/lingrob.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} lingrob.spad ; \
	rm -f ${DOC}/lingrob.spad.pamphlet ; \
	rm -f ${DOC}/lingrob.spad.tex ; \
	rm -f ${DOC}/lingrob.spad )

@
\subsection{liouv.spad \cite{1}}
<<liouv.spad (SPAD from IN)>>=
${OUTSRC}/liouv.spad: ${IN}/liouv.spad.pamphlet
	@ echo 2257 making ${OUTSRC}/liouv.spad from ${IN}/liouv.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/liouv.spad.pamphlet >liouv.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LF.o (O from NRLIB)>>=
${OUT}/LF.o: ${MID}/LF.NRLIB
	@ echo 2258-20 making ${OUT}/LF.o from ${MID}/LF.NRLIB
	@ cp ${MID}/LF.NRLIB/code.o ${OUT}/LF.o

@
<<LF.NRLIB (NRLIB from MID)>>=
${MID}/LF.NRLIB: ${MID}/LF.spad
	@ echo 2259 making ${MID}/LF.NRLIB from ${MID}/LF.spad
	@ (cd ${MID} ; 	echo ')co LF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LF.spad (SPAD from IN)>>=
${MID}/LF.spad: ${IN}/liouv.spad.pamphlet
	@ echo 2260 making ${MID}/LF.spad from ${IN}/liouv.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LF.NRLIB ; \
	${TANGLE} -R"package LF LiouvillianFunction" ${IN}/liouv.spad.pamphlet >LF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<liouv.spad.dvi (DOC from IN)>>=
${DOC}/liouv.spad.dvi: ${IN}/liouv.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2261 making ${DOC}/liouv.spad.dvi from ${IN}/liouv.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/liouv.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} liouv.spad ; \
	rm -f ${DOC}/liouv.spad.pamphlet ; \
	rm -f ${DOC}/liouv.spad.tex ; \
	rm -f ${DOC}/liouv.spad )

@
\subsection{listgcd.spad \cite{1}}
<<listgcd.spad (SPAD from IN)>>=
${OUTSRC}/listgcd.spad: ${IN}/listgcd.spad.pamphlet
	@ echo 2262 making ${OUTSRC}/listgcd.spad from ${IN}/listgcd.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/listgcd.spad.pamphlet >listgcd.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<HEUGCD.o (O from NRLIB)>>=
${OUT}/HEUGCD.o: ${MID}/HEUGCD.NRLIB
	@ echo 2263-14 making ${OUT}/HEUGCD.o from ${MID}/HEUGCD.NRLIB
	@ cp ${MID}/HEUGCD.NRLIB/code.o ${OUT}/HEUGCD.o

@
<<HEUGCD.NRLIB (NRLIB from MID)>>=
${MID}/HEUGCD.NRLIB: ${MID}/HEUGCD.spad
	@ echo 2264 making ${MID}/HEUGCD.NRLIB from ${MID}/HEUGCD.spad
	@ (cd ${MID} ; 	echo ')co HEUGCD.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<HEUGCD.spad (SPAD from IN)>>=
${MID}/HEUGCD.spad: ${IN}/listgcd.spad.pamphlet
	@ echo 2265 making ${MID}/HEUGCD.spad from ${IN}/listgcd.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf HEUGCD.NRLIB ; \
	${TANGLE} -R"package HEUGCD HeuGcd" ${IN}/listgcd.spad.pamphlet >HEUGCD.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<listgcd.spad.dvi (DOC from IN)>>=
${DOC}/listgcd.spad.dvi: ${IN}/listgcd.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2266 making ${DOC}/listgcd.spad.dvi from ${IN}/listgcd.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/listgcd.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} listgcd.spad ; \
	rm -f ${DOC}/listgcd.spad.pamphlet ; \
	rm -f ${DOC}/listgcd.spad.tex ; \
	rm -f ${DOC}/listgcd.spad )

@
\subsection{list.spad \cite{1}}
<<list.spad (SPAD from IN)>>=
${OUTSRC}/list.spad: ${IN}/list.spad.pamphlet
	@ echo 2267 making ${OUTSRC}/list.spad from ${IN}/list.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/list.spad.pamphlet >list.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ILIST.o (O from NRLIB)>>=
${OUT}/ILIST.o: ${MID}/ILIST.NRLIB
	@ echo 2268-0c making ${OUT}/ILIST.o from ${MID}/ILIST.NRLIB
	@ cp ${MID}/ILIST.NRLIB/code.o ${OUT}/ILIST.o

@
<<ILIST.NRLIB (NRLIB from MID)>>=
${MID}/ILIST.NRLIB: ${MID}/ILIST.spad
	@ echo 2269 making ${MID}/ILIST.NRLIB from ${MID}/ILIST.spad
	@ (cd ${MID} ; 	echo ')co ILIST.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ILIST.spad (SPAD from IN)>>=
${MID}/ILIST.spad: ${IN}/list.spad.pamphlet
	@ echo 2270 making ${MID}/ILIST.spad from ${IN}/list.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ILIST.NRLIB ; \
	${TANGLE} -R"domain ILIST IndexedList" ${IN}/list.spad.pamphlet >ILIST.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ILIST.o (BOOTSTRAP from MID)>>=
${MID}/ILIST.o: ${MID}/ILIST.lsp
	@ echo 2271-0b making ${MID}/ILIST.o from ${MID}/ILIST.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "ILIST.lsp" :output-file "ILIST.o"))' | ${DEPSYS} )
	@ cp ${MID}/ILIST.o ${OUT}/ILIST.o

@
<<ILIST.lsp (LISP from IN)>>=
${MID}/ILIST.lsp: ${IN}/list.spad.pamphlet
	@ echo 2272 making ${MID}/ILIST.lsp from ${IN}/list.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ILIST.NRLIB ; \
	rm -rf ${OUT}/ILIST.o ; \
	${TANGLE} -R"ILIST.lsp BOOTSTRAP" ${IN}/list.spad.pamphlet >ILIST.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LIST.o (O from NRLIB)>>=
${OUT}/LIST.o: ${MID}/LIST.NRLIB
	@ echo 2273-0c making ${OUT}/LIST.o from ${MID}/LIST.NRLIB
	@ cp ${MID}/LIST.NRLIB/code.o ${OUT}/LIST.o

@
<<LIST.NRLIB (NRLIB from MID)>>=
${MID}/LIST.NRLIB: ${MID}/LIST.spad
	@ echo 2274 making ${MID}/LIST.NRLIB from ${MID}/LIST.spad
	@ (cd ${MID} ; 	echo ')co LIST.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LIST.spad (SPAD from IN)>>=
${MID}/LIST.spad: ${IN}/list.spad.pamphlet
	@ echo 2275 making ${MID}/LIST.spad from ${IN}/list.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LIST.NRLIB ; \
	${TANGLE} -R"domain LIST List" ${IN}/list.spad.pamphlet >LIST.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LIST.o (BOOTSTRAP from MID)>>=
${MID}/LIST.o: ${MID}/LIST.lsp
	@ echo 2276-0b making ${MID}/LIST.o from ${MID}/LIST.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "LIST.lsp" :output-file "LIST.o"))' | ${DEPSYS} )
	@ cp ${MID}/LIST.o ${OUT}/LIST.o

@
<<LIST.lsp (LISP from IN)>>=
${MID}/LIST.lsp: ${IN}/list.spad.pamphlet
	@ echo 2277 making ${MID}/LIST.lsp from ${IN}/list.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LIST.NRLIB ; \
	rm -rf ${OUT}/LIST.o ; \
	${TANGLE} -R"LIST.lsp BOOTSTRAP" ${IN}/list.spad.pamphlet >LIST.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ALIST.o (O from NRLIB)>>=
${OUT}/ALIST.o: ${MID}/ALIST.NRLIB
	@ echo 2278-18 making ${OUT}/ALIST.o from ${MID}/ALIST.NRLIB
	@ cp ${MID}/ALIST.NRLIB/code.o ${OUT}/ALIST.o

@
<<ALIST.NRLIB (NRLIB from MID)>>=
${MID}/ALIST.NRLIB: ${MID}/ALIST.spad
	@ echo 2279 making ${MID}/ALIST.NRLIB from ${MID}/ALIST.spad
	@ (cd ${MID} ; 	echo ')co ALIST.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ALIST.spad (SPAD from IN)>>=
${MID}/ALIST.spad: ${IN}/list.spad.pamphlet
	@ echo 2280 making ${MID}/ALIST.spad from ${IN}/list.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ALIST.NRLIB ; \
	${TANGLE} -R"domain ALIST AssociationList" ${IN}/list.spad.pamphlet >ALIST.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LIST2.o (O from NRLIB)>>=
${OUT}/LIST2.o: ${MID}/LIST2.NRLIB
	@ echo 2281-10 making ${OUT}/LIST2.o from ${MID}/LIST2.NRLIB
	@ cp ${MID}/LIST2.NRLIB/code.o ${OUT}/LIST2.o

@
<<LIST2.NRLIB (NRLIB from MID)>>=
${MID}/LIST2.NRLIB: ${MID}/LIST2.spad
	@ echo 2282 making ${MID}/LIST2.NRLIB from ${MID}/LIST2.spad
	@ (cd ${MID} ; 	echo ')co LIST2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LIST2.spad (SPAD from IN)>>=
${MID}/LIST2.spad: ${IN}/list.spad.pamphlet
	@ echo 2283 making ${MID}/LIST2.spad from ${IN}/list.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LIST2.NRLIB ; \
	${TANGLE} -R"package LIST2 ListFunctions2" ${IN}/list.spad.pamphlet >LIST2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LIST2MAP.o (O from NRLIB)>>=
${OUT}/LIST2MAP.o: ${MID}/LIST2MAP.NRLIB
	@ echo 2284-10 making ${OUT}/LIST2MAP.o from ${MID}/LIST2MAP.NRLIB
	@ cp ${MID}/LIST2MAP.NRLIB/code.o ${OUT}/LIST2MAP.o

@
<<LIST2MAP.NRLIB (NRLIB from MID)>>=
${MID}/LIST2MAP.NRLIB: ${MID}/LIST2MAP.spad
	@ echo 2285 making ${MID}/LIST2MAP.NRLIB from ${MID}/LIST2MAP.spad
	@ (cd ${MID} ; 	echo ')co LIST2MAP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LIST2MAP.spad (SPAD from IN)>>=
${MID}/LIST2MAP.spad: ${IN}/list.spad.pamphlet
	@ echo 2286 making ${MID}/LIST2MAP.spad from ${IN}/list.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LIST2MAP.NRLIB ; \
	${TANGLE} -R"package LIST2MAP ListToMap" ${IN}/list.spad.pamphlet >LIST2MAP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LIST3.o (O from NRLIB)>>=
${OUT}/LIST3.o: ${MID}/LIST3.NRLIB
	@ echo 2287-3 making ${OUT}/LIST3.o from ${MID}/LIST3.NRLIB
	@ cp ${MID}/LIST3.NRLIB/code.o ${OUT}/LIST3.o

@
<<LIST3.NRLIB (NRLIB from MID)>>=
${MID}/LIST3.NRLIB: ${MID}/LIST3.spad
	@ echo 2288 making ${MID}/LIST3.NRLIB from ${MID}/LIST3.spad
	@ (cd ${MID} ; 	echo ')co LIST3.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LIST3.spad (SPAD from IN)>>=
${MID}/LIST3.spad: ${IN}/list.spad.pamphlet
	@ echo 2289 making ${MID}/LIST3.spad from ${IN}/list.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LIST3.NRLIB ; \
	${TANGLE} -R"package LIST3 ListFunctions3" ${IN}/list.spad.pamphlet >LIST3.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<list.spad.dvi (DOC from IN)>>=
${DOC}/list.spad.dvi: ${IN}/list.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2290 making ${DOC}/list.spad.dvi from ${IN}/list.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/list.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} list.spad ; \
	rm -f ${DOC}/list.spad.pamphlet ; \
	rm -f ${DOC}/list.spad.tex ; \
	rm -f ${DOC}/list.spad )

@
\subsection{lmdict.spad \cite{1}}
<<lmdict.spad (SPAD from IN)>>=
${OUTSRC}/lmdict.spad: ${IN}/lmdict.spad.pamphlet
	@ echo 2291 making ${OUTSRC}/lmdict.spad from ${IN}/lmdict.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/lmdict.spad.pamphlet >lmdict.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LMDICT.o (O from NRLIB)>>=
${OUT}/LMDICT.o: ${MID}/LMDICT.NRLIB
	@ echo 2292-19 making ${OUT}/LMDICT.o from ${MID}/LMDICT.NRLIB
	@ cp ${MID}/LMDICT.NRLIB/code.o ${OUT}/LMDICT.o

@
<<LMDICT.NRLIB (NRLIB from MID)>>=
${MID}/LMDICT.NRLIB: ${MID}/LMDICT.spad
	@ echo 2293 making ${MID}/LMDICT.NRLIB from ${MID}/LMDICT.spad
	@ (cd ${MID} ; 	echo ')co LMDICT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LMDICT.spad (SPAD from IN)>>=
${MID}/LMDICT.spad: ${IN}/lmdict.spad.pamphlet
	@ echo 2294 making ${MID}/LMDICT.spad from ${IN}/lmdict.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LMDICT.NRLIB ; \
	${TANGLE} -R"domain LMDICT ListMultiDictionary" ${IN}/lmdict.spad.pamphlet >LMDICT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<lmdict.spad.dvi (DOC from IN)>>=
${DOC}/lmdict.spad.dvi: ${IN}/lmdict.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2295 making ${DOC}/lmdict.spad.dvi from ${IN}/lmdict.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/lmdict.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} lmdict.spad ; \
	rm -f ${DOC}/lmdict.spad.pamphlet ; \
	rm -f ${DOC}/lmdict.spad.tex ; \
	rm -f ${DOC}/lmdict.spad )

@
\subsection{lodof.spad \cite{1}}
<<lodof.spad (SPAD from IN)>>=
${OUTSRC}/lodof.spad: ${IN}/lodof.spad.pamphlet
	@ echo 2296 making ${OUTSRC}/lodof.spad from ${IN}/lodof.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/lodof.spad.pamphlet >lodof.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASSOCEQ.o (O from NRLIB)>>=
${OUT}/ASSOCEQ.o: ${MID}/ASSOCEQ.NRLIB
	@ echo 2297-13 making ${OUT}/ASSOCEQ.o from ${MID}/ASSOCEQ.NRLIB
	@ cp ${MID}/ASSOCEQ.NRLIB/code.o ${OUT}/ASSOCEQ.o

@
<<ASSOCEQ.NRLIB (NRLIB from MID)>>=
${MID}/ASSOCEQ.NRLIB: ${MID}/ASSOCEQ.spad
	@ echo 2298 making ${MID}/ASSOCEQ.NRLIB from ${MID}/ASSOCEQ.spad
	@ (cd ${MID} ; 	echo ')co ASSOCEQ.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ASSOCEQ.spad (SPAD from IN)>>=
${MID}/ASSOCEQ.spad: ${IN}/lodof.spad.pamphlet
	@ echo 2299 making ${MID}/ASSOCEQ.spad from ${IN}/lodof.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ASSOCEQ.NRLIB ; \
	${TANGLE} -R"package ASSOCEQ AssociatedEquations" ${IN}/lodof.spad.pamphlet >ASSOCEQ.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LODOF.o (O from NRLIB)>>=
${OUT}/LODOF.o: ${MID}/LODOF.NRLIB
	@ echo 2300-20 making ${OUT}/LODOF.o from ${MID}/LODOF.NRLIB
	@ cp ${MID}/LODOF.NRLIB/code.o ${OUT}/LODOF.o

@
<<LODOF.NRLIB (NRLIB from MID)>>=
${MID}/LODOF.NRLIB: ${MID}/LODOF.spad
	@ echo 2301 making ${MID}/LODOF.NRLIB from ${MID}/LODOF.spad
	@ (cd ${MID} ; 	echo ')co LODOF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LODOF.spad (SPAD from IN)>>=
${MID}/LODOF.spad: ${IN}/lodof.spad.pamphlet
	@ echo 2302 making ${MID}/LODOF.spad from ${IN}/lodof.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LODOF.NRLIB ; \
	${TANGLE} -R"package LODOF LinearOrdinaryDifferentialOperatorFactorizer" ${IN}/lodof.spad.pamphlet >LODOF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PREASSOC.o (O from NRLIB)>>=
${OUT}/PREASSOC.o: ${MID}/PREASSOC.NRLIB
	@ echo 2303-11 making ${OUT}/PREASSOC.o from ${MID}/PREASSOC.NRLIB
	@ cp ${MID}/PREASSOC.NRLIB/code.o ${OUT}/PREASSOC.o

@
<<PREASSOC.NRLIB (NRLIB from MID)>>=
${MID}/PREASSOC.NRLIB: ${MID}/PREASSOC.spad
	@ echo 2304 making ${MID}/PREASSOC.NRLIB from ${MID}/PREASSOC.spad
	@ (cd ${MID} ; 	echo ')co PREASSOC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PREASSOC.spad (SPAD from IN)>>=
${MID}/PREASSOC.spad: ${IN}/lodof.spad.pamphlet
	@ echo 2305 making ${MID}/PREASSOC.spad from ${IN}/lodof.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PREASSOC.NRLIB ; \
	${TANGLE} -R"package PREASSOC PrecomputedAssociatedEquations" ${IN}/lodof.spad.pamphlet >PREASSOC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SETMN.o (O from NRLIB)>>=
${OUT}/SETMN.o: ${MID}/SETMN.NRLIB
	@ echo 2306-13 making ${OUT}/SETMN.o from ${MID}/SETMN.NRLIB
	@ cp ${MID}/SETMN.NRLIB/code.o ${OUT}/SETMN.o

@
<<SETMN.NRLIB (NRLIB from MID)>>=
${MID}/SETMN.NRLIB: ${MID}/SETMN.spad
	@ echo 2307 making ${MID}/SETMN.NRLIB from ${MID}/SETMN.spad
	@ (cd ${MID} ; 	echo ')co SETMN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SETMN.spad (SPAD from IN)>>=
${MID}/SETMN.spad: ${IN}/lodof.spad.pamphlet
	@ echo 2308 making ${MID}/SETMN.spad from ${IN}/lodof.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SETMN.NRLIB ; \
	${TANGLE} -R"domain SETMN SetOfMIntegersInOneToN" ${IN}/lodof.spad.pamphlet >SETMN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<lodof.spad.dvi (DOC from IN)>>=
${DOC}/lodof.spad.dvi: ${IN}/lodof.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2309 making ${DOC}/lodof.spad.dvi from ${IN}/lodof.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/lodof.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} lodof.spad ; \
	rm -f ${DOC}/lodof.spad.pamphlet ; \
	rm -f ${DOC}/lodof.spad.tex ; \
	rm -f ${DOC}/lodof.spad )

@
\subsection{lodop.spad \cite{1}}
<<lodop.spad (SPAD from IN)>>=
${OUTSRC}/lodop.spad: ${IN}/lodop.spad.pamphlet
	@ echo 2310 making ${OUTSRC}/lodop.spad from ${IN}/lodop.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/lodop.spad.pamphlet >lodop.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DPMO.o (O from NRLIB)>>=
${OUT}/DPMO.o: ${MID}/DPMO.NRLIB
	@ echo 2311-14 making ${OUT}/DPMO.o from ${MID}/DPMO.NRLIB
	@ cp ${MID}/DPMO.NRLIB/code.o ${OUT}/DPMO.o

@
<<DPMO.NRLIB (NRLIB from MID)>>=
${MID}/DPMO.NRLIB: ${MID}/DPMO.spad
	@ echo 2312 making ${MID}/DPMO.NRLIB from ${MID}/DPMO.spad
	@ (cd ${MID} ; 	echo ')co DPMO.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DPMO.spad (SPAD from IN)>>=
${MID}/DPMO.spad: ${IN}/lodop.spad.pamphlet
	@ echo 2313 making ${MID}/DPMO.spad from ${IN}/lodop.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DPMO.NRLIB ; \
	${TANGLE} -R"domain DPMO DirectProductModule" ${IN}/lodop.spad.pamphlet >DPMO.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DPMM.o (O from NRLIB)>>=
${OUT}/DPMM.o: ${MID}/DPMM.NRLIB
	@ echo 2314-16 making ${OUT}/DPMM.o from ${MID}/DPMM.NRLIB
	@ cp ${MID}/DPMM.NRLIB/code.o ${OUT}/DPMM.o

@
<<DPMM.NRLIB (NRLIB from MID)>>=
${MID}/DPMM.NRLIB: ${MID}/DPMM.spad
	@ echo 2315 making ${MID}/DPMM.NRLIB from ${MID}/DPMM.spad
	@ (cd ${MID} ; 	echo ')co DPMM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DPMM.spad (SPAD from IN)>>=
${MID}/DPMM.spad: ${IN}/lodop.spad.pamphlet
	@ echo 2316 making ${MID}/DPMM.spad from ${IN}/lodop.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DPMM.NRLIB ; \
	${TANGLE} -R"domain DPMM DirectProductMatrixModule" ${IN}/lodop.spad.pamphlet >DPMM.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MLO.o (O from NRLIB)>>=
${OUT}/MLO.o: ${MID}/MLO.NRLIB
	@ echo 2317-8 making ${OUT}/MLO.o from ${MID}/MLO.NRLIB
	@ cp ${MID}/MLO.NRLIB/code.o ${OUT}/MLO.o

@
<<MLO.NRLIB (NRLIB from MID)>>=
${MID}/MLO.NRLIB: ${MID}/MLO.spad
	@ echo 2318 making ${MID}/MLO.NRLIB from ${MID}/MLO.spad
	@ (cd ${MID} ; 	echo ')co MLO.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MLO.spad (SPAD from IN)>>=
${MID}/MLO.spad: ${IN}/lodop.spad.pamphlet
	@ echo 2319 making ${MID}/MLO.spad from ${IN}/lodop.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MLO.NRLIB ; \
	${TANGLE} -R"category MLO MonogenicLinearOperator" ${IN}/lodop.spad.pamphlet >MLO.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NCODIV.o (O from NRLIB)>>=
${OUT}/NCODIV.o: ${MID}/NCODIV.NRLIB
	@ echo 2320-10 making ${OUT}/NCODIV.o from ${MID}/NCODIV.NRLIB
	@ cp ${MID}/NCODIV.NRLIB/code.o ${OUT}/NCODIV.o

@
<<NCODIV.NRLIB (NRLIB from MID)>>=
${MID}/NCODIV.NRLIB: ${MID}/NCODIV.spad
	@ echo 2321 making ${MID}/NCODIV.NRLIB from ${MID}/NCODIV.spad
	@ (cd ${MID} ; 	echo ')co NCODIV.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NCODIV.spad (SPAD from IN)>>=
${MID}/NCODIV.spad: ${IN}/lodop.spad.pamphlet
	@ echo 2322 making ${MID}/NCODIV.spad from ${IN}/lodop.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NCODIV.NRLIB ; \
	${TANGLE} -R"package NCODIV NonCommutativeOperatorDivision" ${IN}/lodop.spad.pamphlet >NCODIV.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODR.o (O from NRLIB)>>=
${OUT}/ODR.o: ${MID}/ODR.NRLIB
	@ echo 2323-10 making ${OUT}/ODR.o from ${MID}/ODR.NRLIB
	@ cp ${MID}/ODR.NRLIB/code.o ${OUT}/ODR.o

@
<<ODR.NRLIB (NRLIB from MID)>>=
${MID}/ODR.NRLIB: ${MID}/ODR.spad
	@ echo 2324 making ${MID}/ODR.NRLIB from ${MID}/ODR.spad
	@ (cd ${MID} ; 	echo ')co ODR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODR.spad (SPAD from IN)>>=
${MID}/ODR.spad: ${IN}/lodop.spad.pamphlet
	@ echo 2325 making ${MID}/ODR.spad from ${IN}/lodop.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ODR.NRLIB ; \
	${TANGLE} -R"domain ODR OrdinaryDifferentialRing" ${IN}/lodop.spad.pamphlet >ODR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OMLO.o (O from NRLIB)>>=
${OUT}/OMLO.o: ${MID}/OMLO.NRLIB
	@ echo 2326-9 making ${OUT}/OMLO.o from ${MID}/OMLO.NRLIB
	@ cp ${MID}/OMLO.NRLIB/code.o ${OUT}/OMLO.o

@
<<OMLO.NRLIB (NRLIB from MID)>>=
${MID}/OMLO.NRLIB: ${MID}/OMLO.spad
	@ echo 2327 making ${MID}/OMLO.NRLIB from ${MID}/OMLO.spad
	@ (cd ${MID} ; 	echo ')co OMLO.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OMLO.spad (SPAD from IN)>>=
${MID}/OMLO.spad: ${IN}/lodop.spad.pamphlet
	@ echo 2328 making ${MID}/OMLO.spad from ${IN}/lodop.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OMLO.NRLIB ; \
	${TANGLE} -R"domain OMLO OppositeMonogenicLinearOperator" ${IN}/lodop.spad.pamphlet >OMLO.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<lodop.spad.dvi (DOC from IN)>>=
${DOC}/lodop.spad.dvi: ${IN}/lodop.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2329 making ${DOC}/lodop.spad.dvi from ${IN}/lodop.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/lodop.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} lodop.spad ; \
	rm -f ${DOC}/lodop.spad.pamphlet ; \
	rm -f ${DOC}/lodop.spad.tex ; \
	rm -f ${DOC}/lodop.spad )

@
\subsection{lodo.spad \cite{1}}
<<lodo.spad (SPAD from IN)>>=
${OUTSRC}/lodo.spad: ${IN}/lodo.spad.pamphlet
	@ echo 2330 making ${OUTSRC}/lodo.spad from ${IN}/lodo.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/lodo.spad.pamphlet >lodo.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LODO.o (O from NRLIB)>>=
${OUT}/LODO.o: ${MID}/LODO.NRLIB
	@ echo 2331-22 making ${OUT}/LODO.o from ${MID}/LODO.NRLIB
	@ cp ${MID}/LODO.NRLIB/code.o ${OUT}/LODO.o

@
<<LODO.NRLIB (NRLIB from MID)>>=
${MID}/LODO.NRLIB: ${MID}/LODO.spad
	@ echo 2332 making ${MID}/LODO.NRLIB from ${MID}/LODO.spad
	@ (cd ${MID} ; 	echo ')co LODO.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LODO.spad (SPAD from IN)>>=
${MID}/LODO.spad: ${IN}/lodo.spad.pamphlet
	@ echo 2333 making ${MID}/LODO.spad from ${IN}/lodo.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LODO.NRLIB ; \
	${TANGLE} -R"domain LODO LinearOrdinaryDifferentialOperator" ${IN}/lodo.spad.pamphlet >LODO.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LODO1.o (O from NRLIB)>>=
${OUT}/LODO1.o: ${MID}/LODO1.NRLIB
	@ echo 2334-22 making ${OUT}/LODO1.o from ${MID}/LODO1.NRLIB
	@ cp ${MID}/LODO1.NRLIB/code.o ${OUT}/LODO1.o

@
<<LODO1.NRLIB (NRLIB from MID)>>=
${MID}/LODO1.NRLIB: ${MID}/LODO1.spad
	@ echo 2335 making ${MID}/LODO1.NRLIB from ${MID}/LODO1.spad
	@ (cd ${MID} ; 	echo ')co LODO1.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LODO1.spad (SPAD from IN)>>=
${MID}/LODO1.spad: ${IN}/lodo.spad.pamphlet
	@ echo 2336 making ${MID}/LODO1.spad from ${IN}/lodo.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LODO1.NRLIB ; \
	${TANGLE} -R"domain LODO1 LinearOrdinaryDifferentialOperator1" ${IN}/lodo.spad.pamphlet >LODO1.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LODO2.o (O from NRLIB)>>=
${OUT}/LODO2.o: ${MID}/LODO2.NRLIB
	@ echo 2337-22 making ${OUT}/LODO2.o from ${MID}/LODO2.NRLIB
	@ cp ${MID}/LODO2.NRLIB/code.o ${OUT}/LODO2.o

@
<<LODO2.NRLIB (NRLIB from MID)>>=
${MID}/LODO2.NRLIB: ${MID}/LODO2.spad
	@ echo 2338 making ${MID}/LODO2.NRLIB from ${MID}/LODO2.spad
	@ (cd ${MID} ; 	echo ')co LODO2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LODO2.spad (SPAD from IN)>>=
${MID}/LODO2.spad: ${IN}/lodo.spad.pamphlet
	@ echo 2339 making ${MID}/LODO2.spad from ${IN}/lodo.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LODO2.NRLIB ; \
	${TANGLE} -R"domain LODO2 LinearOrdinaryDifferentialOperator2" ${IN}/lodo.spad.pamphlet >LODO2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LODOCAT-.o (O from NRLIB)>>=
${OUT}/LODOCAT-.o: ${MID}/LODOCAT.NRLIB
	@ echo 2340-11 making ${OUT}/LODOCAT-.o from ${MID}/LODOCAT-.NRLIB
	@ cp ${MID}/LODOCAT-.NRLIB/code.o ${OUT}/LODOCAT-.o

@
<<LODOCAT-.NRLIB (NRLIB from MID)>>=
${MID}/LODOCAT-.NRLIB: ${MID}/LODOCAT.spad 
	@ echo 2341 making ${MID}/LODOCAT-.NRLIB from ${MID}/LODOCAT.spad
	@ (cd ${MID} ; 	echo ')co LODOCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LODOCAT.o (O from NRLIB)>>=
${OUT}/LODOCAT.o: ${MID}/LODOCAT.NRLIB
	@ echo 2342-11 making ${OUT}/LODOCAT.o from ${MID}/LODOCAT.NRLIB
	@ cp ${MID}/LODOCAT.NRLIB/code.o ${OUT}/LODOCAT.o

@
<<LODOCAT.NRLIB (NRLIB from MID)>>=
${MID}/LODOCAT.NRLIB: ${MID}/LODOCAT.spad
	@ echo 2343 making ${MID}/LODOCAT.NRLIB from ${MID}/LODOCAT.spad
	@ (cd ${MID} ; 	echo ')co LODOCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LODOCAT.spad (SPAD from IN)>>=
${MID}/LODOCAT.spad: ${IN}/lodo.spad.pamphlet
	@ echo 2344 making ${MID}/LODOCAT.spad from ${IN}/lodo.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LODOCAT.NRLIB ; \
	${TANGLE} -R"category LODOCAT LinearOrdinaryDifferentialOperatorCategory" ${IN}/lodo.spad.pamphlet >LODOCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LODOOPS.o (O from NRLIB)>>=
${OUT}/LODOOPS.o: ${MID}/LODOOPS.NRLIB
	@ echo 2345-19 making ${OUT}/LODOOPS.o from ${MID}/LODOOPS.NRLIB
	@ cp ${MID}/LODOOPS.NRLIB/code.o ${OUT}/LODOOPS.o

@
<<LODOOPS.NRLIB (NRLIB from MID)>>=
${MID}/LODOOPS.NRLIB: ${MID}/LODOOPS.spad
	@ echo 2346 making ${MID}/LODOOPS.NRLIB from ${MID}/LODOOPS.spad
	@ (cd ${MID} ; 	echo ')co LODOOPS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LODOOPS.spad (SPAD from IN)>>=
${MID}/LODOOPS.spad: ${IN}/lodo.spad.pamphlet
	@ echo 2347 making ${MID}/LODOOPS.spad from ${IN}/lodo.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LODOOPS.NRLIB ; \
	${TANGLE} -R"package LODOOPS LinearOrdinaryDifferentialOperatorsOps" ${IN}/lodo.spad.pamphlet >LODOOPS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<lodo.spad.dvi (DOC from IN)>>=
${DOC}/lodo.spad.dvi: ${IN}/lodo.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2348 making ${DOC}/lodo.spad.dvi from ${IN}/lodo.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/lodo.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} lodo.spad ; \
	rm -f ${DOC}/lodo.spad.pamphlet ; \
	rm -f ${DOC}/lodo.spad.tex ; \
	rm -f ${DOC}/lodo.spad )

@
\subsection{manip.spad \cite{1}}
<<manip.spad (SPAD from IN)>>=
${OUTSRC}/manip.spad: ${IN}/manip.spad.pamphlet
	@ echo 2349 making ${OUTSRC}/manip.spad from ${IN}/manip.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/manip.spad.pamphlet >manip.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ALGMANIP.o (O from NRLIB)>>=
${OUT}/ALGMANIP.o: ${MID}/ALGMANIP.NRLIB
	@ echo 2350-20 making ${OUT}/ALGMANIP.o from ${MID}/ALGMANIP.NRLIB
	@ cp ${MID}/ALGMANIP.NRLIB/code.o ${OUT}/ALGMANIP.o

@
<<ALGMANIP.NRLIB (NRLIB from MID)>>=
${MID}/ALGMANIP.NRLIB: ${MID}/ALGMANIP.spad
	@ echo 2351 making ${MID}/ALGMANIP.NRLIB from ${MID}/ALGMANIP.spad
	@ (cd ${MID} ; 	echo ')co ALGMANIP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ALGMANIP.spad (SPAD from IN)>>=
${MID}/ALGMANIP.spad: ${IN}/manip.spad.pamphlet
	@ echo 2352 making ${MID}/ALGMANIP.spad from ${IN}/manip.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ALGMANIP.NRLIB ; \
	${TANGLE} -R"package ALGMANIP AlgebraicManipulations" ${IN}/manip.spad.pamphlet >ALGMANIP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FACTFUNC.o (O from NRLIB)>>=
${OUT}/FACTFUNC.o: ${MID}/FACTFUNC.NRLIB
	@ echo 2353-8 making ${OUT}/FACTFUNC.o from ${MID}/FACTFUNC.NRLIB
	@ cp ${MID}/FACTFUNC.NRLIB/code.o ${OUT}/FACTFUNC.o

@
<<FACTFUNC.NRLIB (NRLIB from MID)>>=
${MID}/FACTFUNC.NRLIB: ${MID}/FACTFUNC.spad
	@ echo 2354 making ${MID}/FACTFUNC.NRLIB from ${MID}/FACTFUNC.spad
	@ (cd ${MID} ; 	echo ')co FACTFUNC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FACTFUNC.spad (SPAD from IN)>>=
${MID}/FACTFUNC.spad: ${IN}/manip.spad.pamphlet
	@ echo 2355 making ${MID}/FACTFUNC.spad from ${IN}/manip.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FACTFUNC.NRLIB ; \
	${TANGLE} -R"package FACTFUNC FactoredFunctions" ${IN}/manip.spad.pamphlet >FACTFUNC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<POLYROOT.o (O from NRLIB)>>=
${OUT}/POLYROOT.o: ${MID}/POLYROOT.NRLIB
	@ echo 2356-14 making ${OUT}/POLYROOT.o from ${MID}/POLYROOT.NRLIB
	@ cp ${MID}/POLYROOT.NRLIB/code.o ${OUT}/POLYROOT.o

@
<<POLYROOT.NRLIB (NRLIB from MID)>>=
${MID}/POLYROOT.NRLIB: ${MID}/POLYROOT.spad
	@ echo 2357 making ${MID}/POLYROOT.NRLIB from ${MID}/POLYROOT.spad
	@ (cd ${MID} ; 	echo ')co POLYROOT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<POLYROOT.spad (SPAD from IN)>>=
${MID}/POLYROOT.spad: ${IN}/manip.spad.pamphlet
	@ echo 2358 making ${MID}/POLYROOT.spad from ${IN}/manip.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf POLYROOT.NRLIB ; \
	${TANGLE} -R"package POLYROOT PolynomialRoots" ${IN}/manip.spad.pamphlet >POLYROOT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SIMPAN.o (O from NRLIB)>>=
${OUT}/SIMPAN.o: ${MID}/SIMPAN.NRLIB
	@ echo 2359-20 making ${OUT}/SIMPAN.o from ${MID}/SIMPAN.NRLIB
	@ cp ${MID}/SIMPAN.NRLIB/code.o ${OUT}/SIMPAN.o

@
<<SIMPAN.NRLIB (NRLIB from MID)>>=
${MID}/SIMPAN.NRLIB: ${MID}/SIMPAN.spad
	@ echo 2360 making ${MID}/SIMPAN.NRLIB from ${MID}/SIMPAN.spad
	@ (cd ${MID} ; 	echo ')co SIMPAN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SIMPAN.spad (SPAD from IN)>>=
${MID}/SIMPAN.spad: ${IN}/manip.spad.pamphlet
	@ echo 2361 making ${MID}/SIMPAN.spad from ${IN}/manip.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SIMPAN.NRLIB ; \
	${TANGLE} -R"package SIMPAN SimplifyAlgebraicNumberConvertPackage" ${IN}/manip.spad.pamphlet >SIMPAN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TRMANIP.o (O from NRLIB)>>=
${OUT}/TRMANIP.o: ${MID}/TRMANIP.NRLIB
	@ echo 2362-20 making ${OUT}/TRMANIP.o from ${MID}/TRMANIP.NRLIB
	@ cp ${MID}/TRMANIP.NRLIB/code.o ${OUT}/TRMANIP.o

@
<<TRMANIP.NRLIB (NRLIB from MID)>>=
${MID}/TRMANIP.NRLIB: ${MID}/TRMANIP.spad
	@ echo 2363 making ${MID}/TRMANIP.NRLIB from ${MID}/TRMANIP.spad
	@ (cd ${MID} ; 	echo ')co TRMANIP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TRMANIP.spad (SPAD from IN)>>=
${MID}/TRMANIP.spad: ${IN}/manip.spad.pamphlet
	@ echo 2364 making ${MID}/TRMANIP.spad from ${IN}/manip.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf TRMANIP.NRLIB ; \
	${TANGLE} -R"package TRMANIP TranscendentalManipulations" ${IN}/manip.spad.pamphlet >TRMANIP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<manip.spad.dvi (DOC from IN)>>=
${DOC}/manip.spad.dvi: ${IN}/manip.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2365 making ${DOC}/manip.spad.dvi from ${IN}/manip.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/manip.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} manip.spad ; \
	rm -f ${DOC}/manip.spad.pamphlet ; \
	rm -f ${DOC}/manip.spad.tex ; \
	rm -f ${DOC}/manip.spad )

@
\subsection{mappkg.spad \cite{1}}
<<mappkg.spad (SPAD from IN)>>=
${OUTSRC}/mappkg.spad: ${IN}/mappkg.spad.pamphlet
	@ echo 2366 making ${OUTSRC}/mappkg.spad from ${IN}/mappkg.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/mappkg.spad.pamphlet >mappkg.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MAPHACK1.o (O from NRLIB)>>=
${OUT}/MAPHACK1.o: ${MID}/MAPHACK1.NRLIB
	@ echo 2367-4 making ${OUT}/MAPHACK1.o from ${MID}/MAPHACK1.NRLIB
	@ cp ${MID}/MAPHACK1.NRLIB/code.o ${OUT}/MAPHACK1.o

@
<<MAPHACK1.NRLIB (NRLIB from MID)>>=
${MID}/MAPHACK1.NRLIB: ${MID}/MAPHACK1.spad
	@ echo 2368 making ${MID}/MAPHACK1.NRLIB from ${MID}/MAPHACK1.spad
	@ (cd ${MID} ; 	echo ')co MAPHACK1.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MAPHACK1.spad (SPAD from IN)>>=
${MID}/MAPHACK1.spad: ${IN}/mappkg.spad.pamphlet
	@ echo 2369 making ${MID}/MAPHACK1.spad from ${IN}/mappkg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MAPHACK1.NRLIB ; \
	${TANGLE} -R"package MAPHACK1 MappingPackageInternalHacks1" ${IN}/mappkg.spad.pamphlet >MAPHACK1.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MAPHACK2.o (O from NRLIB)>>=
${OUT}/MAPHACK2.o: ${MID}/MAPHACK2.NRLIB
	@ echo 2370-4 making ${OUT}/MAPHACK2.o from ${MID}/MAPHACK2.NRLIB
	@ cp ${MID}/MAPHACK2.NRLIB/code.o ${OUT}/MAPHACK2.o

@
<<MAPHACK2.NRLIB (NRLIB from MID)>>=
${MID}/MAPHACK2.NRLIB: ${MID}/MAPHACK2.spad
	@ echo 2371 making ${MID}/MAPHACK2.NRLIB from ${MID}/MAPHACK2.spad
	@ (cd ${MID} ; 	echo ')co MAPHACK2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MAPHACK2.spad (SPAD from IN)>>=
${MID}/MAPHACK2.spad: ${IN}/mappkg.spad.pamphlet
	@ echo 2372 making ${MID}/MAPHACK2.spad from ${IN}/mappkg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MAPHACK2.NRLIB ; \
	${TANGLE} -R"package MAPHACK2 MappingPackageInternalHacks2" ${IN}/mappkg.spad.pamphlet >MAPHACK2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MAPHACK3.o (O from NRLIB)>>=
${OUT}/MAPHACK3.o: ${MID}/MAPHACK3.NRLIB
	@ echo 2373-4 making ${OUT}/MAPHACK3.o from ${MID}/MAPHACK3.NRLIB
	@ cp ${MID}/MAPHACK3.NRLIB/code.o ${OUT}/MAPHACK3.o

@
<<MAPHACK3.NRLIB (NRLIB from MID)>>=
${MID}/MAPHACK3.NRLIB: ${MID}/MAPHACK3.spad
	@ echo 2374 making ${MID}/MAPHACK3.NRLIB from ${MID}/MAPHACK3.spad
	@ (cd ${MID} ; 	echo ')co MAPHACK3.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MAPHACK3.spad (SPAD from IN)>>=
${MID}/MAPHACK3.spad: ${IN}/mappkg.spad.pamphlet
	@ echo 2375 making ${MID}/MAPHACK3.spad from ${IN}/mappkg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MAPHACK3.NRLIB ; \
	${TANGLE} -R"package MAPHACK3 MappingPackageInternalHacks3" ${IN}/mappkg.spad.pamphlet >MAPHACK3.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MAPPKG1.o (O from NRLIB)>>=
${OUT}/MAPPKG1.o: ${MID}/MAPPKG1.NRLIB
	@ echo 2376-4 making ${OUT}/MAPPKG1.o from ${MID}/MAPPKG1.NRLIB
	@ cp ${MID}/MAPPKG1.NRLIB/code.o ${OUT}/MAPPKG1.o

@
<<MAPPKG1.NRLIB (NRLIB from MID)>>=
${MID}/MAPPKG1.NRLIB: ${MID}/MAPPKG1.spad
	@ echo 2377 making ${MID}/MAPPKG1.NRLIB from ${MID}/MAPPKG1.spad
	@ (cd ${MID} ; 	echo ')co MAPPKG1.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MAPPKG1.spad (SPAD from IN)>>=
${MID}/MAPPKG1.spad: ${IN}/mappkg.spad.pamphlet
	@ echo 2378 making ${MID}/MAPPKG1.spad from ${IN}/mappkg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MAPPKG1.NRLIB ; \
	${TANGLE} -R"package MAPPKG1 MappingPackage1" ${IN}/mappkg.spad.pamphlet >MAPPKG1.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MAPPKG2.o (O from NRLIB)>>=
${OUT}/MAPPKG2.o: ${MID}/MAPPKG2.NRLIB
	@ echo 2379-4 making ${OUT}/MAPPKG2.o from ${MID}/MAPPKG2.NRLIB
	@ cp ${MID}/MAPPKG2.NRLIB/code.o ${OUT}/MAPPKG2.o

@
<<MAPPKG2.NRLIB (NRLIB from MID)>>=
${MID}/MAPPKG2.NRLIB: ${MID}/MAPPKG2.spad
	@ echo 2380 making ${MID}/MAPPKG2.NRLIB from ${MID}/MAPPKG2.spad
	@ (cd ${MID} ; 	echo ')co MAPPKG2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MAPPKG2.spad (SPAD from IN)>>=
${MID}/MAPPKG2.spad: ${IN}/mappkg.spad.pamphlet
	@ echo 2381 making ${MID}/MAPPKG2.spad from ${IN}/mappkg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MAPPKG2.NRLIB ; \
	${TANGLE} -R"package MAPPKG2 MappingPackage2" ${IN}/mappkg.spad.pamphlet >MAPPKG2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MAPPKG3.o (O from NRLIB)>>=
${OUT}/MAPPKG3.o: ${MID}/MAPPKG3.NRLIB
	@ echo 2382-4 making ${OUT}/MAPPKG3.o from ${MID}/MAPPKG3.NRLIB
	@ cp ${MID}/MAPPKG3.NRLIB/code.o ${OUT}/MAPPKG3.o

@
<<MAPPKG3.NRLIB (NRLIB from MID)>>=
${MID}/MAPPKG3.NRLIB: ${MID}/MAPPKG3.spad
	@ echo 2383 making ${MID}/MAPPKG3.NRLIB from ${MID}/MAPPKG3.spad
	@ (cd ${MID} ; 	echo ')co MAPPKG3.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MAPPKG3.spad (SPAD from IN)>>=
${MID}/MAPPKG3.spad: ${IN}/mappkg.spad.pamphlet
	@ echo 2384 making ${MID}/MAPPKG3.spad from ${IN}/mappkg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MAPPKG3.NRLIB ; \
	${TANGLE} -R"package MAPPKG3 MappingPackage3" ${IN}/mappkg.spad.pamphlet >MAPPKG3.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<mappkg.spad.dvi (DOC from IN)>>=
${DOC}/mappkg.spad.dvi: ${IN}/mappkg.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2385 making ${DOC}/mappkg.spad.dvi from ${IN}/mappkg.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/mappkg.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} mappkg.spad ; \
	rm -f ${DOC}/mappkg.spad.pamphlet ; \
	rm -f ${DOC}/mappkg.spad.tex ; \
	rm -f ${DOC}/mappkg.spad )

@
\subsection{matcat.spad \cite{1}}
<<matcat.spad (SPAD from IN)>>=
${OUTSRC}/matcat.spad: ${IN}/matcat.spad.pamphlet
	@ echo 2386 making ${OUTSRC}/matcat.spad from ${IN}/matcat.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/matcat.spad.pamphlet >matcat.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MATCAT-.o (O from NRLIB)>>=
${OUT}/MATCAT-.o: ${MID}/MATCAT.NRLIB
	@ echo 2387-11 making ${OUT}/MATCAT-.o from ${MID}/MATCAT-.NRLIB
	@ cp ${MID}/MATCAT-.NRLIB/code.o ${OUT}/MATCAT-.o

@
<<MATCAT-.NRLIB (NRLIB from MID)>>=
${MID}/MATCAT-.NRLIB: ${MID}/MATCAT.spad 
	@ echo 2388 making ${MID}/MATCAT-.NRLIB from ${MID}/MATCAT.spad
	@ (cd ${MID} ; 	echo ')co MATCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MATCAT.o (O from NRLIB)>>=
${OUT}/MATCAT.o: ${MID}/MATCAT.NRLIB
	@ echo 2389-11 making ${OUT}/MATCAT.o from ${MID}/MATCAT.NRLIB
	@ cp ${MID}/MATCAT.NRLIB/code.o ${OUT}/MATCAT.o

@
<<MATCAT.NRLIB (NRLIB from MID)>>=
${MID}/MATCAT.NRLIB: ${MID}/MATCAT.spad
	@ echo 2390 making ${MID}/MATCAT.NRLIB from ${MID}/MATCAT.spad
	@ (cd ${MID} ; 	echo ')co MATCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MATCAT.spad (SPAD from IN)>>=
${MID}/MATCAT.spad: ${IN}/matcat.spad.pamphlet
	@ echo 2391 making ${MID}/MATCAT.spad from ${IN}/matcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MATCAT.NRLIB ; \
	${TANGLE} -R"category MATCAT MatrixCategory" ${IN}/matcat.spad.pamphlet >MATCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RMATCAT-.o (O from NRLIB)>>=
${OUT}/RMATCAT-.o: ${MID}/RMATCAT.NRLIB
	@ echo 2392-14 making ${OUT}/RMATCAT-.o from ${MID}/RMATCAT-.NRLIB
	@ cp ${MID}/RMATCAT-.NRLIB/code.o ${OUT}/RMATCAT-.o

@
<<RMATCAT-.NRLIB (NRLIB from MID)>>=
${MID}/RMATCAT-.NRLIB: ${MID}/RMATCAT.spad 
	@ echo 2393 making ${MID}/RMATCAT-.NRLIB from ${MID}/RMATCAT.spad
	@ (cd ${MID} ; 	echo ')co RMATCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RMATCAT.o (O from NRLIB)>>=
${OUT}/RMATCAT.o: ${MID}/RMATCAT.NRLIB
	@ echo 2394-14 making ${OUT}/RMATCAT.o from ${MID}/RMATCAT.NRLIB
	@ cp ${MID}/RMATCAT.NRLIB/code.o ${OUT}/RMATCAT.o

@
<<RMATCAT.NRLIB (NRLIB from MID)>>=
${MID}/RMATCAT.NRLIB: ${MID}/RMATCAT.spad
	@ echo 2395 making ${MID}/RMATCAT.NRLIB from ${MID}/RMATCAT.spad
	@ (cd ${MID} ; 	echo ')co RMATCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RMATCAT.spad (SPAD from IN)>>=
${MID}/RMATCAT.spad: ${IN}/matcat.spad.pamphlet
	@ echo 2396 making ${MID}/RMATCAT.spad from ${IN}/matcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RMATCAT.NRLIB ; \
	${TANGLE} -R"category RMATCAT RectangularMatrixCategory" ${IN}/matcat.spad.pamphlet >RMATCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SMATCAT-.o (O from NRLIB)>>=
${OUT}/SMATCAT-.o: ${MID}/SMATCAT.NRLIB
	@ echo 2397-15 making ${OUT}/SMATCAT-.o from ${MID}/SMATCAT-.NRLIB
	@ cp ${MID}/SMATCAT-.NRLIB/code.o ${OUT}/SMATCAT-.o

@
<<SMATCAT-.NRLIB (NRLIB from MID)>>=
${MID}/SMATCAT-.NRLIB: ${MID}/SMATCAT.spad 
	@ echo 2398 making ${MID}/SMATCAT-.NRLIB from ${MID}/SMATCAT.spad
	@ (cd ${MID} ; 	echo ')co SMATCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SMATCAT.o (O from NRLIB)>>=
${OUT}/SMATCAT.o: ${MID}/SMATCAT.NRLIB
	@ echo 2399-15 making ${OUT}/SMATCAT.o from ${MID}/SMATCAT.NRLIB
	@ cp ${MID}/SMATCAT.NRLIB/code.o ${OUT}/SMATCAT.o

@
<<SMATCAT.NRLIB (NRLIB from MID)>>=
${MID}/SMATCAT.NRLIB: ${MID}/SMATCAT.spad
	@ echo 2400 making ${MID}/SMATCAT.NRLIB from ${MID}/SMATCAT.spad
	@ (cd ${MID} ; 	echo ')co SMATCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SMATCAT.spad (SPAD from IN)>>=
${MID}/SMATCAT.spad: ${IN}/matcat.spad.pamphlet
	@ echo 2401 making ${MID}/SMATCAT.spad from ${IN}/matcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SMATCAT.NRLIB ; \
	${TANGLE} -R"category SMATCAT SquareMatrixCategory" ${IN}/matcat.spad.pamphlet >SMATCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<matcat.spad.dvi (DOC from IN)>>=
${DOC}/matcat.spad.dvi: ${IN}/matcat.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2402 making ${DOC}/matcat.spad.dvi from ${IN}/matcat.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/matcat.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} matcat.spad ; \
	rm -f ${DOC}/matcat.spad.pamphlet ; \
	rm -f ${DOC}/matcat.spad.tex ; \
	rm -f ${DOC}/matcat.spad )

@
\subsection{matfuns.spad \cite{1}}
<<matfuns.spad (SPAD from IN)>>=
${OUTSRC}/matfuns.spad: ${IN}/matfuns.spad.pamphlet
	@ echo 2403 making ${OUTSRC}/matfuns.spad from ${IN}/matfuns.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/matfuns.spad.pamphlet >matfuns.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IMATLIN.o (O from NRLIB)>>=
${OUT}/IMATLIN.o: ${MID}/IMATLIN.NRLIB
	@ echo 2404-14 making ${OUT}/IMATLIN.o from ${MID}/IMATLIN.NRLIB
	@ cp ${MID}/IMATLIN.NRLIB/code.o ${OUT}/IMATLIN.o

@
<<IMATLIN.NRLIB (NRLIB from MID)>>=
${MID}/IMATLIN.NRLIB: ${MID}/IMATLIN.spad
	@ echo 2405 making ${MID}/IMATLIN.NRLIB from ${MID}/IMATLIN.spad
	@ (cd ${MID} ; 	echo ')co IMATLIN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IMATLIN.spad (SPAD from IN)>>=
${MID}/IMATLIN.spad: ${IN}/matfuns.spad.pamphlet
	@ echo 2406 making ${MID}/IMATLIN.spad from ${IN}/matfuns.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IMATLIN.NRLIB ; \
	${TANGLE} -R"package IMATLIN InnerMatrixLinearAlgebraFunctions" ${IN}/matfuns.spad.pamphlet >IMATLIN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IMATQF.o (O from NRLIB)>>=
${OUT}/IMATQF.o: ${MID}/IMATQF.NRLIB
	@ echo 2407-14 making ${OUT}/IMATQF.o from ${MID}/IMATQF.NRLIB
	@ cp ${MID}/IMATQF.NRLIB/code.o ${OUT}/IMATQF.o

@
<<IMATQF.NRLIB (NRLIB from MID)>>=
${MID}/IMATQF.NRLIB: ${MID}/IMATQF.spad
	@ echo 2408 making ${MID}/IMATQF.NRLIB from ${MID}/IMATQF.spad
	@ (cd ${MID} ; 	echo ')co IMATQF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IMATQF.spad (SPAD from IN)>>=
${MID}/IMATQF.spad: ${IN}/matfuns.spad.pamphlet
	@ echo 2409 making ${MID}/IMATQF.spad from ${IN}/matfuns.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IMATQF.NRLIB ; \
	${TANGLE} -R"package IMATQF InnerMatrixQuotientFieldFunctions" ${IN}/matfuns.spad.pamphlet >IMATQF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MATCAT2.o (O from NRLIB)>>=
${OUT}/MATCAT2.o: ${MID}/MATCAT2.NRLIB
	@ echo 2410-12 making ${OUT}/MATCAT2.o from ${MID}/MATCAT2.NRLIB
	@ cp ${MID}/MATCAT2.NRLIB/code.o ${OUT}/MATCAT2.o

@
<<MATCAT2.NRLIB (NRLIB from MID)>>=
${MID}/MATCAT2.NRLIB: ${MID}/MATCAT2.spad
	@ echo 2411 making ${MID}/MATCAT2.NRLIB from ${MID}/MATCAT2.spad
	@ (cd ${MID} ; 	echo ')co MATCAT2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MATCAT2.spad (SPAD from IN)>>=
${MID}/MATCAT2.spad: ${IN}/matfuns.spad.pamphlet
	@ echo 2412 making ${MID}/MATCAT2.spad from ${IN}/matfuns.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MATCAT2.NRLIB ; \
	${TANGLE} -R"package MATCAT2 MatrixCategoryFunctions2" ${IN}/matfuns.spad.pamphlet >MATCAT2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MATLIN.o (O from NRLIB)>>=
${OUT}/MATLIN.o: ${MID}/MATLIN.NRLIB
	@ echo 2413-14 making ${OUT}/MATLIN.o from ${MID}/MATLIN.NRLIB
	@ cp ${MID}/MATLIN.NRLIB/code.o ${OUT}/MATLIN.o

@
<<MATLIN.NRLIB (NRLIB from MID)>>=
${MID}/MATLIN.NRLIB: ${MID}/MATLIN.spad
	@ echo 2414 making ${MID}/MATLIN.NRLIB from ${MID}/MATLIN.spad
	@ (cd ${MID} ; 	echo ')co MATLIN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MATLIN.spad (SPAD from IN)>>=
${MID}/MATLIN.spad: ${IN}/matfuns.spad.pamphlet
	@ echo 2415 making ${MID}/MATLIN.spad from ${IN}/matfuns.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MATLIN.NRLIB ; \
	${TANGLE} -R"package MATLIN MatrixLinearAlgebraFunctions" ${IN}/matfuns.spad.pamphlet >MATLIN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RMCAT2.o (O from NRLIB)>>=
${OUT}/RMCAT2.o: ${MID}/RMCAT2.NRLIB
	@ echo 2416-15 making ${OUT}/RMCAT2.o from ${MID}/RMCAT2.NRLIB
	@ cp ${MID}/RMCAT2.NRLIB/code.o ${OUT}/RMCAT2.o

@
<<RMCAT2.NRLIB (NRLIB from MID)>>=
${MID}/RMCAT2.NRLIB: ${MID}/RMCAT2.spad
	@ echo 2417 making ${MID}/RMCAT2.NRLIB from ${MID}/RMCAT2.spad
	@ (cd ${MID} ; 	echo ')co RMCAT2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RMCAT2.spad (SPAD from IN)>>=
${MID}/RMCAT2.spad: ${IN}/matfuns.spad.pamphlet
	@ echo 2418 making ${MID}/RMCAT2.spad from ${IN}/matfuns.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RMCAT2.NRLIB ; \
	${TANGLE} -R"package RMCAT2 RectangularMatrixCategoryFunctions2" ${IN}/matfuns.spad.pamphlet >RMCAT2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<matfuns.spad.dvi (DOC from IN)>>=
${DOC}/matfuns.spad.dvi: ${IN}/matfuns.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2419 making ${DOC}/matfuns.spad.dvi from ${IN}/matfuns.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/matfuns.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} matfuns.spad ; \
	rm -f ${DOC}/matfuns.spad.pamphlet ; \
	rm -f ${DOC}/matfuns.spad.tex ; \
	rm -f ${DOC}/matfuns.spad )

@
\subsection{matrix.spad \cite{1}}
<<matrix.spad (SPAD from IN)>>=
${OUTSRC}/matrix.spad: ${IN}/matrix.spad.pamphlet
	@ echo 2420 making ${OUTSRC}/matrix.spad from ${IN}/matrix.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/matrix.spad.pamphlet >matrix.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IMATRIX.o (O from NRLIB)>>=
${OUT}/IMATRIX.o: ${MID}/IMATRIX.NRLIB
	@ echo 2421-12 making ${OUT}/IMATRIX.o from ${MID}/IMATRIX.NRLIB
	@ cp ${MID}/IMATRIX.NRLIB/code.o ${OUT}/IMATRIX.o

@
<<IMATRIX.NRLIB (NRLIB from MID)>>=
${MID}/IMATRIX.NRLIB: ${MID}/IMATRIX.spad
	@ echo 2422 making ${MID}/IMATRIX.NRLIB from ${MID}/IMATRIX.spad
	@ (cd ${MID} ; 	echo ')co IMATRIX.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IMATRIX.spad (SPAD from IN)>>=
${MID}/IMATRIX.spad: ${IN}/matrix.spad.pamphlet
	@ echo 2423 making ${MID}/IMATRIX.spad from ${IN}/matrix.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IMATRIX.NRLIB ; \
	${TANGLE} -R"domain IMATRIX IndexedMatrix" ${IN}/matrix.spad.pamphlet >IMATRIX.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MATRIX.o (O from NRLIB)>>=
${OUT}/MATRIX.o: ${MID}/MATRIX.NRLIB
	@ echo 2424-19 making ${OUT}/MATRIX.o from ${MID}/MATRIX.NRLIB
	@ cp ${MID}/MATRIX.NRLIB/code.o ${OUT}/MATRIX.o

@
<<MATRIX.NRLIB (NRLIB from MID)>>=
${MID}/MATRIX.NRLIB: ${MID}/MATRIX.spad
	@ echo 2425 making ${MID}/MATRIX.NRLIB from ${MID}/MATRIX.spad
	@ (cd ${MID} ; 	echo ')co MATRIX.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MATRIX.spad (SPAD from IN)>>=
${MID}/MATRIX.spad: ${IN}/matrix.spad.pamphlet
	@ echo 2426 making ${MID}/MATRIX.spad from ${IN}/matrix.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MATRIX.NRLIB ; \
	${TANGLE} -R"domain MATRIX Matrix" ${IN}/matrix.spad.pamphlet >MATRIX.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RMATRIX.o (O from NRLIB)>>=
${OUT}/RMATRIX.o: ${MID}/RMATRIX.NRLIB
	@ echo 2427-19 making ${OUT}/RMATRIX.o from ${MID}/RMATRIX.NRLIB
	@ cp ${MID}/RMATRIX.NRLIB/code.o ${OUT}/RMATRIX.o

@
<<RMATRIX.NRLIB (NRLIB from MID)>>=
${MID}/RMATRIX.NRLIB: ${MID}/RMATRIX.spad
	@ echo 2428 making ${MID}/RMATRIX.NRLIB from ${MID}/RMATRIX.spad
	@ (cd ${MID} ; 	echo ')co RMATRIX.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RMATRIX.spad (SPAD from IN)>>=
${MID}/RMATRIX.spad: ${IN}/matrix.spad.pamphlet
	@ echo 2429 making ${MID}/RMATRIX.spad from ${IN}/matrix.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RMATRIX.NRLIB ; \
	${TANGLE} -R"domain RMATRIX RectangularMatrix" ${IN}/matrix.spad.pamphlet >RMATRIX.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SQMATRIX.o (O from NRLIB)>>=
${OUT}/SQMATRIX.o: ${MID}/SQMATRIX.NRLIB
	@ echo 2430-19 making ${OUT}/SQMATRIX.o from ${MID}/SQMATRIX.NRLIB
	@ cp ${MID}/SQMATRIX.NRLIB/code.o ${OUT}/SQMATRIX.o

@
<<SQMATRIX.NRLIB (NRLIB from MID)>>=
${MID}/SQMATRIX.NRLIB: ${MID}/SQMATRIX.spad
	@ echo 2431 making ${MID}/SQMATRIX.NRLIB from ${MID}/SQMATRIX.spad
	@ (cd ${MID} ; 	echo ')co SQMATRIX.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SQMATRIX.spad (SPAD from IN)>>=
${MID}/SQMATRIX.spad: ${IN}/matrix.spad.pamphlet
	@ echo 2432 making ${MID}/SQMATRIX.spad from ${IN}/matrix.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SQMATRIX.NRLIB ; \
	${TANGLE} -R"domain SQMATRIX SquareMatrix" ${IN}/matrix.spad.pamphlet >SQMATRIX.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<matrix.spad.dvi (DOC from IN)>>=
${DOC}/matrix.spad.dvi: ${IN}/matrix.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2433 making ${DOC}/matrix.spad.dvi from ${IN}/matrix.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/matrix.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} matrix.spad ; \
	rm -f ${DOC}/matrix.spad.pamphlet ; \
	rm -f ${DOC}/matrix.spad.tex ; \
	rm -f ${DOC}/matrix.spad )

@
\subsection{matstor.spad \cite{1}}
<<matstor.spad (SPAD from IN)>>=
${OUTSRC}/matstor.spad: ${IN}/matstor.spad.pamphlet
	@ echo 2434 making ${OUTSRC}/matstor.spad from ${IN}/matstor.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/matstor.spad.pamphlet >matstor.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MATSTOR.o (O from NRLIB)>>=
${OUT}/MATSTOR.o: ${MID}/MATSTOR.NRLIB
	@ echo 2435-11 making ${OUT}/MATSTOR.o from ${MID}/MATSTOR.NRLIB
	@ cp ${MID}/MATSTOR.NRLIB/code.o ${OUT}/MATSTOR.o

@
<<MATSTOR.NRLIB (NRLIB from MID)>>=
${MID}/MATSTOR.NRLIB: ${MID}/MATSTOR.spad
	@ echo 2436 making ${MID}/MATSTOR.NRLIB from ${MID}/MATSTOR.spad
	@ (cd ${MID} ; 	echo ')co MATSTOR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MATSTOR.spad (SPAD from IN)>>=
${MID}/MATSTOR.spad: ${IN}/matstor.spad.pamphlet
	@ echo 2437 making ${MID}/MATSTOR.spad from ${IN}/matstor.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MATSTOR.NRLIB ; \
	${TANGLE} -R"package MATSTOR StorageEfficientMatrixOperations" ${IN}/matstor.spad.pamphlet >MATSTOR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<matstor.spad.dvi (DOC from IN)>>=
${DOC}/matstor.spad.dvi: ${IN}/matstor.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2438 making ${DOC}/matstor.spad.dvi from ${IN}/matstor.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/matstor.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} matstor.spad ; \
	rm -f ${DOC}/matstor.spad.pamphlet ; \
	rm -f ${DOC}/matstor.spad.tex ; \
	rm -f ${DOC}/matstor.spad )

@
\subsection{mesh.spad \cite{1}}
<<mesh.spad (SPAD from IN)>>=
${OUTSRC}/mesh.spad: ${IN}/mesh.spad.pamphlet
	@ echo 2439 making ${OUTSRC}/mesh.spad from ${IN}/mesh.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/mesh.spad.pamphlet >mesh.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MESH.o (O from NRLIB)>>=
${OUT}/MESH.o: ${MID}/MESH.NRLIB
	@ echo 2440-10 making ${OUT}/MESH.o from ${MID}/MESH.NRLIB
	@ cp ${MID}/MESH.NRLIB/code.o ${OUT}/MESH.o

@
<<MESH.NRLIB (NRLIB from MID)>>=
${MID}/MESH.NRLIB: ${MID}/MESH.spad
	@ echo 2441 making ${MID}/MESH.NRLIB from ${MID}/MESH.spad
	@ (cd ${MID} ; 	echo ')co MESH.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MESH.spad (SPAD from IN)>>=
${MID}/MESH.spad: ${IN}/mesh.spad.pamphlet
	@ echo 2442 making ${MID}/MESH.spad from ${IN}/mesh.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MESH.NRLIB ; \
	${TANGLE} -R"package MESH MeshCreationRoutinesForThreeDimensions" ${IN}/mesh.spad.pamphlet >MESH.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<mesh.spad.dvi (DOC from IN)>>=
${DOC}/mesh.spad.dvi: ${IN}/mesh.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2443 making ${DOC}/mesh.spad.dvi from ${IN}/mesh.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/mesh.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} mesh.spad ; \
	rm -f ${DOC}/mesh.spad.pamphlet ; \
	rm -f ${DOC}/mesh.spad.tex ; \
	rm -f ${DOC}/mesh.spad )

@
\subsection{mfinfact.spad \cite{1}}
<<mfinfact.spad (SPAD from IN)>>=
${OUTSRC}/mfinfact.spad: ${IN}/mfinfact.spad.pamphlet
	@ echo 2444 making ${OUTSRC}/mfinfact.spad from ${IN}/mfinfact.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/mfinfact.spad.pamphlet >mfinfact.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MFINFACT.o (O from NRLIB)>>=
${OUT}/MFINFACT.o: ${MID}/MFINFACT.NRLIB
	@ echo 2445-14 making ${OUT}/MFINFACT.o from ${MID}/MFINFACT.NRLIB
	@ cp ${MID}/MFINFACT.NRLIB/code.o ${OUT}/MFINFACT.o

@
<<MFINFACT.NRLIB (NRLIB from MID)>>=
${MID}/MFINFACT.NRLIB: ${MID}/MFINFACT.spad
	@ echo 2446 making ${MID}/MFINFACT.NRLIB from ${MID}/MFINFACT.spad
	@ (cd ${MID} ; 	echo ')co MFINFACT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MFINFACT.spad (SPAD from IN)>>=
${MID}/MFINFACT.spad: ${IN}/mfinfact.spad.pamphlet
	@ echo 2447 making ${MID}/MFINFACT.spad from ${IN}/mfinfact.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MFINFACT.NRLIB ; \
	${TANGLE} -R"package MFINFACT MultFiniteFactorize" ${IN}/mfinfact.spad.pamphlet >MFINFACT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<mfinfact.spad.dvi (DOC from IN)>>=
${DOC}/mfinfact.spad.dvi: ${IN}/mfinfact.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2448 making ${DOC}/mfinfact.spad.dvi from ${IN}/mfinfact.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/mfinfact.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} mfinfact.spad ; \
	rm -f ${DOC}/mfinfact.spad.pamphlet ; \
	rm -f ${DOC}/mfinfact.spad.tex ; \
	rm -f ${DOC}/mfinfact.spad )

@
\subsection{misc.spad \cite{1}}
<<misc.spad (SPAD from IN)>>=
${OUTSRC}/misc.spad: ${IN}/misc.spad.pamphlet
	@ echo 2449 making ${OUTSRC}/misc.spad from ${IN}/misc.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/misc.spad.pamphlet >misc.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SAOS.o (O from NRLIB)>>=
${OUT}/SAOS.o: ${MID}/SAOS.NRLIB
	@ echo 2450-19 making ${OUT}/SAOS.o from ${MID}/SAOS.NRLIB
	@ cp ${MID}/SAOS.NRLIB/code.o ${OUT}/SAOS.o

@
<<SAOS.NRLIB (NRLIB from MID)>>=
${MID}/SAOS.NRLIB: ${MID}/SAOS.spad
	@ echo 2451 making ${MID}/SAOS.NRLIB from ${MID}/SAOS.spad
	@ (cd ${MID} ; 	echo ')co SAOS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SAOS.spad (SPAD from IN)>>=
${MID}/SAOS.spad: ${IN}/misc.spad.pamphlet
	@ echo 2452 making ${MID}/SAOS.spad from ${IN}/misc.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SAOS.NRLIB ; \
	${TANGLE} -R"domain SAOS SingletonAsOrderedSet" ${IN}/misc.spad.pamphlet >SAOS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<misc.spad.dvi (DOC from IN)>>=
${DOC}/misc.spad.dvi: ${IN}/misc.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2453 making ${DOC}/misc.spad.dvi from ${IN}/misc.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/misc.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} misc.spad ; \
	rm -f ${DOC}/misc.spad.pamphlet ; \
	rm -f ${DOC}/misc.spad.tex ; \
	rm -f ${DOC}/misc.spad )

@
\subsection{mkfunc.spad \cite{1}}
<<mkfunc.spad (SPAD from IN)>>=
${OUTSRC}/mkfunc.spad: ${IN}/mkfunc.spad.pamphlet
	@ echo 2454 making ${OUTSRC}/mkfunc.spad from ${IN}/mkfunc.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/mkfunc.spad.pamphlet >mkfunc.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INFORM.o (O from NRLIB)>>=
${OUT}/INFORM.o: ${MID}/INFORM.NRLIB
	@ echo 2455-19 making ${OUT}/INFORM.o from ${MID}/INFORM.NRLIB
	@ cp ${MID}/INFORM.NRLIB/code.o ${OUT}/INFORM.o

@
<<INFORM.NRLIB (NRLIB from MID)>>=
${MID}/INFORM.NRLIB: ${MID}/INFORM.spad
	@ echo 2456 making ${MID}/INFORM.NRLIB from ${MID}/INFORM.spad
	@ (cd ${MID} ; 	echo ')co INFORM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INFORM.spad (SPAD from IN)>>=
${MID}/INFORM.spad: ${IN}/mkfunc.spad.pamphlet
	@ echo 2457 making ${MID}/INFORM.spad from ${IN}/mkfunc.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INFORM.NRLIB ; \
	${TANGLE} -R"domain INFORM InputForm" ${IN}/mkfunc.spad.pamphlet >INFORM.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INFORM1.o (O from NRLIB)>>=
${OUT}/INFORM1.o: ${MID}/INFORM1.NRLIB
	@ echo 2458-19 making ${OUT}/INFORM1.o from ${MID}/INFORM1.NRLIB
	@ cp ${MID}/INFORM1.NRLIB/code.o ${OUT}/INFORM1.o

@
<<INFORM1.NRLIB (NRLIB from MID)>>=
${MID}/INFORM1.NRLIB: ${MID}/INFORM1.spad
	@ echo 2459 making ${MID}/INFORM1.NRLIB from ${MID}/INFORM1.spad
	@ (cd ${MID} ; 	echo ')co INFORM1.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INFORM1.spad (SPAD from IN)>>=
${MID}/INFORM1.spad: ${IN}/mkfunc.spad.pamphlet
	@ echo 2460 making ${MID}/INFORM1.spad from ${IN}/mkfunc.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INFORM1.NRLIB ; \
	${TANGLE} -R"package INFORM1 InputFormFunctions1" ${IN}/mkfunc.spad.pamphlet >INFORM1.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MKFLCFN.o (O from NRLIB)>>=
${OUT}/MKFLCFN.o: ${MID}/MKFLCFN.NRLIB
	@ echo 2461-19 making ${OUT}/MKFLCFN.o from ${MID}/MKFLCFN.NRLIB
	@ cp ${MID}/MKFLCFN.NRLIB/code.o ${OUT}/MKFLCFN.o

@
<<MKFLCFN.NRLIB (NRLIB from MID)>>=
${MID}/MKFLCFN.NRLIB: ${MID}/MKFLCFN.spad
	@ echo 2462 making ${MID}/MKFLCFN.NRLIB from ${MID}/MKFLCFN.spad
	@ (cd ${MID} ; 	echo ')co MKFLCFN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MKFLCFN.spad (SPAD from IN)>>=
${MID}/MKFLCFN.spad: ${IN}/mkfunc.spad.pamphlet
	@ echo 2463 making ${MID}/MKFLCFN.spad from ${IN}/mkfunc.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MKFLCFN.NRLIB ; \
	${TANGLE} -R"package MKFLCFN MakeFloatCompiledFunction" ${IN}/mkfunc.spad.pamphlet >MKFLCFN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MKFUNC.o (O from NRLIB)>>=
${OUT}/MKFUNC.o: ${MID}/MKFUNC.NRLIB
	@ echo 2464-3 making ${OUT}/MKFUNC.o from ${MID}/MKFUNC.NRLIB
	@ cp ${MID}/MKFUNC.NRLIB/code.o ${OUT}/MKFUNC.o

@
<<MKFUNC.NRLIB (NRLIB from MID)>>=
${MID}/MKFUNC.NRLIB: ${MID}/MKFUNC.spad
	@ echo 2465 making ${MID}/MKFUNC.NRLIB from ${MID}/MKFUNC.spad
	@ (cd ${MID} ; 	echo ')co MKFUNC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MKFUNC.spad (SPAD from IN)>>=
${MID}/MKFUNC.spad: ${IN}/mkfunc.spad.pamphlet
	@ echo 2466 making ${MID}/MKFUNC.spad from ${IN}/mkfunc.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MKFUNC.NRLIB ; \
	${TANGLE} -R"package MKFUNC MakeFunction" ${IN}/mkfunc.spad.pamphlet >MKFUNC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MKBCFUNC.o (O from NRLIB)>>=
${OUT}/MKBCFUNC.o: ${MID}/MKBCFUNC.NRLIB
	@ echo 2467-1 making ${OUT}/MKBCFUNC.o from ${MID}/MKBCFUNC.NRLIB
	@ cp ${MID}/MKBCFUNC.NRLIB/code.o ${OUT}/MKBCFUNC.o

@
<<MKBCFUNC.NRLIB (NRLIB from MID)>>=
${MID}/MKBCFUNC.NRLIB: ${MID}/MKBCFUNC.spad
	@ echo 2468 making ${MID}/MKBCFUNC.NRLIB from ${MID}/MKBCFUNC.spad
	@ (cd ${MID} ; 	echo ')co MKBCFUNC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MKBCFUNC.spad (SPAD from IN)>>=
${MID}/MKBCFUNC.spad: ${IN}/mkfunc.spad.pamphlet
	@ echo 2469 making ${MID}/MKBCFUNC.spad from ${IN}/mkfunc.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MKBCFUNC.NRLIB ; \
	${TANGLE} -R"package MKBCFUNC MakeBinaryCompiledFunction" ${IN}/mkfunc.spad.pamphlet >MKBCFUNC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MKUCFUNC.o (O from NRLIB)>>=
${OUT}/MKUCFUNC.o: ${MID}/MKUCFUNC.NRLIB
	@ echo 2470-1 making ${OUT}/MKUCFUNC.o from ${MID}/MKUCFUNC.NRLIB
	@ cp ${MID}/MKUCFUNC.NRLIB/code.o ${OUT}/MKUCFUNC.o

@
<<MKUCFUNC.NRLIB (NRLIB from MID)>>=
${MID}/MKUCFUNC.NRLIB: ${MID}/MKUCFUNC.spad
	@ echo 2471 making ${MID}/MKUCFUNC.NRLIB from ${MID}/MKUCFUNC.spad
	@ (cd ${MID} ; 	echo ')co MKUCFUNC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MKUCFUNC.spad (SPAD from IN)>>=
${MID}/MKUCFUNC.spad: ${IN}/mkfunc.spad.pamphlet
	@ echo 2472 making ${MID}/MKUCFUNC.spad from ${IN}/mkfunc.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MKUCFUNC.NRLIB ; \
	${TANGLE} -R"package MKUCFUNC MakeUnaryCompiledFunction" ${IN}/mkfunc.spad.pamphlet >MKUCFUNC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<mkfunc.spad.dvi (DOC from IN)>>=
${DOC}/mkfunc.spad.dvi: ${IN}/mkfunc.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2473 making ${DOC}/mkfunc.spad.dvi from ${IN}/mkfunc.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/mkfunc.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} mkfunc.spad ; \
	rm -f ${DOC}/mkfunc.spad.pamphlet ; \
	rm -f ${DOC}/mkfunc.spad.tex ; \
	rm -f ${DOC}/mkfunc.spad )

@
\subsection{mkrecord.spad \cite{1}}
<<mkrecord.spad (SPAD from IN)>>=
${OUTSRC}/mkrecord.spad: ${IN}/mkrecord.spad.pamphlet
	@ echo 2474 making ${OUTSRC}/mkrecord.spad from ${IN}/mkrecord.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/mkrecord.spad.pamphlet >mkrecord.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MKRECORD.o (O from NRLIB)>>=
${OUT}/MKRECORD.o: ${MID}/MKRECORD.NRLIB
	@ echo 2475-1 making ${OUT}/MKRECORD.o from ${MID}/MKRECORD.NRLIB
	@ cp ${MID}/MKRECORD.NRLIB/code.o ${OUT}/MKRECORD.o

@
<<MKRECORD.NRLIB (NRLIB from MID)>>=
${MID}/MKRECORD.NRLIB: ${MID}/MKRECORD.spad
	@ echo 2476 making ${MID}/MKRECORD.NRLIB from ${MID}/MKRECORD.spad
	@ (cd ${MID} ; 	echo ')co MKRECORD.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MKRECORD.spad (SPAD from IN)>>=
${MID}/MKRECORD.spad: ${IN}/mkrecord.spad.pamphlet
	@ echo 2477 making ${MID}/MKRECORD.spad from ${IN}/mkrecord.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MKRECORD.NRLIB ; \
	${TANGLE} -R"package MKRECORD MakeRecord" ${IN}/mkrecord.spad.pamphlet >MKRECORD.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<mkrecord.spad.dvi (DOC from IN)>>=
${DOC}/mkrecord.spad.dvi: ${IN}/mkrecord.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2478 making ${DOC}/mkrecord.spad.dvi from ${IN}/mkrecord.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/mkrecord.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} mkrecord.spad ; \
	rm -f ${DOC}/mkrecord.spad.pamphlet ; \
	rm -f ${DOC}/mkrecord.spad.tex ; \
	rm -f ${DOC}/mkrecord.spad )

@
\subsection{mlift.spad.jhd \cite{1}}
<<mlift.spad.jhd (SPAD from IN)>>=
${OUTSRC}/mlift.spad.jhd: ${IN}/mlift.spad.jhd.pamphlet
	@ echo 2479 making ${OUTSRC}/mlift.spad.jhd from ${IN}/mlift.spad.jhd.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/mlift.spad.jhd.pamphlet >mlift.spad.jhd )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<mlift.spad.jhd.dvi (DOC from IN)>>=
${DOC}/mlift.spad.jhd.dvi: ${IN}/mlift.spad.jhd.pamphlet ${DOC}/axiom.sty
	@ echo 2480 making ${DOC}/mlift.spad.jhd.dvi from ${IN}/mlift.spad.jhd.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/mlift.spad.jhd.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} mlift.spad.jhd ; \
	rm -f ${DOC}/mlift.spad.jhd.pamphlet ; \
	rm -f ${DOC}/mlift.spad.jhd.tex ; \
	rm -f ${DOC}/mlift.spad.jhd )

@
\subsection{mlift.spad \cite{1}}
<<mlift.spad (SPAD from IN)>>=
${OUTSRC}/mlift.spad: ${IN}/mlift.spad.pamphlet
	@ echo 2481 making ${OUTSRC}/mlift.spad from ${IN}/mlift.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/mlift.spad.pamphlet >mlift.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MLIFT.o (O from NRLIB)>>=
${OUT}/MLIFT.o: ${MID}/MLIFT.NRLIB
	@ echo 2482-14 making ${OUT}/MLIFT.o from ${MID}/MLIFT.NRLIB
	@ cp ${MID}/MLIFT.NRLIB/code.o ${OUT}/MLIFT.o

@
<<MLIFT.NRLIB (NRLIB from MID)>>=
${MID}/MLIFT.NRLIB: ${MID}/MLIFT.spad
	@ echo 2483 making ${MID}/MLIFT.NRLIB from ${MID}/MLIFT.spad
	@ (cd ${MID} ; 	echo ')co MLIFT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MLIFT.spad (SPAD from IN)>>=
${MID}/MLIFT.spad: ${IN}/mlift.spad.pamphlet
	@ echo 2484 making ${MID}/MLIFT.spad from ${IN}/mlift.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MLIFT.NRLIB ; \
	${TANGLE} -R"package MLIFT MultivariateLifting" ${IN}/mlift.spad.pamphlet >MLIFT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<mlift.spad.dvi (DOC from IN)>>=
${DOC}/mlift.spad.dvi: ${IN}/mlift.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2485 making ${DOC}/mlift.spad.dvi from ${IN}/mlift.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/mlift.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} mlift.spad ; \
	rm -f ${DOC}/mlift.spad.pamphlet ; \
	rm -f ${DOC}/mlift.spad.tex ; \
	rm -f ${DOC}/mlift.spad )

@
\subsection{moddfact.spad \cite{1}}
<<moddfact.spad (SPAD from IN)>>=
${OUTSRC}/moddfact.spad: ${IN}/moddfact.spad.pamphlet
	@ echo 2486 making ${OUTSRC}/moddfact.spad from ${IN}/moddfact.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/moddfact.spad.pamphlet >moddfact.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MDDFACT.o (O from NRLIB)>>=
${OUT}/MDDFACT.o: ${MID}/MDDFACT.NRLIB
	@ echo 2487-14 making ${OUT}/MDDFACT.o from ${MID}/MDDFACT.NRLIB
	@ cp ${MID}/MDDFACT.NRLIB/code.o ${OUT}/MDDFACT.o

@
<<MDDFACT.NRLIB (NRLIB from MID)>>=
${MID}/MDDFACT.NRLIB: ${MID}/MDDFACT.spad
	@ echo 2488 making ${MID}/MDDFACT.NRLIB from ${MID}/MDDFACT.spad
	@ (cd ${MID} ; 	echo ')co MDDFACT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MDDFACT.spad (SPAD from IN)>>=
${MID}/MDDFACT.spad: ${IN}/moddfact.spad.pamphlet
	@ echo 2489 making ${MID}/MDDFACT.spad from ${IN}/moddfact.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MDDFACT.NRLIB ; \
	${TANGLE} -R"package MDDFACT ModularDistinctDegreeFactorizer" ${IN}/moddfact.spad.pamphlet >MDDFACT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<moddfact.spad.dvi (DOC from IN)>>=
${DOC}/moddfact.spad.dvi: ${IN}/moddfact.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2490 making ${DOC}/moddfact.spad.dvi from ${IN}/moddfact.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/moddfact.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} moddfact.spad ; \
	rm -f ${DOC}/moddfact.spad.pamphlet ; \
	rm -f ${DOC}/moddfact.spad.tex ; \
	rm -f ${DOC}/moddfact.spad )

@
\subsection{modgcd.spad \cite{1}}
<<modgcd.spad (SPAD from IN)>>=
${OUTSRC}/modgcd.spad: ${IN}/modgcd.spad.pamphlet
	@ echo 2491 making ${OUTSRC}/modgcd.spad from ${IN}/modgcd.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/modgcd.spad.pamphlet >modgcd.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INMODGCD.o (O from NRLIB)>>=
${OUT}/INMODGCD.o: ${MID}/INMODGCD.NRLIB
	@ echo 2492-14 making ${OUT}/INMODGCD.o from ${MID}/INMODGCD.NRLIB
	@ cp ${MID}/INMODGCD.NRLIB/code.o ${OUT}/INMODGCD.o

@
<<INMODGCD.NRLIB (NRLIB from MID)>>=
${MID}/INMODGCD.NRLIB: ${MID}/INMODGCD.spad
	@ echo 2493 making ${MID}/INMODGCD.NRLIB from ${MID}/INMODGCD.spad
	@ (cd ${MID} ; 	echo ')co INMODGCD.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INMODGCD.spad (SPAD from IN)>>=
${MID}/INMODGCD.spad: ${IN}/modgcd.spad.pamphlet
	@ echo 2494 making ${MID}/INMODGCD.spad from ${IN}/modgcd.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INMODGCD.NRLIB ; \
	${TANGLE} -R"package INMODGCD InnerModularGcd" ${IN}/modgcd.spad.pamphlet >INMODGCD.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<modgcd.spad.dvi (DOC from IN)>>=
${DOC}/modgcd.spad.dvi: ${IN}/modgcd.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2495 making ${DOC}/modgcd.spad.dvi from ${IN}/modgcd.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/modgcd.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} modgcd.spad ; \
	rm -f ${DOC}/modgcd.spad.pamphlet ; \
	rm -f ${DOC}/modgcd.spad.tex ; \
	rm -f ${DOC}/modgcd.spad )

@
\subsection{modmonom.spad \cite{1}}
<<modmonom.spad (SPAD from IN)>>=
${OUTSRC}/modmonom.spad: ${IN}/modmonom.spad.pamphlet
	@ echo 2496 making ${OUTSRC}/modmonom.spad from ${IN}/modmonom.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/modmonom.spad.pamphlet >modmonom.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GMODPOL.o (O from NRLIB)>>=
${OUT}/GMODPOL.o: ${MID}/GMODPOL.NRLIB
	@ echo 2497-14 making ${OUT}/GMODPOL.o from ${MID}/GMODPOL.NRLIB
	@ cp ${MID}/GMODPOL.NRLIB/code.o ${OUT}/GMODPOL.o

@
<<GMODPOL.NRLIB (NRLIB from MID)>>=
${MID}/GMODPOL.NRLIB: ${MID}/GMODPOL.spad
	@ echo 2498 making ${MID}/GMODPOL.NRLIB from ${MID}/GMODPOL.spad
	@ (cd ${MID} ; 	echo ')co GMODPOL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GMODPOL.spad (SPAD from IN)>>=
${MID}/GMODPOL.spad: ${IN}/modmonom.spad.pamphlet
	@ echo 2499 making ${MID}/GMODPOL.spad from ${IN}/modmonom.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GMODPOL.NRLIB ; \
	${TANGLE} -R"domain GMODPOL GeneralModulePolynomial" ${IN}/modmonom.spad.pamphlet >GMODPOL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MODMONOM.o (O from NRLIB)>>=
${OUT}/MODMONOM.o: ${MID}/MODMONOM.NRLIB
	@ echo 2500-5 making ${OUT}/MODMONOM.o from ${MID}/MODMONOM.NRLIB
	@ cp ${MID}/MODMONOM.NRLIB/code.o ${OUT}/MODMONOM.o

@
<<MODMONOM.NRLIB (NRLIB from MID)>>=
${MID}/MODMONOM.NRLIB: ${MID}/MODMONOM.spad
	@ echo 2501 making ${MID}/MODMONOM.NRLIB from ${MID}/MODMONOM.spad
	@ (cd ${MID} ; 	echo ')co MODMONOM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MODMONOM.spad (SPAD from IN)>>=
${MID}/MODMONOM.spad: ${IN}/modmonom.spad.pamphlet
	@ echo 2502 making ${MID}/MODMONOM.spad from ${IN}/modmonom.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MODMONOM.NRLIB ; \
	${TANGLE} -R"domain MODMONOM ModuleMonomial" ${IN}/modmonom.spad.pamphlet >MODMONOM.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<modmonom.spad.dvi (DOC from IN)>>=
${DOC}/modmonom.spad.dvi: ${IN}/modmonom.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2503 making ${DOC}/modmonom.spad.dvi from ${IN}/modmonom.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/modmonom.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} modmonom.spad ; \
	rm -f ${DOC}/modmonom.spad.pamphlet ; \
	rm -f ${DOC}/modmonom.spad.tex ; \
	rm -f ${DOC}/modmonom.spad )

@
\subsection{modmon.spad \cite{1}}
<<modmon.spad (SPAD from IN)>>=
${OUTSRC}/modmon.spad: ${IN}/modmon.spad.pamphlet
	@ echo 2504 making ${OUTSRC}/modmon.spad from ${IN}/modmon.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/modmon.spad.pamphlet >modmon.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MODMON.o (O from NRLIB)>>=
${OUT}/MODMON.o: ${MID}/MODMON.NRLIB
	@ echo 2505-14 making ${OUT}/MODMON.o from ${MID}/MODMON.NRLIB
	@ cp ${MID}/MODMON.NRLIB/code.o ${OUT}/MODMON.o

@
<<MODMON.NRLIB (NRLIB from MID)>>=
${MID}/MODMON.NRLIB: ${MID}/MODMON.spad
	@ echo 2506 making ${MID}/MODMON.NRLIB from ${MID}/MODMON.spad
	@ (cd ${MID} ; 	echo ')co MODMON.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MODMON.spad (SPAD from IN)>>=
${MID}/MODMON.spad: ${IN}/modmon.spad.pamphlet
	@ echo 2507 making ${MID}/MODMON.spad from ${IN}/modmon.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MODMON.NRLIB ; \
	${TANGLE} -R"domain MODMON ModMonic" ${IN}/modmon.spad.pamphlet >MODMON.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<modmon.spad.dvi (DOC from IN)>>=
${DOC}/modmon.spad.dvi: ${IN}/modmon.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2508 making ${DOC}/modmon.spad.dvi from ${IN}/modmon.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/modmon.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} modmon.spad ; \
	rm -f ${DOC}/modmon.spad.pamphlet ; \
	rm -f ${DOC}/modmon.spad.tex ; \
	rm -f ${DOC}/modmon.spad )

@
\subsection{modring.spad \cite{1}}
<<modring.spad (SPAD from IN)>>=
${OUTSRC}/modring.spad: ${IN}/modring.spad.pamphlet
	@ echo 2509 making ${OUTSRC}/modring.spad from ${IN}/modring.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/modring.spad.pamphlet >modring.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EMR.o (O from NRLIB)>>=
${OUT}/EMR.o: ${MID}/EMR.NRLIB
	@ echo 2510-14 making ${OUT}/EMR.o from ${MID}/EMR.NRLIB
	@ cp ${MID}/EMR.NRLIB/code.o ${OUT}/EMR.o

@
<<EMR.NRLIB (NRLIB from MID)>>=
${MID}/EMR.NRLIB: ${MID}/EMR.spad
	@ echo 2511 making ${MID}/EMR.NRLIB from ${MID}/EMR.spad
	@ (cd ${MID} ; 	echo ')co EMR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EMR.spad (SPAD from IN)>>=
${MID}/EMR.spad: ${IN}/modring.spad.pamphlet
	@ echo 2512 making ${MID}/EMR.spad from ${IN}/modring.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf EMR.NRLIB ; \
	${TANGLE} -R"domain EMR EuclideanModularRing" ${IN}/modring.spad.pamphlet >EMR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MODFIELD.o (O from NRLIB)>>=
${OUT}/MODFIELD.o: ${MID}/MODFIELD.NRLIB
	@ echo 2513-10 making ${OUT}/MODFIELD.o from ${MID}/MODFIELD.NRLIB
	@ cp ${MID}/MODFIELD.NRLIB/code.o ${OUT}/MODFIELD.o

@
<<MODFIELD.NRLIB (NRLIB from MID)>>=
${MID}/MODFIELD.NRLIB: ${MID}/MODFIELD.spad
	@ echo 2514 making ${MID}/MODFIELD.NRLIB from ${MID}/MODFIELD.spad
	@ (cd ${MID} ; 	echo ')co MODFIELD.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MODFIELD.spad (SPAD from IN)>>=
${MID}/MODFIELD.spad: ${IN}/modring.spad.pamphlet
	@ echo 2515 making ${MID}/MODFIELD.spad from ${IN}/modring.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MODFIELD.NRLIB ; \
	${TANGLE} -R"domain MODFIELD ModularField" ${IN}/modring.spad.pamphlet >MODFIELD.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MODRING.o (O from NRLIB)>>=
${OUT}/MODRING.o: ${MID}/MODRING.NRLIB
	@ echo 2516-6 making ${OUT}/MODRING.o from ${MID}/MODRING.NRLIB
	@ cp ${MID}/MODRING.NRLIB/code.o ${OUT}/MODRING.o

@
<<MODRING.NRLIB (NRLIB from MID)>>=
${MID}/MODRING.NRLIB: ${MID}/MODRING.spad
	@ echo 2517 making ${MID}/MODRING.NRLIB from ${MID}/MODRING.spad
	@ (cd ${MID} ; 	echo ')co MODRING.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MODRING.spad (SPAD from IN)>>=
${MID}/MODRING.spad: ${IN}/modring.spad.pamphlet
	@ echo 2518 making ${MID}/MODRING.spad from ${IN}/modring.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MODRING.NRLIB ; \
	${TANGLE} -R"domain MODRING ModularRing" ${IN}/modring.spad.pamphlet >MODRING.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<modring.spad.dvi (DOC from IN)>>=
${DOC}/modring.spad.dvi: ${IN}/modring.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2519 making ${DOC}/modring.spad.dvi from ${IN}/modring.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/modring.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} modring.spad ; \
	rm -f ${DOC}/modring.spad.pamphlet ; \
	rm -f ${DOC}/modring.spad.tex ; \
	rm -f ${DOC}/modring.spad )

@
\subsection{moebius.spad \cite{1}}
<<moebius.spad (SPAD from IN)>>=
${OUTSRC}/moebius.spad: ${IN}/moebius.spad.pamphlet
	@ echo 2520 making ${OUTSRC}/moebius.spad from ${IN}/moebius.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/moebius.spad.pamphlet >moebius.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MOEBIUS.o (O from NRLIB)>>=
${OUT}/MOEBIUS.o: ${MID}/MOEBIUS.NRLIB
	@ echo 2521-10 making ${OUT}/MOEBIUS.o from ${MID}/MOEBIUS.NRLIB
	@ cp ${MID}/MOEBIUS.NRLIB/code.o ${OUT}/MOEBIUS.o

@
<<MOEBIUS.NRLIB (NRLIB from MID)>>=
${MID}/MOEBIUS.NRLIB: ${MID}/MOEBIUS.spad
	@ echo 2522 making ${MID}/MOEBIUS.NRLIB from ${MID}/MOEBIUS.spad
	@ (cd ${MID} ; 	echo ')co MOEBIUS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MOEBIUS.spad (SPAD from IN)>>=
${MID}/MOEBIUS.spad: ${IN}/moebius.spad.pamphlet
	@ echo 2523 making ${MID}/MOEBIUS.spad from ${IN}/moebius.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MOEBIUS.NRLIB ; \
	${TANGLE} -R"domain MOEBIUS MoebiusTransform" ${IN}/moebius.spad.pamphlet >MOEBIUS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<moebius.spad.dvi (DOC from IN)>>=
${DOC}/moebius.spad.dvi: ${IN}/moebius.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2524 making ${DOC}/moebius.spad.dvi from ${IN}/moebius.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/moebius.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} moebius.spad ; \
	rm -f ${DOC}/moebius.spad.pamphlet ; \
	rm -f ${DOC}/moebius.spad.tex ; \
	rm -f ${DOC}/moebius.spad )

@
\subsection{mring.spad \cite{1}}
<<mring.spad (SPAD from IN)>>=
${OUTSRC}/mring.spad: ${IN}/mring.spad.pamphlet
	@ echo 2525 making ${OUTSRC}/mring.spad from ${IN}/mring.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/mring.spad.pamphlet >mring.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MRF2.o (O from NRLIB)>>=
${OUT}/MRF2.o: ${MID}/MRF2.NRLIB
	@ echo 2526-5 making ${OUT}/MRF2.o from ${MID}/MRF2.NRLIB
	@ cp ${MID}/MRF2.NRLIB/code.o ${OUT}/MRF2.o

@
<<MRF2.NRLIB (NRLIB from MID)>>=
${MID}/MRF2.NRLIB: ${MID}/MRF2.spad
	@ echo 2527 making ${MID}/MRF2.NRLIB from ${MID}/MRF2.spad
	@ (cd ${MID} ; 	echo ')co MRF2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MRF2.spad (SPAD from IN)>>=
${MID}/MRF2.spad: ${IN}/mring.spad.pamphlet
	@ echo 2528 making ${MID}/MRF2.spad from ${IN}/mring.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MRF2.NRLIB ; \
	${TANGLE} -R"package MRF2 MonoidRingFunctions2" ${IN}/mring.spad.pamphlet >MRF2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MRING.o (O from NRLIB)>>=
${OUT}/MRING.o: ${MID}/MRING.NRLIB
	@ echo 2529-10 making ${OUT}/MRING.o from ${MID}/MRING.NRLIB
	@ cp ${MID}/MRING.NRLIB/code.o ${OUT}/MRING.o

@
<<MRING.NRLIB (NRLIB from MID)>>=
${MID}/MRING.NRLIB: ${MID}/MRING.spad
	@ echo 2560 making ${MID}/MRING.NRLIB from ${MID}/MRING.spad
	@ (cd ${MID} ; 	echo ')co MRING.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MRING.spad (SPAD from IN)>>=
${MID}/MRING.spad: ${IN}/mring.spad.pamphlet
	@ echo 2561 making ${MID}/MRING.spad from ${IN}/mring.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MRING.NRLIB ; \
	${TANGLE} -R"domain MRING MonoidRing" ${IN}/mring.spad.pamphlet >MRING.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<mring.spad.dvi (DOC from IN)>>=
${DOC}/mring.spad.dvi: ${IN}/mring.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2562 making ${DOC}/mring.spad.dvi from ${IN}/mring.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/mring.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} mring.spad ; \
	rm -f ${DOC}/mring.spad.pamphlet ; \
	rm -f ${DOC}/mring.spad.tex ; \
	rm -f ${DOC}/mring.spad )

@
\subsection{mset.spad \cite{1}}
<<mset.spad (SPAD from IN)>>=
${OUTSRC}/mset.spad: ${IN}/mset.spad.pamphlet
	@ echo 2563 making ${OUTSRC}/mset.spad from ${IN}/mset.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/mset.spad.pamphlet >mset.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MSET.o (O from NRLIB)>>=
${OUT}/MSET.o: ${MID}/MSET.NRLIB
	@ echo 2564-19 making ${OUT}/MSET.o from ${MID}/MSET.NRLIB
	@ cp ${MID}/MSET.NRLIB/code.o ${OUT}/MSET.o

@
<<MSET.NRLIB (NRLIB from MID)>>=
${MID}/MSET.NRLIB: ${MID}/MSET.spad
	@ echo 2565 making ${MID}/MSET.NRLIB from ${MID}/MSET.spad
	@ (cd ${MID} ; 	echo ')co MSET.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MSET.spad (SPAD from IN)>>=
${MID}/MSET.spad: ${IN}/mset.spad.pamphlet
	@ echo 2566 making ${MID}/MSET.spad from ${IN}/mset.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MSET.NRLIB ; \
	${TANGLE} -R"domain MSET Multiset" ${IN}/mset.spad.pamphlet >MSET.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<mset.spad.dvi (DOC from IN)>>=
${DOC}/mset.spad.dvi: ${IN}/mset.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2567 making ${DOC}/mset.spad.dvi from ${IN}/mset.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/mset.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} mset.spad ; \
	rm -f ${DOC}/mset.spad.pamphlet ; \
	rm -f ${DOC}/mset.spad.tex ; \
	rm -f ${DOC}/mset.spad )

@
\subsection{mts.spad \cite{1}}
<<mts.spad (SPAD from IN)>>=
${OUTSRC}/mts.spad: ${IN}/mts.spad.pamphlet
	@ echo 2568 making ${OUTSRC}/mts.spad from ${IN}/mts.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/mts.spad.pamphlet >mts.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SMTS.o (O from NRLIB)>>=
${OUT}/SMTS.o: ${MID}/SMTS.NRLIB
	@ echo 2569-14 making ${OUT}/SMTS.o from ${MID}/SMTS.NRLIB
	@ cp ${MID}/SMTS.NRLIB/code.o ${OUT}/SMTS.o

@
<<SMTS.NRLIB (NRLIB from MID)>>=
${MID}/SMTS.NRLIB: ${MID}/SMTS.spad
	@ echo 2570 making ${MID}/SMTS.NRLIB from ${MID}/SMTS.spad
	@ (cd ${MID} ; 	echo ')co SMTS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SMTS.spad (SPAD from IN)>>=
${MID}/SMTS.spad: ${IN}/mts.spad.pamphlet
	@ echo 2571 making ${MID}/SMTS.spad from ${IN}/mts.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SMTS.NRLIB ; \
	${TANGLE} -R"domain SMTS SparseMultivariateTaylorSeries" ${IN}/mts.spad.pamphlet >SMTS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TS.o (O from NRLIB)>>=
${OUT}/TS.o: ${MID}/TS.NRLIB
	@ echo 2572-11 making ${OUT}/TS.o from ${MID}/TS.NRLIB
	@ cp ${MID}/TS.NRLIB/code.o ${OUT}/TS.o

@
<<TS.NRLIB (NRLIB from MID)>>=
${MID}/TS.NRLIB: ${MID}/TS.spad
	@ echo 2573 making ${MID}/TS.NRLIB from ${MID}/TS.spad
	@ (cd ${MID} ; 	echo ')co TS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TS.spad (SPAD from IN)>>=
${MID}/TS.spad: ${IN}/mts.spad.pamphlet
	@ echo 2574 making ${MID}/TS.spad from ${IN}/mts.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf TS.NRLIB ; \
	${TANGLE} -R"domain TS TaylorSeries" ${IN}/mts.spad.pamphlet >TS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<mts.spad.dvi (DOC from IN)>>=
${DOC}/mts.spad.dvi: ${IN}/mts.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2575 making ${DOC}/mts.spad.dvi from ${IN}/mts.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/mts.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} mts.spad ; \
	rm -f ${DOC}/mts.spad.pamphlet ; \
	rm -f ${DOC}/mts.spad.tex ; \
	rm -f ${DOC}/mts.spad )

@
\subsection{multfact.spad \cite{1}}
<<multfact.spad (SPAD from IN)>>=
${OUTSRC}/multfact.spad: ${IN}/multfact.spad.pamphlet
	@ echo 2576 making ${OUTSRC}/multfact.spad from ${IN}/multfact.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/multfact.spad.pamphlet >multfact.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ALGMFACT.o (O from NRLIB)>>=
${OUT}/ALGMFACT.o: ${MID}/ALGMFACT.NRLIB
	@ echo 2577-20 making ${OUT}/ALGMFACT.o from ${MID}/ALGMFACT.NRLIB
	@ cp ${MID}/ALGMFACT.NRLIB/code.o ${OUT}/ALGMFACT.o

@
<<ALGMFACT.NRLIB (NRLIB from MID)>>=
${MID}/ALGMFACT.NRLIB: ${MID}/ALGMFACT.spad
	@ echo 2578 making ${MID}/ALGMFACT.NRLIB from ${MID}/ALGMFACT.spad
	@ (cd ${MID} ; 	echo ')co ALGMFACT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ALGMFACT.spad (SPAD from IN)>>=
${MID}/ALGMFACT.spad: ${IN}/multfact.spad.pamphlet
	@ echo 2579 making ${MID}/ALGMFACT.spad from ${IN}/multfact.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ALGMFACT.NRLIB ; \
	${TANGLE} -R"package ALGMFACT AlgebraicMultFact" ${IN}/multfact.spad.pamphlet >ALGMFACT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INNMFACT.o (O from NRLIB)>>=
${OUT}/INNMFACT.o: ${MID}/INNMFACT.NRLIB
	@ echo 2580-14 making ${OUT}/INNMFACT.o from ${MID}/INNMFACT.NRLIB
	@ cp ${MID}/INNMFACT.NRLIB/code.o ${OUT}/INNMFACT.o

@
<<INNMFACT.NRLIB (NRLIB from MID)>>=
${MID}/INNMFACT.NRLIB: ${MID}/INNMFACT.spad
	@ echo 2581 making ${MID}/INNMFACT.NRLIB from ${MID}/INNMFACT.spad
	@ (cd ${MID} ; 	echo ')co INNMFACT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INNMFACT.spad (SPAD from IN)>>=
${MID}/INNMFACT.spad: ${IN}/multfact.spad.pamphlet
	@ echo 2582 making ${MID}/INNMFACT.spad from ${IN}/multfact.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INNMFACT.NRLIB ; \
	${TANGLE} -R"package INNMFACT InnerMultFact" ${IN}/multfact.spad.pamphlet >INNMFACT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MULTFACT.o (O from NRLIB)>>=
${OUT}/MULTFACT.o: ${MID}/MULTFACT.NRLIB
	@ echo 2583-20 making ${OUT}/MULTFACT.o from ${MID}/MULTFACT.NRLIB
	@ cp ${MID}/MULTFACT.NRLIB/code.o ${OUT}/MULTFACT.o

@
<<MULTFACT.NRLIB (NRLIB from MID)>>=
${MID}/MULTFACT.NRLIB: ${MID}/MULTFACT.spad
	@ echo 2584 making ${MID}/MULTFACT.NRLIB from ${MID}/MULTFACT.spad
	@ (cd ${MID} ; 	echo ')co MULTFACT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MULTFACT.spad (SPAD from IN)>>=
${MID}/MULTFACT.spad: ${IN}/multfact.spad.pamphlet
	@ echo 2585 making ${MID}/MULTFACT.spad from ${IN}/multfact.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MULTFACT.NRLIB ; \
	${TANGLE} -R"package MULTFACT MultivariateFactorize" ${IN}/multfact.spad.pamphlet >MULTFACT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<multfact.spad.dvi (DOC from IN)>>=
${DOC}/multfact.spad.dvi: ${IN}/multfact.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2586 making ${DOC}/multfact.spad.dvi from ${IN}/multfact.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/multfact.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} multfact.spad ; \
	rm -f ${DOC}/multfact.spad.pamphlet ; \
	rm -f ${DOC}/multfact.spad.tex ; \
	rm -f ${DOC}/multfact.spad )

@
\subsection{multpoly.spad \cite{1}}
<<multpoly.spad (SPAD from IN)>>=
${OUTSRC}/multpoly.spad: ${IN}/multpoly.spad.pamphlet
	@ echo 2587 making ${OUTSRC}/multpoly.spad from ${IN}/multpoly.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/multpoly.spad.pamphlet >multpoly.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INDE.o (O from NRLIB)>>=
${OUT}/INDE.o: ${MID}/INDE.NRLIB
	@ echo 2588-10 making ${OUT}/INDE.o from ${MID}/INDE.NRLIB
	@ cp ${MID}/INDE.NRLIB/code.o ${OUT}/INDE.o

@
<<INDE.NRLIB (NRLIB from MID)>>=
${MID}/INDE.NRLIB: ${MID}/INDE.spad
	@ echo 2589 making ${MID}/INDE.NRLIB from ${MID}/INDE.spad
	@ (cd ${MID} ; 	echo ')co INDE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INDE.spad (SPAD from IN)>>=
${MID}/INDE.spad: ${IN}/multpoly.spad.pamphlet
	@ echo 2590 making ${MID}/INDE.spad from ${IN}/multpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INDE.NRLIB ; \
	${TANGLE} -R"domain INDE IndexedExponents" ${IN}/multpoly.spad.pamphlet >INDE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MPOLY.o (O from NRLIB)>>=
${OUT}/MPOLY.o: ${MID}/MPOLY.NRLIB
	@ echo 2591-14 making ${OUT}/MPOLY.o from ${MID}/MPOLY.NRLIB
	@ cp ${MID}/MPOLY.NRLIB/code.o ${OUT}/MPOLY.o

@
<<MPOLY.NRLIB (NRLIB from MID)>>=
${MID}/MPOLY.NRLIB: ${MID}/MPOLY.spad
	@ echo 2592 making ${MID}/MPOLY.NRLIB from ${MID}/MPOLY.spad
	@ (cd ${MID} ; 	echo ')co MPOLY.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MPOLY.spad (SPAD from IN)>>=
${MID}/MPOLY.spad: ${IN}/multpoly.spad.pamphlet
	@ echo 2593 making ${MID}/MPOLY.spad from ${IN}/multpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MPOLY.NRLIB ; \
	${TANGLE} -R"domain MPOLY MultivariatePolynomial" ${IN}/multpoly.spad.pamphlet >MPOLY.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<POLY.o (O from NRLIB)>>=
${OUT}/POLY.o: ${MID}/POLY.NRLIB
	@ echo 2594-19 making ${OUT}/POLY.o from ${MID}/POLY.NRLIB
	@ cp ${MID}/POLY.NRLIB/code.o ${OUT}/POLY.o

@
<<POLY.NRLIB (NRLIB from MID)>>=
${MID}/POLY.NRLIB: ${MID}/POLY.spad
	@ echo 2595 making ${MID}/POLY.NRLIB from ${MID}/POLY.spad
	@ (cd ${MID} ; 	echo ')co POLY.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<POLY.spad (SPAD from IN)>>=
${MID}/POLY.spad: ${IN}/multpoly.spad.pamphlet
	@ echo 2596 making ${MID}/POLY.spad from ${IN}/multpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf POLY.NRLIB ; \
	${TANGLE} -R"domain POLY Polynomial" ${IN}/multpoly.spad.pamphlet >POLY.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<POLY2.o (O from NRLIB)>>=
${OUT}/POLY2.o: ${MID}/POLY2.NRLIB
	@ echo 2597-14 making ${OUT}/POLY2.o from ${MID}/POLY2.NRLIB
	@ cp ${MID}/POLY2.NRLIB/code.o ${OUT}/POLY2.o

@
<<POLY2.NRLIB (NRLIB from MID)>>=
${MID}/POLY2.NRLIB: ${MID}/POLY2.spad
	@ echo 2598 making ${MID}/POLY2.NRLIB from ${MID}/POLY2.spad
	@ (cd ${MID} ; 	echo ')co POLY2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<POLY2.spad (SPAD from IN)>>=
${MID}/POLY2.spad: ${IN}/multpoly.spad.pamphlet
	@ echo 2599 making ${MID}/POLY2.spad from ${IN}/multpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf POLY2.NRLIB ; \
	${TANGLE} -R"package POLY2 PolynomialFunctions2" ${IN}/multpoly.spad.pamphlet >POLY2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SMP.o (O from NRLIB)>>=
${OUT}/SMP.o: ${MID}/SMP.NRLIB
	@ echo 2600-14 making ${OUT}/SMP.o from ${MID}/SMP.NRLIB
	@ cp ${MID}/SMP.NRLIB/code.o ${OUT}/SMP.o

@
<<SMP.NRLIB (NRLIB from MID)>>=
${MID}/SMP.NRLIB: ${MID}/SMP.spad
	@ echo 2601 making ${MID}/SMP.NRLIB from ${MID}/SMP.spad
	@ (cd ${MID} ; 	echo ')co SMP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SMP.spad (SPAD from IN)>>=
${MID}/SMP.spad: ${IN}/multpoly.spad.pamphlet
	@ echo 2602 making ${MID}/SMP.spad from ${IN}/multpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SMP.NRLIB ; \
	${TANGLE} -R"domain SMP SparseMultivariatePolynomial" ${IN}/multpoly.spad.pamphlet >SMP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<multpoly.spad.dvi (DOC from IN)>>=
${DOC}/multpoly.spad.dvi: ${IN}/multpoly.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2603 making ${DOC}/multpoly.spad.dvi from ${IN}/multpoly.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/multpoly.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} multpoly.spad ; \
	rm -f ${DOC}/multpoly.spad.pamphlet ; \
	rm -f ${DOC}/multpoly.spad.tex ; \
	rm -f ${DOC}/multpoly.spad )

@
\subsection{multsqfr.spad \cite{1}}
<<multsqfr.spad (SPAD from IN)>>=
${OUTSRC}/multsqfr.spad: ${IN}/multsqfr.spad.pamphlet
	@ echo 2604 making ${OUTSRC}/multsqfr.spad from ${IN}/multsqfr.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/multsqfr.spad.pamphlet >multsqfr.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MULTSQFR.o (O from NRLIB)>>=
${OUT}/MULTSQFR.o: ${MID}/MULTSQFR.NRLIB
	@ echo 2605-14 making ${OUT}/MULTSQFR.o from ${MID}/MULTSQFR.NRLIB
	@ cp ${MID}/MULTSQFR.NRLIB/code.o ${OUT}/MULTSQFR.o

@
<<MULTSQFR.NRLIB (NRLIB from MID)>>=
${MID}/MULTSQFR.NRLIB: ${MID}/MULTSQFR.spad
	@ echo 2606 making ${MID}/MULTSQFR.NRLIB from ${MID}/MULTSQFR.spad
	@ (cd ${MID} ; 	echo ')co MULTSQFR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MULTSQFR.spad (SPAD from IN)>>=
${MID}/MULTSQFR.spad: ${IN}/multsqfr.spad.pamphlet
	@ echo 2607 making ${MID}/MULTSQFR.spad from ${IN}/multsqfr.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MULTSQFR.NRLIB ; \
	${TANGLE} -R"package MULTSQFR MultivariateSquareFree" ${IN}/multsqfr.spad.pamphlet >MULTSQFR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<multsqfr.spad.dvi (DOC from IN)>>=
${DOC}/multsqfr.spad.dvi: ${IN}/multsqfr.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2608 making ${DOC}/multsqfr.spad.dvi from ${IN}/multsqfr.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/multsqfr.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} multsqfr.spad ; \
	rm -f ${DOC}/multsqfr.spad.pamphlet ; \
	rm -f ${DOC}/multsqfr.spad.tex ; \
	rm -f ${DOC}/multsqfr.spad )

@
\subsection{naalgc.spad \cite{1}}
<<naalgc.spad (SPAD from IN)>>=
${OUTSRC}/naalgc.spad: ${IN}/naalgc.spad.pamphlet
	@ echo 2609 making ${OUTSRC}/naalgc.spad from ${IN}/naalgc.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/naalgc.spad.pamphlet >naalgc.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FINAALG-.o (O from NRLIB)>>=
${OUT}/FINAALG-.o: ${MID}/FINAALG.NRLIB
	@ echo 2610-14 making ${OUT}/FINAALG-.o from ${MID}/FINAALG-.NRLIB
	@ cp ${MID}/FINAALG-.NRLIB/code.o ${OUT}/FINAALG-.o

@
<<FINAALG-.NRLIB (NRLIB from MID)>>=
${MID}/FINAALG-.NRLIB: ${MID}/FINAALG.spad 
	@ echo 2611 making ${MID}/FINAALG-.NRLIB from ${MID}/FINAALG.spad
	@ (cd ${MID} ; 	echo ')co FINAALG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FINAALG.o (O from NRLIB)>>=
${OUT}/FINAALG.o: ${MID}/FINAALG.NRLIB
	@ echo 2612-14 making ${OUT}/FINAALG.o from ${MID}/FINAALG.NRLIB
	@ cp ${MID}/FINAALG.NRLIB/code.o ${OUT}/FINAALG.o

@
<<FINAALG.NRLIB (NRLIB from MID)>>=
${MID}/FINAALG.NRLIB: ${MID}/FINAALG.spad
	@ echo 2613 making ${MID}/FINAALG.NRLIB from ${MID}/FINAALG.spad
	@ (cd ${MID} ; 	echo ')co FINAALG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FINAALG.spad (SPAD from IN)>>=
${MID}/FINAALG.spad: ${IN}/naalgc.spad.pamphlet
	@ echo 2614 making ${MID}/FINAALG.spad from ${IN}/naalgc.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FINAALG.NRLIB ; \
	${TANGLE} -R"category FINAALG FiniteRankNonAssociativeAlgebra" ${IN}/naalgc.spad.pamphlet >FINAALG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FRNAALG-.o (O from NRLIB)>>=
${OUT}/FRNAALG-.o: ${MID}/FRNAALG.NRLIB
	@ echo 2615-19 making ${OUT}/FRNAALG-.o from ${MID}/FRNAALG-.NRLIB
	@ cp ${MID}/FRNAALG-.NRLIB/code.o ${OUT}/FRNAALG-.o

@
<<FRNAALG-.NRLIB (NRLIB from MID)>>=
${MID}/FRNAALG-.NRLIB: ${MID}/FRNAALG.spad 
	@ echo 2616 making ${MID}/FRNAALG-.NRLIB from ${MID}/FRNAALG.spad
	@ (cd ${MID} ; 	echo ')co FRNAALG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FRNAALG.o (O from NRLIB)>>=
${OUT}/FRNAALG.o: ${MID}/FRNAALG.NRLIB
	@ echo 2617-19 making ${OUT}/FRNAALG.o from ${MID}/FRNAALG.NRLIB
	@ cp ${MID}/FRNAALG.NRLIB/code.o ${OUT}/FRNAALG.o

@
<<FRNAALG.NRLIB (NRLIB from MID)>>=
${MID}/FRNAALG.NRLIB: ${MID}/FRNAALG.spad
	@ echo 2618 making ${MID}/FRNAALG.NRLIB from ${MID}/FRNAALG.spad
	@ (cd ${MID} ; 	echo ')co FRNAALG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FRNAALG.spad (SPAD from IN)>>=
${MID}/FRNAALG.spad: ${IN}/naalgc.spad.pamphlet
	@ echo 2619 making ${MID}/FRNAALG.spad from ${IN}/naalgc.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FRNAALG.NRLIB ; \
	${TANGLE} -R"category FRNAALG FramedNonAssociativeAlgebra" ${IN}/naalgc.spad.pamphlet >FRNAALG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MONAD-.o (O from NRLIB)>>=
${OUT}/MONAD-.o: ${MID}/MONAD.NRLIB
	@ echo 2620-4 making ${OUT}/MONAD-.o from ${MID}/MONAD-.NRLIB
	@ cp ${MID}/MONAD-.NRLIB/code.o ${OUT}/MONAD-.o

@
<<MONAD-.NRLIB (NRLIB from MID)>>=
${MID}/MONAD-.NRLIB: ${MID}/MONAD.spad 
	@ echo 2621 making ${MID}/MONAD-.NRLIB from ${MID}/MONAD.spad
	@ (cd ${MID} ; 	echo ')co MONAD.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MONAD.o (O from NRLIB)>>=
${OUT}/MONAD.o: ${MID}/MONAD.NRLIB
	@ echo 2622-4 making ${OUT}/MONAD.o from ${MID}/MONAD.NRLIB
	@ cp ${MID}/MONAD.NRLIB/code.o ${OUT}/MONAD.o

@
<<MONAD.NRLIB (NRLIB from MID)>>=
${MID}/MONAD.NRLIB: ${MID}/MONAD.spad
	@ echo 2623 making ${MID}/MONAD.NRLIB from ${MID}/MONAD.spad
	@ (cd ${MID} ; 	echo ')co MONAD.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MONAD.spad (SPAD from IN)>>=
${MID}/MONAD.spad: ${IN}/naalgc.spad.pamphlet
	@ echo 2624 making ${MID}/MONAD.spad from ${IN}/naalgc.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MONAD.NRLIB ; \
	${TANGLE} -R"category MONAD Monad" ${IN}/naalgc.spad.pamphlet >MONAD.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MONADWU-.o (O from NRLIB)>>=
${OUT}/MONADWU-.o: ${MID}/MONADWU.NRLIB
	@ echo 2625-5 making ${OUT}/MONADWU-.o from ${MID}/MONADWU-.NRLIB
	@ cp ${MID}/MONADWU-.NRLIB/code.o ${OUT}/MONADWU-.o

@
<<MONADWU-.NRLIB (NRLIB from MID)>>=
${MID}/MONADWU-.NRLIB: ${MID}/MONADWU.spad 
	@ echo 2626 making ${MID}/MONADWU-.NRLIB from ${MID}/MONADWU.spad
	@ (cd ${MID} ; 	echo ')co MONADWU.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MONADWU.o (O from NRLIB)>>=
${OUT}/MONADWU.o: ${MID}/MONADWU.NRLIB
	@ echo 2627-5 making ${OUT}/MONADWU.o from ${MID}/MONADWU.NRLIB
	@ cp ${MID}/MONADWU.NRLIB/code.o ${OUT}/MONADWU.o

@
<<MONADWU.NRLIB (NRLIB from MID)>>=
${MID}/MONADWU.NRLIB: ${MID}/MONADWU.spad
	@ echo 2628 making ${MID}/MONADWU.NRLIB from ${MID}/MONADWU.spad
	@ (cd ${MID} ; 	echo ')co MONADWU.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MONADWU.spad (SPAD from IN)>>=
${MID}/MONADWU.spad: ${IN}/naalgc.spad.pamphlet
	@ echo 2629 making ${MID}/MONADWU.spad from ${IN}/naalgc.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MONADWU.NRLIB ; \
	${TANGLE} -R"category MONADWU MonadWithUnit" ${IN}/naalgc.spad.pamphlet >MONADWU.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAALG-.o (O from NRLIB)>>=
${OUT}/NAALG-.o: ${MID}/NAALG.NRLIB
	@ echo 2630-8 making ${OUT}/NAALG-.o from ${MID}/NAALG-.NRLIB
	@ cp ${MID}/NAALG-.NRLIB/code.o ${OUT}/NAALG-.o

@
<<NAALG-.NRLIB (NRLIB from MID)>>=
${MID}/NAALG-.NRLIB: ${MID}/NAALG.spad 
	@ echo 2631 making ${MID}/NAALG-.NRLIB from ${MID}/NAALG.spad
	@ (cd ${MID} ; 	echo ')co NAALG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAALG.o (O from NRLIB)>>=
${OUT}/NAALG.o: ${MID}/NAALG.NRLIB
	@ echo 2632-8 making ${OUT}/NAALG.o from ${MID}/NAALG.NRLIB
	@ cp ${MID}/NAALG.NRLIB/code.o ${OUT}/NAALG.o

@
<<NAALG.NRLIB (NRLIB from MID)>>=
${MID}/NAALG.NRLIB: ${MID}/NAALG.spad
	@ echo 2633 making ${MID}/NAALG.NRLIB from ${MID}/NAALG.spad
	@ (cd ${MID} ; 	echo ')co NAALG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAALG.spad (SPAD from IN)>>=
${MID}/NAALG.spad: ${IN}/naalgc.spad.pamphlet
	@ echo 2634 making ${MID}/NAALG.spad from ${IN}/naalgc.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NAALG.NRLIB ; \
	${TANGLE} -R"category NAALG NonAssociativeAlgebra" ${IN}/naalgc.spad.pamphlet >NAALG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NARNG-.o (O from NRLIB)>>=
${OUT}/NARNG-.o: ${MID}/NARNG.NRLIB
	@ echo 2635-5 making ${OUT}/NARNG-.o from ${MID}/NARNG-.NRLIB
	@ cp ${MID}/NARNG-.NRLIB/code.o ${OUT}/NARNG-.o

@
<<NARNG-.NRLIB (NRLIB from MID)>>=
${MID}/NARNG-.NRLIB: ${MID}/NARNG.spad 
	@ echo 2636 making ${MID}/NARNG-.NRLIB from ${MID}/NARNG.spad
	@ (cd ${MID} ; 	echo ')co NARNG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NARNG.o (O from NRLIB)>>=
${OUT}/NARNG.o: ${MID}/NARNG.NRLIB
	@ echo 2637-5 making ${OUT}/NARNG.o from ${MID}/NARNG.NRLIB
	@ cp ${MID}/NARNG.NRLIB/code.o ${OUT}/NARNG.o

@
<<NARNG.NRLIB (NRLIB from MID)>>=
${MID}/NARNG.NRLIB: ${MID}/NARNG.spad
	@ echo 2638 making ${MID}/NARNG.NRLIB from ${MID}/NARNG.spad
	@ (cd ${MID} ; 	echo ')co NARNG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NARNG.spad (SPAD from IN)>>=
${MID}/NARNG.spad: ${IN}/naalgc.spad.pamphlet
	@ echo 2639 making ${MID}/NARNG.spad from ${IN}/naalgc.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NARNG.NRLIB ; \
	${TANGLE} -R"category NARNG NonAssociativeRng" ${IN}/naalgc.spad.pamphlet >NARNG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NASRING-.o (O from NRLIB)>>=
${OUT}/NASRING-.o: ${MID}/NASRING.NRLIB
	@ echo 2640-6 making ${OUT}/NASRING-.o from ${MID}/NASRING-.NRLIB
	@ cp ${MID}/NASRING-.NRLIB/code.o ${OUT}/NASRING-.o

@
<<NASRING-.NRLIB (NRLIB from MID)>>=
${MID}/NASRING-.NRLIB: ${MID}/NASRING.spad 
	@ echo 2641 making ${MID}/NASRING-.NRLIB from ${MID}/NASRING.spad
	@ (cd ${MID} ; 	echo ')co NASRING.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NASRING.o (O from NRLIB)>>=
${OUT}/NASRING.o: ${MID}/NASRING.NRLIB
	@ echo 2642-6 making ${OUT}/NASRING.o from ${MID}/NASRING.NRLIB
	@ cp ${MID}/NASRING.NRLIB/code.o ${OUT}/NASRING.o

@
<<NASRING.NRLIB (NRLIB from MID)>>=
${MID}/NASRING.NRLIB: ${MID}/NASRING.spad
	@ echo 2643 making ${MID}/NASRING.NRLIB from ${MID}/NASRING.spad
	@ (cd ${MID} ; 	echo ')co NASRING.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NASRING.spad (SPAD from IN)>>=
${MID}/NASRING.spad: ${IN}/naalgc.spad.pamphlet
	@ echo 2644 making ${MID}/NASRING.spad from ${IN}/naalgc.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NASRING.NRLIB ; \
	${TANGLE} -R"category NASRING NonAssociativeRing" ${IN}/naalgc.spad.pamphlet >NASRING.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<naalgc.spad.dvi (DOC from IN)>>=
${DOC}/naalgc.spad.dvi: ${IN}/naalgc.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2645 making ${DOC}/naalgc.spad.dvi from ${IN}/naalgc.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/naalgc.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} naalgc.spad ; \
	rm -f ${DOC}/naalgc.spad.pamphlet ; \
	rm -f ${DOC}/naalgc.spad.tex ; \
	rm -f ${DOC}/naalgc.spad )

@
\subsection{naalg.spad \cite{1}}
<<naalg.spad (SPAD from IN)>>=
${OUTSRC}/naalg.spad: ${IN}/naalg.spad.pamphlet
	@ echo 2646 making ${OUTSRC}/naalg.spad from ${IN}/naalg.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/naalg.spad.pamphlet >naalg.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ALGPKG.o (O from NRLIB)>>=
${OUT}/ALGPKG.o: ${MID}/ALGPKG.NRLIB
	@ echo 2647-20 making ${OUT}/ALGPKG.o from ${MID}/ALGPKG.NRLIB
	@ cp ${MID}/ALGPKG.NRLIB/code.o ${OUT}/ALGPKG.o

@
<<ALGPKG.NRLIB (NRLIB from MID)>>=
${MID}/ALGPKG.NRLIB: ${MID}/ALGPKG.spad
	@ echo 2648 making ${MID}/ALGPKG.NRLIB from ${MID}/ALGPKG.spad
	@ (cd ${MID} ; 	echo ')co ALGPKG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ALGPKG.spad (SPAD from IN)>>=
${MID}/ALGPKG.spad: ${IN}/naalg.spad.pamphlet
	@ echo 2649 making ${MID}/ALGPKG.spad from ${IN}/naalg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ALGPKG.NRLIB ; \
	${TANGLE} -R"package ALGPKG AlgebraPackage" ${IN}/naalg.spad.pamphlet >ALGPKG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ALGSC.o (O from NRLIB)>>=
${OUT}/ALGSC.o: ${MID}/ALGSC.NRLIB
	@ echo 2650-20 making ${OUT}/ALGSC.o from ${MID}/ALGSC.NRLIB
	@ cp ${MID}/ALGSC.NRLIB/code.o ${OUT}/ALGSC.o

@
<<ALGSC.NRLIB (NRLIB from MID)>>=
${MID}/ALGSC.NRLIB: ${MID}/ALGSC.spad
	@ echo 2651 making ${MID}/ALGSC.NRLIB from ${MID}/ALGSC.spad
	@ (cd ${MID} ; 	echo ')co ALGSC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ALGSC.spad (SPAD from IN)>>=
${MID}/ALGSC.spad: ${IN}/naalg.spad.pamphlet
	@ echo 2652 making ${MID}/ALGSC.spad from ${IN}/naalg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ALGSC.NRLIB ; \
	${TANGLE} -R"domain ALGSC AlgebraGivenByStructuralConstants" ${IN}/naalg.spad.pamphlet >ALGSC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FRNAAF2.o (O from NRLIB)>>=
${OUT}/FRNAAF2.o: ${MID}/FRNAAF2.NRLIB
	@ echo 2653-20 making ${OUT}/FRNAAF2.o from ${MID}/FRNAAF2.NRLIB
	@ cp ${MID}/FRNAAF2.NRLIB/code.o ${OUT}/FRNAAF2.o

@
<<FRNAAF2.NRLIB (NRLIB from MID)>>=
${MID}/FRNAAF2.NRLIB: ${MID}/FRNAAF2.spad
	@ echo 2654 making ${MID}/FRNAAF2.NRLIB from ${MID}/FRNAAF2.spad
	@ (cd ${MID} ; 	echo ')co FRNAAF2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FRNAAF2.spad (SPAD from IN)>>=
${MID}/FRNAAF2.spad: ${IN}/naalg.spad.pamphlet
	@ echo 2655 making ${MID}/FRNAAF2.spad from ${IN}/naalg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FRNAAF2.NRLIB ; \
	${TANGLE} -R"package FRNAAF2 FramedNonAssociativeAlgebraFunctions2" ${IN}/naalg.spad.pamphlet >FRNAAF2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SCPKG.o (O from NRLIB)>>=
${OUT}/SCPKG.o: ${MID}/SCPKG.NRLIB
	@ echo 2656-14 making ${OUT}/SCPKG.o from ${MID}/SCPKG.NRLIB
	@ cp ${MID}/SCPKG.NRLIB/code.o ${OUT}/SCPKG.o

@
<<SCPKG.NRLIB (NRLIB from MID)>>=
${MID}/SCPKG.NRLIB: ${MID}/SCPKG.spad
	@ echo 2657 making ${MID}/SCPKG.NRLIB from ${MID}/SCPKG.spad
	@ (cd ${MID} ; 	echo ')co SCPKG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SCPKG.spad (SPAD from IN)>>=
${MID}/SCPKG.spad: ${IN}/naalg.spad.pamphlet
	@ echo 2658 making ${MID}/SCPKG.spad from ${IN}/naalg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SCPKG.NRLIB ; \
	${TANGLE} -R"package SCPKG StructuralConstantsPackage" ${IN}/naalg.spad.pamphlet >SCPKG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<naalg.spad.dvi (DOC from IN)>>=
${DOC}/naalg.spad.dvi: ${IN}/naalg.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2659 making ${DOC}/naalg.spad.dvi from ${IN}/naalg.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/naalg.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} naalg.spad ; \
	rm -f ${DOC}/naalg.spad.pamphlet ; \
	rm -f ${DOC}/naalg.spad.tex ; \
	rm -f ${DOC}/naalg.spad )

@
\subsection{ndftip.as \cite{1}}
<<ndftip.as (SPAD from IN)>>=
${OUTSRC}/ndftip.as: ${IN}/ndftip.as.pamphlet
	@ echo 2660 making ${OUTSRC}/ndftip.as from ${IN}/ndftip.as.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/ndftip.as.pamphlet >ndftip.as )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ndftip.as.dvi (DOC from IN)>>=
${DOC}/ndftip.as.dvi: ${IN}/ndftip.as.pamphlet ${DOC}/axiom.sty
	@ echo 2661 making ${DOC}/ndftip.as.dvi from ${IN}/ndftip.as.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/ndftip.as.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} ndftip.as ; \
	rm -f ${DOC}/ndftip.as.pamphlet ; \
	rm -f ${DOC}/ndftip.as.tex ; \
	rm -f ${DOC}/ndftip.as )

@
\subsection{nepip.as \cite{1}}
<<nepip.as (SPAD from IN)>>=
${OUTSRC}/nepip.as: ${IN}/nepip.as.pamphlet
	@ echo 2662 making ${OUTSRC}/nepip.as from ${IN}/nepip.as.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/nepip.as.pamphlet >nepip.as )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<nepip.as.dvi (DOC from IN)>>=
${DOC}/nepip.as.dvi: ${IN}/nepip.as.pamphlet ${DOC}/axiom.sty
	@ echo 2663 making ${DOC}/nepip.as.dvi from ${IN}/nepip.as.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/nepip.as.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} nepip.as ; \
	rm -f ${DOC}/nepip.as.pamphlet ; \
	rm -f ${DOC}/nepip.as.tex ; \
	rm -f ${DOC}/nepip.as )

@
\subsection{newdata.spad \cite{1}}
<<newdata.spad (SPAD from IN)>>=
${OUTSRC}/newdata.spad: ${IN}/newdata.spad.pamphlet
	@ echo 2664 making ${OUTSRC}/newdata.spad from ${IN}/newdata.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/newdata.spad.pamphlet >newdata.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IPRNTPK.o (O from NRLIB)>>=
${OUT}/IPRNTPK.o: ${MID}/IPRNTPK.NRLIB
	@ echo 2665-19 making ${OUT}/IPRNTPK.o from ${MID}/IPRNTPK.NRLIB
	@ cp ${MID}/IPRNTPK.NRLIB/code.o ${OUT}/IPRNTPK.o

@
<<IPRNTPK.NRLIB (NRLIB from MID)>>=
${MID}/IPRNTPK.NRLIB: ${MID}/IPRNTPK.spad
	@ echo 2666 making ${MID}/IPRNTPK.NRLIB from ${MID}/IPRNTPK.spad
	@ (cd ${MID} ; 	echo ')co IPRNTPK.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IPRNTPK.spad (SPAD from IN)>>=
${MID}/IPRNTPK.spad: ${IN}/newdata.spad.pamphlet
	@ echo 2667 making ${MID}/IPRNTPK.spad from ${IN}/newdata.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IPRNTPK.NRLIB ; \
	${TANGLE} -R"package IPRNTPK InternalPrintPackage" ${IN}/newdata.spad.pamphlet >IPRNTPK.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SPLNODE.o (O from NRLIB)>>=
${OUT}/SPLNODE.o: ${MID}/SPLNODE.NRLIB
	@ echo 2668-4 making ${OUT}/SPLNODE.o from ${MID}/SPLNODE.NRLIB
	@ cp ${MID}/SPLNODE.NRLIB/code.o ${OUT}/SPLNODE.o

@
<<SPLNODE.NRLIB (NRLIB from MID)>>=
${MID}/SPLNODE.NRLIB: ${MID}/SPLNODE.spad
	@ echo 2669 making ${MID}/SPLNODE.NRLIB from ${MID}/SPLNODE.spad
	@ (cd ${MID} ; 	echo ')co SPLNODE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SPLNODE.spad (SPAD from IN)>>=
${MID}/SPLNODE.spad: ${IN}/newdata.spad.pamphlet
	@ echo 2670 making ${MID}/SPLNODE.spad from ${IN}/newdata.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SPLNODE.NRLIB ; \
	${TANGLE} -R"domain SPLNODE SplittingNode" ${IN}/newdata.spad.pamphlet >SPLNODE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SPLTREE.o (O from NRLIB)>>=
${OUT}/SPLTREE.o: ${MID}/SPLTREE.NRLIB
	@ echo 2671-14 making ${OUT}/SPLTREE.o from ${MID}/SPLTREE.NRLIB
	@ cp ${MID}/SPLTREE.NRLIB/code.o ${OUT}/SPLTREE.o

@
<<SPLTREE.NRLIB (NRLIB from MID)>>=
${MID}/SPLTREE.NRLIB: ${MID}/SPLTREE.spad
	@ echo 2672 making ${MID}/SPLTREE.NRLIB from ${MID}/SPLTREE.spad
	@ (cd ${MID} ; 	echo ')co SPLTREE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SPLTREE.spad (SPAD from IN)>>=
${MID}/SPLTREE.spad: ${IN}/newdata.spad.pamphlet
	@ echo 2673 making ${MID}/SPLTREE.spad from ${IN}/newdata.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SPLTREE.NRLIB ; \
	${TANGLE} -R"domain SPLTREE SplittingTree" ${IN}/newdata.spad.pamphlet >SPLTREE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TBCMPPK.o (O from NRLIB)>>=
${OUT}/TBCMPPK.o: ${MID}/TBCMPPK.NRLIB
	@ echo 2674-18 making ${OUT}/TBCMPPK.o from ${MID}/TBCMPPK.NRLIB
	@ cp ${MID}/TBCMPPK.NRLIB/code.o ${OUT}/TBCMPPK.o

@
<<TBCMPPK.NRLIB (NRLIB from MID)>>=
${MID}/TBCMPPK.NRLIB: ${MID}/TBCMPPK.spad
	@ echo 2675 making ${MID}/TBCMPPK.NRLIB from ${MID}/TBCMPPK.spad
	@ (cd ${MID} ; 	echo ')co TBCMPPK.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TBCMPPK.spad (SPAD from IN)>>=
${MID}/TBCMPPK.spad: ${IN}/newdata.spad.pamphlet
	@ echo 2676 making ${MID}/TBCMPPK.spad from ${IN}/newdata.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf TBCMPPK.NRLIB ; \
	${TANGLE} -R"package TBCMPPK TabulatedComputationPackage" ${IN}/newdata.spad.pamphlet >TBCMPPK.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<newdata.spad.dvi (DOC from IN)>>=
${DOC}/newdata.spad.dvi: ${IN}/newdata.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2677 making ${DOC}/newdata.spad.dvi from ${IN}/newdata.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/newdata.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} newdata.spad ; \
	rm -f ${DOC}/newdata.spad.pamphlet ; \
	rm -f ${DOC}/newdata.spad.tex ; \
	rm -f ${DOC}/newdata.spad )

@
\subsection{newpoint.spad \cite{1}}
<<newpoint.spad (SPAD from IN)>>=
${OUTSRC}/newpoint.spad: ${IN}/newpoint.spad.pamphlet
	@ echo 2678 making ${OUTSRC}/newpoint.spad from ${IN}/newpoint.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/newpoint.spad.pamphlet >newpoint.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COMPPROP.o (O from NRLIB)>>=
${OUT}/COMPPROP.o: ${MID}/COMPPROP.NRLIB
	@ echo 2679-4 making ${OUT}/COMPPROP.o from ${MID}/COMPPROP.NRLIB
	@ cp ${MID}/COMPPROP.NRLIB/code.o ${OUT}/COMPPROP.o

@
<<COMPPROP.NRLIB (NRLIB from MID)>>=
${MID}/COMPPROP.NRLIB: ${MID}/COMPPROP.spad
	@ echo 2680 making ${MID}/COMPPROP.NRLIB from ${MID}/COMPPROP.spad
	@ (cd ${MID} ; 	echo ')co COMPPROP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COMPPROP.spad (SPAD from IN)>>=
${MID}/COMPPROP.spad: ${IN}/newpoint.spad.pamphlet
	@ echo 2681 making ${MID}/COMPPROP.spad from ${IN}/newpoint.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf COMPPROP.NRLIB ; \
	${TANGLE} -R"domain COMPPROP SubSpaceComponentProperty" ${IN}/newpoint.spad.pamphlet >COMPPROP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SUBSPACE.o (O from NRLIB)>>=
${OUT}/SUBSPACE.o: ${MID}/SUBSPACE.NRLIB
	@ echo 2682-22 making ${OUT}/SUBSPACE.o from ${MID}/SUBSPACE.NRLIB
	@ cp ${MID}/SUBSPACE.NRLIB/code.o ${OUT}/SUBSPACE.o

@
<<SUBSPACE.NRLIB (NRLIB from MID)>>=
${MID}/SUBSPACE.NRLIB: ${MID}/SUBSPACE.spad
	@ echo 2683 making ${MID}/SUBSPACE.NRLIB from ${MID}/SUBSPACE.spad
	@ (cd ${MID} ; 	echo ')co SUBSPACE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SUBSPACE.spad (SPAD from IN)>>=
${MID}/SUBSPACE.spad: ${IN}/newpoint.spad.pamphlet
	@ echo 2684 making ${MID}/SUBSPACE.spad from ${IN}/newpoint.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SUBSPACE.NRLIB ; \
	${TANGLE} -R"domain SUBSPACE SubSpace" ${IN}/newpoint.spad.pamphlet >SUBSPACE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<POINT.o (O from NRLIB)>>=
${OUT}/POINT.o: ${MID}/POINT.NRLIB
	@ echo 2685-13 making ${OUT}/POINT.o from ${MID}/POINT.NRLIB
	@ cp ${MID}/POINT.NRLIB/code.o ${OUT}/POINT.o

@
<<POINT.NRLIB (NRLIB from MID)>>=
${MID}/POINT.NRLIB: ${MID}/POINT.spad
	@ echo 2686 making ${MID}/POINT.NRLIB from ${MID}/POINT.spad
	@ (cd ${MID} ; 	echo ')co POINT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<POINT.spad (SPAD from IN)>>=
${MID}/POINT.spad: ${IN}/newpoint.spad.pamphlet
	@ echo 2687 making ${MID}/POINT.spad from ${IN}/newpoint.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf POINT.NRLIB ; \
	${TANGLE} -R"domain POINT Point" ${IN}/newpoint.spad.pamphlet >POINT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PTCAT.o (O from NRLIB)>>=
${OUT}/PTCAT.o: ${MID}/PTCAT.NRLIB
	@ echo 2688-12 making ${OUT}/PTCAT.o from ${MID}/PTCAT.NRLIB
	@ cp ${MID}/PTCAT.NRLIB/code.o ${OUT}/PTCAT.o

@
<<PTCAT.NRLIB (NRLIB from MID)>>=
${MID}/PTCAT.NRLIB: ${MID}/PTCAT.spad
	@ echo 2689 making ${MID}/PTCAT.NRLIB from ${MID}/PTCAT.spad
	@ (cd ${MID} ; 	echo ')co PTCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PTCAT.spad (SPAD from IN)>>=
${MID}/PTCAT.spad: ${IN}/newpoint.spad.pamphlet
	@ echo 2690 making ${MID}/PTCAT.spad from ${IN}/newpoint.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PTCAT.NRLIB ; \
	${TANGLE} -R"category PTCAT PointCategory" ${IN}/newpoint.spad.pamphlet >PTCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PTFUNC2.o (O from NRLIB)>>=
${OUT}/PTFUNC2.o: ${MID}/PTFUNC2.NRLIB
	@ echo 2691-9 making ${OUT}/PTFUNC2.o from ${MID}/PTFUNC2.NRLIB
	@ cp ${MID}/PTFUNC2.NRLIB/code.o ${OUT}/PTFUNC2.o

@
<<PTFUNC2.NRLIB (NRLIB from MID)>>=
${MID}/PTFUNC2.NRLIB: ${MID}/PTFUNC2.spad
	@ echo 2692 making ${MID}/PTFUNC2.NRLIB from ${MID}/PTFUNC2.spad
	@ (cd ${MID} ; 	echo ')co PTFUNC2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PTFUNC2.spad (SPAD from IN)>>=
${MID}/PTFUNC2.spad: ${IN}/newpoint.spad.pamphlet
	@ echo 2693 making ${MID}/PTFUNC2.spad from ${IN}/newpoint.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PTFUNC2.NRLIB ; \
	${TANGLE} -R"package PTFUNC2 PointFunctions2" ${IN}/newpoint.spad.pamphlet >PTFUNC2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PTPACK.o (O from NRLIB)>>=
${OUT}/PTPACK.o: ${MID}/PTPACK.NRLIB
	@ echo 2694-13 making ${OUT}/PTPACK.o from ${MID}/PTPACK.NRLIB
	@ cp ${MID}/PTPACK.NRLIB/code.o ${OUT}/PTPACK.o

@
<<PTPACK.NRLIB (NRLIB from MID)>>=
${MID}/PTPACK.NRLIB: ${MID}/PTPACK.spad
	@ echo 2695 making ${MID}/PTPACK.NRLIB from ${MID}/PTPACK.spad
	@ (cd ${MID} ; 	echo ')co PTPACK.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PTPACK.spad (SPAD from IN)>>=
${MID}/PTPACK.spad: ${IN}/newpoint.spad.pamphlet
	@ echo 2696 making ${MID}/PTPACK.spad from ${IN}/newpoint.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PTPACK.NRLIB ; \
	${TANGLE} -R"package PTPACK PointPackage" ${IN}/newpoint.spad.pamphlet >PTPACK.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<newpoint.spad.dvi (DOC from IN)>>=
${DOC}/newpoint.spad.dvi: ${IN}/newpoint.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2697 making ${DOC}/newpoint.spad.dvi from ${IN}/newpoint.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/newpoint.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} newpoint.spad ; \
	rm -f ${DOC}/newpoint.spad.pamphlet ; \
	rm -f ${DOC}/newpoint.spad.tex ; \
	rm -f ${DOC}/newpoint.spad )

@
\subsection{newpoly.spad \cite{1}}
<<newpoly.spad (SPAD from IN)>>=
${OUTSRC}/newpoly.spad: ${IN}/newpoly.spad.pamphlet
	@ echo 2698 making ${OUTSRC}/newpoly.spad from ${IN}/newpoly.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/newpoly.spad.pamphlet >newpoly.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NSMP.o (O from NRLIB)>>=
${OUT}/NSMP.o: ${MID}/NSMP.NRLIB
	@ echo 2699-20 making ${OUT}/NSMP.o from ${MID}/NSMP.NRLIB
	@ cp ${MID}/NSMP.NRLIB/code.o ${OUT}/NSMP.o

@
<<NSMP.NRLIB (NRLIB from MID)>>=
${MID}/NSMP.NRLIB: ${MID}/NSMP.spad
	@ echo 2700 making ${MID}/NSMP.NRLIB from ${MID}/NSMP.spad
	@ (cd ${MID} ; 	echo ')co NSMP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NSMP.spad (SPAD from IN)>>=
${MID}/NSMP.spad: ${IN}/newpoly.spad.pamphlet
	@ echo 2701 making ${MID}/NSMP.spad from ${IN}/newpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NSMP.NRLIB ; \
	${TANGLE} -R"domain NSMP NewSparseMultivariatePolynomial" ${IN}/newpoly.spad.pamphlet >NSMP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NSUP.o (O from NRLIB)>>=
${OUT}/NSUP.o: ${MID}/NSUP.NRLIB
	@ echo 2702-14 making ${OUT}/NSUP.o from ${MID}/NSUP.NRLIB
	@ cp ${MID}/NSUP.NRLIB/code.o ${OUT}/NSUP.o

@
<<NSUP.NRLIB (NRLIB from MID)>>=
${MID}/NSUP.NRLIB: ${MID}/NSUP.spad
	@ echo 2703 making ${MID}/NSUP.NRLIB from ${MID}/NSUP.spad
	@ (cd ${MID} ; 	echo ')co NSUP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NSUP.spad (SPAD from IN)>>=
${MID}/NSUP.spad: ${IN}/newpoly.spad.pamphlet
	@ echo 2704 making ${MID}/NSUP.spad from ${IN}/newpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NSUP.NRLIB ; \
	${TANGLE} -R"domain NSUP NewSparseUnivariatePolynomial" ${IN}/newpoly.spad.pamphlet >NSUP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NSUP2.o (O from NRLIB)>>=
${OUT}/NSUP2.o: ${MID}/NSUP2.NRLIB
	@ echo 2705-5 making ${OUT}/NSUP2.o from ${MID}/NSUP2.NRLIB
	@ cp ${MID}/NSUP2.NRLIB/code.o ${OUT}/NSUP2.o

@
<<NSUP2.NRLIB (NRLIB from MID)>>=
${MID}/NSUP2.NRLIB: ${MID}/NSUP2.spad
	@ echo 2706 making ${MID}/NSUP2.NRLIB from ${MID}/NSUP2.spad
	@ (cd ${MID} ; 	echo ')co NSUP2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NSUP2.spad (SPAD from IN)>>=
${MID}/NSUP2.spad: ${IN}/newpoly.spad.pamphlet
	@ echo 2707 making ${MID}/NSUP2.spad from ${IN}/newpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NSUP2.NRLIB ; \
	${TANGLE} -R"package NSUP2 NewSparseUnivariatePolynomialFunctions2" ${IN}/newpoly.spad.pamphlet >NSUP2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RPOLCAT-.o (O from NRLIB)>>=
${OUT}/RPOLCAT-.o: ${MID}/RPOLCAT.NRLIB
	@ echo 2708-19 making ${OUT}/RPOLCAT-.o from ${MID}/RPOLCAT-.NRLIB
	@ cp ${MID}/RPOLCAT-.NRLIB/code.o ${OUT}/RPOLCAT-.o

@
<<RPOLCAT-.NRLIB (NRLIB from MID)>>=
${MID}/RPOLCAT-.NRLIB: ${MID}/RPOLCAT.spad 
	@ echo 2709 making ${MID}/RPOLCAT-.NRLIB from ${MID}/RPOLCAT.spad
	@ (cd ${MID} ; 	echo ')co RPOLCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RPOLCAT.o (O from NRLIB)>>=
${OUT}/RPOLCAT.o: ${MID}/RPOLCAT.NRLIB
	@ echo 2710-19 making ${OUT}/RPOLCAT.o from ${MID}/RPOLCAT.NRLIB
	@ cp ${MID}/RPOLCAT.NRLIB/code.o ${OUT}/RPOLCAT.o

@
<<RPOLCAT.NRLIB (NRLIB from MID)>>=
${MID}/RPOLCAT.NRLIB: ${MID}/RPOLCAT.spad
	@ echo 2711 making ${MID}/RPOLCAT.NRLIB from ${MID}/RPOLCAT.spad
	@ (cd ${MID} ; 	echo ')co RPOLCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RPOLCAT.spad (SPAD from IN)>>=
${MID}/RPOLCAT.spad: ${IN}/newpoly.spad.pamphlet
	@ echo 2712 making ${MID}/RPOLCAT.spad from ${IN}/newpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RPOLCAT.NRLIB ; \
	${TANGLE} -R"category RPOLCAT RecursivePolynomialCategory" ${IN}/newpoly.spad.pamphlet >RPOLCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<newpoly.spad.dvi (DOC from IN)>>=
${DOC}/newpoly.spad.dvi: ${IN}/newpoly.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2713 making ${DOC}/newpoly.spad.dvi from ${IN}/newpoly.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/newpoly.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} newpoly.spad ; \
	rm -f ${DOC}/newpoly.spad.pamphlet ; \
	rm -f ${DOC}/newpoly.spad.tex ; \
	rm -f ${DOC}/newpoly.spad )

@
\subsection{nlinsol.spad \cite{1}}
<<nlinsol.spad (SPAD from IN)>>=
${OUTSRC}/nlinsol.spad: ${IN}/nlinsol.spad.pamphlet
	@ echo 2714 making ${OUTSRC}/nlinsol.spad from ${IN}/nlinsol.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/nlinsol.spad.pamphlet >nlinsol.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NLINSOL.o (O from NRLIB)>>=
${OUT}/NLINSOL.o: ${MID}/NLINSOL.NRLIB
	@ echo 2715-20 making ${OUT}/NLINSOL.o from ${MID}/NLINSOL.NRLIB
	@ cp ${MID}/NLINSOL.NRLIB/code.o ${OUT}/NLINSOL.o

@
<<NLINSOL.NRLIB (NRLIB from MID)>>=
${MID}/NLINSOL.NRLIB: ${MID}/NLINSOL.spad
	@ echo 2716 making ${MID}/NLINSOL.NRLIB from ${MID}/NLINSOL.spad
	@ (cd ${MID} ; 	echo ')co NLINSOL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NLINSOL.spad (SPAD from IN)>>=
${MID}/NLINSOL.spad: ${IN}/nlinsol.spad.pamphlet
	@ echo 2717 making ${MID}/NLINSOL.spad from ${IN}/nlinsol.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NLINSOL.NRLIB ; \
	${TANGLE} -R"package NLINSOL NonLinearSolvePackage" ${IN}/nlinsol.spad.pamphlet >NLINSOL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RETSOL.o (O from NRLIB)>>=
${OUT}/RETSOL.o: ${MID}/RETSOL.NRLIB
	@ echo 2718-14 making ${OUT}/RETSOL.o from ${MID}/RETSOL.NRLIB
	@ cp ${MID}/RETSOL.NRLIB/code.o ${OUT}/RETSOL.o

@
<<RETSOL.NRLIB (NRLIB from MID)>>=
${MID}/RETSOL.NRLIB: ${MID}/RETSOL.spad
	@ echo 2719 making ${MID}/RETSOL.NRLIB from ${MID}/RETSOL.spad
	@ (cd ${MID} ; 	echo ')co RETSOL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RETSOL.spad (SPAD from IN)>>=
${MID}/RETSOL.spad: ${IN}/nlinsol.spad.pamphlet
	@ echo 2720 making ${MID}/RETSOL.spad from ${IN}/nlinsol.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RETSOL.NRLIB ; \
	${TANGLE} -R"package RETSOL RetractSolvePackage" ${IN}/nlinsol.spad.pamphlet >RETSOL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<nlinsol.spad.dvi (DOC from IN)>>=
${DOC}/nlinsol.spad.dvi: ${IN}/nlinsol.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2721 making ${DOC}/nlinsol.spad.dvi from ${IN}/nlinsol.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/nlinsol.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} nlinsol.spad ; \
	rm -f ${DOC}/nlinsol.spad.pamphlet ; \
	rm -f ${DOC}/nlinsol.spad.tex ; \
	rm -f ${DOC}/nlinsol.spad )

@
\subsection{nlode.spad \cite{1}}
<<nlode.spad (SPAD from IN)>>=
${OUTSRC}/nlode.spad: ${IN}/nlode.spad.pamphlet
	@ echo 2722 making ${OUTSRC}/nlode.spad from ${IN}/nlode.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/nlode.spad.pamphlet >nlode.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NODE1.o (O from NRLIB)>>=
${OUT}/NODE1.o: ${MID}/NODE1.NRLIB
	@ echo 2723-21 making ${OUT}/NODE1.o from ${MID}/NODE1.NRLIB
	@ cp ${MID}/NODE1.NRLIB/code.o ${OUT}/NODE1.o

@
<<NODE1.NRLIB (NRLIB from MID)>>=
${MID}/NODE1.NRLIB: ${MID}/NODE1.spad
	@ echo 2724 making ${MID}/NODE1.NRLIB from ${MID}/NODE1.spad
	@ (cd ${MID} ; 	echo ')co NODE1.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NODE1.spad (SPAD from IN)>>=
${MID}/NODE1.spad: ${IN}/nlode.spad.pamphlet
	@ echo 2725 making ${MID}/NODE1.spad from ${IN}/nlode.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NODE1.NRLIB ; \
	${TANGLE} -R"package NODE1 NonLinearFirstOrderODESolver" ${IN}/nlode.spad.pamphlet >NODE1.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<nlode.spad.dvi (DOC from IN)>>=
${DOC}/nlode.spad.dvi: ${IN}/nlode.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2726 making ${DOC}/nlode.spad.dvi from ${IN}/nlode.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/nlode.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} nlode.spad ; \
	rm -f ${DOC}/nlode.spad.pamphlet ; \
	rm -f ${DOC}/nlode.spad.tex ; \
	rm -f ${DOC}/nlode.spad )

@
\subsection{noptip.as \cite{1}}
<<noptip.as (SPAD from IN)>>=
${OUTSRC}/noptip.as: ${IN}/noptip.as.pamphlet
	@ echo 2727 making ${OUTSRC}/noptip.as from ${IN}/noptip.as.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/noptip.as.pamphlet >noptip.as )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<noptip.as.dvi (DOC from IN)>>=
${DOC}/noptip.as.dvi: ${IN}/noptip.as.pamphlet ${DOC}/axiom.sty
	@ echo 2728 making ${DOC}/noptip.as.dvi from ${IN}/noptip.as.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/noptip.as.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} noptip.as ; \
	rm -f ${DOC}/noptip.as.pamphlet ; \
	rm -f ${DOC}/noptip.as.tex ; \
	rm -f ${DOC}/noptip.as )

@
\subsection{npcoef.spad \cite{1}}
<<npcoef.spad (SPAD from IN)>>=
${OUTSRC}/npcoef.spad: ${IN}/npcoef.spad.pamphlet
	@ echo 2729 making ${OUTSRC}/npcoef.spad from ${IN}/npcoef.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/npcoef.spad.pamphlet >npcoef.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NPCOEF.o (O from NRLIB)>>=
${OUT}/NPCOEF.o: ${MID}/NPCOEF.NRLIB
	@ echo 2730-14 making ${OUT}/NPCOEF.o from ${MID}/NPCOEF.NRLIB
	@ cp ${MID}/NPCOEF.NRLIB/code.o ${OUT}/NPCOEF.o

@
<<NPCOEF.NRLIB (NRLIB from MID)>>=
${MID}/NPCOEF.NRLIB: ${MID}/NPCOEF.spad
	@ echo 2731 making ${MID}/NPCOEF.NRLIB from ${MID}/NPCOEF.spad
	@ (cd ${MID} ; 	echo ')co NPCOEF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NPCOEF.spad (SPAD from IN)>>=
${MID}/NPCOEF.spad: ${IN}/npcoef.spad.pamphlet
	@ echo 2732 making ${MID}/NPCOEF.spad from ${IN}/npcoef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NPCOEF.NRLIB ; \
	${TANGLE} -R"package NPCOEF NPCoef" ${IN}/npcoef.spad.pamphlet >NPCOEF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<npcoef.spad.dvi (DOC from IN)>>=
${DOC}/npcoef.spad.dvi: ${IN}/npcoef.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2733 making ${DOC}/npcoef.spad.dvi from ${IN}/npcoef.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/npcoef.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} npcoef.spad ; \
	rm -f ${DOC}/npcoef.spad.pamphlet ; \
	rm -f ${DOC}/npcoef.spad.tex ; \
	rm -f ${DOC}/npcoef.spad )

@
\subsection{nqip.as \cite{1}}
<<nqip.as (SPAD from IN)>>=
${OUTSRC}/nqip.as: ${IN}/nqip.as.pamphlet
	@ echo 2734 making ${OUTSRC}/nqip.as from ${IN}/nqip.as.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/nqip.as.pamphlet >nqip.as )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<nqip.as.dvi (DOC from IN)>>=
${DOC}/nqip.as.dvi: ${IN}/nqip.as.pamphlet ${DOC}/axiom.sty
	@ echo 2735 making ${DOC}/nqip.as.dvi from ${IN}/nqip.as.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/nqip.as.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} nqip.as ; \
	rm -f ${DOC}/nqip.as.pamphlet ; \
	rm -f ${DOC}/nqip.as.tex ; \
	rm -f ${DOC}/nqip.as )

@
\subsection{nrc.as \cite{1}}
<<nrc.as (SPAD from IN)>>=
${OUTSRC}/nrc.as: ${IN}/nrc.as.pamphlet
	@ echo 2736 making ${OUTSRC}/nrc.as from ${IN}/nrc.as.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/nrc.as.pamphlet >nrc.as )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<nrc.as.dvi (DOC from IN)>>=
${DOC}/nrc.as.dvi: ${IN}/nrc.as.pamphlet ${DOC}/axiom.sty
	@ echo 2737 making ${DOC}/nrc.as.dvi from ${IN}/nrc.as.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/nrc.as.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} nrc.as ; \
	rm -f ${DOC}/nrc.as.pamphlet ; \
	rm -f ${DOC}/nrc.as.tex ; \
	rm -f ${DOC}/nrc.as )

@
\subsection{nregset.spad \cite{1}}
<<nregset.spad (SPAD from IN)>>=
${OUTSRC}/nregset.spad: ${IN}/nregset.spad.pamphlet
	@ echo 2738 making ${OUTSRC}/nregset.spad from ${IN}/nregset.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/nregset.spad.pamphlet >nregset.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NORMPK.o (O from NRLIB)>>=
${OUT}/NORMPK.o: ${MID}/NORMPK.NRLIB
	@ echo 2739-23 making ${OUT}/NORMPK.o from ${MID}/NORMPK.NRLIB
	@ cp ${MID}/NORMPK.NRLIB/code.o ${OUT}/NORMPK.o

@
<<NORMPK.NRLIB (NRLIB from MID)>>=
${MID}/NORMPK.NRLIB: ${MID}/NORMPK.spad
	@ echo 2740 making ${MID}/NORMPK.NRLIB from ${MID}/NORMPK.spad
	@ (cd ${MID} ; 	echo ')co NORMPK.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NORMPK.spad (SPAD from IN)>>=
${MID}/NORMPK.spad: ${IN}/nregset.spad.pamphlet
	@ echo 2741 making ${MID}/NORMPK.spad from ${IN}/nregset.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NORMPK.NRLIB ; \
	${TANGLE} -R"package NORMPK NormalizationPackage" ${IN}/nregset.spad.pamphlet >NORMPK.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NTSCAT.o (O from NRLIB)>>=
${OUT}/NTSCAT.o: ${MID}/NTSCAT.NRLIB
	@ echo 2742-22 making ${OUT}/NTSCAT.o from ${MID}/NTSCAT.NRLIB
	@ cp ${MID}/NTSCAT.NRLIB/code.o ${OUT}/NTSCAT.o

@
<<NTSCAT.NRLIB (NRLIB from MID)>>=
${MID}/NTSCAT.NRLIB: ${MID}/NTSCAT.spad
	@ echo 2743 making ${MID}/NTSCAT.NRLIB from ${MID}/NTSCAT.spad
	@ (cd ${MID} ; 	echo ')co NTSCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NTSCAT.spad (SPAD from IN)>>=
${MID}/NTSCAT.spad: ${IN}/nregset.spad.pamphlet
	@ echo 2744 making ${MID}/NTSCAT.spad from ${IN}/nregset.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NTSCAT.NRLIB ; \
	${TANGLE} -R"category NTSCAT NormalizedTriangularSetCategory" ${IN}/nregset.spad.pamphlet >NTSCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<nregset.spad.dvi (DOC from IN)>>=
${DOC}/nregset.spad.dvi: ${IN}/nregset.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2745 making ${DOC}/nregset.spad.dvi from ${IN}/nregset.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/nregset.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} nregset.spad ; \
	rm -f ${DOC}/nregset.spad.pamphlet ; \
	rm -f ${DOC}/nregset.spad.tex ; \
	rm -f ${DOC}/nregset.spad )

@
\subsection{nsfip.as \cite{1}}
<<nsfip.as (SPAD from IN)>>=
${OUTSRC}/nsfip.as: ${IN}/nsfip.as.pamphlet
	@ echo 2746 making ${OUTSRC}/nsfip.as from ${IN}/nsfip.as.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/nsfip.as.pamphlet >nsfip.as )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<nsfip.as.dvi (DOC from IN)>>=
${DOC}/nsfip.as.dvi: ${IN}/nsfip.as.pamphlet ${DOC}/axiom.sty
	@ echo 2747 making ${DOC}/nsfip.as.dvi from ${IN}/nsfip.as.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/nsfip.as.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} nsfip.as ; \
	rm -f ${DOC}/nsfip.as.pamphlet ; \
	rm -f ${DOC}/nsfip.as.tex ; \
	rm -f ${DOC}/nsfip.as )

@
\subsection{nsregset.spad \cite{1}}
<<nsregset.spad (SPAD from IN)>>=
${OUTSRC}/nsregset.spad: ${IN}/nsregset.spad.pamphlet
	@ echo 2748 making ${OUTSRC}/nsregset.spad from ${IN}/nsregset.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/nsregset.spad.pamphlet >nsregset.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LAZM3PK.o (O from NRLIB)>>=
${OUT}/LAZM3PK.o: ${MID}/LAZM3PK.NRLIB
	@ echo 2749-23 making ${OUT}/LAZM3PK.o from ${MID}/LAZM3PK.NRLIB
	@ cp ${MID}/LAZM3PK.NRLIB/code.o ${OUT}/LAZM3PK.o

@
<<LAZM3PK.NRLIB (NRLIB from MID)>>=
${MID}/LAZM3PK.NRLIB: ${MID}/LAZM3PK.spad
	@ echo 2750 making ${MID}/LAZM3PK.NRLIB from ${MID}/LAZM3PK.spad
	@ (cd ${MID} ; 	echo ')co LAZM3PK.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LAZM3PK.spad (SPAD from IN)>>=
${MID}/LAZM3PK.spad: ${IN}/nsregset.spad.pamphlet
	@ echo 2751 making ${MID}/LAZM3PK.spad from ${IN}/nsregset.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LAZM3PK.NRLIB ; \
	${TANGLE} -R"package LAZM3PK LazardSetSolvingPackage" ${IN}/nsregset.spad.pamphlet >LAZM3PK.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SNTSCAT.o (O from NRLIB)>>=
${OUT}/SNTSCAT.o: ${MID}/SNTSCAT.NRLIB
	@ echo 2752-22 making ${OUT}/SNTSCAT.o from ${MID}/SNTSCAT.NRLIB
	@ cp ${MID}/SNTSCAT.NRLIB/code.o ${OUT}/SNTSCAT.o

@
<<SNTSCAT.NRLIB (NRLIB from MID)>>=
${MID}/SNTSCAT.NRLIB: ${MID}/SNTSCAT.spad
	@ echo 2753 making ${MID}/SNTSCAT.NRLIB from ${MID}/SNTSCAT.spad
	@ (cd ${MID} ; 	echo ')co SNTSCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SNTSCAT.spad (SPAD from IN)>>=
${MID}/SNTSCAT.spad: ${IN}/nsregset.spad.pamphlet
	@ echo 2754 making ${MID}/SNTSCAT.spad from ${IN}/nsregset.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SNTSCAT.NRLIB ; \
	${TANGLE} -R"category SNTSCAT SquareFreeNormalizedTriangularSetCategory" ${IN}/nsregset.spad.pamphlet >SNTSCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<nsregset.spad.dvi (DOC from IN)>>=
${DOC}/nsregset.spad.dvi: ${IN}/nsregset.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2755 making ${DOC}/nsregset.spad.dvi from ${IN}/nsregset.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/nsregset.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} nsregset.spad ; \
	rm -f ${DOC}/nsregset.spad.pamphlet ; \
	rm -f ${DOC}/nsregset.spad.tex ; \
	rm -f ${DOC}/nsregset.spad )

@
\subsection{numeigen.spad \cite{1}}
<<numeigen.spad (SPAD from IN)>>=
${OUTSRC}/numeigen.spad: ${IN}/numeigen.spad.pamphlet
	@ echo 2756 making ${OUTSRC}/numeigen.spad from ${IN}/numeigen.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/numeigen.spad.pamphlet >numeigen.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INEP.o (O from NRLIB)>>=
${OUT}/INEP.o: ${MID}/INEP.NRLIB
	@ echo 2757-20 making ${OUT}/INEP.o from ${MID}/INEP.NRLIB
	@ cp ${MID}/INEP.NRLIB/code.o ${OUT}/INEP.o

@
<<INEP.NRLIB (NRLIB from MID)>>=
${MID}/INEP.NRLIB: ${MID}/INEP.spad
	@ echo 2758 making ${MID}/INEP.NRLIB from ${MID}/INEP.spad
	@ (cd ${MID} ; 	echo ')co INEP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INEP.spad (SPAD from IN)>>=
${MID}/INEP.spad: ${IN}/numeigen.spad.pamphlet
	@ echo 2759 making ${MID}/INEP.spad from ${IN}/numeigen.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INEP.NRLIB ; \
	${TANGLE} -R"package INEP InnerNumericEigenPackage" ${IN}/numeigen.spad.pamphlet >INEP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NCEP.o (O from NRLIB)>>=
${OUT}/NCEP.o: ${MID}/NCEP.NRLIB
	@ echo 2760-20 making ${OUT}/NCEP.o from ${MID}/NCEP.NRLIB
	@ cp ${MID}/NCEP.NRLIB/code.o ${OUT}/NCEP.o

@
<<NCEP.NRLIB (NRLIB from MID)>>=
${MID}/NCEP.NRLIB: ${MID}/NCEP.spad
	@ echo 2761 making ${MID}/NCEP.NRLIB from ${MID}/NCEP.spad
	@ (cd ${MID} ; 	echo ')co NCEP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NCEP.spad (SPAD from IN)>>=
${MID}/NCEP.spad: ${IN}/numeigen.spad.pamphlet
	@ echo 2762 making ${MID}/NCEP.spad from ${IN}/numeigen.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NCEP.NRLIB ; \
	${TANGLE} -R"package NCEP NumericComplexEigenPackage" ${IN}/numeigen.spad.pamphlet >NCEP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NREP.o (O from NRLIB)>>=
${OUT}/NREP.o: ${MID}/NREP.NRLIB
	@ echo 2763-19 making ${OUT}/NREP.o from ${MID}/NREP.NRLIB
	@ cp ${MID}/NREP.NRLIB/code.o ${OUT}/NREP.o

@
<<NREP.NRLIB (NRLIB from MID)>>=
${MID}/NREP.NRLIB: ${MID}/NREP.spad
	@ echo 2764 making ${MID}/NREP.NRLIB from ${MID}/NREP.spad
	@ (cd ${MID} ; 	echo ')co NREP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NREP.spad (SPAD from IN)>>=
${MID}/NREP.spad: ${IN}/numeigen.spad.pamphlet
	@ echo 2765 making ${MID}/NREP.spad from ${IN}/numeigen.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NREP.NRLIB ; \
	${TANGLE} -R"package NREP NumericRealEigenPackage" ${IN}/numeigen.spad.pamphlet >NREP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<numeigen.spad.dvi (DOC from IN)>>=
${DOC}/numeigen.spad.dvi: ${IN}/numeigen.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2766 making ${DOC}/numeigen.spad.dvi from ${IN}/numeigen.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/numeigen.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} numeigen.spad ; \
	rm -f ${DOC}/numeigen.spad.pamphlet ; \
	rm -f ${DOC}/numeigen.spad.tex ; \
	rm -f ${DOC}/numeigen.spad )

@
\subsection{numeric.spad \cite{1}}
<<numeric.spad (SPAD from IN)>>=
${OUTSRC}/numeric.spad: ${IN}/numeric.spad.pamphlet
	@ echo 2767 making ${OUTSRC}/numeric.spad from ${IN}/numeric.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/numeric.spad.pamphlet >numeric.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DRAWHACK.o (O from NRLIB)>>=
${OUT}/DRAWHACK.o: ${MID}/DRAWHACK.NRLIB
	@ echo 2768-8 making ${OUT}/DRAWHACK.o from ${MID}/DRAWHACK.NRLIB
	@ cp ${MID}/DRAWHACK.NRLIB/code.o ${OUT}/DRAWHACK.o

@
<<DRAWHACK.NRLIB (NRLIB from MID)>>=
${MID}/DRAWHACK.NRLIB: ${MID}/DRAWHACK.spad
	@ echo 2769 making ${MID}/DRAWHACK.NRLIB from ${MID}/DRAWHACK.spad
	@ (cd ${MID} ; 	echo ')co DRAWHACK.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DRAWHACK.spad (SPAD from IN)>>=
${MID}/DRAWHACK.spad: ${IN}/numeric.spad.pamphlet
	@ echo 2770 making ${MID}/DRAWHACK.spad from ${IN}/numeric.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DRAWHACK.NRLIB ; \
	${TANGLE} -R"package DRAWHACK DrawNumericHack" ${IN}/numeric.spad.pamphlet >DRAWHACK.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NUMERIC.o (O from NRLIB)>>=
${OUT}/NUMERIC.o: ${MID}/NUMERIC.NRLIB
	@ echo 2771-20 making ${OUT}/NUMERIC.o from ${MID}/NUMERIC.NRLIB
	@ cp ${MID}/NUMERIC.NRLIB/code.o ${OUT}/NUMERIC.o

@
<<NUMERIC.NRLIB (NRLIB from MID)>>=
${MID}/NUMERIC.NRLIB: ${MID}/NUMERIC.spad
	@ echo 2772 making ${MID}/NUMERIC.NRLIB from ${MID}/NUMERIC.spad
	@ (cd ${MID} ; 	echo ')co NUMERIC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NUMERIC.spad (SPAD from IN)>>=
${MID}/NUMERIC.spad: ${IN}/numeric.spad.pamphlet
	@ echo 2773 making ${MID}/NUMERIC.spad from ${IN}/numeric.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NUMERIC.NRLIB ; \
	${TANGLE} -R"package NUMERIC Numeric" ${IN}/numeric.spad.pamphlet >NUMERIC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<numeric.spad.dvi (DOC from IN)>>=
${DOC}/numeric.spad.dvi: ${IN}/numeric.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2774 making ${DOC}/numeric.spad.dvi from ${IN}/numeric.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/numeric.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} numeric.spad ; \
	rm -f ${DOC}/numeric.spad.pamphlet ; \
	rm -f ${DOC}/numeric.spad.tex ; \
	rm -f ${DOC}/numeric.spad )

@
\subsection{numode.spad \cite{1}}
<<numode.spad (SPAD from IN)>>=
${OUTSRC}/numode.spad: ${IN}/numode.spad.pamphlet
	@ echo 2775 making ${OUTSRC}/numode.spad from ${IN}/numode.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/numode.spad.pamphlet >numode.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NUMODE.o (O from NRLIB)>>=
${OUT}/NUMODE.o: ${MID}/NUMODE.NRLIB
	@ echo 2776-13 making ${OUT}/NUMODE.o from ${MID}/NUMODE.NRLIB
	@ cp ${MID}/NUMODE.NRLIB/code.o ${OUT}/NUMODE.o

@
<<NUMODE.NRLIB (NRLIB from MID)>>=
${MID}/NUMODE.NRLIB: ${MID}/NUMODE.spad
	@ echo 2777 making ${MID}/NUMODE.NRLIB from ${MID}/NUMODE.spad
	@ (cd ${MID} ; 	echo ')co NUMODE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NUMODE.spad (SPAD from IN)>>=
${MID}/NUMODE.spad: ${IN}/numode.spad.pamphlet
	@ echo 2778 making ${MID}/NUMODE.spad from ${IN}/numode.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NUMODE.NRLIB ; \
	${TANGLE} -R"package NUMODE NumericalOrdinaryDifferentialEquations" ${IN}/numode.spad.pamphlet >NUMODE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<numode.spad.dvi (DOC from IN)>>=
${DOC}/numode.spad.dvi: ${IN}/numode.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2779 making ${DOC}/numode.spad.dvi from ${IN}/numode.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/numode.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} numode.spad ; \
	rm -f ${DOC}/numode.spad.pamphlet ; \
	rm -f ${DOC}/numode.spad.tex ; \
	rm -f ${DOC}/numode.spad )

@
\subsection{numquad.spad \cite{1}}
<<numquad.spad (SPAD from IN)>>=
${OUTSRC}/numquad.spad: ${IN}/numquad.spad.pamphlet
	@ echo 2780 making ${OUTSRC}/numquad.spad from ${IN}/numquad.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/numquad.spad.pamphlet >numquad.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NUMQUAD.o (O from NRLIB)>>=
${OUT}/NUMQUAD.o: ${MID}/NUMQUAD.NRLIB
	@ echo 2781-13 making ${OUT}/NUMQUAD.o from ${MID}/NUMQUAD.NRLIB
	@ cp ${MID}/NUMQUAD.NRLIB/code.o ${OUT}/NUMQUAD.o

@
<<NUMQUAD.NRLIB (NRLIB from MID)>>=
${MID}/NUMQUAD.NRLIB: ${MID}/NUMQUAD.spad
	@ echo 2782 making ${MID}/NUMQUAD.NRLIB from ${MID}/NUMQUAD.spad
	@ (cd ${MID} ; 	echo ')co NUMQUAD.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NUMQUAD.spad (SPAD from IN)>>=
${MID}/NUMQUAD.spad: ${IN}/numquad.spad.pamphlet
	@ echo 2783 making ${MID}/NUMQUAD.spad from ${IN}/numquad.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NUMQUAD.NRLIB ; \
	${TANGLE} -R"package NUMQUAD NumericalQuadrature" ${IN}/numquad.spad.pamphlet >NUMQUAD.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<numquad.spad.dvi (DOC from IN)>>=
${DOC}/numquad.spad.dvi: ${IN}/numquad.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2784 making ${DOC}/numquad.spad.dvi from ${IN}/numquad.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/numquad.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} numquad.spad ; \
	rm -f ${DOC}/numquad.spad.pamphlet ; \
	rm -f ${DOC}/numquad.spad.tex ; \
	rm -f ${DOC}/numquad.spad )

@
\subsection{numsolve.spad \cite{1}}
<<numsolve.spad (SPAD from IN)>>=
${OUTSRC}/numsolve.spad: ${IN}/numsolve.spad.pamphlet
	@ echo 2785 making ${OUTSRC}/numsolve.spad from ${IN}/numsolve.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/numsolve.spad.pamphlet >numsolve.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FLOATCP.o (O from NRLIB)>>=
${OUT}/FLOATCP.o: ${MID}/FLOATCP.NRLIB
	@ echo 2786-20 making ${OUT}/FLOATCP.o from ${MID}/FLOATCP.NRLIB
	@ cp ${MID}/FLOATCP.NRLIB/code.o ${OUT}/FLOATCP.o

@
<<FLOATCP.NRLIB (NRLIB from MID)>>=
${MID}/FLOATCP.NRLIB: ${MID}/FLOATCP.spad
	@ echo 2787 making ${MID}/FLOATCP.NRLIB from ${MID}/FLOATCP.spad
	@ (cd ${MID} ; 	echo ')co FLOATCP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FLOATCP.spad (SPAD from IN)>>=
${MID}/FLOATCP.spad: ${IN}/numsolve.spad.pamphlet
	@ echo 2788 making ${MID}/FLOATCP.spad from ${IN}/numsolve.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FLOATCP.NRLIB ; \
	${TANGLE} -R"package FLOATCP FloatingComplexPackage" ${IN}/numsolve.spad.pamphlet >FLOATCP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FLOATRP.o (O from NRLIB)>>=
${OUT}/FLOATRP.o: ${MID}/FLOATRP.NRLIB
	@ echo 2789-14 making ${OUT}/FLOATRP.o from ${MID}/FLOATRP.NRLIB
	@ cp ${MID}/FLOATRP.NRLIB/code.o ${OUT}/FLOATRP.o

@
<<FLOATRP.NRLIB (NRLIB from MID)>>=
${MID}/FLOATRP.NRLIB: ${MID}/FLOATRP.spad
	@ echo 2790 making ${MID}/FLOATRP.NRLIB from ${MID}/FLOATRP.spad
	@ (cd ${MID} ; 	echo ')co FLOATRP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FLOATRP.spad (SPAD from IN)>>=
${MID}/FLOATRP.spad: ${IN}/numsolve.spad.pamphlet
	@ echo 2791 making ${MID}/FLOATRP.spad from ${IN}/numsolve.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FLOATRP.NRLIB ; \
	${TANGLE} -R"package FLOATRP FloatingRealPackage" ${IN}/numsolve.spad.pamphlet >FLOATRP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INFSP.o (O from NRLIB)>>=
${OUT}/INFSP.o: ${MID}/INFSP.NRLIB
	@ echo 2792-20 making ${OUT}/INFSP.o from ${MID}/INFSP.NRLIB
	@ cp ${MID}/INFSP.NRLIB/code.o ${OUT}/INFSP.o

@
<<INFSP.NRLIB (NRLIB from MID)>>=
${MID}/INFSP.NRLIB: ${MID}/INFSP.spad
	@ echo 2793 making ${MID}/INFSP.NRLIB from ${MID}/INFSP.spad
	@ (cd ${MID} ; 	echo ')co INFSP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INFSP.spad (SPAD from IN)>>=
${MID}/INFSP.spad: ${IN}/numsolve.spad.pamphlet
	@ echo 2794 making ${MID}/INFSP.spad from ${IN}/numsolve.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INFSP.NRLIB ; \
	${TANGLE} -R"package INFSP InnerNumericFloatSolvePackage" ${IN}/numsolve.spad.pamphlet >INFSP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<numsolve.spad.dvi (DOC from IN)>>=
${DOC}/numsolve.spad.dvi: ${IN}/numsolve.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2795 making ${DOC}/numsolve.spad.dvi from ${IN}/numsolve.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/numsolve.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} numsolve.spad ; \
	rm -f ${DOC}/numsolve.spad.pamphlet ; \
	rm -f ${DOC}/numsolve.spad.tex ; \
	rm -f ${DOC}/numsolve.spad )

@
\subsection{numtheor.spad \cite{1}}
<<numtheor.spad (SPAD from IN)>>=
${OUTSRC}/numtheor.spad: ${IN}/numtheor.spad.pamphlet
	@ echo 2796 making ${OUTSRC}/numtheor.spad from ${IN}/numtheor.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/numtheor.spad.pamphlet >numtheor.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTHEORY.o (O from NRLIB)>>=
${OUT}/INTHEORY.o: ${MID}/INTHEORY.NRLIB
	@ echo 2797-11 making ${OUT}/INTHEORY.o from ${MID}/INTHEORY.NRLIB
	@ cp ${MID}/INTHEORY.NRLIB/code.o ${OUT}/INTHEORY.o

@
<<INTHEORY.NRLIB (NRLIB from MID)>>=
${MID}/INTHEORY.NRLIB: ${MID}/INTHEORY.spad
	@ echo 2798 making ${MID}/INTHEORY.NRLIB from ${MID}/INTHEORY.spad
	@ (cd ${MID} ; 	echo ')co INTHEORY.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTHEORY.spad (SPAD from IN)>>=
${MID}/INTHEORY.spad: ${IN}/numtheor.spad.pamphlet
	@ echo 2799 making ${MID}/INTHEORY.spad from ${IN}/numtheor.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INTHEORY.NRLIB ; \
	${TANGLE} -R"package INTHEORY IntegerNumberTheoryFunctions" ${IN}/numtheor.spad.pamphlet >INTHEORY.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PNTHEORY.o (O from NRLIB)>>=
${OUT}/PNTHEORY.o: ${MID}/PNTHEORY.NRLIB
	@ echo 2800-14 making ${OUT}/PNTHEORY.o from ${MID}/PNTHEORY.NRLIB
	@ cp ${MID}/PNTHEORY.NRLIB/code.o ${OUT}/PNTHEORY.o

@
<<PNTHEORY.NRLIB (NRLIB from MID)>>=
${MID}/PNTHEORY.NRLIB: ${MID}/PNTHEORY.spad
	@ echo 2801 making ${MID}/PNTHEORY.NRLIB from ${MID}/PNTHEORY.spad
	@ (cd ${MID} ; 	echo ')co PNTHEORY.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PNTHEORY.spad (SPAD from IN)>>=
${MID}/PNTHEORY.spad: ${IN}/numtheor.spad.pamphlet
	@ echo 2802 making ${MID}/PNTHEORY.spad from ${IN}/numtheor.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PNTHEORY.NRLIB ; \
	${TANGLE} -R"package PNTHEORY PolynomialNumberTheoryFunctions" ${IN}/numtheor.spad.pamphlet >PNTHEORY.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<numtheor.spad.dvi (DOC from IN)>>=
${DOC}/numtheor.spad.dvi: ${IN}/numtheor.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2803 making ${DOC}/numtheor.spad.dvi from ${IN}/numtheor.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/numtheor.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} numtheor.spad ; \
	rm -f ${DOC}/numtheor.spad.pamphlet ; \
	rm -f ${DOC}/numtheor.spad.tex ; \
	rm -f ${DOC}/numtheor.spad )

@
\subsection{oct.spad \cite{1}}
<<oct.spad (SPAD from IN)>>=
${OUTSRC}/oct.spad: ${IN}/oct.spad.pamphlet
	@ echo 2804 making ${OUTSRC}/oct.spad from ${IN}/oct.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/oct.spad.pamphlet >oct.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OC-.o (O from NRLIB)>>=
${OUT}/OC-.o: ${MID}/OC.NRLIB
	@ echo 2805-19 making ${OUT}/OC-.o from ${MID}/OC-.NRLIB
	@ cp ${MID}/OC-.NRLIB/code.o ${OUT}/OC-.o

@
<<OC-.NRLIB (NRLIB from MID)>>=
${MID}/OC-.NRLIB: ${MID}/OC.spad 
	@ echo 2806 making ${MID}/OC-.NRLIB from ${MID}/OC.spad
	@ (cd ${MID} ; 	echo ')co OC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OC.o (O from NRLIB)>>=
${OUT}/OC.o: ${MID}/OC.NRLIB
	@ echo 2807-19 making ${OUT}/OC.o from ${MID}/OC.NRLIB
	@ cp ${MID}/OC.NRLIB/code.o ${OUT}/OC.o

@
<<OC.NRLIB (NRLIB from MID)>>=
${MID}/OC.NRLIB: ${MID}/OC.spad
	@ echo 2808 making ${MID}/OC.NRLIB from ${MID}/OC.spad
	@ (cd ${MID} ; 	echo ')co OC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OC.spad (SPAD from IN)>>=
${MID}/OC.spad: ${IN}/oct.spad.pamphlet
	@ echo 2809 making ${MID}/OC.spad from ${IN}/oct.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OC.NRLIB ; \
	${TANGLE} -R"category OC OctonionCategory" ${IN}/oct.spad.pamphlet >OC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OCT.o (O from NRLIB)>>=
${OUT}/OCT.o: ${MID}/OCT.NRLIB
	@ echo 2810-20 making ${OUT}/OCT.o from ${MID}/OCT.NRLIB
	@ cp ${MID}/OCT.NRLIB/code.o ${OUT}/OCT.o

@
<<OCT.NRLIB (NRLIB from MID)>>=
${MID}/OCT.NRLIB: ${MID}/OCT.spad
	@ echo 2811 making ${MID}/OCT.NRLIB from ${MID}/OCT.spad
	@ (cd ${MID} ; 	echo ')co OCT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OCT.spad (SPAD from IN)>>=
${MID}/OCT.spad: ${IN}/oct.spad.pamphlet
	@ echo 2812 making ${MID}/OCT.spad from ${IN}/oct.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OCT.NRLIB ; \
	${TANGLE} -R"domain OCT Octonion" ${IN}/oct.spad.pamphlet >OCT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OCTCT2.o (O from NRLIB)>>=
${OUT}/OCTCT2.o: ${MID}/OCTCT2.NRLIB
	@ echo 2813-20 making ${OUT}/OCTCT2.o from ${MID}/OCTCT2.NRLIB
	@ cp ${MID}/OCTCT2.NRLIB/code.o ${OUT}/OCTCT2.o

@
<<OCTCT2.NRLIB (NRLIB from MID)>>=
${MID}/OCTCT2.NRLIB: ${MID}/OCTCT2.spad
	@ echo 2814 making ${MID}/OCTCT2.NRLIB from ${MID}/OCTCT2.spad
	@ (cd ${MID} ; 	echo ')co OCTCT2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OCTCT2.spad (SPAD from IN)>>=
${MID}/OCTCT2.spad: ${IN}/oct.spad.pamphlet
	@ echo 2815 making ${MID}/OCTCT2.spad from ${IN}/oct.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OCTCT2.NRLIB ; \
	${TANGLE} -R"package OCTCT2 OctonionCategoryFunctions2" ${IN}/oct.spad.pamphlet >OCTCT2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<oct.spad.dvi (DOC from IN)>>=
${DOC}/oct.spad.dvi: ${IN}/oct.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2816 making ${DOC}/oct.spad.dvi from ${IN}/oct.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/oct.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} oct.spad ; \
	rm -f ${DOC}/oct.spad.pamphlet ; \
	rm -f ${DOC}/oct.spad.tex ; \
	rm -f ${DOC}/oct.spad )

@
\subsection{odealg.spad \cite{1}}
<<odealg.spad (SPAD from IN)>>=
${OUTSRC}/odealg.spad: ${IN}/odealg.spad.pamphlet
	@ echo 2817 making ${OUTSRC}/odealg.spad from ${IN}/odealg.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/odealg.spad.pamphlet >odealg.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODEPAL.o (O from NRLIB)>>=
${OUT}/ODEPAL.o: ${MID}/ODEPAL.NRLIB
	@ echo 2818-20 making ${OUT}/ODEPAL.o from ${MID}/ODEPAL.NRLIB
	@ cp ${MID}/ODEPAL.NRLIB/code.o ${OUT}/ODEPAL.o

@
<<ODEPAL.NRLIB (NRLIB from MID)>>=
${MID}/ODEPAL.NRLIB: ${MID}/ODEPAL.spad
	@ echo 2819 making ${MID}/ODEPAL.NRLIB from ${MID}/ODEPAL.spad
	@ (cd ${MID} ; 	echo ')co ODEPAL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODEPAL.spad (SPAD from IN)>>=
${MID}/ODEPAL.spad: ${IN}/odealg.spad.pamphlet
	@ echo 2820 making ${MID}/ODEPAL.spad from ${IN}/odealg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ODEPAL.NRLIB ; \
	${TANGLE} -R"package ODEPAL PureAlgebraicLODE" ${IN}/odealg.spad.pamphlet >ODEPAL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODERED.o (O from NRLIB)>>=
${OUT}/ODERED.o: ${MID}/ODERED.NRLIB
	@ echo 2821-17 making ${OUT}/ODERED.o from ${MID}/ODERED.NRLIB
	@ cp ${MID}/ODERED.NRLIB/code.o ${OUT}/ODERED.o

@
<<ODERED.NRLIB (NRLIB from MID)>>=
${MID}/ODERED.NRLIB: ${MID}/ODERED.spad
	@ echo 2822 making ${MID}/ODERED.NRLIB from ${MID}/ODERED.spad
	@ (cd ${MID} ; 	echo ')co ODERED.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODERED.spad (SPAD from IN)>>=
${MID}/ODERED.spad: ${IN}/odealg.spad.pamphlet
	@ echo 2823 making ${MID}/ODERED.spad from ${IN}/odealg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ODERED.NRLIB ; \
	${TANGLE} -R"package ODERED ReduceLODE" ${IN}/odealg.spad.pamphlet >ODERED.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODESYS.o (O from NRLIB)>>=
${OUT}/ODESYS.o: ${MID}/ODESYS.NRLIB
	@ echo 2824-13 making ${OUT}/ODESYS.o from ${MID}/ODESYS.NRLIB
	@ cp ${MID}/ODESYS.NRLIB/code.o ${OUT}/ODESYS.o

@
<<ODESYS.NRLIB (NRLIB from MID)>>=
${MID}/ODESYS.NRLIB: ${MID}/ODESYS.spad
	@ echo 2825 making ${MID}/ODESYS.NRLIB from ${MID}/ODESYS.spad
	@ (cd ${MID} ; 	echo ')co ODESYS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODESYS.spad (SPAD from IN)>>=
${MID}/ODESYS.spad: ${IN}/odealg.spad.pamphlet
	@ echo 2826 making ${MID}/ODESYS.spad from ${IN}/odealg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ODESYS.NRLIB ; \
	${TANGLE} -R"package ODESYS SystemODESolver" ${IN}/odealg.spad.pamphlet >ODESYS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<odealg.spad.dvi (DOC from IN)>>=
${DOC}/odealg.spad.dvi: ${IN}/odealg.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2827 making ${DOC}/odealg.spad.dvi from ${IN}/odealg.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/odealg.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} odealg.spad ; \
	rm -f ${DOC}/odealg.spad.pamphlet ; \
	rm -f ${DOC}/odealg.spad.tex ; \
	rm -f ${DOC}/odealg.spad )

@
\subsection{odeef.spad \cite{1}}
<<odeef.spad (SPAD from IN)>>=
${OUTSRC}/odeef.spad: ${IN}/odeef.spad.pamphlet
	@ echo 2828 making ${OUTSRC}/odeef.spad from ${IN}/odeef.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/odeef.spad.pamphlet >odeef.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LODEEF.o (O from NRLIB)>>=
${OUT}/LODEEF.o: ${MID}/LODEEF.NRLIB
	@ echo 2829-21 making ${OUT}/LODEEF.o from ${MID}/LODEEF.NRLIB
	@ cp ${MID}/LODEEF.NRLIB/code.o ${OUT}/LODEEF.o

@
<<LODEEF.NRLIB (NRLIB from MID)>>=
${MID}/LODEEF.NRLIB: ${MID}/LODEEF.spad
	@ echo 2830 making ${MID}/LODEEF.NRLIB from ${MID}/LODEEF.spad
	@ (cd ${MID} ; 	echo ')co LODEEF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LODEEF.spad (SPAD from IN)>>=
${MID}/LODEEF.spad: ${IN}/odeef.spad.pamphlet
	@ echo 2831 making ${MID}/LODEEF.spad from ${IN}/odeef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LODEEF.NRLIB ; \
	${TANGLE} -R"package LODEEF ElementaryFunctionLODESolver" ${IN}/odeef.spad.pamphlet >LODEEF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODEEF.o (O from NRLIB)>>=
${OUT}/ODEEF.o: ${MID}/ODEEF.NRLIB
	@ echo 2832-23 making ${OUT}/ODEEF.o from ${MID}/ODEEF.NRLIB
	@ cp ${MID}/ODEEF.NRLIB/code.o ${OUT}/ODEEF.o

@
<<ODEEF.NRLIB (NRLIB from MID)>>=
${MID}/ODEEF.NRLIB: ${MID}/ODEEF.spad
	@ echo 2833 making ${MID}/ODEEF.NRLIB from ${MID}/ODEEF.spad
	@ (cd ${MID} ; 	echo ')co ODEEF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODEEF.spad (SPAD from IN)>>=
${MID}/ODEEF.spad: ${IN}/odeef.spad.pamphlet
	@ echo 2834 making ${MID}/ODEEF.spad from ${IN}/odeef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ODEEF.NRLIB ; \
	${TANGLE} -R"package ODEEF ElementaryFunctionODESolver" ${IN}/odeef.spad.pamphlet >ODEEF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<REDORDER.o (O from NRLIB)>>=
${OUT}/REDORDER.o: ${MID}/REDORDER.NRLIB
	@ echo 2835-11 making ${OUT}/REDORDER.o from ${MID}/REDORDER.NRLIB
	@ cp ${MID}/REDORDER.NRLIB/code.o ${OUT}/REDORDER.o

@
<<REDORDER.NRLIB (NRLIB from MID)>>=
${MID}/REDORDER.NRLIB: ${MID}/REDORDER.spad
	@ echo 2836 making ${MID}/REDORDER.NRLIB from ${MID}/REDORDER.spad
	@ (cd ${MID} ; 	echo ')co REDORDER.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<REDORDER.spad (SPAD from IN)>>=
${MID}/REDORDER.spad: ${IN}/odeef.spad.pamphlet
	@ echo 2837 making ${MID}/REDORDER.spad from ${IN}/odeef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf REDORDER.NRLIB ; \
	${TANGLE} -R"package REDORDER ReductionOfOrder" ${IN}/odeef.spad.pamphlet >REDORDER.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<odeef.spad.dvi (DOC from IN)>>=
${DOC}/odeef.spad.dvi: ${IN}/odeef.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2838 making ${DOC}/odeef.spad.dvi from ${IN}/odeef.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/odeef.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} odeef.spad ; \
	rm -f ${DOC}/odeef.spad.pamphlet ; \
	rm -f ${DOC}/odeef.spad.tex ; \
	rm -f ${DOC}/odeef.spad )

@
\subsection{oderf.spad \cite{1}}
<<oderf.spad (SPAD from IN)>>=
${OUTSRC}/oderf.spad: ${IN}/oderf.spad.pamphlet
	@ echo 2839 making ${OUTSRC}/oderf.spad from ${IN}/oderf.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/oderf.spad.pamphlet >oderf.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BALFACT.o (O from NRLIB)>>=
${OUT}/BALFACT.o: ${MID}/BALFACT.NRLIB
	@ echo 2840-14 making ${OUT}/BALFACT.o from ${MID}/BALFACT.NRLIB
	@ cp ${MID}/BALFACT.NRLIB/code.o ${OUT}/BALFACT.o

@
<<BALFACT.NRLIB (NRLIB from MID)>>=
${MID}/BALFACT.NRLIB: ${MID}/BALFACT.spad
	@ echo 2841 making ${MID}/BALFACT.NRLIB from ${MID}/BALFACT.spad
	@ (cd ${MID} ; 	echo ')co BALFACT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BALFACT.spad (SPAD from IN)>>=
${MID}/BALFACT.spad: ${IN}/oderf.spad.pamphlet
	@ echo 2842 making ${MID}/BALFACT.spad from ${IN}/oderf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf BALFACT.NRLIB ; \
	${TANGLE} -R"package BALFACT BalancedFactorisation" ${IN}/oderf.spad.pamphlet >BALFACT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BOUNDZRO.o (O from NRLIB)>>=
${OUT}/BOUNDZRO.o: ${MID}/BOUNDZRO.NRLIB
	@ echo 2843-14 making ${OUT}/BOUNDZRO.o from ${MID}/BOUNDZRO.NRLIB
	@ cp ${MID}/BOUNDZRO.NRLIB/code.o ${OUT}/BOUNDZRO.o

@
<<BOUNDZRO.NRLIB (NRLIB from MID)>>=
${MID}/BOUNDZRO.NRLIB: ${MID}/BOUNDZRO.spad
	@ echo 2844 making ${MID}/BOUNDZRO.NRLIB from ${MID}/BOUNDZRO.spad
	@ (cd ${MID} ; 	echo ')co BOUNDZRO.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BOUNDZRO.spad (SPAD from IN)>>=
${MID}/BOUNDZRO.spad: ${IN}/oderf.spad.pamphlet
	@ echo 2845 making ${MID}/BOUNDZRO.spad from ${IN}/oderf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf BOUNDZRO.NRLIB ; \
	${TANGLE} -R"package BOUNDZRO BoundIntegerRoots" ${IN}/oderf.spad.pamphlet >BOUNDZRO.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODECONST.o (O from NRLIB)>>=
${OUT}/ODECONST.o: ${MID}/ODECONST.NRLIB
	@ echo 2846-21 making ${OUT}/ODECONST.o from ${MID}/ODECONST.NRLIB
	@ cp ${MID}/ODECONST.NRLIB/code.o ${OUT}/ODECONST.o

@
<<ODECONST.NRLIB (NRLIB from MID)>>=
${MID}/ODECONST.NRLIB: ${MID}/ODECONST.spad
	@ echo 2847 making ${MID}/ODECONST.NRLIB from ${MID}/ODECONST.spad
	@ (cd ${MID} ; 	echo ')co ODECONST.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODECONST.spad (SPAD from IN)>>=
${MID}/ODECONST.spad: ${IN}/oderf.spad.pamphlet
	@ echo 2848 making ${MID}/ODECONST.spad from ${IN}/oderf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ODECONST.NRLIB ; \
	${TANGLE} -R"package ODECONST ConstantLODE" ${IN}/oderf.spad.pamphlet >ODECONST.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODEINT.o (O from NRLIB)>>=
${OUT}/ODEINT.o: ${MID}/ODEINT.NRLIB
	@ echo 2849-21 making ${OUT}/ODEINT.o from ${MID}/ODEINT.NRLIB
	@ cp ${MID}/ODEINT.NRLIB/code.o ${OUT}/ODEINT.o

@
<<ODEINT.NRLIB (NRLIB from MID)>>=
${MID}/ODEINT.NRLIB: ${MID}/ODEINT.spad
	@ echo 2850 making ${MID}/ODEINT.NRLIB from ${MID}/ODEINT.spad
	@ (cd ${MID} ; 	echo ')co ODEINT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODEINT.spad (SPAD from IN)>>=
${MID}/ODEINT.spad: ${IN}/oderf.spad.pamphlet
	@ echo 2851 making ${MID}/ODEINT.spad from ${IN}/oderf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ODEINT.NRLIB ; \
	${TANGLE} -R"package ODEINT ODEIntegration" ${IN}/oderf.spad.pamphlet >ODEINT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODEPRIM.o (O from NRLIB)>>=
${OUT}/ODEPRIM.o: ${MID}/ODEPRIM.NRLIB
	@ echo 2852-14 making ${OUT}/ODEPRIM.o from ${MID}/ODEPRIM.NRLIB
	@ cp ${MID}/ODEPRIM.NRLIB/code.o ${OUT}/ODEPRIM.o

@
<<ODEPRIM.NRLIB (NRLIB from MID)>>=
${MID}/ODEPRIM.NRLIB: ${MID}/ODEPRIM.spad
	@ echo 2853 making ${MID}/ODEPRIM.NRLIB from ${MID}/ODEPRIM.spad
	@ (cd ${MID} ; 	echo ')co ODEPRIM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODEPRIM.spad (SPAD from IN)>>=
${MID}/ODEPRIM.spad: ${IN}/oderf.spad.pamphlet
	@ echo 2854 making ${MID}/ODEPRIM.spad from ${IN}/oderf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ODEPRIM.NRLIB ; \
	${TANGLE} -R"package ODEPRIM PrimitiveRatDE" ${IN}/oderf.spad.pamphlet >ODEPRIM.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODERAT.o (O from NRLIB)>>=
${OUT}/ODERAT.o: ${MID}/ODERAT.NRLIB
	@ echo 2855-19 making ${OUT}/ODERAT.o from ${MID}/ODERAT.NRLIB
	@ cp ${MID}/ODERAT.NRLIB/code.o ${OUT}/ODERAT.o

@
<<ODERAT.NRLIB (NRLIB from MID)>>=
${MID}/ODERAT.NRLIB: ${MID}/ODERAT.spad
	@ echo 2856 making ${MID}/ODERAT.NRLIB from ${MID}/ODERAT.spad
	@ (cd ${MID} ; 	echo ')co ODERAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODERAT.spad (SPAD from IN)>>=
${MID}/ODERAT.spad: ${IN}/oderf.spad.pamphlet
	@ echo 2857 making ${MID}/ODERAT.spad from ${IN}/oderf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ODERAT.NRLIB ; \
	${TANGLE} -R"package ODERAT RationalLODE" ${IN}/oderf.spad.pamphlet >ODERAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODETOOLS.o (O from NRLIB)>>=
${OUT}/ODETOOLS.o: ${MID}/ODETOOLS.NRLIB
	@ echo 2858-13 making ${OUT}/ODETOOLS.o from ${MID}/ODETOOLS.NRLIB
	@ cp ${MID}/ODETOOLS.NRLIB/code.o ${OUT}/ODETOOLS.o

@
<<ODETOOLS.NRLIB (NRLIB from MID)>>=
${MID}/ODETOOLS.NRLIB: ${MID}/ODETOOLS.spad
	@ echo 2859 making ${MID}/ODETOOLS.NRLIB from ${MID}/ODETOOLS.spad
	@ (cd ${MID} ; 	echo ')co ODETOOLS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODETOOLS.spad (SPAD from IN)>>=
${MID}/ODETOOLS.spad: ${IN}/oderf.spad.pamphlet
	@ echo 2860 making ${MID}/ODETOOLS.spad from ${IN}/oderf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ODETOOLS.NRLIB ; \
	${TANGLE} -R"package ODETOOLS ODETools" ${IN}/oderf.spad.pamphlet >ODETOOLS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UTSODETL.o (O from NRLIB)>>=
${OUT}/UTSODETL.o: ${MID}/UTSODETL.NRLIB
	@ echo 2861-20 making ${OUT}/UTSODETL.o from ${MID}/UTSODETL.NRLIB
	@ cp ${MID}/UTSODETL.NRLIB/code.o ${OUT}/UTSODETL.o

@
<<UTSODETL.NRLIB (NRLIB from MID)>>=
${MID}/UTSODETL.NRLIB: ${MID}/UTSODETL.spad
	@ echo 2862 making ${MID}/UTSODETL.NRLIB from ${MID}/UTSODETL.spad
	@ (cd ${MID} ; 	echo ')co UTSODETL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UTSODETL.spad (SPAD from IN)>>=
${MID}/UTSODETL.spad: ${IN}/oderf.spad.pamphlet
	@ echo 2863 making ${MID}/UTSODETL.spad from ${IN}/oderf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UTSODETL.NRLIB ; \
	${TANGLE} -R"package UTSODETL UTSodetools" ${IN}/oderf.spad.pamphlet >UTSODETL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<oderf.spad.dvi (DOC from IN)>>=
${DOC}/oderf.spad.dvi: ${IN}/oderf.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2864 making ${DOC}/oderf.spad.dvi from ${IN}/oderf.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/oderf.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} oderf.spad ; \
	rm -f ${DOC}/oderf.spad.pamphlet ; \
	rm -f ${DOC}/oderf.spad.tex ; \
	rm -f ${DOC}/oderf.spad )

@
\subsection{omcat.spad \cite{1}}
<<omcat.spad (SPAD from IN)>>=
${OUTSRC}/omcat.spad: ${IN}/omcat.spad.pamphlet
	@ echo 2865 making ${OUTSRC}/omcat.spad from ${IN}/omcat.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/omcat.spad.pamphlet >omcat.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OM.o (O from NRLIB)>>=
${OUT}/OM.o: ${MID}/OM.NRLIB
	@ echo 2866-0 making ${OUT}/OM.o from ${MID}/OM.NRLIB
	@ cp ${MID}/OM.NRLIB/code.o ${OUT}/OM.o

@
<<OM.NRLIB (NRLIB from MID)>>=
${MID}/OM.NRLIB: ${MID}/OM.spad
	@ echo 2867 making ${MID}/OM.NRLIB from ${MID}/OM.spad
	@ (cd ${MID} ; 	echo ')co OM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OM.spad (SPAD from IN)>>=
${MID}/OM.spad: ${IN}/omcat.spad.pamphlet
	@ echo 2868 making ${MID}/OM.spad from ${IN}/omcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OM.NRLIB ; \
	${TANGLE} -R"category OM OpenMath" ${IN}/omcat.spad.pamphlet >OM.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<omcat.spad.dvi (DOC from IN)>>=
${DOC}/omcat.spad.dvi: ${IN}/omcat.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2869 making ${DOC}/omcat.spad.dvi from ${IN}/omcat.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/omcat.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} omcat.spad ; \
	rm -f ${DOC}/omcat.spad.pamphlet ; \
	rm -f ${DOC}/omcat.spad.tex ; \
	rm -f ${DOC}/omcat.spad )

@
\subsection{omdev.spad \cite{1}}
<<omdev.spad (SPAD from IN)>>=
${OUTSRC}/omdev.spad: ${IN}/omdev.spad.pamphlet
	@ echo 2870 making ${OUTSRC}/omdev.spad from ${IN}/omdev.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/omdev.spad.pamphlet >omdev.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OMENC.o (O from NRLIB)>>=
${OUT}/OMENC.o: ${MID}/OMENC.NRLIB
	@ echo 2871-4 making ${OUT}/OMENC.o from ${MID}/OMENC.NRLIB
	@ cp ${MID}/OMENC.NRLIB/code.o ${OUT}/OMENC.o

@
<<OMENC.NRLIB (NRLIB from MID)>>=
${MID}/OMENC.NRLIB: ${MID}/OMENC.spad
	@ echo 2872 making ${MID}/OMENC.NRLIB from ${MID}/OMENC.spad
	@ (cd ${MID} ; 	echo ')co OMENC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OMENC.spad (SPAD from IN)>>=
${MID}/OMENC.spad: ${IN}/omdev.spad.pamphlet
	@ echo 2873 making ${MID}/OMENC.spad from ${IN}/omdev.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OMENC.NRLIB ; \
	${TANGLE} -R"domain OMENC OpenMathEncoding" ${IN}/omdev.spad.pamphlet >OMENC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OMCONN.o (O from NRLIB)>>=
${OUT}/OMCONN.o: ${MID}/OMCONN.NRLIB
	@ echo 2874-0 making ${OUT}/OMCONN.o from ${MID}/OMCONN.NRLIB
	@ cp ${MID}/OMCONN.NRLIB/code.o ${OUT}/OMCONN.o

@
<<OMCONN.NRLIB (NRLIB from MID)>>=
${MID}/OMCONN.NRLIB: ${MID}/OMCONN.spad
	@ echo 2875 making ${MID}/OMCONN.NRLIB from ${MID}/OMCONN.spad
	@ (cd ${MID} ; 	echo ')co OMCONN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OMCONN.spad (SPAD from IN)>>=
${MID}/OMCONN.spad: ${IN}/omdev.spad.pamphlet
	@ echo 2876 making ${MID}/OMCONN.spad from ${IN}/omdev.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OMCONN.NRLIB ; \
	${TANGLE} -R"domain OMCONN OpenMathConnection" ${IN}/omdev.spad.pamphlet >OMCONN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OMDEV.o (O from NRLIB)>>=
${OUT}/OMDEV.o: ${MID}/OMDEV.NRLIB
	@ echo 2877-0 making ${OUT}/OMDEV.o from ${MID}/OMDEV.NRLIB
	@ cp ${MID}/OMDEV.NRLIB/code.o ${OUT}/OMDEV.o

@
<<OMDEV.NRLIB (NRLIB from MID)>>=
${MID}/OMDEV.NRLIB: ${MID}/OMDEV.spad
	@ echo 2878 making ${MID}/OMDEV.NRLIB from ${MID}/OMDEV.spad
	@ (cd ${MID} ; 	echo ')co OMDEV.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OMDEV.spad (SPAD from IN)>>=
${MID}/OMDEV.spad: ${IN}/omdev.spad.pamphlet
	@ echo 2879 making ${MID}/OMDEV.spad from ${IN}/omdev.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OMDEV.NRLIB ; \
	${TANGLE} -R"domain OMDEV OpenMathDevice" ${IN}/omdev.spad.pamphlet >OMDEV.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OMPKG.o (O from NRLIB)>>=
${OUT}/OMPKG.o: ${MID}/OMPKG.NRLIB
	@ echo 2880-14 making ${OUT}/OMPKG.o from ${MID}/OMPKG.NRLIB
	@ cp ${MID}/OMPKG.NRLIB/code.o ${OUT}/OMPKG.o

@
<<OMPKG.NRLIB (NRLIB from MID)>>=
${MID}/OMPKG.NRLIB: ${MID}/OMPKG.spad
	@ echo 2881 making ${MID}/OMPKG.NRLIB from ${MID}/OMPKG.spad
	@ (cd ${MID} ; 	echo ')co OMPKG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OMPKG.spad (SPAD from IN)>>=
${MID}/OMPKG.spad: ${IN}/omdev.spad.pamphlet
	@ echo 2882 making ${MID}/OMPKG.spad from ${IN}/omdev.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OMPKG.NRLIB ; \
	${TANGLE} -R"package OMPKG OpenMathPackage" ${IN}/omdev.spad.pamphlet >OMPKG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<omdev.spad.dvi (DOC from IN)>>=
${DOC}/omdev.spad.dvi: ${IN}/omdev.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2883 making ${DOC}/omdev.spad.dvi from ${IN}/omdev.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/omdev.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} omdev.spad ; \
	rm -f ${DOC}/omdev.spad.pamphlet ; \
	rm -f ${DOC}/omdev.spad.tex ; \
	rm -f ${DOC}/omdev.spad )

@
\subsection{omerror.spad \cite{1}}
<<omerror.spad (SPAD from IN)>>=
${OUTSRC}/omerror.spad: ${IN}/omerror.spad.pamphlet
	@ echo 2884 making ${OUTSRC}/omerror.spad from ${IN}/omerror.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/omerror.spad.pamphlet >omerror.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OMERR.o (O from NRLIB)>>=
${OUT}/OMERR.o: ${MID}/OMERR.NRLIB
	@ echo 2885-19 making ${OUT}/OMERR.o from ${MID}/OMERR.NRLIB
	@ cp ${MID}/OMERR.NRLIB/code.o ${OUT}/OMERR.o

@
<<OMERR.NRLIB (NRLIB from MID)>>=
${MID}/OMERR.NRLIB: ${MID}/OMERR.spad
	@ echo 2886 making ${MID}/OMERR.NRLIB from ${MID}/OMERR.spad
	@ (cd ${MID} ; 	echo ')co OMERR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OMERR.spad (SPAD from IN)>>=
${MID}/OMERR.spad: ${IN}/omerror.spad.pamphlet
	@ echo 2887 making ${MID}/OMERR.spad from ${IN}/omerror.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OMERR.NRLIB ; \
	${TANGLE} -R"domain OMERR OpenMathError" ${IN}/omerror.spad.pamphlet >OMERR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OMERRK.o (O from NRLIB)>>=
${OUT}/OMERRK.o: ${MID}/OMERRK.NRLIB
	@ echo 2888-19 making ${OUT}/OMERRK.o from ${MID}/OMERRK.NRLIB
	@ cp ${MID}/OMERRK.NRLIB/code.o ${OUT}/OMERRK.o

@
<<OMERRK.NRLIB (NRLIB from MID)>>=
${MID}/OMERRK.NRLIB: ${MID}/OMERRK.spad
	@ echo 2889 making ${MID}/OMERRK.NRLIB from ${MID}/OMERRK.spad
	@ (cd ${MID} ; 	echo ')co OMERRK.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OMERRK.spad (SPAD from IN)>>=
${MID}/OMERRK.spad: ${IN}/omerror.spad.pamphlet
	@ echo 2890 making ${MID}/OMERRK.spad from ${IN}/omerror.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OMERRK.NRLIB ; \
	${TANGLE} -R"domain OMERRK OpenMathErrorKind" ${IN}/omerror.spad.pamphlet >OMERRK.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<omerror.spad.dvi (DOC from IN)>>=
${DOC}/omerror.spad.dvi: ${IN}/omerror.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2891 making ${DOC}/omerror.spad.dvi from ${IN}/omerror.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/omerror.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} omerror.spad ; \
	rm -f ${DOC}/omerror.spad.pamphlet ; \
	rm -f ${DOC}/omerror.spad.tex ; \
	rm -f ${DOC}/omerror.spad )

@
\subsection{omserver.spad \cite{1}}
<<omserver.spad (SPAD from IN)>>=
${OUTSRC}/omserver.spad: ${IN}/omserver.spad.pamphlet
	@ echo 2892 making ${OUTSRC}/omserver.spad from ${IN}/omserver.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/omserver.spad.pamphlet >omserver.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OMSERVER.o (O from NRLIB)>>=
${OUT}/OMSERVER.o: ${MID}/OMSERVER.NRLIB
	@ echo 2893-14 making ${OUT}/OMSERVER.o from ${MID}/OMSERVER.NRLIB
	@ cp ${MID}/OMSERVER.NRLIB/code.o ${OUT}/OMSERVER.o

@
<<OMSERVER.NRLIB (NRLIB from MID)>>=
${MID}/OMSERVER.NRLIB: ${MID}/OMSERVER.spad
	@ echo 2894 making ${MID}/OMSERVER.NRLIB from ${MID}/OMSERVER.spad
	@ (cd ${MID} ; 	echo ')co OMSERVER.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OMSERVER.spad (SPAD from IN)>>=
${MID}/OMSERVER.spad: ${IN}/omserver.spad.pamphlet
	@ echo 2895 making ${MID}/OMSERVER.spad from ${IN}/omserver.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OMSERVER.NRLIB ; \
	${TANGLE} -R"package OMSERVER OpenMathServerPackage" ${IN}/omserver.spad.pamphlet >OMSERVER.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<omserver.spad.dvi (DOC from IN)>>=
${DOC}/omserver.spad.dvi: ${IN}/omserver.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2896 making ${DOC}/omserver.spad.dvi from ${IN}/omserver.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/omserver.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} omserver.spad ; \
	rm -f ${DOC}/omserver.spad.pamphlet ; \
	rm -f ${DOC}/omserver.spad.tex ; \
	rm -f ${DOC}/omserver.spad )

@
\subsection{opalg.spad \cite{1}}
<<opalg.spad (SPAD from IN)>>=
${OUTSRC}/opalg.spad: ${IN}/opalg.spad.pamphlet
	@ echo 2897 making ${OUTSRC}/opalg.spad from ${IN}/opalg.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/opalg.spad.pamphlet >opalg.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MODOP.o (O from NRLIB)>>=
${OUT}/MODOP.o: ${MID}/MODOP.NRLIB
	@ echo 2898-10 making ${OUT}/MODOP.o from ${MID}/MODOP.NRLIB
	@ cp ${MID}/MODOP.NRLIB/code.o ${OUT}/MODOP.o

@
<<MODOP.NRLIB (NRLIB from MID)>>=
${MID}/MODOP.NRLIB: ${MID}/MODOP.spad
	@ echo 2899 making ${MID}/MODOP.NRLIB from ${MID}/MODOP.spad
	@ (cd ${MID} ; 	echo ')co MODOP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MODOP.spad (SPAD from IN)>>=
${MID}/MODOP.spad: ${IN}/opalg.spad.pamphlet
	@ echo 2900 making ${MID}/MODOP.spad from ${IN}/opalg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MODOP.NRLIB ; \
	${TANGLE} -R"domain MODOP ModuleOperator" ${IN}/opalg.spad.pamphlet >MODOP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OP.o (O from NRLIB)>>=
${OUT}/OP.o: ${MID}/OP.NRLIB
	@ echo 2901-8 making ${OUT}/OP.o from ${MID}/OP.NRLIB
	@ cp ${MID}/OP.NRLIB/code.o ${OUT}/OP.o

@
<<OP.NRLIB (NRLIB from MID)>>=
${MID}/OP.NRLIB: ${MID}/OP.spad
	@ echo 2902 making ${MID}/OP.NRLIB from ${MID}/OP.spad
	@ (cd ${MID} ; 	echo ')co OP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OP.spad (SPAD from IN)>>=
${MID}/OP.spad: ${IN}/opalg.spad.pamphlet
	@ echo 2903 making ${MID}/OP.spad from ${IN}/opalg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OP.NRLIB ; \
	${TANGLE} -R"domain OP Operator" ${IN}/opalg.spad.pamphlet >OP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<opalg.spad.dvi (DOC from IN)>>=
${DOC}/opalg.spad.dvi: ${IN}/opalg.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2904 making ${DOC}/opalg.spad.dvi from ${IN}/opalg.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/opalg.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} opalg.spad ; \
	rm -f ${DOC}/opalg.spad.pamphlet ; \
	rm -f ${DOC}/opalg.spad.tex ; \
	rm -f ${DOC}/opalg.spad )

@
\subsection{openmath.spad \cite{1}}
<<openmath.spad (SPAD from IN)>>=
${OUTSRC}/openmath.spad: ${IN}/openmath.spad.pamphlet
	@ echo 2905 making ${OUTSRC}/openmath.spad from ${IN}/openmath.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/openmath.spad.pamphlet >openmath.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OMEXPR.o (O from NRLIB)>>=
${OUT}/OMEXPR.o: ${MID}/OMEXPR.NRLIB
	@ echo 2906-20 making ${OUT}/OMEXPR.o from ${MID}/OMEXPR.NRLIB
	@ cp ${MID}/OMEXPR.NRLIB/code.o ${OUT}/OMEXPR.o

@
<<OMEXPR.NRLIB (NRLIB from MID)>>=
${MID}/OMEXPR.NRLIB: ${MID}/OMEXPR.spad
	@ echo 2907 making ${MID}/OMEXPR.NRLIB from ${MID}/OMEXPR.spad
	@ (cd ${MID} ; 	echo ')co OMEXPR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OMEXPR.spad (SPAD from IN)>>=
${MID}/OMEXPR.spad: ${IN}/openmath.spad.pamphlet
	@ echo 2908 making ${MID}/OMEXPR.spad from ${IN}/openmath.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OMEXPR.NRLIB ; \
	${TANGLE} -R"package OMEXPR ExpressionToOpenMath" ${IN}/openmath.spad.pamphlet >OMEXPR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<openmath.spad.dvi (DOC from IN)>>=
${DOC}/openmath.spad.dvi: ${IN}/openmath.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2909 making ${DOC}/openmath.spad.dvi from ${IN}/openmath.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/openmath.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} openmath.spad ; \
	rm -f ${DOC}/openmath.spad.pamphlet ; \
	rm -f ${DOC}/openmath.spad.tex ; \
	rm -f ${DOC}/openmath.spad )

@
\subsection{op.spad \cite{1}}
<<op.spad (SPAD from IN)>>=
${OUTSRC}/op.spad: ${IN}/op.spad.pamphlet
	@ echo 2910 making ${OUTSRC}/op.spad from ${IN}/op.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/op.spad.pamphlet >op.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BOP.o (O from NRLIB)>>=
${OUT}/BOP.o: ${MID}/BOP.NRLIB
	@ echo 2911-19 making ${OUT}/BOP.o from ${MID}/BOP.NRLIB
	@ cp ${MID}/BOP.NRLIB/code.o ${OUT}/BOP.o

@
<<BOP.NRLIB (NRLIB from MID)>>=
${MID}/BOP.NRLIB: ${MID}/BOP.spad
	@ echo 2912 making ${MID}/BOP.NRLIB from ${MID}/BOP.spad
	@ (cd ${MID} ; 	echo ')co BOP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BOP.spad (SPAD from IN)>>=
${MID}/BOP.spad: ${IN}/op.spad.pamphlet
	@ echo 2913 making ${MID}/BOP.spad from ${IN}/op.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf BOP.NRLIB ; \
	${TANGLE} -R"domain BOP BasicOperator" ${IN}/op.spad.pamphlet >BOP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BOP1.o (O from NRLIB)>>=
${OUT}/BOP1.o: ${MID}/BOP1.NRLIB
	@ echo 2914-19 making ${OUT}/BOP1.o from ${MID}/BOP1.NRLIB
	@ cp ${MID}/BOP1.NRLIB/code.o ${OUT}/BOP1.o

@
<<BOP1.NRLIB (NRLIB from MID)>>=
${MID}/BOP1.NRLIB: ${MID}/BOP1.spad
	@ echo 2915 making ${MID}/BOP1.NRLIB from ${MID}/BOP1.spad
	@ (cd ${MID} ; 	echo ')co BOP1.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BOP1.spad (SPAD from IN)>>=
${MID}/BOP1.spad: ${IN}/op.spad.pamphlet
	@ echo 2916 making ${MID}/BOP1.spad from ${IN}/op.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf BOP1.NRLIB ; \
	${TANGLE} -R"package BOP1 BasicOperatorFunctions1" ${IN}/op.spad.pamphlet >BOP1.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COMMONOP.o (O from NRLIB)>>=
${OUT}/COMMONOP.o: ${MID}/COMMONOP.NRLIB
	@ echo 2917-19 making ${OUT}/COMMONOP.o from ${MID}/COMMONOP.NRLIB
	@ cp ${MID}/COMMONOP.NRLIB/code.o ${OUT}/COMMONOP.o

@
<<COMMONOP.NRLIB (NRLIB from MID)>>=
${MID}/COMMONOP.NRLIB: ${MID}/COMMONOP.spad
	@ echo 2918 making ${MID}/COMMONOP.NRLIB from ${MID}/COMMONOP.spad
	@ (cd ${MID} ; 	echo ')co COMMONOP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COMMONOP.spad (SPAD from IN)>>=
${MID}/COMMONOP.spad: ${IN}/op.spad.pamphlet
	@ echo 2919 making ${MID}/COMMONOP.spad from ${IN}/op.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf COMMONOP.NRLIB ; \
	${TANGLE} -R"package COMMONOP CommonOperators" ${IN}/op.spad.pamphlet >COMMONOP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<op.spad.dvi (DOC from IN)>>=
${DOC}/op.spad.dvi: ${IN}/op.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2920 making ${DOC}/op.spad.dvi from ${IN}/op.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/op.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} op.spad ; \
	rm -f ${DOC}/op.spad.pamphlet ; \
	rm -f ${DOC}/op.spad.tex ; \
	rm -f ${DOC}/op.spad )

@
\subsection{ore.spad \cite{1}}
<<ore.spad (SPAD from IN)>>=
${OUTSRC}/ore.spad: ${IN}/ore.spad.pamphlet
	@ echo 2921 making ${OUTSRC}/ore.spad from ${IN}/ore.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/ore.spad.pamphlet >ore.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<APPLYORE.o (O from NRLIB)>>=
${OUT}/APPLYORE.o: ${MID}/APPLYORE.NRLIB
	@ echo 2922-11 making ${OUT}/APPLYORE.o from ${MID}/APPLYORE.NRLIB
	@ cp ${MID}/APPLYORE.NRLIB/code.o ${OUT}/APPLYORE.o

@
<<APPLYORE.NRLIB (NRLIB from MID)>>=
${MID}/APPLYORE.NRLIB: ${MID}/APPLYORE.spad
	@ echo 2923 making ${MID}/APPLYORE.NRLIB from ${MID}/APPLYORE.spad
	@ (cd ${MID} ; 	echo ')co APPLYORE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<APPLYORE.spad (SPAD from IN)>>=
${MID}/APPLYORE.spad: ${IN}/ore.spad.pamphlet
	@ echo 2924 making ${MID}/APPLYORE.spad from ${IN}/ore.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf APPLYORE.NRLIB ; \
	${TANGLE} -R"package APPLYORE ApplyUnivariateSkewPolynomial" ${IN}/ore.spad.pamphlet >APPLYORE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<AUTOMOR.o (O from NRLIB)>>=
${OUT}/AUTOMOR.o: ${MID}/AUTOMOR.NRLIB
	@ echo 2925-6 making ${OUT}/AUTOMOR.o from ${MID}/AUTOMOR.NRLIB
	@ cp ${MID}/AUTOMOR.NRLIB/code.o ${OUT}/AUTOMOR.o

@
<<AUTOMOR.NRLIB (NRLIB from MID)>>=
${MID}/AUTOMOR.NRLIB: ${MID}/AUTOMOR.spad
	@ echo 2926 making ${MID}/AUTOMOR.NRLIB from ${MID}/AUTOMOR.spad
	@ (cd ${MID} ; 	echo ')co AUTOMOR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<AUTOMOR.spad (SPAD from IN)>>=
${MID}/AUTOMOR.spad: ${IN}/ore.spad.pamphlet
	@ echo 2927 making ${MID}/AUTOMOR.spad from ${IN}/ore.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf AUTOMOR.NRLIB ; \
	${TANGLE} -R"domain AUTOMOR Automorphism" ${IN}/ore.spad.pamphlet >AUTOMOR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OREPCAT-.o (O from NRLIB)>>=
${OUT}/OREPCAT-.o: ${MID}/OREPCAT.NRLIB
	@ echo 2928-10 making ${OUT}/OREPCAT-.o from ${MID}/OREPCAT-.NRLIB
	@ cp ${MID}/OREPCAT-.NRLIB/code.o ${OUT}/OREPCAT-.o

@
<<OREPCAT-.NRLIB (NRLIB from MID)>>=
${MID}/OREPCAT-.NRLIB: ${MID}/OREPCAT.spad 
	@ echo 2929 making ${MID}/OREPCAT-.NRLIB from ${MID}/OREPCAT.spad
	@ (cd ${MID} ; 	echo ')co OREPCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OREPCAT.o (O from NRLIB)>>=
${OUT}/OREPCAT.o: ${MID}/OREPCAT.NRLIB
	@ echo 2930-10 making ${OUT}/OREPCAT.o from ${MID}/OREPCAT.NRLIB
	@ cp ${MID}/OREPCAT.NRLIB/code.o ${OUT}/OREPCAT.o

@
<<OREPCAT.NRLIB (NRLIB from MID)>>=
${MID}/OREPCAT.NRLIB: ${MID}/OREPCAT.spad
	@ echo 2931 making ${MID}/OREPCAT.NRLIB from ${MID}/OREPCAT.spad
	@ (cd ${MID} ; 	echo ')co OREPCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OREPCAT.spad (SPAD from IN)>>=
${MID}/OREPCAT.spad: ${IN}/ore.spad.pamphlet
	@ echo 2932 making ${MID}/OREPCAT.spad from ${IN}/ore.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OREPCAT.NRLIB ; \
	${TANGLE} -R"category OREPCAT UnivariateSkewPolynomialCategory" ${IN}/ore.spad.pamphlet >OREPCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OREPCTO.o (O from NRLIB)>>=
${OUT}/OREPCTO.o: ${MID}/OREPCTO.NRLIB
	@ echo 2933-11 making ${OUT}/OREPCTO.o from ${MID}/OREPCTO.NRLIB
	@ cp ${MID}/OREPCTO.NRLIB/code.o ${OUT}/OREPCTO.o

@
<<OREPCTO.NRLIB (NRLIB from MID)>>=
${MID}/OREPCTO.NRLIB: ${MID}/OREPCTO.spad
	@ echo 2934 making ${MID}/OREPCTO.NRLIB from ${MID}/OREPCTO.spad
	@ (cd ${MID} ; 	echo ')co OREPCTO.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OREPCTO.spad (SPAD from IN)>>=
${MID}/OREPCTO.spad: ${IN}/ore.spad.pamphlet
	@ echo 2935 making ${MID}/OREPCTO.spad from ${IN}/ore.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OREPCTO.NRLIB ; \
	${TANGLE} -R"package OREPCTO UnivariateSkewPolynomialCategoryOps" ${IN}/ore.spad.pamphlet >OREPCTO.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ORESUP.o (O from NRLIB)>>=
${OUT}/ORESUP.o: ${MID}/ORESUP.NRLIB
	@ echo 2936-11 making ${OUT}/ORESUP.o from ${MID}/ORESUP.NRLIB
	@ cp ${MID}/ORESUP.NRLIB/code.o ${OUT}/ORESUP.o

@
<<ORESUP.NRLIB (NRLIB from MID)>>=
${MID}/ORESUP.NRLIB: ${MID}/ORESUP.spad
	@ echo 2937 making ${MID}/ORESUP.NRLIB from ${MID}/ORESUP.spad
	@ (cd ${MID} ; 	echo ')co ORESUP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ORESUP.spad (SPAD from IN)>>=
${MID}/ORESUP.spad: ${IN}/ore.spad.pamphlet
	@ echo 2938 making ${MID}/ORESUP.spad from ${IN}/ore.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ORESUP.NRLIB ; \
	${TANGLE} -R"domain ORESUP SparseUnivariateSkewPolynomial" ${IN}/ore.spad.pamphlet >ORESUP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OREUP.o (O from NRLIB)>>=
${OUT}/OREUP.o: ${MID}/OREUP.NRLIB
	@ echo 2939-11 making ${OUT}/OREUP.o from ${MID}/OREUP.NRLIB
	@ cp ${MID}/OREUP.NRLIB/code.o ${OUT}/OREUP.o

@
<<OREUP.NRLIB (NRLIB from MID)>>=
${MID}/OREUP.NRLIB: ${MID}/OREUP.spad
	@ echo 2940 making ${MID}/OREUP.NRLIB from ${MID}/OREUP.spad
	@ (cd ${MID} ; 	echo ')co OREUP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OREUP.spad (SPAD from IN)>>=
${MID}/OREUP.spad: ${IN}/ore.spad.pamphlet
	@ echo 2941 making ${MID}/OREUP.spad from ${IN}/ore.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OREUP.NRLIB ; \
	${TANGLE} -R"domain OREUP UnivariateSkewPolynomial" ${IN}/ore.spad.pamphlet >OREUP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ore.spad.dvi (DOC from IN)>>=
${DOC}/ore.spad.dvi: ${IN}/ore.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2942 making ${DOC}/ore.spad.dvi from ${IN}/ore.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/ore.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} ore.spad ; \
	rm -f ${DOC}/ore.spad.pamphlet ; \
	rm -f ${DOC}/ore.spad.tex ; \
	rm -f ${DOC}/ore.spad )

@
\subsection{outform.spad \cite{1}}
<<outform.spad (SPAD from IN)>>=
${OUTSRC}/outform.spad: ${IN}/outform.spad.pamphlet
	@ echo 2943 making ${OUTSRC}/outform.spad from ${IN}/outform.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/outform.spad.pamphlet >outform.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NUMFMT.o (O from NRLIB)>>=
${OUT}/NUMFMT.o: ${MID}/NUMFMT.NRLIB
	@ echo 2944-19 making ${OUT}/NUMFMT.o from ${MID}/NUMFMT.NRLIB
	@ cp ${MID}/NUMFMT.NRLIB/code.o ${OUT}/NUMFMT.o

@
<<NUMFMT.NRLIB (NRLIB from MID)>>=
${MID}/NUMFMT.NRLIB: ${MID}/NUMFMT.spad
	@ echo 2945 making ${MID}/NUMFMT.NRLIB from ${MID}/NUMFMT.spad
	@ (cd ${MID} ; 	echo ')co NUMFMT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NUMFMT.spad (SPAD from IN)>>=
${MID}/NUMFMT.spad: ${IN}/outform.spad.pamphlet
	@ echo 2946 making ${MID}/NUMFMT.spad from ${IN}/outform.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NUMFMT.NRLIB ; \
	${TANGLE} -R"package NUMFMT NumberFormats" ${IN}/outform.spad.pamphlet >NUMFMT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OUTFORM.o (O from NRLIB)>>=
${OUT}/OUTFORM.o: ${MID}/OUTFORM.NRLIB
	@ echo 2947-0c making ${OUT}/OUTFORM.o from ${MID}/OUTFORM.NRLIB
	@ cp ${MID}/OUTFORM.NRLIB/code.o ${OUT}/OUTFORM.o

@
<<OUTFORM.NRLIB (NRLIB from MID)>>=
${MID}/OUTFORM.NRLIB: ${MID}/OUTFORM.spad
	@ echo 2948 making ${MID}/OUTFORM.NRLIB from ${MID}/OUTFORM.spad
	@ (cd ${MID} ; 	echo ')co OUTFORM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OUTFORM.spad (SPAD from IN)>>=
${MID}/OUTFORM.spad: ${IN}/outform.spad.pamphlet
	@ echo 2949 making ${MID}/OUTFORM.spad from ${IN}/outform.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OUTFORM.NRLIB ; \
	${TANGLE} -R"domain OUTFORM OutputForm" ${IN}/outform.spad.pamphlet >OUTFORM.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OUTFORM.o (BOOTSTRAP from MID)>>=
${MID}/OUTFORM.o: ${MID}/OUTFORM.lsp
	@ echo 2950-0b making ${MID}/OUTFORM.o from ${MID}/OUTFORM.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "OUTFORM.lsp" :output-file "OUTFORM.o"))' | ${DEPSYS} )
	@ cp ${MID}/OUTFORM.o ${OUT}/OUTFORM.o

@
<<OUTFORM.lsp (LISP from IN)>>=
${MID}/OUTFORM.lsp: ${IN}/outform.spad.pamphlet
	@ echo 2951 making ${MID}/OUTFORM.lsp from ${IN}/outform.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OUTFORM.NRLIB ; \
	rm -rf ${OUT}/OUTFORM.o ; \
	${TANGLE} -R"OUTFORM.lsp BOOTSTRAP" ${IN}/outform.spad.pamphlet >OUTFORM.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<outform.spad.dvi (DOC from IN)>>=
${DOC}/outform.spad.dvi: ${IN}/outform.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2952 making ${DOC}/outform.spad.dvi from ${IN}/outform.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/outform.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} outform.spad ; \
	rm -f ${DOC}/outform.spad.pamphlet ; \
	rm -f ${DOC}/outform.spad.tex ; \
	rm -f ${DOC}/outform.spad )

@
\subsection{out.spad \cite{1}}
<<out.spad (SPAD from IN)>>=
${OUTSRC}/out.spad: ${IN}/out.spad.pamphlet
	@ echo 2953 making ${OUTSRC}/out.spad from ${IN}/out.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/out.spad.pamphlet >out.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DISPLAY.o (O from NRLIB)>>=
${OUT}/DISPLAY.o: ${MID}/DISPLAY.NRLIB
	@ echo 2954-14 making ${OUT}/DISPLAY.o from ${MID}/DISPLAY.NRLIB
	@ cp ${MID}/DISPLAY.NRLIB/code.o ${OUT}/DISPLAY.o

@
<<DISPLAY.NRLIB (NRLIB from MID)>>=
${MID}/DISPLAY.NRLIB: ${MID}/DISPLAY.spad
	@ echo 2955 making ${MID}/DISPLAY.NRLIB from ${MID}/DISPLAY.spad
	@ (cd ${MID} ; 	echo ')co DISPLAY.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DISPLAY.spad (SPAD from IN)>>=
${MID}/DISPLAY.spad: ${IN}/out.spad.pamphlet
	@ echo 2956 making ${MID}/DISPLAY.spad from ${IN}/out.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DISPLAY.NRLIB ; \
	${TANGLE} -R"package DISPLAY DisplayPackage" ${IN}/out.spad.pamphlet >DISPLAY.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OUT.o (O from NRLIB)>>=
${OUT}/OUT.o: ${MID}/OUT.NRLIB
	@ echo 2957-0 making ${OUT}/OUT.o from ${MID}/OUT.NRLIB
	@ cp ${MID}/OUT.NRLIB/code.o ${OUT}/OUT.o

@
<<OUT.NRLIB (NRLIB from MID)>>=
${MID}/OUT.NRLIB: ${MID}/OUT.spad
	@ echo 2958 making ${MID}/OUT.NRLIB from ${MID}/OUT.spad
	@ (cd ${MID} ; 	echo ')co OUT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OUT.spad (SPAD from IN)>>=
${MID}/OUT.spad: ${IN}/out.spad.pamphlet
	@ echo 2959 making ${MID}/OUT.spad from ${IN}/out.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OUT.NRLIB ; \
	${TANGLE} -R"package OUT OutputPackage" ${IN}/out.spad.pamphlet >OUT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SPECOUT.o (O from NRLIB)>>=
${OUT}/SPECOUT.o: ${MID}/SPECOUT.NRLIB
	@ echo 2960-19 making ${OUT}/SPECOUT.o from ${MID}/SPECOUT.NRLIB
	@ cp ${MID}/SPECOUT.NRLIB/code.o ${OUT}/SPECOUT.o

@
<<SPECOUT.NRLIB (NRLIB from MID)>>=
${MID}/SPECOUT.NRLIB: ${MID}/SPECOUT.spad
	@ echo 2961 making ${MID}/SPECOUT.NRLIB from ${MID}/SPECOUT.spad
	@ (cd ${MID} ; 	echo ')co SPECOUT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SPECOUT.spad (SPAD from IN)>>=
${MID}/SPECOUT.spad: ${IN}/out.spad.pamphlet
	@ echo 2962 making ${MID}/SPECOUT.spad from ${IN}/out.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SPECOUT.NRLIB ; \
	${TANGLE} -R"package SPECOUT SpecialOutputPackage" ${IN}/out.spad.pamphlet >SPECOUT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<out.spad.dvi (DOC from IN)>>=
${DOC}/out.spad.dvi: ${IN}/out.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2963 making ${DOC}/out.spad.dvi from ${IN}/out.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/out.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} out.spad ; \
	rm -f ${DOC}/out.spad.pamphlet ; \
	rm -f ${DOC}/out.spad.tex ; \
	rm -f ${DOC}/out.spad )

@
\subsection{pade.spad \cite{1}}
<<pade.spad (SPAD from IN)>>=
${OUTSRC}/pade.spad: ${IN}/pade.spad.pamphlet
	@ echo 2964 making ${OUTSRC}/pade.spad from ${IN}/pade.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/pade.spad.pamphlet >pade.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PADE.o (O from NRLIB)>>=
${OUT}/PADE.o: ${MID}/PADE.NRLIB
	@ echo 2965-20 making ${OUT}/PADE.o from ${MID}/PADE.NRLIB
	@ cp ${MID}/PADE.NRLIB/code.o ${OUT}/PADE.o

@
<<PADE.NRLIB (NRLIB from MID)>>=
${MID}/PADE.NRLIB: ${MID}/PADE.spad
	@ echo 2966 making ${MID}/PADE.NRLIB from ${MID}/PADE.spad
	@ (cd ${MID} ; 	echo ')co PADE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PADE.spad (SPAD from IN)>>=
${MID}/PADE.spad: ${IN}/pade.spad.pamphlet
	@ echo 2967 making ${MID}/PADE.spad from ${IN}/pade.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PADE.NRLIB ; \
	${TANGLE} -R"package PADE PadeApproximants" ${IN}/pade.spad.pamphlet >PADE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PADEPAC.o (O from NRLIB)>>=
${OUT}/PADEPAC.o: ${MID}/PADEPAC.NRLIB
	@ echo 2968-14 making ${OUT}/PADEPAC.o from ${MID}/PADEPAC.NRLIB
	@ cp ${MID}/PADEPAC.NRLIB/code.o ${OUT}/PADEPAC.o

@
<<PADEPAC.NRLIB (NRLIB from MID)>>=
${MID}/PADEPAC.NRLIB: ${MID}/PADEPAC.spad
	@ echo 2969 making ${MID}/PADEPAC.NRLIB from ${MID}/PADEPAC.spad
	@ (cd ${MID} ; 	echo ')co PADEPAC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PADEPAC.spad (SPAD from IN)>>=
${MID}/PADEPAC.spad: ${IN}/pade.spad.pamphlet
	@ echo 2970 making ${MID}/PADEPAC.spad from ${IN}/pade.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PADEPAC.NRLIB ; \
	${TANGLE} -R"package PADEPAC PadeApproximantPackage" ${IN}/pade.spad.pamphlet >PADEPAC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<pade.spad.dvi (DOC from IN)>>=
${DOC}/pade.spad.dvi: ${IN}/pade.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2971 making ${DOC}/pade.spad.dvi from ${IN}/pade.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/pade.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} pade.spad ; \
	rm -f ${DOC}/pade.spad.pamphlet ; \
	rm -f ${DOC}/pade.spad.tex ; \
	rm -f ${DOC}/pade.spad )

@
\subsection{padiclib.spad \cite{1}}
<<padiclib.spad (SPAD from IN)>>=
${OUTSRC}/padiclib.spad: ${IN}/padiclib.spad.pamphlet
	@ echo 2972 making ${OUTSRC}/padiclib.spad from ${IN}/padiclib.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/padiclib.spad.pamphlet >padiclib.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IBACHIN.o (O from NRLIB)>>=
${OUT}/IBACHIN.o: ${MID}/IBACHIN.NRLIB
	@ echo 2973-17 making ${OUT}/IBACHIN.o from ${MID}/IBACHIN.NRLIB
	@ cp ${MID}/IBACHIN.NRLIB/code.o ${OUT}/IBACHIN.o

@
<<IBACHIN.NRLIB (NRLIB from MID)>>=
${MID}/IBACHIN.NRLIB: ${MID}/IBACHIN.spad
	@ echo 2974 making ${MID}/IBACHIN.NRLIB from ${MID}/IBACHIN.spad
	@ (cd ${MID} ; 	echo ')co IBACHIN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IBACHIN.spad (SPAD from IN)>>=
${MID}/IBACHIN.spad: ${IN}/padiclib.spad.pamphlet
	@ echo 2975 making ${MID}/IBACHIN.spad from ${IN}/padiclib.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IBACHIN.NRLIB ; \
	${TANGLE} -R"package IBACHIN ChineseRemainderToolsForIntegralBases" ${IN}/padiclib.spad.pamphlet >IBACHIN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IBPTOOLS.o (O from NRLIB)>>=
${OUT}/IBPTOOLS.o: ${MID}/IBPTOOLS.NRLIB
	@ echo 2976-14 making ${OUT}/IBPTOOLS.o from ${MID}/IBPTOOLS.NRLIB
	@ cp ${MID}/IBPTOOLS.NRLIB/code.o ${OUT}/IBPTOOLS.o

@
<<IBPTOOLS.NRLIB (NRLIB from MID)>>=
${MID}/IBPTOOLS.NRLIB: ${MID}/IBPTOOLS.spad
	@ echo 2977 making ${MID}/IBPTOOLS.NRLIB from ${MID}/IBPTOOLS.spad
	@ (cd ${MID} ; 	echo ')co IBPTOOLS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IBPTOOLS.spad (SPAD from IN)>>=
${MID}/IBPTOOLS.spad: ${IN}/padiclib.spad.pamphlet
	@ echo 2978 making ${MID}/IBPTOOLS.spad from ${IN}/padiclib.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IBPTOOLS.NRLIB ; \
	${TANGLE} -R"package IBPTOOLS IntegralBasisPolynomialTools" ${IN}/padiclib.spad.pamphlet >IBPTOOLS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PWFFINTB.o (O from NRLIB)>>=
${OUT}/PWFFINTB.o: ${MID}/PWFFINTB.NRLIB
	@ echo 2979-17 making ${OUT}/PWFFINTB.o from ${MID}/PWFFINTB.NRLIB
	@ cp ${MID}/PWFFINTB.NRLIB/code.o ${OUT}/PWFFINTB.o

@
<<PWFFINTB.NRLIB (NRLIB from MID)>>=
${MID}/PWFFINTB.NRLIB: ${MID}/PWFFINTB.spad
	@ echo 2980 making ${MID}/PWFFINTB.NRLIB from ${MID}/PWFFINTB.spad
	@ (cd ${MID} ; 	echo ')co PWFFINTB.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PWFFINTB.spad (SPAD from IN)>>=
${MID}/PWFFINTB.spad: ${IN}/padiclib.spad.pamphlet
	@ echo 2981 making ${MID}/PWFFINTB.spad from ${IN}/padiclib.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PWFFINTB.NRLIB ; \
	${TANGLE} -R"package PWFFINTB PAdicWildFunctionFieldIntegralBasis" ${IN}/padiclib.spad.pamphlet >PWFFINTB.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<padiclib.spad.dvi (DOC from IN)>>=
${DOC}/padiclib.spad.dvi: ${IN}/padiclib.spad.pamphlet ${DOC}/axiom.sty
	@ echo 2982 making ${DOC}/padiclib.spad.dvi from ${IN}/padiclib.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/padiclib.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} padiclib.spad ; \
	rm -f ${DOC}/padiclib.spad.pamphlet ; \
	rm -f ${DOC}/padiclib.spad.tex ; \
	rm -f ${DOC}/padiclib.spad )

@
\subsection{padic.spad \cite{1}}
<<padic.spad (SPAD from IN)>>=
${OUTSRC}/padic.spad: ${IN}/padic.spad.pamphlet
	@ echo 2983 making ${OUTSRC}/padic.spad from ${IN}/padic.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/padic.spad.pamphlet >padic.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BPADIC.o (O from NRLIB)>>=
${OUT}/BPADIC.o: ${MID}/BPADIC.NRLIB
	@ echo 2984-10 making ${OUT}/BPADIC.o from ${MID}/BPADIC.NRLIB
	@ cp ${MID}/BPADIC.NRLIB/code.o ${OUT}/BPADIC.o

@
<<BPADIC.NRLIB (NRLIB from MID)>>=
${MID}/BPADIC.NRLIB: ${MID}/BPADIC.spad
	@ echo 2985 making ${MID}/BPADIC.NRLIB from ${MID}/BPADIC.spad
	@ (cd ${MID} ; 	echo ')co BPADIC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BPADIC.spad (SPAD from IN)>>=
${MID}/BPADIC.spad: ${IN}/padic.spad.pamphlet
	@ echo 2986 making ${MID}/BPADIC.spad from ${IN}/padic.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf BPADIC.NRLIB ; \
	${TANGLE} -R"domain BPADIC BalancedPAdicInteger" ${IN}/padic.spad.pamphlet >BPADIC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BPADICRT.o (O from NRLIB)>>=
${OUT}/BPADICRT.o: ${MID}/BPADICRT.NRLIB
	@ echo 2987-14 making ${OUT}/BPADICRT.o from ${MID}/BPADICRT.NRLIB
	@ cp ${MID}/BPADICRT.NRLIB/code.o ${OUT}/BPADICRT.o

@
<<BPADICRT.NRLIB (NRLIB from MID)>>=
${MID}/BPADICRT.NRLIB: ${MID}/BPADICRT.spad
	@ echo 2988 making ${MID}/BPADICRT.NRLIB from ${MID}/BPADICRT.spad
	@ (cd ${MID} ; 	echo ')co BPADICRT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BPADICRT.spad (SPAD from IN)>>=
${MID}/BPADICRT.spad: ${IN}/padic.spad.pamphlet
	@ echo 2989 making ${MID}/BPADICRT.spad from ${IN}/padic.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf BPADICRT.NRLIB ; \
	${TANGLE} -R"domain BPADICRT BalancedPAdicRational" ${IN}/padic.spad.pamphlet >BPADICRT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IPADIC.o (O from NRLIB)>>=
${OUT}/IPADIC.o: ${MID}/IPADIC.NRLIB
	@ echo 2990-10 making ${OUT}/IPADIC.o from ${MID}/IPADIC.NRLIB
	@ cp ${MID}/IPADIC.NRLIB/code.o ${OUT}/IPADIC.o

@
<<IPADIC.NRLIB (NRLIB from MID)>>=
${MID}/IPADIC.NRLIB: ${MID}/IPADIC.spad
	@ echo 2991 making ${MID}/IPADIC.NRLIB from ${MID}/IPADIC.spad
	@ (cd ${MID} ; 	echo ')co IPADIC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IPADIC.spad (SPAD from IN)>>=
${MID}/IPADIC.spad: ${IN}/padic.spad.pamphlet
	@ echo 2992 making ${MID}/IPADIC.spad from ${IN}/padic.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IPADIC.NRLIB ; \
	${TANGLE} -R"domain IPADIC InnerPAdicInteger" ${IN}/padic.spad.pamphlet >IPADIC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PADIC.o (O from NRLIB)>>=
${OUT}/PADIC.o: ${MID}/PADIC.NRLIB
	@ echo 2993-10 making ${OUT}/PADIC.o from ${MID}/PADIC.NRLIB
	@ cp ${MID}/PADIC.NRLIB/code.o ${OUT}/PADIC.o

@
<<PADIC.NRLIB (NRLIB from MID)>>=
${MID}/PADIC.NRLIB: ${MID}/PADIC.spad
	@ echo 2994 making ${MID}/PADIC.NRLIB from ${MID}/PADIC.spad
	@ (cd ${MID} ; 	echo ')co PADIC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PADIC.spad (SPAD from IN)>>=
${MID}/PADIC.spad: ${IN}/padic.spad.pamphlet
	@ echo 2995 making ${MID}/PADIC.spad from ${IN}/padic.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PADIC.NRLIB ; \
	${TANGLE} -R"domain PADIC PAdicInteger" ${IN}/padic.spad.pamphlet >PADIC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PADICCT.o (O from NRLIB)>>=
${OUT}/PADICCT.o: ${MID}/PADICCT.NRLIB
	@ echo 2996-9 making ${OUT}/PADICCT.o from ${MID}/PADICCT.NRLIB
	@ cp ${MID}/PADICCT.NRLIB/code.o ${OUT}/PADICCT.o

@
<<PADICCT.NRLIB (NRLIB from MID)>>=
${MID}/PADICCT.NRLIB: ${MID}/PADICCT.spad
	@ echo 2997 making ${MID}/PADICCT.NRLIB from ${MID}/PADICCT.spad
	@ (cd ${MID} ; 	echo ')co PADICCT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PADICCT.spad (SPAD from IN)>>=
${MID}/PADICCT.spad: ${IN}/padic.spad.pamphlet
	@ echo 2998 making ${MID}/PADICCT.spad from ${IN}/padic.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PADICCT.NRLIB ; \
	${TANGLE} -R"category PADICCT PAdicIntegerCategory" ${IN}/padic.spad.pamphlet >PADICCT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PADICRAT.o (O from NRLIB)>>=
${OUT}/PADICRAT.o: ${MID}/PADICRAT.NRLIB
	@ echo 2999-14 making ${OUT}/PADICRAT.o from ${MID}/PADICRAT.NRLIB
	@ cp ${MID}/PADICRAT.NRLIB/code.o ${OUT}/PADICRAT.o

@
<<PADICRAT.NRLIB (NRLIB from MID)>>=
${MID}/PADICRAT.NRLIB: ${MID}/PADICRAT.spad
	@ echo 3000 making ${MID}/PADICRAT.NRLIB from ${MID}/PADICRAT.spad
	@ (cd ${MID} ; 	echo ')co PADICRAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PADICRAT.spad (SPAD from IN)>>=
${MID}/PADICRAT.spad: ${IN}/padic.spad.pamphlet
	@ echo 3001 making ${MID}/PADICRAT.spad from ${IN}/padic.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PADICRAT.NRLIB ; \
	${TANGLE} -R"domain PADICRAT PAdicRational" ${IN}/padic.spad.pamphlet >PADICRAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PADICRC.o (O from NRLIB)>>=
${OUT}/PADICRC.o: ${MID}/PADICRC.NRLIB
	@ echo 3002-14 making ${OUT}/PADICRC.o from ${MID}/PADICRC.NRLIB
	@ cp ${MID}/PADICRC.NRLIB/code.o ${OUT}/PADICRC.o

@
<<PADICRC.NRLIB (NRLIB from MID)>>=
${MID}/PADICRC.NRLIB: ${MID}/PADICRC.spad
	@ echo 3003 making ${MID}/PADICRC.NRLIB from ${MID}/PADICRC.spad
	@ (cd ${MID} ; 	echo ')co PADICRC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PADICRC.spad (SPAD from IN)>>=
${MID}/PADICRC.spad: ${IN}/padic.spad.pamphlet
	@ echo 3004 making ${MID}/PADICRC.spad from ${IN}/padic.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PADICRC.NRLIB ; \
	${TANGLE} -R"domain PADICRC PAdicRationalConstructor" ${IN}/padic.spad.pamphlet >PADICRC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<padic.spad.dvi (DOC from IN)>>=
${DOC}/padic.spad.dvi: ${IN}/padic.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3005 making ${DOC}/padic.spad.dvi from ${IN}/padic.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/padic.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} padic.spad ; \
	rm -f ${DOC}/padic.spad.pamphlet ; \
	rm -f ${DOC}/padic.spad.tex ; \
	rm -f ${DOC}/padic.spad )

@
\subsection{paramete.spad \cite{1}}
<<paramete.spad (SPAD from IN)>>=
${OUTSRC}/paramete.spad: ${IN}/paramete.spad.pamphlet
	@ echo 3006 making ${OUTSRC}/paramete.spad from ${IN}/paramete.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/paramete.spad.pamphlet >paramete.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PARPCURV.o (O from NRLIB)>>=
${OUT}/PARPCURV.o: ${MID}/PARPCURV.NRLIB
	@ echo 3007-4 making ${OUT}/PARPCURV.o from ${MID}/PARPCURV.NRLIB
	@ cp ${MID}/PARPCURV.NRLIB/code.o ${OUT}/PARPCURV.o

@
<<PARPCURV.NRLIB (NRLIB from MID)>>=
${MID}/PARPCURV.NRLIB: ${MID}/PARPCURV.spad
	@ echo 3008 making ${MID}/PARPCURV.NRLIB from ${MID}/PARPCURV.spad
	@ (cd ${MID} ; 	echo ')co PARPCURV.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PARPCURV.spad (SPAD from IN)>>=
${MID}/PARPCURV.spad: ${IN}/paramete.spad.pamphlet
	@ echo 3009 making ${MID}/PARPCURV.spad from ${IN}/paramete.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PARPCURV.NRLIB ; \
	${TANGLE} -R"domain PARPCURV ParametricPlaneCurve" ${IN}/paramete.spad.pamphlet >PARPCURV.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PARPC2.o (O from NRLIB)>>=
${OUT}/PARPC2.o: ${MID}/PARPC2.NRLIB
	@ echo 3010-4 making ${OUT}/PARPC2.o from ${MID}/PARPC2.NRLIB
	@ cp ${MID}/PARPC2.NRLIB/code.o ${OUT}/PARPC2.o

@
<<PARPC2.NRLIB (NRLIB from MID)>>=
${MID}/PARPC2.NRLIB: ${MID}/PARPC2.spad
	@ echo 3011 making ${MID}/PARPC2.NRLIB from ${MID}/PARPC2.spad
	@ (cd ${MID} ; 	echo ')co PARPC2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PARPC2.spad (SPAD from IN)>>=
${MID}/PARPC2.spad: ${IN}/paramete.spad.pamphlet
	@ echo 3012 making ${MID}/PARPC2.spad from ${IN}/paramete.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PARPC2.NRLIB ; \
	${TANGLE} -R"package PARPC2 ParametricPlaneCurveFunctions2" ${IN}/paramete.spad.pamphlet >PARPC2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PARSCURV.o (O from NRLIB)>>=
${OUT}/PARSCURV.o: ${MID}/PARSCURV.NRLIB
	@ echo 3013-4 making ${OUT}/PARSCURV.o from ${MID}/PARSCURV.NRLIB
	@ cp ${MID}/PARSCURV.NRLIB/code.o ${OUT}/PARSCURV.o

@
<<PARSCURV.NRLIB (NRLIB from MID)>>=
${MID}/PARSCURV.NRLIB: ${MID}/PARSCURV.spad
	@ echo 3014 making ${MID}/PARSCURV.NRLIB from ${MID}/PARSCURV.spad
	@ (cd ${MID} ; 	echo ')co PARSCURV.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PARSCURV.spad (SPAD from IN)>>=
${MID}/PARSCURV.spad: ${IN}/paramete.spad.pamphlet
	@ echo 3015 making ${MID}/PARSCURV.spad from ${IN}/paramete.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PARSCURV.NRLIB ; \
	${TANGLE} -R"domain PARSCURV ParametricSpaceCurve" ${IN}/paramete.spad.pamphlet >PARSCURV.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PARSC2.o (O from NRLIB)>>=
${OUT}/PARSC2.o: ${MID}/PARSC2.NRLIB
	@ echo 3016-4 making ${OUT}/PARSC2.o from ${MID}/PARSC2.NRLIB
	@ cp ${MID}/PARSC2.NRLIB/code.o ${OUT}/PARSC2.o

@
<<PARSC2.NRLIB (NRLIB from MID)>>=
${MID}/PARSC2.NRLIB: ${MID}/PARSC2.spad
	@ echo 3017 making ${MID}/PARSC2.NRLIB from ${MID}/PARSC2.spad
	@ (cd ${MID} ; 	echo ')co PARSC2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PARSC2.spad (SPAD from IN)>>=
${MID}/PARSC2.spad: ${IN}/paramete.spad.pamphlet
	@ echo 3018 making ${MID}/PARSC2.spad from ${IN}/paramete.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PARSC2.NRLIB ; \
	${TANGLE} -R"package PARSC2 ParametricSpaceCurveFunctions2" ${IN}/paramete.spad.pamphlet >PARSC2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PARSURF.o (O from NRLIB)>>=
${OUT}/PARSURF.o: ${MID}/PARSURF.NRLIB
	@ echo 3019-4 making ${OUT}/PARSURF.o from ${MID}/PARSURF.NRLIB
	@ cp ${MID}/PARSURF.NRLIB/code.o ${OUT}/PARSURF.o

@
<<PARSURF.NRLIB (NRLIB from MID)>>=
${MID}/PARSURF.NRLIB: ${MID}/PARSURF.spad
	@ echo 3020 making ${MID}/PARSURF.NRLIB from ${MID}/PARSURF.spad
	@ (cd ${MID} ; 	echo ')co PARSURF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PARSURF.spad (SPAD from IN)>>=
${MID}/PARSURF.spad: ${IN}/paramete.spad.pamphlet
	@ echo 3021 making ${MID}/PARSURF.spad from ${IN}/paramete.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PARSURF.NRLIB ; \
	${TANGLE} -R"domain PARSURF ParametricSurface" ${IN}/paramete.spad.pamphlet >PARSURF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PARSU2.o (O from NRLIB)>>=
${OUT}/PARSU2.o: ${MID}/PARSU2.NRLIB
	@ echo 3022-4 making ${OUT}/PARSU2.o from ${MID}/PARSU2.NRLIB
	@ cp ${MID}/PARSU2.NRLIB/code.o ${OUT}/PARSU2.o

@
<<PARSU2.NRLIB (NRLIB from MID)>>=
${MID}/PARSU2.NRLIB: ${MID}/PARSU2.spad
	@ echo 3023 making ${MID}/PARSU2.NRLIB from ${MID}/PARSU2.spad
	@ (cd ${MID} ; 	echo ')co PARSU2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PARSU2.spad (SPAD from IN)>>=
${MID}/PARSU2.spad: ${IN}/paramete.spad.pamphlet
	@ echo 3024 making ${MID}/PARSU2.spad from ${IN}/paramete.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PARSU2.NRLIB ; \
	${TANGLE} -R"package PARSU2 ParametricSurfaceFunctions2" ${IN}/paramete.spad.pamphlet >PARSU2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<paramete.spad.dvi (DOC from IN)>>=
${DOC}/paramete.spad.dvi: ${IN}/paramete.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3025 making ${DOC}/paramete.spad.dvi from ${IN}/paramete.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/paramete.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} paramete.spad ; \
	rm -f ${DOC}/paramete.spad.pamphlet ; \
	rm -f ${DOC}/paramete.spad.tex ; \
	rm -f ${DOC}/paramete.spad )

@
\subsection{partperm.spad \cite{1}}
<<partperm.spad (SPAD from IN)>>=
${OUTSRC}/partperm.spad: ${IN}/partperm.spad.pamphlet
	@ echo 3026 making ${OUTSRC}/partperm.spad from ${IN}/partperm.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/partperm.spad.pamphlet >partperm.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PARTPERM.o (O from NRLIB)>>=
${OUT}/PARTPERM.o: ${MID}/PARTPERM.NRLIB
	@ echo 3027-10 making ${OUT}/PARTPERM.o from ${MID}/PARTPERM.NRLIB
	@ cp ${MID}/PARTPERM.NRLIB/code.o ${OUT}/PARTPERM.o

@
<<PARTPERM.NRLIB (NRLIB from MID)>>=
${MID}/PARTPERM.NRLIB: ${MID}/PARTPERM.spad
	@ echo 3028 making ${MID}/PARTPERM.NRLIB from ${MID}/PARTPERM.spad
	@ (cd ${MID} ; 	echo ')co PARTPERM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PARTPERM.spad (SPAD from IN)>>=
${MID}/PARTPERM.spad: ${IN}/partperm.spad.pamphlet
	@ echo 3029 making ${MID}/PARTPERM.spad from ${IN}/partperm.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PARTPERM.NRLIB ; \
	${TANGLE} -R"package PARTPERM PartitionsAndPermutations" ${IN}/partperm.spad.pamphlet >PARTPERM.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<partperm.spad.dvi (DOC from IN)>>=
${DOC}/partperm.spad.dvi: ${IN}/partperm.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3030 making ${DOC}/partperm.spad.dvi from ${IN}/partperm.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/partperm.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} partperm.spad ; \
	rm -f ${DOC}/partperm.spad.pamphlet ; \
	rm -f ${DOC}/partperm.spad.tex ; \
	rm -f ${DOC}/partperm.spad )

@
\subsection{patmatch1.spad \cite{1}}
<<patmatch1.spad (SPAD from IN)>>=
${OUTSRC}/patmatch1.spad: ${IN}/patmatch1.spad.pamphlet
	@ echo 3031 making ${OUTSRC}/patmatch1.spad from ${IN}/patmatch1.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/patmatch1.spad.pamphlet >patmatch1.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FPATMAB.o (O from NRLIB)>>=
${OUT}/FPATMAB.o: ${MID}/FPATMAB.NRLIB
	@ echo 3032-5 making ${OUT}/FPATMAB.o from ${MID}/FPATMAB.NRLIB
	@ cp ${MID}/FPATMAB.NRLIB/code.o ${OUT}/FPATMAB.o

@
<<FPATMAB.NRLIB (NRLIB from MID)>>=
${MID}/FPATMAB.NRLIB: ${MID}/FPATMAB.spad
	@ echo 3033 making ${MID}/FPATMAB.NRLIB from ${MID}/FPATMAB.spad
	@ (cd ${MID} ; 	echo ')co FPATMAB.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FPATMAB.spad (SPAD from IN)>>=
${MID}/FPATMAB.spad: ${IN}/patmatch1.spad.pamphlet
	@ echo 3034 making ${MID}/FPATMAB.spad from ${IN}/patmatch1.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FPATMAB.NRLIB ; \
	${TANGLE} -R"category FPATMAB FullyPatternMatchable" ${IN}/patmatch1.spad.pamphlet >FPATMAB.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PATLRES.o (O from NRLIB)>>=
${OUT}/PATLRES.o: ${MID}/PATLRES.NRLIB
	@ echo 3035-10 making ${OUT}/PATLRES.o from ${MID}/PATLRES.NRLIB
	@ cp ${MID}/PATLRES.NRLIB/code.o ${OUT}/PATLRES.o

@
<<PATLRES.NRLIB (NRLIB from MID)>>=
${MID}/PATLRES.NRLIB: ${MID}/PATLRES.spad
	@ echo 3036 making ${MID}/PATLRES.NRLIB from ${MID}/PATLRES.spad
	@ (cd ${MID} ; 	echo ')co PATLRES.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PATLRES.spad (SPAD from IN)>>=
${MID}/PATLRES.spad: ${IN}/patmatch1.spad.pamphlet
	@ echo 3037 making ${MID}/PATLRES.spad from ${IN}/patmatch1.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PATLRES.NRLIB ; \
	${TANGLE} -R"domain PATLRES PatternMatchListResult" ${IN}/patmatch1.spad.pamphlet >PATLRES.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PATMAB.o (O from NRLIB)>>=
${OUT}/PATMAB.o: ${MID}/PATMAB.NRLIB
	@ echo 3038-4 making ${OUT}/PATMAB.o from ${MID}/PATMAB.NRLIB
	@ cp ${MID}/PATMAB.NRLIB/code.o ${OUT}/PATMAB.o

@
<<PATMAB.NRLIB (NRLIB from MID)>>=
${MID}/PATMAB.NRLIB: ${MID}/PATMAB.spad
	@ echo 3039 making ${MID}/PATMAB.NRLIB from ${MID}/PATMAB.spad
	@ (cd ${MID} ; 	echo ')co PATMAB.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PATMAB.spad (SPAD from IN)>>=
${MID}/PATMAB.spad: ${IN}/patmatch1.spad.pamphlet
	@ echo 3040 making ${MID}/PATMAB.spad from ${IN}/patmatch1.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PATMAB.NRLIB ; \
	${TANGLE} -R"category PATMAB PatternMatchable" ${IN}/patmatch1.spad.pamphlet >PATMAB.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PATRES.o (O from NRLIB)>>=
${OUT}/PATRES.o: ${MID}/PATRES.NRLIB
	@ echo 3041-18 making ${OUT}/PATRES.o from ${MID}/PATRES.NRLIB
	@ cp ${MID}/PATRES.NRLIB/code.o ${OUT}/PATRES.o

@
<<PATRES.NRLIB (NRLIB from MID)>>=
${MID}/PATRES.NRLIB: ${MID}/PATRES.spad
	@ echo 3042 making ${MID}/PATRES.NRLIB from ${MID}/PATRES.spad
	@ (cd ${MID} ; 	echo ')co PATRES.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PATRES.spad (SPAD from IN)>>=
${MID}/PATRES.spad: ${IN}/patmatch1.spad.pamphlet
	@ echo 3043 making ${MID}/PATRES.spad from ${IN}/patmatch1.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PATRES.NRLIB ; \
	${TANGLE} -R"domain PATRES PatternMatchResult" ${IN}/patmatch1.spad.pamphlet >PATRES.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PATRES2.o (O from NRLIB)>>=
${OUT}/PATRES2.o: ${MID}/PATRES2.NRLIB
	@ echo 3044-4 making ${OUT}/PATRES2.o from ${MID}/PATRES2.NRLIB
	@ cp ${MID}/PATRES2.NRLIB/code.o ${OUT}/PATRES2.o

@
<<PATRES2.NRLIB (NRLIB from MID)>>=
${MID}/PATRES2.NRLIB: ${MID}/PATRES2.spad
	@ echo 3045 making ${MID}/PATRES2.NRLIB from ${MID}/PATRES2.spad
	@ (cd ${MID} ; 	echo ')co PATRES2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PATRES2.spad (SPAD from IN)>>=
${MID}/PATRES2.spad: ${IN}/patmatch1.spad.pamphlet
	@ echo 3046 making ${MID}/PATRES2.spad from ${IN}/patmatch1.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PATRES2.NRLIB ; \
	${TANGLE} -R"package PATRES2 PatternMatchResultFunctions2" ${IN}/patmatch1.spad.pamphlet >PATRES2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PMDOWN.o (O from NRLIB)>>=
${OUT}/PMDOWN.o: ${MID}/PMDOWN.NRLIB
	@ echo 3047-10 making ${OUT}/PMDOWN.o from ${MID}/PMDOWN.NRLIB
	@ cp ${MID}/PMDOWN.NRLIB/code.o ${OUT}/PMDOWN.o

@
<<PMDOWN.NRLIB (NRLIB from MID)>>=
${MID}/PMDOWN.NRLIB: ${MID}/PMDOWN.spad
	@ echo 3048 making ${MID}/PMDOWN.NRLIB from ${MID}/PMDOWN.spad
	@ (cd ${MID} ; 	echo ')co PMDOWN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PMDOWN.spad (SPAD from IN)>>=
${MID}/PMDOWN.spad: ${IN}/patmatch1.spad.pamphlet
	@ echo 3049 making ${MID}/PMDOWN.spad from ${IN}/patmatch1.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PMDOWN.NRLIB ; \
	${TANGLE} -R"package PMDOWN PatternMatchPushDown" ${IN}/patmatch1.spad.pamphlet >PMDOWN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PMKERNEL.o (O from NRLIB)>>=
${OUT}/PMKERNEL.o: ${MID}/PMKERNEL.NRLIB
	@ echo 3050-19 making ${OUT}/PMKERNEL.o from ${MID}/PMKERNEL.NRLIB
	@ cp ${MID}/PMKERNEL.NRLIB/code.o ${OUT}/PMKERNEL.o

@
<<PMKERNEL.NRLIB (NRLIB from MID)>>=
${MID}/PMKERNEL.NRLIB: ${MID}/PMKERNEL.spad
	@ echo 3051 making ${MID}/PMKERNEL.NRLIB from ${MID}/PMKERNEL.spad
	@ (cd ${MID} ; 	echo ')co PMKERNEL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PMKERNEL.spad (SPAD from IN)>>=
${MID}/PMKERNEL.spad: ${IN}/patmatch1.spad.pamphlet
	@ echo 3052 making ${MID}/PMKERNEL.spad from ${IN}/patmatch1.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PMKERNEL.NRLIB ; \
	${TANGLE} -R"package PMKERNEL PatternMatchKernel" ${IN}/patmatch1.spad.pamphlet >PMKERNEL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PMLSAGG.o (O from NRLIB)>>=
${OUT}/PMLSAGG.o: ${MID}/PMLSAGG.NRLIB
	@ echo 3053-10 making ${OUT}/PMLSAGG.o from ${MID}/PMLSAGG.NRLIB
	@ cp ${MID}/PMLSAGG.NRLIB/code.o ${OUT}/PMLSAGG.o

@
<<PMLSAGG.NRLIB (NRLIB from MID)>>=
${MID}/PMLSAGG.NRLIB: ${MID}/PMLSAGG.spad
	@ echo 3054 making ${MID}/PMLSAGG.NRLIB from ${MID}/PMLSAGG.spad
	@ (cd ${MID} ; 	echo ')co PMLSAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PMLSAGG.spad (SPAD from IN)>>=
${MID}/PMLSAGG.spad: ${IN}/patmatch1.spad.pamphlet
	@ echo 3055 making ${MID}/PMLSAGG.spad from ${IN}/patmatch1.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PMLSAGG.NRLIB ; \
	${TANGLE} -R"package PMLSAGG PatternMatchListAggregate" ${IN}/patmatch1.spad.pamphlet >PMLSAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PMSYM.o (O from NRLIB)>>=
${OUT}/PMSYM.o: ${MID}/PMSYM.NRLIB
	@ echo 3056-19 making ${OUT}/PMSYM.o from ${MID}/PMSYM.NRLIB
	@ cp ${MID}/PMSYM.NRLIB/code.o ${OUT}/PMSYM.o

@
<<PMSYM.NRLIB (NRLIB from MID)>>=
${MID}/PMSYM.NRLIB: ${MID}/PMSYM.spad
	@ echo 3057 making ${MID}/PMSYM.NRLIB from ${MID}/PMSYM.spad
	@ (cd ${MID} ; 	echo ')co PMSYM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PMSYM.spad (SPAD from IN)>>=
${MID}/PMSYM.spad: ${IN}/patmatch1.spad.pamphlet
	@ echo 3058 making ${MID}/PMSYM.spad from ${IN}/patmatch1.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PMSYM.NRLIB ; \
	${TANGLE} -R"package PMSYM PatternMatchSymbol" ${IN}/patmatch1.spad.pamphlet >PMSYM.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PMTOOLS.o (O from NRLIB)>>=
${OUT}/PMTOOLS.o: ${MID}/PMTOOLS.NRLIB
	@ echo 3059-10 making ${OUT}/PMTOOLS.o from ${MID}/PMTOOLS.NRLIB
	@ cp ${MID}/PMTOOLS.NRLIB/code.o ${OUT}/PMTOOLS.o

@
<<PMTOOLS.NRLIB (NRLIB from MID)>>=
${MID}/PMTOOLS.NRLIB: ${MID}/PMTOOLS.spad
	@ echo 3060 making ${MID}/PMTOOLS.NRLIB from ${MID}/PMTOOLS.spad
	@ (cd ${MID} ; 	echo ')co PMTOOLS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PMTOOLS.spad (SPAD from IN)>>=
${MID}/PMTOOLS.spad: ${IN}/patmatch1.spad.pamphlet
	@ echo 3061 making ${MID}/PMTOOLS.spad from ${IN}/patmatch1.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PMTOOLS.NRLIB ; \
	${TANGLE} -R"package PMTOOLS PatternMatchTools" ${IN}/patmatch1.spad.pamphlet >PMTOOLS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<patmatch1.spad.dvi (DOC from IN)>>=
${DOC}/patmatch1.spad.dvi: ${IN}/patmatch1.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3062 making ${DOC}/patmatch1.spad.dvi from ${IN}/patmatch1.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/patmatch1.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} patmatch1.spad ; \
	rm -f ${DOC}/patmatch1.spad.pamphlet ; \
	rm -f ${DOC}/patmatch1.spad.tex ; \
	rm -f ${DOC}/patmatch1.spad )

@
\subsection{patmatch2.spad \cite{1}}
<<patmatch2.spad (SPAD from IN)>>=
${OUTSRC}/patmatch2.spad: ${IN}/patmatch2.spad.pamphlet
	@ echo 3063 making ${OUTSRC}/patmatch2.spad from ${IN}/patmatch2.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/patmatch2.spad.pamphlet >patmatch2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PATMATCH.o (O from NRLIB)>>=
${OUT}/PATMATCH.o: ${MID}/PATMATCH.NRLIB
	@ echo 3064-5 making ${OUT}/PATMATCH.o from ${MID}/PATMATCH.NRLIB
	@ cp ${MID}/PATMATCH.NRLIB/code.o ${OUT}/PATMATCH.o

@
<<PATMATCH.NRLIB (NRLIB from MID)>>=
${MID}/PATMATCH.NRLIB: ${MID}/PATMATCH.spad
	@ echo 3065 making ${MID}/PATMATCH.NRLIB from ${MID}/PATMATCH.spad
	@ (cd ${MID} ; 	echo ')co PATMATCH.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PATMATCH.spad (SPAD from IN)>>=
${MID}/PATMATCH.spad: ${IN}/patmatch2.spad.pamphlet
	@ echo 3066 making ${MID}/PATMATCH.spad from ${IN}/patmatch2.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PATMATCH.NRLIB ; \
	${TANGLE} -R"package PATMATCH PatternMatch" ${IN}/patmatch2.spad.pamphlet >PATMATCH.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PMFS.o (O from NRLIB)>>=
${OUT}/PMFS.o: ${MID}/PMFS.NRLIB
	@ echo 3067-20 making ${OUT}/PMFS.o from ${MID}/PMFS.NRLIB
	@ cp ${MID}/PMFS.NRLIB/code.o ${OUT}/PMFS.o

@
<<PMFS.NRLIB (NRLIB from MID)>>=
${MID}/PMFS.NRLIB: ${MID}/PMFS.spad
	@ echo 3068 making ${MID}/PMFS.NRLIB from ${MID}/PMFS.spad
	@ (cd ${MID} ; 	echo ')co PMFS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PMFS.spad (SPAD from IN)>>=
${MID}/PMFS.spad: ${IN}/patmatch2.spad.pamphlet
	@ echo 3069 making ${MID}/PMFS.spad from ${IN}/patmatch2.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PMFS.NRLIB ; \
	${TANGLE} -R"package PMFS PatternMatchFunctionSpace" ${IN}/patmatch2.spad.pamphlet >PMFS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PMINS.o (O from NRLIB)>>=
${OUT}/PMINS.o: ${MID}/PMINS.NRLIB
	@ echo 3070-10 making ${OUT}/PMINS.o from ${MID}/PMINS.NRLIB
	@ cp ${MID}/PMINS.NRLIB/code.o ${OUT}/PMINS.o

@
<<PMINS.NRLIB (NRLIB from MID)>>=
${MID}/PMINS.NRLIB: ${MID}/PMINS.spad
	@ echo 3071 making ${MID}/PMINS.NRLIB from ${MID}/PMINS.spad
	@ (cd ${MID} ; 	echo ')co PMINS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PMINS.spad (SPAD from IN)>>=
${MID}/PMINS.spad: ${IN}/patmatch2.spad.pamphlet
	@ echo 3072 making ${MID}/PMINS.spad from ${IN}/patmatch2.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PMINS.NRLIB ; \
	${TANGLE} -R"package PMINS PatternMatchIntegerNumberSystem" ${IN}/patmatch2.spad.pamphlet >PMINS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PMPLCAT.o (O from NRLIB)>>=
${OUT}/PMPLCAT.o: ${MID}/PMPLCAT.NRLIB
	@ echo 3073-14 making ${OUT}/PMPLCAT.o from ${MID}/PMPLCAT.NRLIB
	@ cp ${MID}/PMPLCAT.NRLIB/code.o ${OUT}/PMPLCAT.o

@
<<PMPLCAT.NRLIB (NRLIB from MID)>>=
${MID}/PMPLCAT.NRLIB: ${MID}/PMPLCAT.spad
	@ echo 3074 making ${MID}/PMPLCAT.NRLIB from ${MID}/PMPLCAT.spad
	@ (cd ${MID} ; 	echo ')co PMPLCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PMPLCAT.spad (SPAD from IN)>>=
${MID}/PMPLCAT.spad: ${IN}/patmatch2.spad.pamphlet
	@ echo 3075 making ${MID}/PMPLCAT.spad from ${IN}/patmatch2.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PMPLCAT.NRLIB ; \
	${TANGLE} -R"package PMPLCAT PatternMatchPolynomialCategory" ${IN}/patmatch2.spad.pamphlet >PMPLCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PMQFCAT.o (O from NRLIB)>>=
${OUT}/PMQFCAT.o: ${MID}/PMQFCAT.NRLIB
	@ echo 3076-14 making ${OUT}/PMQFCAT.o from ${MID}/PMQFCAT.NRLIB
	@ cp ${MID}/PMQFCAT.NRLIB/code.o ${OUT}/PMQFCAT.o

@
<<PMQFCAT.NRLIB (NRLIB from MID)>>=
${MID}/PMQFCAT.NRLIB: ${MID}/PMQFCAT.spad
	@ echo 3077 making ${MID}/PMQFCAT.NRLIB from ${MID}/PMQFCAT.spad
	@ (cd ${MID} ; 	echo ')co PMQFCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PMQFCAT.spad (SPAD from IN)>>=
${MID}/PMQFCAT.spad: ${IN}/patmatch2.spad.pamphlet
	@ echo 3078 making ${MID}/PMQFCAT.spad from ${IN}/patmatch2.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PMQFCAT.NRLIB ; \
	${TANGLE} -R"package PMQFCAT PatternMatchQuotientFieldCategory" ${IN}/patmatch2.spad.pamphlet >PMQFCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<patmatch2.spad.dvi (DOC from IN)>>=
${DOC}/patmatch2.spad.dvi: ${IN}/patmatch2.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3079 making ${DOC}/patmatch2.spad.dvi from ${IN}/patmatch2.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/patmatch2.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} patmatch2.spad ; \
	rm -f ${DOC}/patmatch2.spad.pamphlet ; \
	rm -f ${DOC}/patmatch2.spad.tex ; \
	rm -f ${DOC}/patmatch2.spad )

@
\subsection{pattern.spad \cite{1}}
<<pattern.spad (SPAD from IN)>>=
${OUTSRC}/pattern.spad: ${IN}/pattern.spad.pamphlet
	@ echo 3080 making ${OUTSRC}/pattern.spad from ${IN}/pattern.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/pattern.spad.pamphlet >pattern.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PATAB.o (O from NRLIB)>>=
${OUT}/PATAB.o: ${MID}/PATAB.NRLIB
	@ echo 3081-1 making ${OUT}/PATAB.o from ${MID}/PATAB.NRLIB
	@ cp ${MID}/PATAB.NRLIB/code.o ${OUT}/PATAB.o

@
<<PATAB.NRLIB (NRLIB from MID)>>=
${MID}/PATAB.NRLIB: ${MID}/PATAB.spad
	@ echo 3082 making ${MID}/PATAB.NRLIB from ${MID}/PATAB.spad
	@ (cd ${MID} ; 	echo ')co PATAB.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PATAB.spad (SPAD from IN)>>=
${MID}/PATAB.spad: ${IN}/pattern.spad.pamphlet
	@ echo 3083 making ${MID}/PATAB.spad from ${IN}/pattern.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PATAB.NRLIB ; \
	${TANGLE} -R"category PATAB Patternable" ${IN}/pattern.spad.pamphlet >PATAB.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PATTERN.o (O from NRLIB)>>=
${OUT}/PATTERN.o: ${MID}/PATTERN.NRLIB
	@ echo 3084-19 making ${OUT}/PATTERN.o from ${MID}/PATTERN.NRLIB
	@ cp ${MID}/PATTERN.NRLIB/code.o ${OUT}/PATTERN.o

@
<<PATTERN.NRLIB (NRLIB from MID)>>=
${MID}/PATTERN.NRLIB: ${MID}/PATTERN.spad
	@ echo 3085 making ${MID}/PATTERN.NRLIB from ${MID}/PATTERN.spad
	@ (cd ${MID} ; 	echo ')co PATTERN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PATTERN.spad (SPAD from IN)>>=
${MID}/PATTERN.spad: ${IN}/pattern.spad.pamphlet
	@ echo 3086 making ${MID}/PATTERN.spad from ${IN}/pattern.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PATTERN.NRLIB ; \
	${TANGLE} -R"domain PATTERN Pattern" ${IN}/pattern.spad.pamphlet >PATTERN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PATTERN1.o (O from NRLIB)>>=
${OUT}/PATTERN1.o: ${MID}/PATTERN1.NRLIB
	@ echo 3087-4 making ${OUT}/PATTERN1.o from ${MID}/PATTERN1.NRLIB
	@ cp ${MID}/PATTERN1.NRLIB/code.o ${OUT}/PATTERN1.o

@
<<PATTERN1.NRLIB (NRLIB from MID)>>=
${MID}/PATTERN1.NRLIB: ${MID}/PATTERN1.spad
	@ echo 3088 making ${MID}/PATTERN1.NRLIB from ${MID}/PATTERN1.spad
	@ (cd ${MID} ; 	echo ')co PATTERN1.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PATTERN1.spad (SPAD from IN)>>=
${MID}/PATTERN1.spad: ${IN}/pattern.spad.pamphlet
	@ echo 3089 making ${MID}/PATTERN1.spad from ${IN}/pattern.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PATTERN1.NRLIB ; \
	${TANGLE} -R"package PATTERN1 PatternFunctions1" ${IN}/pattern.spad.pamphlet >PATTERN1.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PATTERN2.o (O from NRLIB)>>=
${OUT}/PATTERN2.o: ${MID}/PATTERN2.NRLIB
	@ echo 3090-10 making ${OUT}/PATTERN2.o from ${MID}/PATTERN2.NRLIB
	@ cp ${MID}/PATTERN2.NRLIB/code.o ${OUT}/PATTERN2.o

@
<<PATTERN2.NRLIB (NRLIB from MID)>>=
${MID}/PATTERN2.NRLIB: ${MID}/PATTERN2.spad
	@ echo 3091 making ${MID}/PATTERN2.NRLIB from ${MID}/PATTERN2.spad
	@ (cd ${MID} ; 	echo ')co PATTERN2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PATTERN2.spad (SPAD from IN)>>=
${MID}/PATTERN2.spad: ${IN}/pattern.spad.pamphlet
	@ echo 3092 making ${MID}/PATTERN2.spad from ${IN}/pattern.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PATTERN2.NRLIB ; \
	${TANGLE} -R"package PATTERN2 PatternFunctions2" ${IN}/pattern.spad.pamphlet >PATTERN2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<pattern.spad.dvi (DOC from IN)>>=
${DOC}/pattern.spad.dvi: ${IN}/pattern.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3093 making ${DOC}/pattern.spad.dvi from ${IN}/pattern.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/pattern.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} pattern.spad ; \
	rm -f ${DOC}/pattern.spad.pamphlet ; \
	rm -f ${DOC}/pattern.spad.tex ; \
	rm -f ${DOC}/pattern.spad )

@
\subsection{pcurve.spad \cite{1}}
<<pcurve.spad (SPAD from IN)>>=
${OUTSRC}/pcurve.spad: ${IN}/pcurve.spad.pamphlet
	@ echo 3094 making ${OUTSRC}/pcurve.spad from ${IN}/pcurve.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/pcurve.spad.pamphlet >pcurve.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PPCURVE.o (O from NRLIB)>>=
${OUT}/PPCURVE.o: ${MID}/PPCURVE.NRLIB
	@ echo 3095-1 making ${OUT}/PPCURVE.o from ${MID}/PPCURVE.NRLIB
	@ cp ${MID}/PPCURVE.NRLIB/code.o ${OUT}/PPCURVE.o

@
<<PPCURVE.NRLIB (NRLIB from MID)>>=
${MID}/PPCURVE.NRLIB: ${MID}/PPCURVE.spad
	@ echo 3096 making ${MID}/PPCURVE.NRLIB from ${MID}/PPCURVE.spad
	@ (cd ${MID} ; 	echo ')co PPCURVE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PPCURVE.spad (SPAD from IN)>>=
${MID}/PPCURVE.spad: ${IN}/pcurve.spad.pamphlet
	@ echo 3097 making ${MID}/PPCURVE.spad from ${IN}/pcurve.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PPCURVE.NRLIB ; \
	${TANGLE} -R"category PPCURVE PlottablePlaneCurveCategory" ${IN}/pcurve.spad.pamphlet >PPCURVE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PSCURVE.o (O from NRLIB)>>=
${OUT}/PSCURVE.o: ${MID}/PSCURVE.NRLIB
	@ echo 3098-1 making ${OUT}/PSCURVE.o from ${MID}/PSCURVE.NRLIB
	@ cp ${MID}/PSCURVE.NRLIB/code.o ${OUT}/PSCURVE.o

@
<<PSCURVE.NRLIB (NRLIB from MID)>>=
${MID}/PSCURVE.NRLIB: ${MID}/PSCURVE.spad
	@ echo 3099 making ${MID}/PSCURVE.NRLIB from ${MID}/PSCURVE.spad
	@ (cd ${MID} ; 	echo ')co PSCURVE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PSCURVE.spad (SPAD from IN)>>=
${MID}/PSCURVE.spad: ${IN}/pcurve.spad.pamphlet
	@ echo 3100 making ${MID}/PSCURVE.spad from ${IN}/pcurve.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PSCURVE.NRLIB ; \
	${TANGLE} -R"category PSCURVE PlottableSpaceCurveCategory" ${IN}/pcurve.spad.pamphlet >PSCURVE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<pcurve.spad.dvi (DOC from IN)>>=
${DOC}/pcurve.spad.dvi: ${IN}/pcurve.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3101 making ${DOC}/pcurve.spad.dvi from ${IN}/pcurve.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/pcurve.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} pcurve.spad ; \
	rm -f ${DOC}/pcurve.spad.pamphlet ; \
	rm -f ${DOC}/pcurve.spad.tex ; \
	rm -f ${DOC}/pcurve.spad )

@
\subsection{pdecomp.spad \cite{1}}
<<pdecomp.spad (SPAD from IN)>>=
${OUTSRC}/pdecomp.spad: ${IN}/pdecomp.spad.pamphlet
	@ echo 3102 making ${OUTSRC}/pdecomp.spad from ${IN}/pdecomp.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/pdecomp.spad.pamphlet >pdecomp.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PCOMP.o (O from NRLIB)>>=
${OUT}/PCOMP.o: ${MID}/PCOMP.NRLIB
	@ echo 3103-14 making ${OUT}/PCOMP.o from ${MID}/PCOMP.NRLIB
	@ cp ${MID}/PCOMP.NRLIB/code.o ${OUT}/PCOMP.o

@
<<PCOMP.NRLIB (NRLIB from MID)>>=
${MID}/PCOMP.NRLIB: ${MID}/PCOMP.spad
	@ echo 3104 making ${MID}/PCOMP.NRLIB from ${MID}/PCOMP.spad
	@ (cd ${MID} ; 	echo ')co PCOMP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PCOMP.spad (SPAD from IN)>>=
${MID}/PCOMP.spad: ${IN}/pdecomp.spad.pamphlet
	@ echo 3105 making ${MID}/PCOMP.spad from ${IN}/pdecomp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PCOMP.NRLIB ; \
	${TANGLE} -R"package PCOMP PolynomialComposition" ${IN}/pdecomp.spad.pamphlet >PCOMP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PDECOMP.o (O from NRLIB)>>=
${OUT}/PDECOMP.o: ${MID}/PDECOMP.NRLIB
	@ echo 3106-14 making ${OUT}/PDECOMP.o from ${MID}/PDECOMP.NRLIB
	@ cp ${MID}/PDECOMP.NRLIB/code.o ${OUT}/PDECOMP.o

@
<<PDECOMP.NRLIB (NRLIB from MID)>>=
${MID}/PDECOMP.NRLIB: ${MID}/PDECOMP.spad
	@ echo 3107 making ${MID}/PDECOMP.NRLIB from ${MID}/PDECOMP.spad
	@ (cd ${MID} ; 	echo ')co PDECOMP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PDECOMP.spad (SPAD from IN)>>=
${MID}/PDECOMP.spad: ${IN}/pdecomp.spad.pamphlet
	@ echo 3108 making ${MID}/PDECOMP.spad from ${IN}/pdecomp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PDECOMP.NRLIB ; \
	${TANGLE} -R"package PDECOMP PolynomialDecomposition" ${IN}/pdecomp.spad.pamphlet >PDECOMP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<pdecomp.spad.dvi (DOC from IN)>>=
${DOC}/pdecomp.spad.dvi: ${IN}/pdecomp.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3109 making ${DOC}/pdecomp.spad.dvi from ${IN}/pdecomp.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/pdecomp.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} pdecomp.spad ; \
	rm -f ${DOC}/pdecomp.spad.pamphlet ; \
	rm -f ${DOC}/pdecomp.spad.tex ; \
	rm -f ${DOC}/pdecomp.spad )

@
\subsection{perman.spad \cite{1}}
<<perman.spad (SPAD from IN)>>=
${OUTSRC}/perman.spad: ${IN}/perman.spad.pamphlet
	@ echo 3110 making ${OUTSRC}/perman.spad from ${IN}/perman.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/perman.spad.pamphlet >perman.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GRAY.o (O from NRLIB)>>=
${OUT}/GRAY.o: ${MID}/GRAY.NRLIB
	@ echo 3111-13 making ${OUT}/GRAY.o from ${MID}/GRAY.NRLIB
	@ cp ${MID}/GRAY.NRLIB/code.o ${OUT}/GRAY.o

@
<<GRAY.NRLIB (NRLIB from MID)>>=
${MID}/GRAY.NRLIB: ${MID}/GRAY.spad
	@ echo 3112 making ${MID}/GRAY.NRLIB from ${MID}/GRAY.spad
	@ (cd ${MID} ; 	echo ')co GRAY.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GRAY.spad (SPAD from IN)>>=
${MID}/GRAY.spad: ${IN}/perman.spad.pamphlet
	@ echo 3113 making ${MID}/GRAY.spad from ${IN}/perman.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GRAY.NRLIB ; \
	${TANGLE} -R"package GRAY GrayCode" ${IN}/perman.spad.pamphlet >GRAY.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PERMAN.o (O from NRLIB)>>=
${OUT}/PERMAN.o: ${MID}/PERMAN.NRLIB
	@ echo 3114-13 making ${OUT}/PERMAN.o from ${MID}/PERMAN.NRLIB
	@ cp ${MID}/PERMAN.NRLIB/code.o ${OUT}/PERMAN.o

@
<<PERMAN.NRLIB (NRLIB from MID)>>=
${MID}/PERMAN.NRLIB: ${MID}/PERMAN.spad
	@ echo 3115 making ${MID}/PERMAN.NRLIB from ${MID}/PERMAN.spad
	@ (cd ${MID} ; 	echo ')co PERMAN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PERMAN.spad (SPAD from IN)>>=
${MID}/PERMAN.spad: ${IN}/perman.spad.pamphlet
	@ echo 3116 making ${MID}/PERMAN.spad from ${IN}/perman.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PERMAN.NRLIB ; \
	${TANGLE} -R"package PERMAN Permanent" ${IN}/perman.spad.pamphlet >PERMAN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<perman.spad.dvi (DOC from IN)>>=
${DOC}/perman.spad.dvi: ${IN}/perman.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3117 making ${DOC}/perman.spad.dvi from ${IN}/perman.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/perman.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} perman.spad ; \
	rm -f ${DOC}/perman.spad.pamphlet ; \
	rm -f ${DOC}/perman.spad.tex ; \
	rm -f ${DOC}/perman.spad )

@
\subsection{permgrps.spad \cite{1}}
<<permgrps.spad (SPAD from IN)>>=
${OUTSRC}/permgrps.spad: ${IN}/permgrps.spad.pamphlet
	@ echo 3118 making ${OUTSRC}/permgrps.spad from ${IN}/permgrps.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/permgrps.spad.pamphlet >permgrps.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PERMGRP.o (O from NRLIB)>>=
${OUT}/PERMGRP.o: ${MID}/PERMGRP.NRLIB
	@ echo 3119-17 making ${OUT}/PERMGRP.o from ${MID}/PERMGRP.NRLIB
	@ cp ${MID}/PERMGRP.NRLIB/code.o ${OUT}/PERMGRP.o

@
<<PERMGRP.NRLIB (NRLIB from MID)>>=
${MID}/PERMGRP.NRLIB: ${MID}/PERMGRP.spad
	@ echo 3120 making ${MID}/PERMGRP.NRLIB from ${MID}/PERMGRP.spad
	@ (cd ${MID} ; 	echo ')co PERMGRP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PERMGRP.spad (SPAD from IN)>>=
${MID}/PERMGRP.spad: ${IN}/permgrps.spad.pamphlet
	@ echo 3121 making ${MID}/PERMGRP.spad from ${IN}/permgrps.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PERMGRP.NRLIB ; \
	${TANGLE} -R"domain PERMGRP PermutationGroup" ${IN}/permgrps.spad.pamphlet >PERMGRP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PGE.o (O from NRLIB)>>=
${OUT}/PGE.o: ${MID}/PGE.NRLIB
	@ echo 3122-10 making ${OUT}/PGE.o from ${MID}/PGE.NRLIB
	@ cp ${MID}/PGE.NRLIB/code.o ${OUT}/PGE.o

@
<<PGE.NRLIB (NRLIB from MID)>>=
${MID}/PGE.NRLIB: ${MID}/PGE.spad
	@ echo 3123 making ${MID}/PGE.NRLIB from ${MID}/PGE.spad
	@ (cd ${MID} ; 	echo ')co PGE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PGE.spad (SPAD from IN)>>=
${MID}/PGE.spad: ${IN}/permgrps.spad.pamphlet
	@ echo 3124 making ${MID}/PGE.spad from ${IN}/permgrps.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PGE.NRLIB ; \
	${TANGLE} -R"package PGE PermutationGroupExamples" ${IN}/permgrps.spad.pamphlet >PGE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<permgrps.spad.dvi (DOC from IN)>>=
${DOC}/permgrps.spad.dvi: ${IN}/permgrps.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3125 making ${DOC}/permgrps.spad.dvi from ${IN}/permgrps.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/permgrps.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} permgrps.spad ; \
	rm -f ${DOC}/permgrps.spad.pamphlet ; \
	rm -f ${DOC}/permgrps.spad.tex ; \
	rm -f ${DOC}/permgrps.spad )

@
\subsection{perm.spad \cite{1}}
<<perm.spad (SPAD from IN)>>=
${OUTSRC}/perm.spad: ${IN}/perm.spad.pamphlet
	@ echo 3126 making ${OUTSRC}/perm.spad from ${IN}/perm.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/perm.spad.pamphlet >perm.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PERM.o (O from NRLIB)>>=
${OUT}/PERM.o: ${MID}/PERM.NRLIB
	@ echo 3127-17 making ${OUT}/PERM.o from ${MID}/PERM.NRLIB
	@ cp ${MID}/PERM.NRLIB/code.o ${OUT}/PERM.o

@
<<PERM.NRLIB (NRLIB from MID)>>=
${MID}/PERM.NRLIB: ${MID}/PERM.spad
	@ echo 3128 making ${MID}/PERM.NRLIB from ${MID}/PERM.spad
	@ (cd ${MID} ; 	echo ')co PERM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PERM.spad (SPAD from IN)>>=
${MID}/PERM.spad: ${IN}/perm.spad.pamphlet
	@ echo 3129 making ${MID}/PERM.spad from ${IN}/perm.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PERM.NRLIB ; \
	${TANGLE} -R"domain PERM Permutation" ${IN}/perm.spad.pamphlet >PERM.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PERMCAT.o (O from NRLIB)>>=
${OUT}/PERMCAT.o: ${MID}/PERMCAT.NRLIB
	@ echo 3130-5 making ${OUT}/PERMCAT.o from ${MID}/PERMCAT.NRLIB
	@ cp ${MID}/PERMCAT.NRLIB/code.o ${OUT}/PERMCAT.o

@
<<PERMCAT.NRLIB (NRLIB from MID)>>=
${MID}/PERMCAT.NRLIB: ${MID}/PERMCAT.spad
	@ echo 3131 making ${MID}/PERMCAT.NRLIB from ${MID}/PERMCAT.spad
	@ (cd ${MID} ; 	echo ')co PERMCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PERMCAT.spad (SPAD from IN)>>=
${MID}/PERMCAT.spad: ${IN}/perm.spad.pamphlet
	@ echo 3132 making ${MID}/PERMCAT.spad from ${IN}/perm.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PERMCAT.NRLIB ; \
	${TANGLE} -R"category PERMCAT PermutationCategory" ${IN}/perm.spad.pamphlet >PERMCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<perm.spad.dvi (DOC from IN)>>=
${DOC}/perm.spad.dvi: ${IN}/perm.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3133 making ${DOC}/perm.spad.dvi from ${IN}/perm.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/perm.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} perm.spad ; \
	rm -f ${DOC}/perm.spad.pamphlet ; \
	rm -f ${DOC}/perm.spad.tex ; \
	rm -f ${DOC}/perm.spad )

@
\subsection{pfbr.spad \cite{1}}
<<pfbr.spad (SPAD from IN)>>=
${OUTSRC}/pfbr.spad: ${IN}/pfbr.spad.pamphlet
	@ echo 3134 making ${OUTSRC}/pfbr.spad from ${IN}/pfbr.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/pfbr.spad.pamphlet >pfbr.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PFBR.o (O from NRLIB)>>=
${OUT}/PFBR.o: ${MID}/PFBR.NRLIB
	@ echo 3135-14 making ${OUT}/PFBR.o from ${MID}/PFBR.NRLIB
	@ cp ${MID}/PFBR.NRLIB/code.o ${OUT}/PFBR.o

@
<<PFBR.NRLIB (NRLIB from MID)>>=
${MID}/PFBR.NRLIB: ${MID}/PFBR.spad
	@ echo 3136 making ${MID}/PFBR.NRLIB from ${MID}/PFBR.spad
	@ (cd ${MID} ; 	echo ')co PFBR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PFBR.spad (SPAD from IN)>>=
${MID}/PFBR.spad: ${IN}/pfbr.spad.pamphlet
	@ echo 3137 making ${MID}/PFBR.spad from ${IN}/pfbr.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PFBR.NRLIB ; \
	${TANGLE} -R"package PFBR PolynomialFactorizationByRecursion" ${IN}/pfbr.spad.pamphlet >PFBR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PFBRU.o (O from NRLIB)>>=
${OUT}/PFBRU.o: ${MID}/PFBRU.NRLIB
	@ echo 3138-14 making ${OUT}/PFBRU.o from ${MID}/PFBRU.NRLIB
	@ cp ${MID}/PFBRU.NRLIB/code.o ${OUT}/PFBRU.o

@
<<PFBRU.NRLIB (NRLIB from MID)>>=
${MID}/PFBRU.NRLIB: ${MID}/PFBRU.spad
	@ echo 3139 making ${MID}/PFBRU.NRLIB from ${MID}/PFBRU.spad
	@ (cd ${MID} ; 	echo ')co PFBRU.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PFBRU.spad (SPAD from IN)>>=
${MID}/PFBRU.spad: ${IN}/pfbr.spad.pamphlet
	@ echo 3140 making ${MID}/PFBRU.spad from ${IN}/pfbr.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PFBRU.NRLIB ; \
	${TANGLE} -R"package PFBRU PolynomialFactorizationByRecursionUnivariate" ${IN}/pfbr.spad.pamphlet >PFBRU.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<pfbr.spad.dvi (DOC from IN)>>=
${DOC}/pfbr.spad.dvi: ${IN}/pfbr.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3141 making ${DOC}/pfbr.spad.dvi from ${IN}/pfbr.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/pfbr.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} pfbr.spad ; \
	rm -f ${DOC}/pfbr.spad.pamphlet ; \
	rm -f ${DOC}/pfbr.spad.tex ; \
	rm -f ${DOC}/pfbr.spad )

@
\subsection{pfo.spad \cite{1}}
<<pfo.spad (SPAD from IN)>>=
${OUTSRC}/pfo.spad: ${IN}/pfo.spad.pamphlet
	@ echo 3142 making ${OUTSRC}/pfo.spad from ${IN}/pfo.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/pfo.spad.pamphlet >pfo.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FORDER.o (O from NRLIB)>>=
${OUT}/FORDER.o: ${MID}/FORDER.NRLIB
	@ echo 3143-20 making ${OUT}/FORDER.o from ${MID}/FORDER.NRLIB
	@ cp ${MID}/FORDER.NRLIB/code.o ${OUT}/FORDER.o

@
<<FORDER.NRLIB (NRLIB from MID)>>=
${MID}/FORDER.NRLIB: ${MID}/FORDER.spad
	@ echo 3144 making ${MID}/FORDER.NRLIB from ${MID}/FORDER.spad
	@ (cd ${MID} ; 	echo ')co FORDER.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FORDER.spad (SPAD from IN)>>=
${MID}/FORDER.spad: ${IN}/pfo.spad.pamphlet
	@ echo 3145 making ${MID}/FORDER.spad from ${IN}/pfo.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FORDER.NRLIB ; \
	${TANGLE} -R"package FORDER FindOrderFinite" ${IN}/pfo.spad.pamphlet >FORDER.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FSRED.o (O from NRLIB)>>=
${OUT}/FSRED.o: ${MID}/FSRED.NRLIB
	@ echo 3146-20 making ${OUT}/FSRED.o from ${MID}/FSRED.NRLIB
	@ cp ${MID}/FSRED.NRLIB/code.o ${OUT}/FSRED.o

@
<<FSRED.NRLIB (NRLIB from MID)>>=
${MID}/FSRED.NRLIB: ${MID}/FSRED.spad
	@ echo 3147 making ${MID}/FSRED.NRLIB from ${MID}/FSRED.spad
	@ (cd ${MID} ; 	echo ')co FSRED.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FSRED.spad (SPAD from IN)>>=
${MID}/FSRED.spad: ${IN}/pfo.spad.pamphlet
	@ echo 3148 making ${MID}/FSRED.spad from ${IN}/pfo.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FSRED.NRLIB ; \
	${TANGLE} -R"package FSRED FunctionSpaceReduce" ${IN}/pfo.spad.pamphlet >FSRED.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PFO.o (O from NRLIB)>>=
${OUT}/PFO.o: ${MID}/PFO.NRLIB
	@ echo 3149-20 making ${OUT}/PFO.o from ${MID}/PFO.NRLIB
	@ cp ${MID}/PFO.NRLIB/code.o ${OUT}/PFO.o

@
<<PFO.NRLIB (NRLIB from MID)>>=
${MID}/PFO.NRLIB: ${MID}/PFO.spad
	@ echo 3150 making ${MID}/PFO.NRLIB from ${MID}/PFO.spad
	@ (cd ${MID} ; 	echo ')co PFO.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PFO.spad (SPAD from IN)>>=
${MID}/PFO.spad: ${IN}/pfo.spad.pamphlet
	@ echo 3151 making ${MID}/PFO.spad from ${IN}/pfo.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PFO.NRLIB ; \
	${TANGLE} -R"package PFO PointsOfFiniteOrder" ${IN}/pfo.spad.pamphlet >PFO.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PFOQ.o (O from NRLIB)>>=
${OUT}/PFOQ.o: ${MID}/PFOQ.NRLIB
	@ echo 3152-20 making ${OUT}/PFOQ.o from ${MID}/PFOQ.NRLIB
	@ cp ${MID}/PFOQ.NRLIB/code.o ${OUT}/PFOQ.o

@
<<PFOQ.NRLIB (NRLIB from MID)>>=
${MID}/PFOQ.NRLIB: ${MID}/PFOQ.spad
	@ echo 3153 making ${MID}/PFOQ.NRLIB from ${MID}/PFOQ.spad
	@ (cd ${MID} ; 	echo ')co PFOQ.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PFOQ.spad (SPAD from IN)>>=
${MID}/PFOQ.spad: ${IN}/pfo.spad.pamphlet
	@ echo 3154 making ${MID}/PFOQ.spad from ${IN}/pfo.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PFOQ.NRLIB ; \
	${TANGLE} -R"package PFOQ PointsOfFiniteOrderRational" ${IN}/pfo.spad.pamphlet >PFOQ.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PFOTOOLS.o (O from NRLIB)>>=
${OUT}/PFOTOOLS.o: ${MID}/PFOTOOLS.NRLIB
	@ echo 3155-14 making ${OUT}/PFOTOOLS.o from ${MID}/PFOTOOLS.NRLIB
	@ cp ${MID}/PFOTOOLS.NRLIB/code.o ${OUT}/PFOTOOLS.o

@
<<PFOTOOLS.NRLIB (NRLIB from MID)>>=
${MID}/PFOTOOLS.NRLIB: ${MID}/PFOTOOLS.spad
	@ echo 3156 making ${MID}/PFOTOOLS.NRLIB from ${MID}/PFOTOOLS.spad
	@ (cd ${MID} ; 	echo ')co PFOTOOLS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PFOTOOLS.spad (SPAD from IN)>>=
${MID}/PFOTOOLS.spad: ${IN}/pfo.spad.pamphlet
	@ echo 3157 making ${MID}/PFOTOOLS.spad from ${IN}/pfo.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PFOTOOLS.NRLIB ; \
	${TANGLE} -R"package PFOTOOLS PointsOfFiniteOrderTools" ${IN}/pfo.spad.pamphlet >PFOTOOLS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RDIV.o (O from NRLIB)>>=
${OUT}/RDIV.o: ${MID}/RDIV.NRLIB
	@ echo 3158-20 making ${OUT}/RDIV.o from ${MID}/RDIV.NRLIB
	@ cp ${MID}/RDIV.NRLIB/code.o ${OUT}/RDIV.o

@
<<RDIV.NRLIB (NRLIB from MID)>>=
${MID}/RDIV.NRLIB: ${MID}/RDIV.spad
	@ echo 3159 making ${MID}/RDIV.NRLIB from ${MID}/RDIV.spad
	@ (cd ${MID} ; 	echo ')co RDIV.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RDIV.spad (SPAD from IN)>>=
${MID}/RDIV.spad: ${IN}/pfo.spad.pamphlet
	@ echo 3160 making ${MID}/RDIV.spad from ${IN}/pfo.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RDIV.NRLIB ; \
	${TANGLE} -R"package RDIV ReducedDivisor" ${IN}/pfo.spad.pamphlet >RDIV.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<pfo.spad.dvi (DOC from IN)>>=
${DOC}/pfo.spad.dvi: ${IN}/pfo.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3161 making ${DOC}/pfo.spad.dvi from ${IN}/pfo.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/pfo.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} pfo.spad ; \
	rm -f ${DOC}/pfo.spad.pamphlet ; \
	rm -f ${DOC}/pfo.spad.tex ; \
	rm -f ${DOC}/pfo.spad )

@
\subsection{pfr.spad \cite{1}}
<<pfr.spad (SPAD from IN)>>=
${OUTSRC}/pfr.spad: ${IN}/pfr.spad.pamphlet
	@ echo 3162 making ${OUTSRC}/pfr.spad from ${IN}/pfr.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/pfr.spad.pamphlet >pfr.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PFR.o (O from NRLIB)>>=
${OUT}/PFR.o: ${MID}/PFR.NRLIB
	@ echo 3163-10 making ${OUT}/PFR.o from ${MID}/PFR.NRLIB
	@ cp ${MID}/PFR.NRLIB/code.o ${OUT}/PFR.o

@
<<PFR.NRLIB (NRLIB from MID)>>=
${MID}/PFR.NRLIB: ${MID}/PFR.spad
	@ echo 3164 making ${MID}/PFR.NRLIB from ${MID}/PFR.spad
	@ (cd ${MID} ; 	echo ')co PFR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PFR.spad (SPAD from IN)>>=
${MID}/PFR.spad: ${IN}/pfr.spad.pamphlet
	@ echo 3165 making ${MID}/PFR.spad from ${IN}/pfr.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PFR.NRLIB ; \
	${TANGLE} -R"domain PFR PartialFraction" ${IN}/pfr.spad.pamphlet >PFR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PFRPAC.o (O from NRLIB)>>=
${OUT}/PFRPAC.o: ${MID}/PFRPAC.NRLIB
	@ echo 3166-14 making ${OUT}/PFRPAC.o from ${MID}/PFRPAC.NRLIB
	@ cp ${MID}/PFRPAC.NRLIB/code.o ${OUT}/PFRPAC.o

@
<<PFRPAC.NRLIB (NRLIB from MID)>>=
${MID}/PFRPAC.NRLIB: ${MID}/PFRPAC.spad
	@ echo 3167 making ${MID}/PFRPAC.NRLIB from ${MID}/PFRPAC.spad
	@ (cd ${MID} ; 	echo ')co PFRPAC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PFRPAC.spad (SPAD from IN)>>=
${MID}/PFRPAC.spad: ${IN}/pfr.spad.pamphlet
	@ echo 3168 making ${MID}/PFRPAC.spad from ${IN}/pfr.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PFRPAC.NRLIB ; \
	${TANGLE} -R"package PFRPAC PartialFractionPackage" ${IN}/pfr.spad.pamphlet >PFRPAC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<pfr.spad.dvi (DOC from IN)>>=
${DOC}/pfr.spad.dvi: ${IN}/pfr.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3169 making ${DOC}/pfr.spad.dvi from ${IN}/pfr.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/pfr.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} pfr.spad ; \
	rm -f ${DOC}/pfr.spad.pamphlet ; \
	rm -f ${DOC}/pfr.spad.tex ; \
	rm -f ${DOC}/pfr.spad )

@
\subsection{pf.spad \cite{1}}
<<pf.spad (SPAD from IN)>>=
${OUTSRC}/pf.spad: ${IN}/pf.spad.pamphlet
	@ echo 3170 making ${OUTSRC}/pf.spad from ${IN}/pf.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/pf.spad.pamphlet >pf.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IPF.o (O from NRLIB)>>=
${OUT}/IPF.o: ${MID}/IPF.NRLIB
	@ echo 3171-18 making ${OUT}/IPF.o from ${MID}/IPF.NRLIB
	@ cp ${MID}/IPF.NRLIB/code.o ${OUT}/IPF.o

@
<<IPF.NRLIB (NRLIB from MID)>>=
${MID}/IPF.NRLIB: ${MID}/IPF.spad
	@ echo 3172 making ${MID}/IPF.NRLIB from ${MID}/IPF.spad
	@ (cd ${MID} ; 	echo ')co IPF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IPF.spad (SPAD from IN)>>=
${MID}/IPF.spad: ${IN}/pf.spad.pamphlet
	@ echo 3173 making ${MID}/IPF.spad from ${IN}/pf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IPF.NRLIB ; \
	${TANGLE} -R"domain IPF InnerPrimeField" ${IN}/pf.spad.pamphlet >IPF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PF.o (O from NRLIB)>>=
${OUT}/PF.o: ${MID}/PF.NRLIB
	@ echo 3174-14 making ${OUT}/PF.o from ${MID}/PF.NRLIB
	@ cp ${MID}/PF.NRLIB/code.o ${OUT}/PF.o

@
<<PF.NRLIB (NRLIB from MID)>>=
${MID}/PF.NRLIB: ${MID}/PF.spad
	@ echo 3175 making ${MID}/PF.NRLIB from ${MID}/PF.spad
	@ (cd ${MID} ; 	echo ')co PF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PF.spad (SPAD from IN)>>=
${MID}/PF.spad: ${IN}/pf.spad.pamphlet
	@ echo 3176 making ${MID}/PF.spad from ${IN}/pf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PF.NRLIB ; \
	${TANGLE} -R"domain PF PrimeField" ${IN}/pf.spad.pamphlet >PF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<pf.spad.dvi (DOC from IN)>>=
${DOC}/pf.spad.dvi: ${IN}/pf.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3177 making ${DOC}/pf.spad.dvi from ${IN}/pf.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/pf.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} pf.spad ; \
	rm -f ${DOC}/pf.spad.pamphlet ; \
	rm -f ${DOC}/pf.spad.tex ; \
	rm -f ${DOC}/pf.spad )

@
\subsection{pgcd.spad \cite{1}}
<<pgcd.spad (SPAD from IN)>>=
${OUTSRC}/pgcd.spad: ${IN}/pgcd.spad.pamphlet
	@ echo 3178 making ${OUTSRC}/pgcd.spad from ${IN}/pgcd.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/pgcd.spad.pamphlet >pgcd.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PGCD.o (O from NRLIB)>>=
${OUT}/PGCD.o: ${MID}/PGCD.NRLIB
	@ echo 3179-14 making ${OUT}/PGCD.o from ${MID}/PGCD.NRLIB
	@ cp ${MID}/PGCD.NRLIB/code.o ${OUT}/PGCD.o

@
<<PGCD.NRLIB (NRLIB from MID)>>=
${MID}/PGCD.NRLIB: ${MID}/PGCD.spad
	@ echo 3180 making ${MID}/PGCD.NRLIB from ${MID}/PGCD.spad
	@ rm -f ${INT}/algebra/dbcomplete
	@ (cd ${MID} ; 	echo ')co PGCD.spad' | ${INTERPSYS} )

@
<<PGCD.spad (SPAD from IN)>>=
${MID}/PGCD.spad: ${IN}/pgcd.spad.pamphlet
	@ echo 3181 making ${MID}/PGCD.spad from ${IN}/pgcd.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PGCD.NRLIB ; \
	${TANGLE} -R"package PGCD PolynomialGcdPackage" ${IN}/pgcd.spad.pamphlet >PGCD.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<pgcd.spad.dvi (DOC from IN)>>=
${DOC}/pgcd.spad.dvi: ${IN}/pgcd.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3182 making ${DOC}/pgcd.spad.dvi from ${IN}/pgcd.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/pgcd.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} pgcd.spad ; \
	rm -f ${DOC}/pgcd.spad.pamphlet ; \
	rm -f ${DOC}/pgcd.spad.tex ; \
	rm -f ${DOC}/pgcd.spad )

@
\subsection{pgrobner.spad \cite{1}}
<<pgrobner.spad (SPAD from IN)>>=
${OUTSRC}/pgrobner.spad: ${IN}/pgrobner.spad.pamphlet
	@ echo 3183 making ${OUTSRC}/pgrobner.spad from ${IN}/pgrobner.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/pgrobner.spad.pamphlet >pgrobner.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PGROEB.o (O from NRLIB)>>=
${OUT}/PGROEB.o: ${MID}/PGROEB.NRLIB
	@ echo 3184-10 making ${OUT}/PGROEB.o from ${MID}/PGROEB.NRLIB
	@ cp ${MID}/PGROEB.NRLIB/code.o ${OUT}/PGROEB.o

@
<<PGROEB.NRLIB (NRLIB from MID)>>=
${MID}/PGROEB.NRLIB: ${MID}/PGROEB.spad
	@ echo 3185 making ${MID}/PGROEB.NRLIB from ${MID}/PGROEB.spad
	@ (cd ${MID} ; 	echo ')co PGROEB.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PGROEB.spad (SPAD from IN)>>=
${MID}/PGROEB.spad: ${IN}/pgrobner.spad.pamphlet
	@ echo 3186 making ${MID}/PGROEB.spad from ${IN}/pgrobner.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PGROEB.NRLIB ; \
	${TANGLE} -R"package PGROEB PolyGroebner" ${IN}/pgrobner.spad.pamphlet >PGROEB.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<pgrobner.spad.dvi (DOC from IN)>>=
${DOC}/pgrobner.spad.dvi: ${IN}/pgrobner.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3187 making ${DOC}/pgrobner.spad.dvi from ${IN}/pgrobner.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/pgrobner.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} pgrobner.spad ; \
	rm -f ${DOC}/pgrobner.spad.pamphlet ; \
	rm -f ${DOC}/pgrobner.spad.tex ; \
	rm -f ${DOC}/pgrobner.spad )

@
\subsection{pinterp.spad \cite{1}}
<<pinterp.spad (SPAD from IN)>>=
${OUTSRC}/pinterp.spad: ${IN}/pinterp.spad.pamphlet
	@ echo 3188 making ${OUTSRC}/pinterp.spad from ${IN}/pinterp.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/pinterp.spad.pamphlet >pinterp.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PINTERP.o (O from NRLIB)>>=
${OUT}/PINTERP.o: ${MID}/PINTERP.NRLIB
	@ echo 3189-10 making ${OUT}/PINTERP.o from ${MID}/PINTERP.NRLIB
	@ cp ${MID}/PINTERP.NRLIB/code.o ${OUT}/PINTERP.o

@
<<PINTERP.NRLIB (NRLIB from MID)>>=
${MID}/PINTERP.NRLIB: ${MID}/PINTERP.spad
	@ echo 3190 making ${MID}/PINTERP.NRLIB from ${MID}/PINTERP.spad
	@ (cd ${MID} ; 	echo ')co PINTERP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PINTERP.spad (SPAD from IN)>>=
${MID}/PINTERP.spad: ${IN}/pinterp.spad.pamphlet
	@ echo 3191 making ${MID}/PINTERP.spad from ${IN}/pinterp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PINTERP.NRLIB ; \
	${TANGLE} -R"package PINTERP PolynomialInterpolation" ${IN}/pinterp.spad.pamphlet >PINTERP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PINTERPA.o (O from NRLIB)>>=
${OUT}/PINTERPA.o: ${MID}/PINTERPA.NRLIB
	@ echo 3192-14 making ${OUT}/PINTERPA.o from ${MID}/PINTERPA.NRLIB
	@ cp ${MID}/PINTERPA.NRLIB/code.o ${OUT}/PINTERPA.o

@
<<PINTERPA.NRLIB (NRLIB from MID)>>=
${MID}/PINTERPA.NRLIB: ${MID}/PINTERPA.spad
	@ echo 3193 making ${MID}/PINTERPA.NRLIB from ${MID}/PINTERPA.spad
	@ (cd ${MID} ; 	echo ')co PINTERPA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PINTERPA.spad (SPAD from IN)>>=
${MID}/PINTERPA.spad: ${IN}/pinterp.spad.pamphlet
	@ echo 3194 making ${MID}/PINTERPA.spad from ${IN}/pinterp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PINTERPA.NRLIB ; \
	${TANGLE} -R"package PINTERPA PolynomialInterpolationAlgorithms" ${IN}/pinterp.spad.pamphlet >PINTERPA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<pinterp.spad.dvi (DOC from IN)>>=
${DOC}/pinterp.spad.dvi: ${IN}/pinterp.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3195 making ${DOC}/pinterp.spad.dvi from ${IN}/pinterp.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/pinterp.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} pinterp.spad ; \
	rm -f ${DOC}/pinterp.spad.pamphlet ; \
	rm -f ${DOC}/pinterp.spad.tex ; \
	rm -f ${DOC}/pinterp.spad )

@
\subsection{pleqn.spad \cite{1}}
<<pleqn.spad (SPAD from IN)>>=
${OUTSRC}/pleqn.spad: ${IN}/pleqn.spad.pamphlet
	@ echo 3196 making ${OUTSRC}/pleqn.spad from ${IN}/pleqn.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/pleqn.spad.pamphlet >pleqn.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PLEQN.o (O from NRLIB)>>=
${OUT}/PLEQN.o: ${MID}/PLEQN.NRLIB
	@ echo 3197-14 making ${OUT}/PLEQN.o from ${MID}/PLEQN.NRLIB
	@ cp ${MID}/PLEQN.NRLIB/code.o ${OUT}/PLEQN.o

@
<<PLEQN.NRLIB (NRLIB from MID)>>=
${MID}/PLEQN.NRLIB: ${MID}/PLEQN.spad
	@ echo 3198 making ${MID}/PLEQN.NRLIB from ${MID}/PLEQN.spad
	@ (cd ${MID} ; 	echo ')co PLEQN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PLEQN.spad (SPAD from IN)>>=
${MID}/PLEQN.spad: ${IN}/pleqn.spad.pamphlet
	@ echo 3199 making ${MID}/PLEQN.spad from ${IN}/pleqn.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PLEQN.NRLIB ; \
	${TANGLE} -R"package PLEQN ParametricLinearEquations" ${IN}/pleqn.spad.pamphlet >PLEQN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<pleqn.spad.dvi (DOC from IN)>>=
${DOC}/pleqn.spad.dvi: ${IN}/pleqn.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3200 making ${DOC}/pleqn.spad.dvi from ${IN}/pleqn.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/pleqn.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} pleqn.spad ; \
	rm -f ${DOC}/pleqn.spad.pamphlet ; \
	rm -f ${DOC}/pleqn.spad.tex ; \
	rm -f ${DOC}/pleqn.spad )

@
\subsection{plot3d.spad \cite{1}}
<<plot3d.spad (SPAD from IN)>>=
${OUTSRC}/plot3d.spad: ${IN}/plot3d.spad.pamphlet
	@ echo 3201 making ${OUTSRC}/plot3d.spad from ${IN}/plot3d.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/plot3d.spad.pamphlet >plot3d.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PLOT3D.o (O from NRLIB)>>=
${OUT}/PLOT3D.o: ${MID}/PLOT3D.NRLIB
	@ echo 3202-11 making ${OUT}/PLOT3D.o from ${MID}/PLOT3D.NRLIB
	@ cp ${MID}/PLOT3D.NRLIB/code.o ${OUT}/PLOT3D.o

@
<<PLOT3D.NRLIB (NRLIB from MID)>>=
${MID}/PLOT3D.NRLIB: ${MID}/PLOT3D.spad
	@ echo 3203 making ${MID}/PLOT3D.NRLIB from ${MID}/PLOT3D.spad
	@ (cd ${MID} ; 	echo ')co PLOT3D.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PLOT3D.spad (SPAD from IN)>>=
${MID}/PLOT3D.spad: ${IN}/plot3d.spad.pamphlet
	@ echo 3204 making ${MID}/PLOT3D.spad from ${IN}/plot3d.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PLOT3D.NRLIB ; \
	${TANGLE} -R"domain PLOT3D Plot3D" ${IN}/plot3d.spad.pamphlet >PLOT3D.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<plot3d.spad.dvi (DOC from IN)>>=
${DOC}/plot3d.spad.dvi: ${IN}/plot3d.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3205 making ${DOC}/plot3d.spad.dvi from ${IN}/plot3d.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/plot3d.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} plot3d.spad ; \
	rm -f ${DOC}/plot3d.spad.pamphlet ; \
	rm -f ${DOC}/plot3d.spad.tex ; \
	rm -f ${DOC}/plot3d.spad )

@
\subsection{plot.spad \cite{1}}
<<plot.spad (SPAD from IN)>>=
${OUTSRC}/plot.spad: ${IN}/plot.spad.pamphlet
	@ echo 3206 making ${OUTSRC}/plot.spad from ${IN}/plot.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/plot.spad.pamphlet >plot.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PLOT1.o (O from NRLIB)>>=
${OUT}/PLOT1.o: ${MID}/PLOT1.NRLIB
	@ echo 3207-1 making ${OUT}/PLOT1.o from ${MID}/PLOT1.NRLIB
	@ cp ${MID}/PLOT1.NRLIB/code.o ${OUT}/PLOT1.o

@
<<PLOT1.NRLIB (NRLIB from MID)>>=
${MID}/PLOT1.NRLIB: ${MID}/PLOT1.spad
	@ echo 3208 making ${MID}/PLOT1.NRLIB from ${MID}/PLOT1.spad
	@ (cd ${MID} ; 	echo ')co PLOT1.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PLOT1.spad (SPAD from IN)>>=
${MID}/PLOT1.spad: ${IN}/plot.spad.pamphlet
	@ echo 3209 making ${MID}/PLOT1.spad from ${IN}/plot.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PLOT1.NRLIB ; \
	${TANGLE} -R"package PLOT1 PlotFunctions1" ${IN}/plot.spad.pamphlet >PLOT1.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PLOT.o (O from NRLIB)>>=
${OUT}/PLOT.o: ${MID}/PLOT.NRLIB
	@ echo 3210-15 making ${OUT}/PLOT.o from ${MID}/PLOT.NRLIB
	@ cp ${MID}/PLOT.NRLIB/code.o ${OUT}/PLOT.o

@
<<PLOT.NRLIB (NRLIB from MID)>>=
${MID}/PLOT.NRLIB: ${MID}/PLOT.spad
	@ echo 3211 making ${MID}/PLOT.NRLIB from ${MID}/PLOT.spad
	@ (cd ${MID} ; 	echo ')co PLOT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PLOT.spad (SPAD from IN)>>=
${MID}/PLOT.spad: ${IN}/plot.spad.pamphlet
	@ echo 3212 making ${MID}/PLOT.spad from ${IN}/plot.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PLOT.NRLIB ; \
	${TANGLE} -R"domain PLOT Plot" ${IN}/plot.spad.pamphlet >PLOT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<plot.spad.dvi (DOC from IN)>>=
${DOC}/plot.spad.dvi: ${IN}/plot.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3213 making ${DOC}/plot.spad.dvi from ${IN}/plot.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/plot.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} plot.spad ; \
	rm -f ${DOC}/plot.spad.pamphlet ; \
	rm -f ${DOC}/plot.spad.tex ; \
	rm -f ${DOC}/plot.spad )

@
\subsection{plottool.spad \cite{1}}
<<plottool.spad (SPAD from IN)>>=
${OUTSRC}/plottool.spad: ${IN}/plottool.spad.pamphlet
	@ echo 3214 making ${OUTSRC}/plottool.spad from ${IN}/plottool.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/plottool.spad.pamphlet >plottool.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PLOTTOOL.o (O from NRLIB)>>=
${OUT}/PLOTTOOL.o: ${MID}/PLOTTOOL.NRLIB
	@ echo 3215-10 making ${OUT}/PLOTTOOL.o from ${MID}/PLOTTOOL.NRLIB
	@ cp ${MID}/PLOTTOOL.NRLIB/code.o ${OUT}/PLOTTOOL.o

@
<<PLOTTOOL.NRLIB (NRLIB from MID)>>=
${MID}/PLOTTOOL.NRLIB: ${MID}/PLOTTOOL.spad
	@ echo 3216 making ${MID}/PLOTTOOL.NRLIB from ${MID}/PLOTTOOL.spad
	@ (cd ${MID} ; 	echo ')co PLOTTOOL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PLOTTOOL.spad (SPAD from IN)>>=
${MID}/PLOTTOOL.spad: ${IN}/plottool.spad.pamphlet
	@ echo 3217 making ${MID}/PLOTTOOL.spad from ${IN}/plottool.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PLOTTOOL.NRLIB ; \
	${TANGLE} -R"package PLOTTOOL PlotTools" ${IN}/plottool.spad.pamphlet >PLOTTOOL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<plottool.spad.dvi (DOC from IN)>>=
${DOC}/plottool.spad.dvi: ${IN}/plottool.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3218 making ${DOC}/plottool.spad.dvi from ${IN}/plottool.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/plottool.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} plottool.spad ; \
	rm -f ${DOC}/plottool.spad.pamphlet ; \
	rm -f ${DOC}/plottool.spad.tex ; \
	rm -f ${DOC}/plottool.spad )

@
\subsection{polset.spad \cite{1}}
<<polset.spad (SPAD from IN)>>=
${OUTSRC}/polset.spad: ${IN}/polset.spad.pamphlet
	@ echo 3219 making ${OUTSRC}/polset.spad from ${IN}/polset.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/polset.spad.pamphlet >polset.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GPOLSET.o (O from NRLIB)>>=
${OUT}/GPOLSET.o: ${MID}/GPOLSET.NRLIB
	@ echo 3220-20 making ${OUT}/GPOLSET.o from ${MID}/GPOLSET.NRLIB
	@ cp ${MID}/GPOLSET.NRLIB/code.o ${OUT}/GPOLSET.o

@
<<GPOLSET.NRLIB (NRLIB from MID)>>=
${MID}/GPOLSET.NRLIB: ${MID}/GPOLSET.spad
	@ echo 3221 making ${MID}/GPOLSET.NRLIB from ${MID}/GPOLSET.spad
	@ (cd ${MID} ; 	echo ')co GPOLSET.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GPOLSET.spad (SPAD from IN)>>=
${MID}/GPOLSET.spad: ${IN}/polset.spad.pamphlet
	@ echo 3222 making ${MID}/GPOLSET.spad from ${IN}/polset.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GPOLSET.NRLIB ; \
	${TANGLE} -R"domain GPOLSET GeneralPolynomialSet" ${IN}/polset.spad.pamphlet >GPOLSET.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PSETCAT-.o (O from NRLIB)>>=
${OUT}/PSETCAT-.o: ${MID}/PSETCAT.NRLIB
	@ echo 3223-0c making ${OUT}/PSETCAT-.o from ${MID}/PSETCAT-.NRLIB
	@ cp ${MID}/PSETCAT-.NRLIB/code.o ${OUT}/PSETCAT-.o

@
<<PSETCAT-.NRLIB (NRLIB from MID)>>=
${MID}/PSETCAT-.NRLIB: ${MID}/PSETCAT.spad 
	@ echo 3224 making ${MID}/PSETCAT-.NRLIB from ${MID}/PSETCAT.spad
	@ (cd ${MID} ; 	echo ')co PSETCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PSETCAT.o (O from NRLIB)>>=
${OUT}/PSETCAT.o: ${MID}/PSETCAT.NRLIB
	@ echo 3225-0c making ${OUT}/PSETCAT.o from ${MID}/PSETCAT.NRLIB
	@ cp ${MID}/PSETCAT.NRLIB/code.o ${OUT}/PSETCAT.o

@
<<PSETCAT.NRLIB (NRLIB from MID)>>=
${MID}/PSETCAT.NRLIB: ${MID}/PSETCAT.spad
	@ echo 3226 making ${MID}/PSETCAT.NRLIB from ${MID}/PSETCAT.spad
	@ (cd ${MID} ; 	echo ')co PSETCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PSETCAT.spad (SPAD from IN)>>=
${MID}/PSETCAT.spad: ${IN}/polset.spad.pamphlet
	@ echo 3227 making ${MID}/PSETCAT.spad from ${IN}/polset.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PSETCAT.NRLIB ; \
	${TANGLE} -R"category PSETCAT PolynomialSetCategory" ${IN}/polset.spad.pamphlet >PSETCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PSETCAT-.o (BOOTSTRAP from MID)>>=
${MID}/PSETCAT-.o: ${MID}/PSETCAT-.lsp 
	@ echo 3228-0b making ${MID}/PSETCAT-.o from ${MID}/PSETCAT-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "PSETCAT-.lsp" :output-file "PSETCAT-.o"))' | ${DEPSYS} )
	@ cp ${MID}/PSETCAT-.o ${OUT}/PSETCAT-.o

@
<<PSETCAT-.lsp (LISP from IN)>>=
${MID}/PSETCAT-.lsp: ${IN}/polset.spad.pamphlet
	@ echo 3229 making ${MID}/PSETCAT-.lsp from ${IN}/polset.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PSETCAT-.NRLIB ; \
	rm -rf ${OUT}/PSETCAT-.o ; \
	${TANGLE} -R"PSETCAT-.lsp BOOTSTRAP" ${IN}/polset.spad.pamphlet >PSETCAT-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PSETCAT.o (BOOTSTRAP from MID)>>=
${MID}/PSETCAT.o: ${MID}/PSETCAT.lsp 
	@ echo 3230-0b making ${MID}/PSETCAT.o from ${MID}/PSETCAT.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "PSETCAT.lsp" :output-file "PSETCAT.o"))' | ${DEPSYS} )
	@ cp ${MID}/PSETCAT.o ${OUT}/PSETCAT.o

@
<<PSETCAT.lsp (LISP from IN)>>=
${MID}/PSETCAT.lsp: ${IN}/polset.spad.pamphlet
	@ echo 3231 making ${MID}/PSETCAT.lsp from ${IN}/polset.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PSETCAT.NRLIB ; \
	rm -rf ${OUT}/PSETCAT.o ; \
	${TANGLE} -R"PSETCAT.lsp BOOTSTRAP" ${IN}/polset.spad.pamphlet >PSETCAT.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<polset.spad.dvi (DOC from IN)>>=
${DOC}/polset.spad.dvi: ${IN}/polset.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3232 making ${DOC}/polset.spad.dvi from ${IN}/polset.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/polset.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} polset.spad ; \
	rm -f ${DOC}/polset.spad.pamphlet ; \
	rm -f ${DOC}/polset.spad.tex ; \
	rm -f ${DOC}/polset.spad )

@
\subsection{poltopol.spad \cite{1}}
<<poltopol.spad (SPAD from IN)>>=
${OUTSRC}/poltopol.spad: ${IN}/poltopol.spad.pamphlet
	@ echo 3233 making ${OUTSRC}/poltopol.spad from ${IN}/poltopol.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/poltopol.spad.pamphlet >poltopol.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MPC2.o (O from NRLIB)>>=
${OUT}/MPC2.o: ${MID}/MPC2.NRLIB
	@ echo 3234-14 making ${OUT}/MPC2.o from ${MID}/MPC2.NRLIB
	@ cp ${MID}/MPC2.NRLIB/code.o ${OUT}/MPC2.o

@
<<MPC2.NRLIB (NRLIB from MID)>>=
${MID}/MPC2.NRLIB: ${MID}/MPC2.spad
	@ echo 3235 making ${MID}/MPC2.NRLIB from ${MID}/MPC2.spad
	@ (cd ${MID} ; 	echo ')co MPC2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MPC2.spad (SPAD from IN)>>=
${MID}/MPC2.spad: ${IN}/poltopol.spad.pamphlet
	@ echo 3236 making ${MID}/MPC2.spad from ${IN}/poltopol.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MPC2.NRLIB ; \
	${TANGLE} -R"package MPC2 MPolyCatFunctions2" ${IN}/poltopol.spad.pamphlet >MPC2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MPC3.o (O from NRLIB)>>=
${OUT}/MPC3.o: ${MID}/MPC3.NRLIB
	@ echo 3237-14 making ${OUT}/MPC3.o from ${MID}/MPC3.NRLIB
	@ cp ${MID}/MPC3.NRLIB/code.o ${OUT}/MPC3.o

@
<<MPC3.NRLIB (NRLIB from MID)>>=
${MID}/MPC3.NRLIB: ${MID}/MPC3.spad
	@ echo 3238 making ${MID}/MPC3.NRLIB from ${MID}/MPC3.spad
	@ (cd ${MID} ; 	echo ')co MPC3.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MPC3.spad (SPAD from IN)>>=
${MID}/MPC3.spad: ${IN}/poltopol.spad.pamphlet
	@ echo 3239 making ${MID}/MPC3.spad from ${IN}/poltopol.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MPC3.NRLIB ; \
	${TANGLE} -R"package MPC3 MPolyCatFunctions3" ${IN}/poltopol.spad.pamphlet >MPC3.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<POLTOPOL.o (O from NRLIB)>>=
${OUT}/POLTOPOL.o: ${MID}/POLTOPOL.NRLIB
	@ echo 3240-14 making ${OUT}/POLTOPOL.o from ${MID}/POLTOPOL.NRLIB
	@ cp ${MID}/POLTOPOL.NRLIB/code.o ${OUT}/POLTOPOL.o

@
<<POLTOPOL.NRLIB (NRLIB from MID)>>=
${MID}/POLTOPOL.NRLIB: ${MID}/POLTOPOL.spad
	@ echo 3241 making ${MID}/POLTOPOL.NRLIB from ${MID}/POLTOPOL.spad
	@ (cd ${MID} ; 	echo ')co POLTOPOL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<POLTOPOL.spad (SPAD from IN)>>=
${MID}/POLTOPOL.spad: ${IN}/poltopol.spad.pamphlet
	@ echo 3242 making ${MID}/POLTOPOL.spad from ${IN}/poltopol.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf POLTOPOL.NRLIB ; \
	${TANGLE} -R"package POLTOPOL PolToPol" ${IN}/poltopol.spad.pamphlet >POLTOPOL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<poltopol.spad.dvi (DOC from IN)>>=
${DOC}/poltopol.spad.dvi: ${IN}/poltopol.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3243 making ${DOC}/poltopol.spad.dvi from ${IN}/poltopol.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/poltopol.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} poltopol.spad ; \
	rm -f ${DOC}/poltopol.spad.pamphlet ; \
	rm -f ${DOC}/poltopol.spad.tex ; \
	rm -f ${DOC}/poltopol.spad )

@
\subsection{polycat.spad \cite{1}}
<<polycat.spad (SPAD from IN)>>=
${OUTSRC}/polycat.spad: ${IN}/polycat.spad.pamphlet
	@ echo 3244 making ${OUTSRC}/polycat.spad from ${IN}/polycat.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/polycat.spad.pamphlet >polycat.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<AMR-.o (O from NRLIB)>>=
${OUT}/AMR-.o: ${MID}/AMR.NRLIB
	@ echo 3245-9 making ${OUT}/AMR-.o from ${MID}/AMR-.NRLIB
	@ cp ${MID}/AMR-.NRLIB/code.o ${OUT}/AMR-.o

@
<<AMR-.NRLIB (NRLIB from MID)>>=
${MID}/AMR-.NRLIB: ${MID}/AMR.spad 
	@ echo 3246 making ${MID}/AMR-.NRLIB from ${MID}/AMR.spad
	@ (cd ${MID} ; 	echo ')co AMR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<AMR.o (O from NRLIB)>>=
${OUT}/AMR.o: ${MID}/AMR.NRLIB
	@ echo 3247-9 making ${OUT}/AMR.o from ${MID}/AMR.NRLIB
	@ cp ${MID}/AMR.NRLIB/code.o ${OUT}/AMR.o

@
<<AMR.NRLIB (NRLIB from MID)>>=
${MID}/AMR.NRLIB: ${MID}/AMR.spad
	@ echo 3248 making ${MID}/AMR.NRLIB from ${MID}/AMR.spad
	@ (cd ${MID} ; 	echo ')co AMR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<AMR.spad (SPAD from IN)>>=
${MID}/AMR.spad: ${IN}/polycat.spad.pamphlet
	@ echo 3249 making ${MID}/AMR.spad from ${IN}/polycat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf AMR.NRLIB ; \
	${TANGLE} -R"category AMR AbelianMonoidRing" ${IN}/polycat.spad.pamphlet >AMR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COMMUPC.o (O from NRLIB)>>=
${OUT}/COMMUPC.o: ${MID}/COMMUPC.NRLIB
	@ echo 3250-14 making ${OUT}/COMMUPC.o from ${MID}/COMMUPC.NRLIB
	@ cp ${MID}/COMMUPC.NRLIB/code.o ${OUT}/COMMUPC.o

@
<<COMMUPC.NRLIB (NRLIB from MID)>>=
${MID}/COMMUPC.NRLIB: ${MID}/COMMUPC.spad
	@ echo 3251 making ${MID}/COMMUPC.NRLIB from ${MID}/COMMUPC.spad
	@ (cd ${MID} ; 	echo ')co COMMUPC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<COMMUPC.spad (SPAD from IN)>>=
${MID}/COMMUPC.spad: ${IN}/polycat.spad.pamphlet
	@ echo 3252 making ${MID}/COMMUPC.spad from ${IN}/polycat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf COMMUPC.NRLIB ; \
	${TANGLE} -R"package COMMUPC CommuteUnivariatePolynomialCategory" ${IN}/polycat.spad.pamphlet >COMMUPC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FAMR-.o (O from NRLIB)>>=
${OUT}/FAMR-.o: ${MID}/FAMR.NRLIB
	@ echo 3253-10 making ${OUT}/FAMR-.o from ${MID}/FAMR-.NRLIB
	@ cp ${MID}/FAMR-.NRLIB/code.o ${OUT}/FAMR-.o

@
<<FAMR-.NRLIB (NRLIB from MID)>>=
${MID}/FAMR-.NRLIB: ${MID}/FAMR.spad 
	@ echo 3254 making ${MID}/FAMR-.NRLIB from ${MID}/FAMR.spad
	@ (cd ${MID} ; 	echo ')co FAMR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FAMR.o (O from NRLIB)>>=
${OUT}/FAMR.o: ${MID}/FAMR.NRLIB
	@ echo 3255-10 making ${OUT}/FAMR.o from ${MID}/FAMR.NRLIB
	@ cp ${MID}/FAMR.NRLIB/code.o ${OUT}/FAMR.o

@
<<FAMR.NRLIB (NRLIB from MID)>>=
${MID}/FAMR.NRLIB: ${MID}/FAMR.spad
	@ echo 3256 making ${MID}/FAMR.NRLIB from ${MID}/FAMR.spad
	@ (cd ${MID} ; 	echo ')co FAMR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FAMR.spad (SPAD from IN)>>=
${MID}/FAMR.spad: ${IN}/polycat.spad.pamphlet
	@ echo 3257 making ${MID}/FAMR.spad from ${IN}/polycat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FAMR.NRLIB ; \
	${TANGLE} -R"category FAMR FiniteAbelianMonoidRing" ${IN}/polycat.spad.pamphlet >FAMR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<POLYCAT-.o (O from NRLIB)>>=
${OUT}/POLYCAT-.o: ${MID}/POLYCAT.NRLIB
	@ echo 3258-0c making ${OUT}/POLYCAT-.o from ${MID}/POLYCAT-.NRLIB
	@ cp ${MID}/POLYCAT-.NRLIB/code.o ${OUT}/POLYCAT-.o

@
<<POLYCAT-.NRLIB (NRLIB from MID)>>=
${MID}/POLYCAT-.NRLIB: ${MID}/POLYCAT.spad 
	@ echo 3259 making ${MID}/POLYCAT-.NRLIB from ${MID}/POLYCAT.spad
	@ (cd ${MID} ; 	echo ')co POLYCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<POLYCAT.o (O from NRLIB)>>=
${OUT}/POLYCAT.o: ${MID}/POLYCAT.NRLIB
	@ echo 3260-0c making ${OUT}/POLYCAT.o from ${MID}/POLYCAT.NRLIB
	@ cp ${MID}/POLYCAT.NRLIB/code.o ${OUT}/POLYCAT.o

@
<<POLYCAT.NRLIB (NRLIB from MID)>>=
${MID}/POLYCAT.NRLIB: ${MID}/POLYCAT.spad
	@ echo 3261 making ${MID}/POLYCAT.NRLIB from ${MID}/POLYCAT.spad
	@ (cd ${MID} ; 	echo ')co POLYCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<POLYCAT.spad (SPAD from IN)>>=
${MID}/POLYCAT.spad: ${IN}/polycat.spad.pamphlet
	@ echo 3262 making ${MID}/POLYCAT.spad from ${IN}/polycat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf POLYCAT.NRLIB ; \
	${TANGLE} -R"category POLYCAT PolynomialCategory" ${IN}/polycat.spad.pamphlet >POLYCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<POLYCAT-.o (BOOTSTRAP from MID)>>=
${MID}/POLYCAT-.o: ${MID}/POLYCAT-.lsp 
	@ echo 3263-0b making ${MID}/POLYCAT-.o from ${MID}/POLYCAT-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "POLYCAT-.lsp" :output-file "POLYCAT-.o"))' | ${DEPSYS} )
	@ cp ${MID}/POLYCAT-.o ${OUT}/POLYCAT-.o

@
<<POLYCAT-.lsp (LISP from IN)>>=
${MID}/POLYCAT-.lsp: ${IN}/polycat.spad.pamphlet
	@ echo 3264 making ${MID}/POLYCAT-.lsp from ${IN}/polycat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf POLYCAT-.NRLIB ; \
	rm -rf ${OUT}/POLYCAT-.o ; \
	${TANGLE} -R"POLYCAT-.lsp BOOTSTRAP" ${IN}/polycat.spad.pamphlet >POLYCAT-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<POLYCAT.o (BOOTSTRAP from MID)>>=
${MID}/POLYCAT.o: ${MID}/POLYCAT.lsp
	@ echo 3265-0b making ${MID}/POLYCAT.o from ${MID}/POLYCAT.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "POLYCAT.lsp" :output-file "POLYCAT.o"))' | ${DEPSYS} )
	@ cp ${MID}/POLYCAT.o ${OUT}/POLYCAT.o

@
<<POLYCAT.lsp (LISP from IN)>>=
${MID}/POLYCAT.lsp: ${IN}/polycat.spad.pamphlet
	@ echo 3266 making ${MID}/POLYCAT.lsp from ${IN}/polycat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf POLYCAT.NRLIB ; \
	rm -rf ${OUT}/POLYCAT.o ; \
	${TANGLE} -R"POLYCAT.lsp BOOTSTRAP" ${IN}/polycat.spad.pamphlet >POLYCAT.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<POLYLIFT.o (O from NRLIB)>>=
${OUT}/POLYLIFT.o: ${MID}/POLYLIFT.NRLIB
	@ echo 3267-14 making ${OUT}/POLYLIFT.o from ${MID}/POLYLIFT.NRLIB
	@ cp ${MID}/POLYLIFT.NRLIB/code.o ${OUT}/POLYLIFT.o

@
<<POLYLIFT.NRLIB (NRLIB from MID)>>=
${MID}/POLYLIFT.NRLIB: ${MID}/POLYLIFT.spad
	@ echo 3268 making ${MID}/POLYLIFT.NRLIB from ${MID}/POLYLIFT.spad
	@ (cd ${MID} ; 	echo ')co POLYLIFT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<POLYLIFT.spad (SPAD from IN)>>=
${MID}/POLYLIFT.spad: ${IN}/polycat.spad.pamphlet
	@ echo 3269 making ${MID}/POLYLIFT.spad from ${IN}/polycat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf POLYLIFT.NRLIB ; \
	${TANGLE} -R"package POLYLIFT PolynomialCategoryLifting" ${IN}/polycat.spad.pamphlet >POLYLIFT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPOLYC-.o (O from NRLIB)>>=
${OUT}/UPOLYC-.o: ${MID}/UPOLYC.NRLIB
	@ echo 3270-0c making ${OUT}/UPOLYC-.o from ${MID}/UPOLYC-.NRLIB
	@ cp ${MID}/UPOLYC-.NRLIB/code.o ${OUT}/UPOLYC-.o

@
<<UPOLYC-.NRLIB (NRLIB from MID)>>=
${MID}/UPOLYC-.NRLIB: ${MID}/UPOLYC.spad 
	@ echo 3271 making ${MID}/UPOLYC-.NRLIB from ${MID}/UPOLYC.spad
	@ (cd ${MID} ; 	echo ')co UPOLYC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPOLYC.o (O from NRLIB)>>=
${OUT}/UPOLYC.o: ${MID}/UPOLYC.NRLIB
	@ echo 3272-0c making ${OUT}/UPOLYC.o from ${MID}/UPOLYC.NRLIB
	@ cp ${MID}/UPOLYC.NRLIB/code.o ${OUT}/UPOLYC.o

@
<<UPOLYC.NRLIB (NRLIB from MID)>>=
${MID}/UPOLYC.NRLIB: ${MID}/UPOLYC.spad
	@ echo 3273 making ${MID}/UPOLYC.NRLIB from ${MID}/UPOLYC.spad
	@ (cd ${MID} ; 	echo ')co UPOLYC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPOLYC.spad (SPAD from IN)>>=
${MID}/UPOLYC.spad: ${IN}/polycat.spad.pamphlet
	@ echo 3274 making ${MID}/UPOLYC.spad from ${IN}/polycat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UPOLYC.NRLIB ; \
	${TANGLE} -R"category UPOLYC UnivariatePolynomialCategory" ${IN}/polycat.spad.pamphlet >UPOLYC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPOLYC-.o (BOOTSTRAP from MID)>>=
${MID}/UPOLYC-.o: ${MID}/UPOLYC-.lsp 
	@ echo 3275-0b making ${MID}/UPOLYC-.o from ${MID}/UPOLYC-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "UPOLYC-.lsp" :output-file "UPOLYC-.o"))' | ${DEPSYS} )
	@ cp ${MID}/UPOLYC-.o ${OUT}/UPOLYC-.o

@
<<UPOLYC-.lsp (LISP from IN)>>=
${MID}/UPOLYC-.lsp: ${IN}/polycat.spad.pamphlet
	@ echo 3276 making ${MID}/UPOLYC-.lsp from ${IN}/polycat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UPOLYC-.NRLIB ; \
	rm -rf ${OUT}/UPOLYC-.o ; \
	${TANGLE} -R"UPOLYC-.lsp BOOTSTRAP" ${IN}/polycat.spad.pamphlet >UPOLYC-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPOLYC.o (BOOTSTRAP from MID)>>=
${MID}/UPOLYC.o: ${MID}/UPOLYC.lsp
	@ echo 3277-0b making ${MID}/UPOLYC.o from ${MID}/UPOLYC.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "UPOLYC.lsp" :output-file "UPOLYC.o"))' | ${DEPSYS} )
	@ cp ${MID}/UPOLYC.o ${OUT}/UPOLYC.o

@
<<UPOLYC.lsp (LISP from IN)>>=
${MID}/UPOLYC.lsp: ${IN}/polycat.spad.pamphlet
	@ echo 3278 making ${MID}/UPOLYC.lsp from ${IN}/polycat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UPOLYC.NRLIB ; \
	rm -rf ${OUT}/UPOLYC.o ; \
	${TANGLE} -R"UPOLYC.lsp BOOTSTRAP" ${IN}/polycat.spad.pamphlet >UPOLYC.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPOLYC2.o (O from NRLIB)>>=
${OUT}/UPOLYC2.o: ${MID}/UPOLYC2.NRLIB
	@ echo 3279-14 making ${OUT}/UPOLYC2.o from ${MID}/UPOLYC2.NRLIB
	@ cp ${MID}/UPOLYC2.NRLIB/code.o ${OUT}/UPOLYC2.o

@
<<UPOLYC2.NRLIB (NRLIB from MID)>>=
${MID}/UPOLYC2.NRLIB: ${MID}/UPOLYC2.spad
	@ echo 3280 making ${MID}/UPOLYC2.NRLIB from ${MID}/UPOLYC2.spad
	@ (cd ${MID} ; 	echo ')co UPOLYC2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPOLYC2.spad (SPAD from IN)>>=
${MID}/UPOLYC2.spad: ${IN}/polycat.spad.pamphlet
	@ echo 3281 making ${MID}/UPOLYC2.spad from ${IN}/polycat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UPOLYC2.NRLIB ; \
	${TANGLE} -R"package UPOLYC2 UnivariatePolynomialCategoryFunctions2" ${IN}/polycat.spad.pamphlet >UPOLYC2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<polycat.spad.dvi (DOC from IN)>>=
${DOC}/polycat.spad.dvi: ${IN}/polycat.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3282 making ${DOC}/polycat.spad.dvi from ${IN}/polycat.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/polycat.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} polycat.spad ; \
	rm -f ${DOC}/polycat.spad.pamphlet ; \
	rm -f ${DOC}/polycat.spad.tex ; \
	rm -f ${DOC}/polycat.spad )

@
\subsection{poly.spad \cite{1}}
<<poly.spad (SPAD from IN)>>=
${OUTSRC}/poly.spad: ${IN}/poly.spad.pamphlet
	@ echo 3283 making ${OUTSRC}/poly.spad from ${IN}/poly.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/poly.spad.pamphlet >poly.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FM.o (O from NRLIB)>>=
${OUT}/FM.o: ${MID}/FM.NRLIB
	@ echo 3284-10 making ${OUT}/FM.o from ${MID}/FM.NRLIB
	@ cp ${MID}/FM.NRLIB/code.o ${OUT}/FM.o

@
<<FM.NRLIB (NRLIB from MID)>>=
${MID}/FM.NRLIB: ${MID}/FM.spad
	@ echo 3285 making ${MID}/FM.NRLIB from ${MID}/FM.spad
	@ (cd ${MID} ; 	echo ')co FM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FM.spad (SPAD from IN)>>=
${MID}/FM.spad: ${IN}/poly.spad.pamphlet
	@ echo 3286 making ${MID}/FM.spad from ${IN}/poly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FM.NRLIB ; \
	${TANGLE} -R"domain FM FreeModule" ${IN}/poly.spad.pamphlet >FM.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<POLY2UP.o (O from NRLIB)>>=
${OUT}/POLY2UP.o: ${MID}/POLY2UP.NRLIB
	@ echo 3287-14 making ${OUT}/POLY2UP.o from ${MID}/POLY2UP.NRLIB
	@ cp ${MID}/POLY2UP.NRLIB/code.o ${OUT}/POLY2UP.o

@
<<POLY2UP.NRLIB (NRLIB from MID)>>=
${MID}/POLY2UP.NRLIB: ${MID}/POLY2UP.spad
	@ echo 3288 making ${MID}/POLY2UP.NRLIB from ${MID}/POLY2UP.spad
	@ (cd ${MID} ; 	echo ')co POLY2UP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<POLY2UP.spad (SPAD from IN)>>=
${MID}/POLY2UP.spad: ${IN}/poly.spad.pamphlet
	@ echo 3289 making ${MID}/POLY2UP.spad from ${IN}/poly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf POLY2UP.NRLIB ; \
	${TANGLE} -R"package POLY2UP PolynomialToUnivariatePolynomial" ${IN}/poly.spad.pamphlet >POLY2UP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PR.o (O from NRLIB)>>=
${OUT}/PR.o: ${MID}/PR.NRLIB
	@ echo 3290-11 making ${OUT}/PR.o from ${MID}/PR.NRLIB
	@ cp ${MID}/PR.NRLIB/code.o ${OUT}/PR.o

@
<<PR.NRLIB (NRLIB from MID)>>=
${MID}/PR.NRLIB: ${MID}/PR.spad
	@ echo 3291 making ${MID}/PR.NRLIB from ${MID}/PR.spad
	@ (cd ${MID} ; 	echo ')co PR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PR.spad (SPAD from IN)>>=
${MID}/PR.spad: ${IN}/poly.spad.pamphlet
	@ echo 3292 making ${MID}/PR.spad from ${IN}/poly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PR.NRLIB ; \
	${TANGLE} -R"domain PR PolynomialRing" ${IN}/poly.spad.pamphlet >PR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PSQFR.o (O from NRLIB)>>=
${OUT}/PSQFR.o: ${MID}/PSQFR.NRLIB
	@ echo 3293-14 making ${OUT}/PSQFR.o from ${MID}/PSQFR.NRLIB
	@ cp ${MID}/PSQFR.NRLIB/code.o ${OUT}/PSQFR.o

@
<<PSQFR.NRLIB (NRLIB from MID)>>=
${MID}/PSQFR.NRLIB: ${MID}/PSQFR.spad
	@ echo 3294 making ${MID}/PSQFR.NRLIB from ${MID}/PSQFR.spad
	@ (cd ${MID} ; 	echo ')co PSQFR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PSQFR.spad (SPAD from IN)>>=
${MID}/PSQFR.spad: ${IN}/poly.spad.pamphlet
	@ echo 3295 making ${MID}/PSQFR.spad from ${IN}/poly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PSQFR.NRLIB ; \
	${TANGLE} -R"package PSQFR PolynomialSquareFree" ${IN}/poly.spad.pamphlet >PSQFR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SUP.o (O from NRLIB)>>=
${OUT}/SUP.o: ${MID}/SUP.NRLIB
	@ echo 3296-14 making ${OUT}/SUP.o from ${MID}/SUP.NRLIB
	@ cp ${MID}/SUP.NRLIB/code.o ${OUT}/SUP.o

@
<<SUP.NRLIB (NRLIB from MID)>>=
${MID}/SUP.NRLIB: ${MID}/SUP.spad
	@ echo 3297 making ${MID}/SUP.NRLIB from ${MID}/SUP.spad
	@ (cd ${MID} ; 	echo ')co SUP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SUP.spad (SPAD from IN)>>=
${MID}/SUP.spad: ${IN}/poly.spad.pamphlet
	@ echo 3298 making ${MID}/SUP.spad from ${IN}/poly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SUP.NRLIB ; \
	${TANGLE} -R"domain SUP SparseUnivariatePolynomial" ${IN}/poly.spad.pamphlet >SUP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SUP2.o (O from NRLIB)>>=
${OUT}/SUP2.o: ${MID}/SUP2.NRLIB
	@ echo 3299-5 making ${OUT}/SUP2.o from ${MID}/SUP2.NRLIB
	@ cp ${MID}/SUP2.NRLIB/code.o ${OUT}/SUP2.o

@
<<SUP2.NRLIB (NRLIB from MID)>>=
${MID}/SUP2.NRLIB: ${MID}/SUP2.spad
	@ echo 3300 making ${MID}/SUP2.NRLIB from ${MID}/SUP2.spad
	@ (cd ${MID} ; 	echo ')co SUP2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SUP2.spad (SPAD from IN)>>=
${MID}/SUP2.spad: ${IN}/poly.spad.pamphlet
	@ echo 3301 making ${MID}/SUP2.spad from ${IN}/poly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SUP2.NRLIB ; \
	${TANGLE} -R"package SUP2 SparseUnivariatePolynomialFunctions2" ${IN}/poly.spad.pamphlet >SUP2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UP.o (O from NRLIB)>>=
${OUT}/UP.o: ${MID}/UP.NRLIB
	@ echo 3302-14 making ${OUT}/UP.o from ${MID}/UP.NRLIB
	@ cp ${MID}/UP.NRLIB/code.o ${OUT}/UP.o

@
<<UP.NRLIB (NRLIB from MID)>>=
${MID}/UP.NRLIB: ${MID}/UP.spad
	@ echo 3303 making ${MID}/UP.NRLIB from ${MID}/UP.spad
	@ (cd ${MID} ; 	echo ')co UP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UP.spad (SPAD from IN)>>=
${MID}/UP.spad: ${IN}/poly.spad.pamphlet
	@ echo 3304 making ${MID}/UP.spad from ${IN}/poly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UP.NRLIB ; \
	${TANGLE} -R"domain UP UnivariatePolynomial" ${IN}/poly.spad.pamphlet >UP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPMP.o (O from NRLIB)>>=
${OUT}/UPMP.o: ${MID}/UPMP.NRLIB
	@ echo 3305-14 making ${OUT}/UPMP.o from ${MID}/UPMP.NRLIB
	@ cp ${MID}/UPMP.NRLIB/code.o ${OUT}/UPMP.o

@
<<UPMP.NRLIB (NRLIB from MID)>>=
${MID}/UPMP.NRLIB: ${MID}/UPMP.spad
	@ echo 3306 making ${MID}/UPMP.NRLIB from ${MID}/UPMP.spad
	@ (cd ${MID} ; 	echo ')co UPMP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPMP.spad (SPAD from IN)>>=
${MID}/UPMP.spad: ${IN}/poly.spad.pamphlet
	@ echo 3307 making ${MID}/UPMP.spad from ${IN}/poly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UPMP.NRLIB ; \
	${TANGLE} -R"package UPMP UnivariatePolynomialMultiplicationPackage" ${IN}/poly.spad.pamphlet >UPMP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UP2.o (O from NRLIB)>>=
${OUT}/UP2.o: ${MID}/UP2.NRLIB
	@ echo 3308-5 making ${OUT}/UP2.o from ${MID}/UP2.NRLIB
	@ cp ${MID}/UP2.NRLIB/code.o ${OUT}/UP2.o

@
<<UP2.NRLIB (NRLIB from MID)>>=
${MID}/UP2.NRLIB: ${MID}/UP2.spad
	@ echo 3309 making ${MID}/UP2.NRLIB from ${MID}/UP2.spad
	@ (cd ${MID} ; 	echo ')co UP2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UP2.spad (SPAD from IN)>>=
${MID}/UP2.spad: ${IN}/poly.spad.pamphlet
	@ echo 3310 making ${MID}/UP2.spad from ${IN}/poly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UP2.NRLIB ; \
	${TANGLE} -R"package UP2 UnivariatePolynomialFunctions2" ${IN}/poly.spad.pamphlet >UP2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPSQFREE.o (O from NRLIB)>>=
${OUT}/UPSQFREE.o: ${MID}/UPSQFREE.NRLIB
	@ echo 3311-14 making ${OUT}/UPSQFREE.o from ${MID}/UPSQFREE.NRLIB
	@ cp ${MID}/UPSQFREE.NRLIB/code.o ${OUT}/UPSQFREE.o

@
<<UPSQFREE.NRLIB (NRLIB from MID)>>=
${MID}/UPSQFREE.NRLIB: ${MID}/UPSQFREE.spad
	@ echo 3312 making ${MID}/UPSQFREE.NRLIB from ${MID}/UPSQFREE.spad
	@ (cd ${MID} ; 	echo ')co UPSQFREE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPSQFREE.spad (SPAD from IN)>>=
${MID}/UPSQFREE.spad: ${IN}/poly.spad.pamphlet
	@ echo 3313 making ${MID}/UPSQFREE.spad from ${IN}/poly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UPSQFREE.NRLIB ; \
	${TANGLE} -R"package UPSQFREE UnivariatePolynomialSquareFree" ${IN}/poly.spad.pamphlet >UPSQFREE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<poly.spad.dvi (DOC from IN)>>=
${DOC}/poly.spad.dvi: ${IN}/poly.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3314 making ${DOC}/poly.spad.dvi from ${IN}/poly.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/poly.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} poly.spad ; \
	rm -f ${DOC}/poly.spad.pamphlet ; \
	rm -f ${DOC}/poly.spad.tex ; \
	rm -f ${DOC}/poly.spad )

@
\subsection{primelt.spad \cite{1}}
<<primelt.spad (SPAD from IN)>>=
${OUTSRC}/primelt.spad: ${IN}/primelt.spad.pamphlet
	@ echo 3315 making ${OUTSRC}/primelt.spad from ${IN}/primelt.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/primelt.spad.pamphlet >primelt.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FSPRMELT.o (O from NRLIB)>>=
${OUT}/FSPRMELT.o: ${MID}/FSPRMELT.NRLIB
	@ echo 3316-22 making ${OUT}/FSPRMELT.o from ${MID}/FSPRMELT.NRLIB
	@ cp ${MID}/FSPRMELT.NRLIB/code.o ${OUT}/FSPRMELT.o

@
<<FSPRMELT.NRLIB (NRLIB from MID)>>=
${MID}/FSPRMELT.NRLIB: ${MID}/FSPRMELT.spad
	@ echo 3317 making ${MID}/FSPRMELT.NRLIB from ${MID}/FSPRMELT.spad
	@ (cd ${MID} ; 	echo ')co FSPRMELT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FSPRMELT.spad (SPAD from IN)>>=
${MID}/FSPRMELT.spad: ${IN}/primelt.spad.pamphlet
	@ echo 3318 making ${MID}/FSPRMELT.spad from ${IN}/primelt.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FSPRMELT.NRLIB ; \
	${TANGLE} -R"package FSPRMELT FunctionSpacePrimitiveElement" ${IN}/primelt.spad.pamphlet >FSPRMELT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PRIMELT.o (O from NRLIB)>>=
${OUT}/PRIMELT.o: ${MID}/PRIMELT.NRLIB
	@ echo 3319-19 making ${OUT}/PRIMELT.o from ${MID}/PRIMELT.NRLIB
	@ cp ${MID}/PRIMELT.NRLIB/code.o ${OUT}/PRIMELT.o

@
<<PRIMELT.NRLIB (NRLIB from MID)>>=
${MID}/PRIMELT.NRLIB: ${MID}/PRIMELT.spad
	@ echo 3320 making ${MID}/PRIMELT.NRLIB from ${MID}/PRIMELT.spad
	@ (cd ${MID} ; 	echo ')co PRIMELT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PRIMELT.spad (SPAD from IN)>>=
${MID}/PRIMELT.spad: ${IN}/primelt.spad.pamphlet
	@ echo 3321 making ${MID}/PRIMELT.spad from ${IN}/primelt.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PRIMELT.NRLIB ; \
	${TANGLE} -R"package PRIMELT PrimitiveElement" ${IN}/primelt.spad.pamphlet >PRIMELT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<primelt.spad.dvi (DOC from IN)>>=
${DOC}/primelt.spad.dvi: ${IN}/primelt.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3322 making ${DOC}/primelt.spad.dvi from ${IN}/primelt.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/primelt.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} primelt.spad ; \
	rm -f ${DOC}/primelt.spad.pamphlet ; \
	rm -f ${DOC}/primelt.spad.tex ; \
	rm -f ${DOC}/primelt.spad )

@
\subsection{print.spad \cite{1}}
<<print.spad (SPAD from IN)>>=
${OUTSRC}/print.spad: ${IN}/print.spad.pamphlet
	@ echo 3323 making ${OUTSRC}/print.spad from ${IN}/print.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/print.spad.pamphlet >print.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PRINT.o (O from NRLIB)>>=
${OUT}/PRINT.o: ${MID}/PRINT.NRLIB
	@ echo 3324-0 making ${OUT}/PRINT.o from ${MID}/PRINT.NRLIB
	@ cp ${MID}/PRINT.NRLIB/code.o ${OUT}/PRINT.o

@
<<PRINT.NRLIB (NRLIB from MID)>>=
${MID}/PRINT.NRLIB: ${MID}/PRINT.spad
	@ echo 3325 making ${MID}/PRINT.NRLIB from ${MID}/PRINT.spad
	@ (cd ${MID} ; 	echo ')co PRINT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PRINT.spad (SPAD from IN)>>=
${MID}/PRINT.spad: ${IN}/print.spad.pamphlet
	@ echo 3326 making ${MID}/PRINT.spad from ${IN}/print.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PRINT.NRLIB ; \
	${TANGLE} -R"package PRINT PrintPackage" ${IN}/print.spad.pamphlet >PRINT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<print.spad.dvi (DOC from IN)>>=
${DOC}/print.spad.dvi: ${IN}/print.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3327 making ${DOC}/print.spad.dvi from ${IN}/print.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/print.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} print.spad ; \
	rm -f ${DOC}/print.spad.pamphlet ; \
	rm -f ${DOC}/print.spad.tex ; \
	rm -f ${DOC}/print.spad )

@
\subsection{product.spad \cite{1}}
<<product.spad (SPAD from IN)>>=
${OUTSRC}/product.spad: ${IN}/product.spad.pamphlet
	@ echo 3328 making ${OUTSRC}/product.spad from ${IN}/product.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/product.spad.pamphlet >product.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PRODUCT.o (O from NRLIB)>>=
${OUT}/PRODUCT.o: ${MID}/PRODUCT.NRLIB
	@ echo 3329-9 making ${OUT}/PRODUCT.o from ${MID}/PRODUCT.NRLIB
	@ cp ${MID}/PRODUCT.NRLIB/code.o ${OUT}/PRODUCT.o

@
<<PRODUCT.NRLIB (NRLIB from MID)>>=
${MID}/PRODUCT.NRLIB: ${MID}/PRODUCT.spad
	@ echo 3330 making ${MID}/PRODUCT.NRLIB from ${MID}/PRODUCT.spad
	@ (cd ${MID} ; 	echo ')co PRODUCT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PRODUCT.spad (SPAD from IN)>>=
${MID}/PRODUCT.spad: ${IN}/product.spad.pamphlet
	@ echo 3331 making ${MID}/PRODUCT.spad from ${IN}/product.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PRODUCT.NRLIB ; \
	${TANGLE} -R"domain PRODUCT Product" ${IN}/product.spad.pamphlet >PRODUCT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<product.spad.dvi (DOC from IN)>>=
${DOC}/product.spad.dvi: ${IN}/product.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3332 making ${DOC}/product.spad.dvi from ${IN}/product.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/product.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} product.spad ; \
	rm -f ${DOC}/product.spad.pamphlet ; \
	rm -f ${DOC}/product.spad.tex ; \
	rm -f ${DOC}/product.spad )

@
\subsection{prs.spad \cite{1}}
<<prs.spad (SPAD from IN)>>=
${OUTSRC}/prs.spad: ${IN}/prs.spad.pamphlet
	@ echo 3333 making ${OUTSRC}/prs.spad from ${IN}/prs.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/prs.spad.pamphlet >prs.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PRS.o (O from NRLIB)>>=
${OUT}/PRS.o: ${MID}/PRS.NRLIB
	@ echo 3334-14 making ${OUT}/PRS.o from ${MID}/PRS.NRLIB
	@ cp ${MID}/PRS.NRLIB/code.o ${OUT}/PRS.o

@
<<PRS.NRLIB (NRLIB from MID)>>=
${MID}/PRS.NRLIB: ${MID}/PRS.spad
	@ echo 3335 making ${MID}/PRS.NRLIB from ${MID}/PRS.spad
	@ (cd ${MID} ; 	echo ')co PRS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PRS.spad (SPAD from IN)>>=
${MID}/PRS.spad: ${IN}/prs.spad.pamphlet
	@ echo 3336 making ${MID}/PRS.spad from ${IN}/prs.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PRS.NRLIB ; \
	${TANGLE} -R"package PRS PseudoRemainderSequence" ${IN}/prs.spad.pamphlet >PRS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<prs.spad.dvi (DOC from IN)>>=
${DOC}/prs.spad.dvi: ${IN}/prs.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3337 making ${DOC}/prs.spad.dvi from ${IN}/prs.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/prs.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} prs.spad ; \
	rm -f ${DOC}/prs.spad.pamphlet ; \
	rm -f ${DOC}/prs.spad.tex ; \
	rm -f ${DOC}/prs.spad )

@
\subsection{prtition.spad \cite{1}}
<<prtition.spad (SPAD from IN)>>=
${OUTSRC}/prtition.spad: ${IN}/prtition.spad.pamphlet
	@ echo 3338 making ${OUTSRC}/prtition.spad from ${IN}/prtition.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/prtition.spad.pamphlet >prtition.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SYMPOLY.o (O from NRLIB)>>=
${OUT}/SYMPOLY.o: ${MID}/SYMPOLY.NRLIB
	@ echo 3339-11 making ${OUT}/SYMPOLY.o from ${MID}/SYMPOLY.NRLIB
	@ cp ${MID}/SYMPOLY.NRLIB/code.o ${OUT}/SYMPOLY.o

@
<<SYMPOLY.NRLIB (NRLIB from MID)>>=
${MID}/SYMPOLY.NRLIB: ${MID}/SYMPOLY.spad
	@ echo 3340 making ${MID}/SYMPOLY.NRLIB from ${MID}/SYMPOLY.spad
	@ (cd ${MID} ; 	echo ')co SYMPOLY.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SYMPOLY.spad (SPAD from IN)>>=
${MID}/SYMPOLY.spad: ${IN}/prtition.spad.pamphlet
	@ echo 3341 making ${MID}/SYMPOLY.spad from ${IN}/prtition.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SYMPOLY.NRLIB ; \
	${TANGLE} -R"domain SYMPOLY SymmetricPolynomial" ${IN}/prtition.spad.pamphlet >SYMPOLY.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PRTITION.o (O from NRLIB)>>=
${OUT}/PRTITION.o: ${MID}/PRTITION.NRLIB
	@ echo 3342-10 making ${OUT}/PRTITION.o from ${MID}/PRTITION.NRLIB
	@ cp ${MID}/PRTITION.NRLIB/code.o ${OUT}/PRTITION.o

@
<<PRTITION.NRLIB (NRLIB from MID)>>=
${MID}/PRTITION.NRLIB: ${MID}/PRTITION.spad
	@ echo 3343 making ${MID}/PRTITION.NRLIB from ${MID}/PRTITION.spad
	@ (cd ${MID} ; 	echo ')co PRTITION.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PRTITION.spad (SPAD from IN)>>=
${MID}/PRTITION.spad: ${IN}/prtition.spad.pamphlet
	@ echo 3344 making ${MID}/PRTITION.spad from ${IN}/prtition.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PRTITION.NRLIB ; \
	${TANGLE} -R"domain PRTITION Partition" ${IN}/prtition.spad.pamphlet >PRTITION.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<prtition.spad.dvi (DOC from IN)>>=
${DOC}/prtition.spad.dvi: ${IN}/prtition.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3345 making ${DOC}/prtition.spad.dvi from ${IN}/prtition.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/prtition.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} prtition.spad ; \
	rm -f ${DOC}/prtition.spad.pamphlet ; \
	rm -f ${DOC}/prtition.spad.tex ; \
	rm -f ${DOC}/prtition.spad )

@
\subsection{pscat.spad \cite{1}}
<<pscat.spad (SPAD from IN)>>=
${OUTSRC}/pscat.spad: ${IN}/pscat.spad.pamphlet
	@ echo 3346 making ${OUTSRC}/pscat.spad from ${IN}/pscat.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/pscat.spad.pamphlet >pscat.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MTSCAT.o (O from NRLIB)>>=
${OUT}/MTSCAT.o: ${MID}/MTSCAT.NRLIB
	@ echo 3347-0c making ${OUT}/MTSCAT.o from ${MID}/MTSCAT.NRLIB
	@ cp ${MID}/MTSCAT.NRLIB/code.o ${OUT}/MTSCAT.o

@
<<MTSCAT.NRLIB (NRLIB from MID)>>=
${MID}/MTSCAT.NRLIB: ${MID}/MTSCAT.spad
	@ echo 3348 making ${MID}/MTSCAT.NRLIB from ${MID}/MTSCAT.spad
	@ (cd ${MID} ; 	echo ')co MTSCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MTSCAT.spad (SPAD from IN)>>=
${MID}/MTSCAT.spad: ${IN}/pscat.spad.pamphlet
	@ echo 3349 making ${MID}/MTSCAT.spad from ${IN}/pscat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MTSCAT.NRLIB ; \
	${TANGLE} -R"category MTSCAT MultivariateTaylorSeriesCategory" ${IN}/pscat.spad.pamphlet >MTSCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MTSCAT.o (BOOTSTRAP from MID)>>=
${MID}/MTSCAT.o: ${MID}/MTSCAT.lsp
	@ echo 3350-0b making ${MID}/MTSCAT.o from ${MID}/MTSCAT.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "MTSCAT.lsp" :output-file "MTSCAT.o"))' | ${DEPSYS} )
	@ cp ${MID}/MTSCAT.o ${OUT}/MTSCAT.o

@
<<MTSCAT.lsp (LISP from IN)>>=
${MID}/MTSCAT.lsp: ${IN}/pscat.spad.pamphlet
	@ echo 3351 making ${MID}/MTSCAT.lsp from ${IN}/pscat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MTSCAT.NRLIB ; \
	rm -rf ${OUT}/MTSCAT.o ; \
	${TANGLE} -R"MTSCAT.lsp BOOTSTRAP" ${IN}/pscat.spad.pamphlet >MTSCAT.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PSCAT-.o (O from NRLIB)>>=
${OUT}/PSCAT-.o: ${MID}/PSCAT.NRLIB
	@ echo 3352-10 making ${OUT}/PSCAT-.o from ${MID}/PSCAT-.NRLIB
	@ cp ${MID}/PSCAT-.NRLIB/code.o ${OUT}/PSCAT-.o

@
<<PSCAT-.NRLIB (NRLIB from MID)>>=
${MID}/PSCAT-.NRLIB: ${MID}/PSCAT.spad 
	@ echo 3353 making ${MID}/PSCAT-.NRLIB from ${MID}/PSCAT.spad
	@ (cd ${MID} ; 	echo ')co PSCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PSCAT.o (O from NRLIB)>>=
${OUT}/PSCAT.o: ${MID}/PSCAT.NRLIB
	@ echo 3354-10 making ${OUT}/PSCAT.o from ${MID}/PSCAT.NRLIB
	@ cp ${MID}/PSCAT.NRLIB/code.o ${OUT}/PSCAT.o

@
<<PSCAT.NRLIB (NRLIB from MID)>>=
${MID}/PSCAT.NRLIB: ${MID}/PSCAT.spad
	@ echo 3355 making ${MID}/PSCAT.NRLIB from ${MID}/PSCAT.spad
	@ (cd ${MID} ; 	echo ')co PSCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PSCAT.spad (SPAD from IN)>>=
${MID}/PSCAT.spad: ${IN}/pscat.spad.pamphlet
	@ echo 3356 making ${MID}/PSCAT.spad from ${IN}/pscat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PSCAT.NRLIB ; \
	${TANGLE} -R"category PSCAT PowerSeriesCategory" ${IN}/pscat.spad.pamphlet >PSCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ULSCAT.o (O from NRLIB)>>=
${OUT}/ULSCAT.o: ${MID}/ULSCAT.NRLIB
	@ echo 3357-0c making ${OUT}/ULSCAT.o from ${MID}/ULSCAT.NRLIB
	@ cp ${MID}/ULSCAT.NRLIB/code.o ${OUT}/ULSCAT.o

@
<<ULSCAT.NRLIB (NRLIB from MID)>>=
${MID}/ULSCAT.NRLIB: ${MID}/ULSCAT.spad
	@ echo 3358 making ${MID}/ULSCAT.NRLIB from ${MID}/ULSCAT.spad
	@ (cd ${MID} ; 	echo ')co ULSCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ULSCAT.spad (SPAD from IN)>>=
${MID}/ULSCAT.spad: ${IN}/pscat.spad.pamphlet
	@ echo 3359 making ${MID}/ULSCAT.spad from ${IN}/pscat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ULSCAT.NRLIB ; \
	${TANGLE} -R"category ULSCAT UnivariateLaurentSeriesCategory" ${IN}/pscat.spad.pamphlet >ULSCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ULSCAT.o (BOOTSTRAP from MID)>>=
${MID}/ULSCAT.o: ${MID}/ULSCAT.lsp
	@ echo 3360-0b making ${MID}/ULSCAT.o from ${MID}/ULSCAT.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "ULSCAT.lsp" :output-file "ULSCAT.o"))' | ${DEPSYS} )
	@ cp ${MID}/ULSCAT.o ${OUT}/ULSCAT.o

@
<<ULSCAT.lsp (LISP from IN)>>=
${MID}/ULSCAT.lsp: ${IN}/pscat.spad.pamphlet
	@ echo 3361 making ${MID}/ULSCAT.lsp from ${IN}/pscat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ULSCAT.NRLIB ; \
	rm -rf ${OUT}/ULSCAT.o ; \
	${TANGLE} -R"ULSCAT.lsp BOOTSTRAP" ${IN}/pscat.spad.pamphlet >ULSCAT.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPSCAT-.o (O from NRLIB)>>=
${OUT}/UPSCAT-.o: ${MID}/UPSCAT.NRLIB
	@ echo 3362-11 making ${OUT}/UPSCAT-.o from ${MID}/UPSCAT-.NRLIB
	@ cp ${MID}/UPSCAT-.NRLIB/code.o ${OUT}/UPSCAT-.o

@
<<UPSCAT-.NRLIB (NRLIB from MID)>>=
${MID}/UPSCAT-.NRLIB: ${MID}/UPSCAT.spad 
	@ echo 3363 making ${MID}/UPSCAT-.NRLIB from ${MID}/UPSCAT.spad
	@ (cd ${MID} ; 	echo ')co UPSCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPSCAT.o (O from NRLIB)>>=
${OUT}/UPSCAT.o: ${MID}/UPSCAT.NRLIB
	@ echo 3364-11 making ${OUT}/UPSCAT.o from ${MID}/UPSCAT.NRLIB
	@ cp ${MID}/UPSCAT.NRLIB/code.o ${OUT}/UPSCAT.o

@
<<UPSCAT.NRLIB (NRLIB from MID)>>=
${MID}/UPSCAT.NRLIB: ${MID}/UPSCAT.spad
	@ echo 3365 making ${MID}/UPSCAT.NRLIB from ${MID}/UPSCAT.spad
	@ (cd ${MID} ; 	echo ')co UPSCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPSCAT.spad (SPAD from IN)>>=
${MID}/UPSCAT.spad: ${IN}/pscat.spad.pamphlet
	@ echo 3366 making ${MID}/UPSCAT.spad from ${IN}/pscat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UPSCAT.NRLIB ; \
	${TANGLE} -R"category UPSCAT UnivariatePowerSeriesCategory" ${IN}/pscat.spad.pamphlet >UPSCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPXSCAT.o (O from NRLIB)>>=
${OUT}/UPXSCAT.o: ${MID}/UPXSCAT.NRLIB
	@ echo 3367-14 making ${OUT}/UPXSCAT.o from ${MID}/UPXSCAT.NRLIB
	@ cp ${MID}/UPXSCAT.NRLIB/code.o ${OUT}/UPXSCAT.o

@
<<UPXSCAT.NRLIB (NRLIB from MID)>>=
${MID}/UPXSCAT.NRLIB: ${MID}/UPXSCAT.spad
	@ echo 3368 making ${MID}/UPXSCAT.NRLIB from ${MID}/UPXSCAT.spad
	@ (cd ${MID} ; 	echo ')co UPXSCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPXSCAT.spad (SPAD from IN)>>=
${MID}/UPXSCAT.spad: ${IN}/pscat.spad.pamphlet
	@ echo 3369 making ${MID}/UPXSCAT.spad from ${IN}/pscat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UPXSCAT.NRLIB ; \
	${TANGLE} -R"category UPXSCAT UnivariatePuiseuxSeriesCategory" ${IN}/pscat.spad.pamphlet >UPXSCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UTSCAT-.o (O from NRLIB)>>=
${OUT}/UTSCAT-.o: ${MID}/UTSCAT.NRLIB
	@ echo 3370-19 making ${OUT}/UTSCAT-.o from ${MID}/UTSCAT-.NRLIB
	@ cp ${MID}/UTSCAT-.NRLIB/code.o ${OUT}/UTSCAT-.o

@
<<UTSCAT-.NRLIB (NRLIB from MID)>>=
${MID}/UTSCAT-.NRLIB: ${MID}/UTSCAT.spad 
	@ echo 3371 making ${MID}/UTSCAT-.NRLIB from ${MID}/UTSCAT.spad
	@ (cd ${MID} ; 	echo ')co UTSCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UTSCAT.o (O from NRLIB)>>=
${OUT}/UTSCAT.o: ${MID}/UTSCAT.NRLIB
	@ echo 3372-19 making ${OUT}/UTSCAT.o from ${MID}/UTSCAT.NRLIB
	@ cp ${MID}/UTSCAT.NRLIB/code.o ${OUT}/UTSCAT.o

@
<<UTSCAT.NRLIB (NRLIB from MID)>>=
${MID}/UTSCAT.NRLIB: ${MID}/UTSCAT.spad
	@ echo 3373 making ${MID}/UTSCAT.NRLIB from ${MID}/UTSCAT.spad
	@ (cd ${MID} ; 	echo ')co UTSCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UTSCAT.spad (SPAD from IN)>>=
${MID}/UTSCAT.spad: ${IN}/pscat.spad.pamphlet
	@ echo 3374 making ${MID}/UTSCAT.spad from ${IN}/pscat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UTSCAT.NRLIB ; \
	${TANGLE} -R"category UTSCAT UnivariateTaylorSeriesCategory" ${IN}/pscat.spad.pamphlet >UTSCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<pscat.spad.dvi (DOC from IN)>>=
${DOC}/pscat.spad.dvi: ${IN}/pscat.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3375 making ${DOC}/pscat.spad.dvi from ${IN}/pscat.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/pscat.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} pscat.spad ; \
	rm -f ${DOC}/pscat.spad.pamphlet ; \
	rm -f ${DOC}/pscat.spad.tex ; \
	rm -f ${DOC}/pscat.spad )

@
\subsection{pseudolin.spad \cite{1}}
<<pseudolin.spad (SPAD from IN)>>=
${OUTSRC}/pseudolin.spad: ${IN}/pseudolin.spad.pamphlet
	@ echo 3376 making ${OUTSRC}/pseudolin.spad from ${IN}/pseudolin.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/pseudolin.spad.pamphlet >pseudolin.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PSEUDLIN.o (O from NRLIB)>>=
${OUT}/PSEUDLIN.o: ${MID}/PSEUDLIN.NRLIB
	@ echo 3377-13 making ${OUT}/PSEUDLIN.o from ${MID}/PSEUDLIN.NRLIB
	@ cp ${MID}/PSEUDLIN.NRLIB/code.o ${OUT}/PSEUDLIN.o

@
<<PSEUDLIN.NRLIB (NRLIB from MID)>>=
${MID}/PSEUDLIN.NRLIB: ${MID}/PSEUDLIN.spad
	@ echo 3378 making ${MID}/PSEUDLIN.NRLIB from ${MID}/PSEUDLIN.spad
	@ (cd ${MID} ; 	echo ')co PSEUDLIN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PSEUDLIN.spad (SPAD from IN)>>=
${MID}/PSEUDLIN.spad: ${IN}/pseudolin.spad.pamphlet
	@ echo 3379 making ${MID}/PSEUDLIN.spad from ${IN}/pseudolin.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PSEUDLIN.NRLIB ; \
	${TANGLE} -R"package PSEUDLIN PseudoLinearNormalForm" ${IN}/pseudolin.spad.pamphlet >PSEUDLIN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<pseudolin.spad.dvi (DOC from IN)>>=
${DOC}/pseudolin.spad.dvi: ${IN}/pseudolin.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3380 making ${DOC}/pseudolin.spad.dvi from ${IN}/pseudolin.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/pseudolin.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} pseudolin.spad ; \
	rm -f ${DOC}/pseudolin.spad.pamphlet ; \
	rm -f ${DOC}/pseudolin.spad.tex ; \
	rm -f ${DOC}/pseudolin.spad )

@
\subsection{ptranfn.spad \cite{1}}
<<ptranfn.spad (SPAD from IN)>>=
${OUTSRC}/ptranfn.spad: ${IN}/ptranfn.spad.pamphlet
	@ echo 3381 making ${OUTSRC}/ptranfn.spad from ${IN}/ptranfn.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/ptranfn.spad.pamphlet >ptranfn.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PTRANFN.o (O from NRLIB)>>=
${OUT}/PTRANFN.o: ${MID}/PTRANFN.NRLIB
	@ echo 3382-0 making ${OUT}/PTRANFN.o from ${MID}/PTRANFN.NRLIB
	@ cp ${MID}/PTRANFN.NRLIB/code.o ${OUT}/PTRANFN.o

@
<<PTRANFN.NRLIB (NRLIB from MID)>>=
${MID}/PTRANFN.NRLIB: ${MID}/PTRANFN.spad
	@ echo 3383 making ${MID}/PTRANFN.NRLIB from ${MID}/PTRANFN.spad
	@ (cd ${MID} ; 	echo ')co PTRANFN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PTRANFN.spad (SPAD from IN)>>=
${MID}/PTRANFN.spad: ${IN}/ptranfn.spad.pamphlet
	@ echo 3384 making ${MID}/PTRANFN.spad from ${IN}/ptranfn.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PTRANFN.NRLIB ; \
	${TANGLE} -R"category PTRANFN PartialTranscendentalFunctions" ${IN}/ptranfn.spad.pamphlet >PTRANFN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ptranfn.spad.dvi (DOC from IN)>>=
${DOC}/ptranfn.spad.dvi: ${IN}/ptranfn.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3385 making ${DOC}/ptranfn.spad.dvi from ${IN}/ptranfn.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/ptranfn.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} ptranfn.spad ; \
	rm -f ${DOC}/ptranfn.spad.pamphlet ; \
	rm -f ${DOC}/ptranfn.spad.tex ; \
	rm -f ${DOC}/ptranfn.spad )

@
\subsection{puiseux.spad \cite{1}}
<<puiseux.spad (SPAD from IN)>>=
${OUTSRC}/puiseux.spad: ${IN}/puiseux.spad.pamphlet
	@ echo 3386 making ${OUTSRC}/puiseux.spad from ${IN}/puiseux.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/puiseux.spad.pamphlet >puiseux.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPXS.o (O from NRLIB)>>=
${OUT}/UPXS.o: ${MID}/UPXS.NRLIB
	@ echo 3387-21 making ${OUT}/UPXS.o from ${MID}/UPXS.NRLIB
	@ cp ${MID}/UPXS.NRLIB/code.o ${OUT}/UPXS.o

@
<<UPXS.NRLIB (NRLIB from MID)>>=
${MID}/UPXS.NRLIB: ${MID}/UPXS.spad
	@ echo 3388 making ${MID}/UPXS.NRLIB from ${MID}/UPXS.spad
	@ (cd ${MID} ; 	echo ')co UPXS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPXS.spad (SPAD from IN)>>=
${MID}/UPXS.spad: ${IN}/puiseux.spad.pamphlet
	@ echo 3389 making ${MID}/UPXS.spad from ${IN}/puiseux.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UPXS.NRLIB ; \
	${TANGLE} -R"domain UPXS UnivariatePuiseuxSeries" ${IN}/puiseux.spad.pamphlet >UPXS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPXSCCA-.o (O from NRLIB)>>=
${OUT}/UPXSCCA-.o: ${MID}/UPXSCCA.NRLIB
	@ echo 3390-15 making ${OUT}/UPXSCCA-.o from ${MID}/UPXSCCA-.NRLIB
	@ cp ${MID}/UPXSCCA-.NRLIB/code.o ${OUT}/UPXSCCA-.o

@
<<UPXSCCA-.NRLIB (NRLIB from MID)>>=
${MID}/UPXSCCA-.NRLIB: ${MID}/UPXSCCA.spad 
	@ echo 3391 making ${MID}/UPXSCCA-.NRLIB from ${MID}/UPXSCCA.spad
	@ (cd ${MID} ; 	echo ')co UPXSCCA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPXSCCA.o (O from NRLIB)>>=
${OUT}/UPXSCCA.o: ${MID}/UPXSCCA.NRLIB
	@ echo 3392-15 making ${OUT}/UPXSCCA.o from ${MID}/UPXSCCA.NRLIB
	@ cp ${MID}/UPXSCCA.NRLIB/code.o ${OUT}/UPXSCCA.o

@
<<UPXSCCA.NRLIB (NRLIB from MID)>>=
${MID}/UPXSCCA.NRLIB: ${MID}/UPXSCCA.spad
	@ echo 3393 making ${MID}/UPXSCCA.NRLIB from ${MID}/UPXSCCA.spad
	@ (cd ${MID} ; 	echo ')co UPXSCCA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPXSCCA.spad (SPAD from IN)>>=
${MID}/UPXSCCA.spad: ${IN}/puiseux.spad.pamphlet
	@ echo 3394 making ${MID}/UPXSCCA.spad from ${IN}/puiseux.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UPXSCCA.NRLIB ; \
	${TANGLE} -R"category UPXSCCA UnivariatePuiseuxSeriesConstructorCategory" ${IN}/puiseux.spad.pamphlet >UPXSCCA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPXSCONS.o (O from NRLIB)>>=
${OUT}/UPXSCONS.o: ${MID}/UPXSCONS.NRLIB
	@ echo 3395-21 making ${OUT}/UPXSCONS.o from ${MID}/UPXSCONS.NRLIB
	@ cp ${MID}/UPXSCONS.NRLIB/code.o ${OUT}/UPXSCONS.o

@
<<UPXSCONS.NRLIB (NRLIB from MID)>>=
${MID}/UPXSCONS.NRLIB: ${MID}/UPXSCONS.spad
	@ echo 3396 making ${MID}/UPXSCONS.NRLIB from ${MID}/UPXSCONS.spad
	@ (cd ${MID} ; 	echo ')co UPXSCONS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPXSCONS.spad (SPAD from IN)>>=
${MID}/UPXSCONS.spad: ${IN}/puiseux.spad.pamphlet
	@ echo 3397 making ${MID}/UPXSCONS.spad from ${IN}/puiseux.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UPXSCONS.NRLIB ; \
	${TANGLE} -R"domain UPXSCONS UnivariatePuiseuxSeriesConstructor" ${IN}/puiseux.spad.pamphlet >UPXSCONS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPXS2.o (O from NRLIB)>>=
${OUT}/UPXS2.o: ${MID}/UPXS2.NRLIB
	@ echo 3398-9 making ${OUT}/UPXS2.o from ${MID}/UPXS2.NRLIB
	@ cp ${MID}/UPXS2.NRLIB/code.o ${OUT}/UPXS2.o

@
<<UPXS2.NRLIB (NRLIB from MID)>>=
${MID}/UPXS2.NRLIB: ${MID}/UPXS2.spad
	@ echo 3399 making ${MID}/UPXS2.NRLIB from ${MID}/UPXS2.spad
	@ (cd ${MID} ; 	echo ')co UPXS2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPXS2.spad (SPAD from IN)>>=
${MID}/UPXS2.spad: ${IN}/puiseux.spad.pamphlet
	@ echo 3400 making ${MID}/UPXS2.spad from ${IN}/puiseux.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UPXS2.NRLIB ; \
	${TANGLE} -R"package UPXS2 UnivariatePuiseuxSeriesFunctions2" ${IN}/puiseux.spad.pamphlet >UPXS2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<puiseux.spad.dvi (DOC from IN)>>=
${DOC}/puiseux.spad.dvi: ${IN}/puiseux.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3401 making ${DOC}/puiseux.spad.dvi from ${IN}/puiseux.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/puiseux.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} puiseux.spad ; \
	rm -f ${DOC}/puiseux.spad.pamphlet ; \
	rm -f ${DOC}/puiseux.spad.tex ; \
	rm -f ${DOC}/puiseux.spad )

@
\subsection{qalgset.spad \cite{1}}
<<qalgset.spad (SPAD from IN)>>=
${OUTSRC}/qalgset.spad: ${IN}/qalgset.spad.pamphlet
	@ echo 3402 making ${OUTSRC}/qalgset.spad from ${IN}/qalgset.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/qalgset.spad.pamphlet >qalgset.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<QALGSET.o (O from NRLIB)>>=
${OUT}/QALGSET.o: ${MID}/QALGSET.NRLIB
	@ echo 3403-14 making ${OUT}/QALGSET.o from ${MID}/QALGSET.NRLIB
	@ cp ${MID}/QALGSET.NRLIB/code.o ${OUT}/QALGSET.o

@
<<QALGSET.NRLIB (NRLIB from MID)>>=
${MID}/QALGSET.NRLIB: ${MID}/QALGSET.spad
	@ echo 3404 making ${MID}/QALGSET.NRLIB from ${MID}/QALGSET.spad
	@ (cd ${MID} ; 	echo ')co QALGSET.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<QALGSET.spad (SPAD from IN)>>=
${MID}/QALGSET.spad: ${IN}/qalgset.spad.pamphlet
	@ echo 3405 making ${MID}/QALGSET.spad from ${IN}/qalgset.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf QALGSET.NRLIB ; \
	${TANGLE} -R"domain QALGSET QuasiAlgebraicSet" ${IN}/qalgset.spad.pamphlet >QALGSET.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<QALGSET2.o (O from NRLIB)>>=
${OUT}/QALGSET2.o: ${MID}/QALGSET2.NRLIB
	@ echo 3406-19 making ${OUT}/QALGSET2.o from ${MID}/QALGSET2.NRLIB
	@ cp ${MID}/QALGSET2.NRLIB/code.o ${OUT}/QALGSET2.o

@
<<QALGSET2.NRLIB (NRLIB from MID)>>=
${MID}/QALGSET2.NRLIB: ${MID}/QALGSET2.spad
	@ echo 3407 making ${MID}/QALGSET2.NRLIB from ${MID}/QALGSET2.spad
	@ (cd ${MID} ; 	echo ')co QALGSET2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<QALGSET2.spad (SPAD from IN)>>=
${MID}/QALGSET2.spad: ${IN}/qalgset.spad.pamphlet
	@ echo 3408 making ${MID}/QALGSET2.spad from ${IN}/qalgset.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf QALGSET2.NRLIB ; \
	${TANGLE} -R"package QALGSET2 QuasiAlgebraicSet2" ${IN}/qalgset.spad.pamphlet >QALGSET2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<qalgset.spad.dvi (DOC from IN)>>=
${DOC}/qalgset.spad.dvi: ${IN}/qalgset.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3409 making ${DOC}/qalgset.spad.dvi from ${IN}/qalgset.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/qalgset.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} qalgset.spad ; \
	rm -f ${DOC}/qalgset.spad.pamphlet ; \
	rm -f ${DOC}/qalgset.spad.tex ; \
	rm -f ${DOC}/qalgset.spad )

@
\subsection{quat.spad \cite{1}}
<<quat.spad (SPAD from IN)>>=
${OUTSRC}/quat.spad: ${IN}/quat.spad.pamphlet
	@ echo 3410 making ${OUTSRC}/quat.spad from ${IN}/quat.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/quat.spad.pamphlet >quat.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<QUAT.o (O from NRLIB)>>=
${OUT}/QUAT.o: ${MID}/QUAT.NRLIB
	@ echo 3411-20 making ${OUT}/QUAT.o from ${MID}/QUAT.NRLIB
	@ cp ${MID}/QUAT.NRLIB/code.o ${OUT}/QUAT.o

@
<<QUAT.NRLIB (NRLIB from MID)>>=
${MID}/QUAT.NRLIB: ${MID}/QUAT.spad
	@ echo 3412 making ${MID}/QUAT.NRLIB from ${MID}/QUAT.spad
	@ (cd ${MID} ; 	echo ')co QUAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<QUAT.spad (SPAD from IN)>>=
${MID}/QUAT.spad: ${IN}/quat.spad.pamphlet
	@ echo 3413 making ${MID}/QUAT.spad from ${IN}/quat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf QUAT.NRLIB ; \
	${TANGLE} -R"domain QUAT Quaternion" ${IN}/quat.spad.pamphlet >QUAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<QUATCAT-.o (O from NRLIB)>>=
${OUT}/QUATCAT-.o: ${MID}/QUATCAT.NRLIB
	@ echo 3414-19 making ${OUT}/QUATCAT-.o from ${MID}/QUATCAT-.NRLIB
	@ cp ${MID}/QUATCAT-.NRLIB/code.o ${OUT}/QUATCAT-.o

@
<<QUATCAT-.NRLIB (NRLIB from MID)>>=
${MID}/QUATCAT-.NRLIB: ${MID}/QUATCAT.spad 
	@ echo 3415 making ${MID}/QUATCAT-.NRLIB from ${MID}/QUATCAT.spad
	@ rm -f ${INT}/algebra/dbcomplete
	@ (cd ${MID} ; 	echo ')co QUATCAT.spad' | ${INTERPSYS} )

@
<<QUATCAT.o (O from NRLIB)>>=
${OUT}/QUATCAT.o: ${MID}/QUATCAT.NRLIB
	@ echo 3416-19 making ${OUT}/QUATCAT.o from ${MID}/QUATCAT.NRLIB
	@ cp ${MID}/QUATCAT.NRLIB/code.o ${OUT}/QUATCAT.o

@
<<QUATCAT.NRLIB (NRLIB from MID)>>=
${MID}/QUATCAT.NRLIB: ${MID}/QUATCAT.spad
	@ echo 3417 making ${MID}/QUATCAT.NRLIB from ${MID}/QUATCAT.spad
	@ (cd ${MID} ; 	echo ')co QUATCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<QUATCAT.spad (SPAD from IN)>>=
${MID}/QUATCAT.spad: ${IN}/quat.spad.pamphlet
	@ echo 3418 making ${MID}/QUATCAT.spad from ${IN}/quat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf QUATCAT.NRLIB ; \
	${TANGLE} -R"category QUATCAT QuaternionCategory" ${IN}/quat.spad.pamphlet >QUATCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<QUATCT2.o (O from NRLIB)>>=
${OUT}/QUATCT2.o: ${MID}/QUATCT2.NRLIB
	@ echo 3419-20 making ${OUT}/QUATCT2.o from ${MID}/QUATCT2.NRLIB
	@ cp ${MID}/QUATCT2.NRLIB/code.o ${OUT}/QUATCT2.o

@
<<QUATCT2.NRLIB (NRLIB from MID)>>=
${MID}/QUATCT2.NRLIB: ${MID}/QUATCT2.spad
	@ echo 3420 making ${MID}/QUATCT2.NRLIB from ${MID}/QUATCT2.spad
	@ (cd ${MID} ; 	echo ')co QUATCT2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<QUATCT2.spad (SPAD from IN)>>=
${MID}/QUATCT2.spad: ${IN}/quat.spad.pamphlet
	@ echo 3421 making ${MID}/QUATCT2.spad from ${IN}/quat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf QUATCT2.NRLIB ; \
	${TANGLE} -R"package QUATCT2 QuaternionCategoryFunctions2" ${IN}/quat.spad.pamphlet >QUATCT2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<quat.spad.dvi (DOC from IN)>>=
${DOC}/quat.spad.dvi: ${IN}/quat.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3422 making ${DOC}/quat.spad.dvi from ${IN}/quat.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/quat.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} quat.spad ; \
	rm -f ${DOC}/quat.spad.pamphlet ; \
	rm -f ${DOC}/quat.spad.tex ; \
	rm -f ${DOC}/quat.spad )

@
\subsection{radeigen.spad \cite{1}}
<<radeigen.spad (SPAD from IN)>>=
${OUTSRC}/radeigen.spad: ${IN}/radeigen.spad.pamphlet
	@ echo 3423 making ${OUTSRC}/radeigen.spad from ${IN}/radeigen.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/radeigen.spad.pamphlet >radeigen.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<REP.o (O from NRLIB)>>=
${OUT}/REP.o: ${MID}/REP.NRLIB
	@ echo 3424-21 making ${OUT}/REP.o from ${MID}/REP.NRLIB
	@ cp ${MID}/REP.NRLIB/code.o ${OUT}/REP.o

@
<<REP.NRLIB (NRLIB from MID)>>=
${MID}/REP.NRLIB: ${MID}/REP.spad
	@ echo 3425 making ${MID}/REP.NRLIB from ${MID}/REP.spad
	@ (cd ${MID} ; 	echo ')co REP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<REP.spad (SPAD from IN)>>=
${MID}/REP.spad: ${IN}/radeigen.spad.pamphlet
	@ echo 3426 making ${MID}/REP.spad from ${IN}/radeigen.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf REP.NRLIB ; \
	${TANGLE} -R"package REP RadicalEigenPackage" ${IN}/radeigen.spad.pamphlet >REP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<radeigen.spad.dvi (DOC from IN)>>=
${DOC}/radeigen.spad.dvi: ${IN}/radeigen.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3427 making ${DOC}/radeigen.spad.dvi from ${IN}/radeigen.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/radeigen.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} radeigen.spad ; \
	rm -f ${DOC}/radeigen.spad.pamphlet ; \
	rm -f ${DOC}/radeigen.spad.tex ; \
	rm -f ${DOC}/radeigen.spad )

@
\subsection{radix.spad \cite{1}}
<<radix.spad (SPAD from IN)>>=
${OUTSRC}/radix.spad: ${IN}/radix.spad.pamphlet
	@ echo 3428 making ${OUTSRC}/radix.spad from ${IN}/radix.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/radix.spad.pamphlet >radix.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BINARY.o (O from NRLIB)>>=
${OUT}/BINARY.o: ${MID}/BINARY.NRLIB
	@ echo 3429-14 making ${OUT}/BINARY.o from ${MID}/BINARY.NRLIB
	@ cp ${MID}/BINARY.NRLIB/code.o ${OUT}/BINARY.o

@
<<BINARY.NRLIB (NRLIB from MID)>>=
${MID}/BINARY.NRLIB: ${MID}/BINARY.spad
	@ echo 3430 making ${MID}/BINARY.NRLIB from ${MID}/BINARY.spad
	@ (cd ${MID} ; 	echo ')co BINARY.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BINARY.spad (SPAD from IN)>>=
${MID}/BINARY.spad: ${IN}/radix.spad.pamphlet
	@ echo 3431 making ${MID}/BINARY.spad from ${IN}/radix.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf BINARY.NRLIB ; \
	${TANGLE} -R"domain BINARY BinaryExpansion" ${IN}/radix.spad.pamphlet >BINARY.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DECIMAL.o (O from NRLIB)>>=
${OUT}/DECIMAL.o: ${MID}/DECIMAL.NRLIB
	@ echo 3432-14 making ${OUT}/DECIMAL.o from ${MID}/DECIMAL.NRLIB
	@ cp ${MID}/DECIMAL.NRLIB/code.o ${OUT}/DECIMAL.o

@
<<DECIMAL.NRLIB (NRLIB from MID)>>=
${MID}/DECIMAL.NRLIB: ${MID}/DECIMAL.spad
	@ echo 3433 making ${MID}/DECIMAL.NRLIB from ${MID}/DECIMAL.spad
	@ (cd ${MID} ; 	echo ')co DECIMAL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DECIMAL.spad (SPAD from IN)>>=
${MID}/DECIMAL.spad: ${IN}/radix.spad.pamphlet
	@ echo 3434 making ${MID}/DECIMAL.spad from ${IN}/radix.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DECIMAL.NRLIB ; \
	${TANGLE} -R"domain DECIMAL DecimalExpansion" ${IN}/radix.spad.pamphlet >DECIMAL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<HEXADEC.o (O from NRLIB)>>=
${OUT}/HEXADEC.o: ${MID}/HEXADEC.NRLIB
	@ echo 3435-14 making ${OUT}/HEXADEC.o from ${MID}/HEXADEC.NRLIB
	@ cp ${MID}/HEXADEC.NRLIB/code.o ${OUT}/HEXADEC.o

@
<<HEXADEC.NRLIB (NRLIB from MID)>>=
${MID}/HEXADEC.NRLIB: ${MID}/HEXADEC.spad
	@ echo 3436 making ${MID}/HEXADEC.NRLIB from ${MID}/HEXADEC.spad
	@ (cd ${MID} ; 	echo ')co HEXADEC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<HEXADEC.spad (SPAD from IN)>>=
${MID}/HEXADEC.spad: ${IN}/radix.spad.pamphlet
	@ echo 3437 making ${MID}/HEXADEC.spad from ${IN}/radix.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf HEXADEC.NRLIB ; \
	${TANGLE} -R"domain HEXADEC HexadecimalExpansion" ${IN}/radix.spad.pamphlet >HEXADEC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RADIX.o (O from NRLIB)>>=
${OUT}/RADIX.o: ${MID}/RADIX.NRLIB
	@ echo 3438-14 making ${OUT}/RADIX.o from ${MID}/RADIX.NRLIB
	@ cp ${MID}/RADIX.NRLIB/code.o ${OUT}/RADIX.o

@
<<RADIX.NRLIB (NRLIB from MID)>>=
${MID}/RADIX.NRLIB: ${MID}/RADIX.spad
	@ echo 3439 making ${MID}/RADIX.NRLIB from ${MID}/RADIX.spad
	@ (cd ${MID} ; 	echo ')co RADIX.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RADIX.spad (SPAD from IN)>>=
${MID}/RADIX.spad: ${IN}/radix.spad.pamphlet
	@ echo 3440 making ${MID}/RADIX.spad from ${IN}/radix.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RADIX.NRLIB ; \
	${TANGLE} -R"domain RADIX RadixExpansion" ${IN}/radix.spad.pamphlet >RADIX.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RADUTIL.o (O from NRLIB)>>=
${OUT}/RADUTIL.o: ${MID}/RADUTIL.NRLIB
	@ echo 3441-9 making ${OUT}/RADUTIL.o from ${MID}/RADUTIL.NRLIB
	@ cp ${MID}/RADUTIL.NRLIB/code.o ${OUT}/RADUTIL.o

@
<<RADUTIL.NRLIB (NRLIB from MID)>>=
${MID}/RADUTIL.NRLIB: ${MID}/RADUTIL.spad
	@ echo 3442 making ${MID}/RADUTIL.NRLIB from ${MID}/RADUTIL.spad
	@ (cd ${MID} ; 	echo ')co RADUTIL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RADUTIL.spad (SPAD from IN)>>=
${MID}/RADUTIL.spad: ${IN}/radix.spad.pamphlet
	@ echo 3443 making ${MID}/RADUTIL.spad from ${IN}/radix.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RADUTIL.NRLIB ; \
	${TANGLE} -R"package RADUTIL RadixUtilities" ${IN}/radix.spad.pamphlet >RADUTIL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<radix.spad.dvi (DOC from IN)>>=
${DOC}/radix.spad.dvi: ${IN}/radix.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3444 making ${DOC}/radix.spad.dvi from ${IN}/radix.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/radix.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} radix.spad ; \
	rm -f ${DOC}/radix.spad.pamphlet ; \
	rm -f ${DOC}/radix.spad.tex ; \
	rm -f ${DOC}/radix.spad )

@
\subsection{random.spad \cite{1}}
<<random.spad (SPAD from IN)>>=
${OUTSRC}/random.spad: ${IN}/random.spad.pamphlet
	@ echo 3445 making ${OUTSRC}/random.spad from ${IN}/random.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/random.spad.pamphlet >random.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTBIT.o (O from NRLIB)>>=
${OUT}/INTBIT.o: ${MID}/INTBIT.NRLIB
	@ echo 3446-4 making ${OUT}/INTBIT.o from ${MID}/INTBIT.NRLIB
	@ cp ${MID}/INTBIT.NRLIB/code.o ${OUT}/INTBIT.o

@
<<INTBIT.NRLIB (NRLIB from MID)>>=
${MID}/INTBIT.NRLIB: ${MID}/INTBIT.spad
	@ echo 3447 making ${MID}/INTBIT.NRLIB from ${MID}/INTBIT.spad
	@ (cd ${MID} ; 	echo ')co INTBIT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTBIT.spad (SPAD from IN)>>=
${MID}/INTBIT.spad: ${IN}/random.spad.pamphlet
	@ echo 3448 making ${MID}/INTBIT.spad from ${IN}/random.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INTBIT.NRLIB ; \
	${TANGLE} -R"package INTBIT IntegerBits" ${IN}/random.spad.pamphlet >INTBIT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RANDSRC.o (O from NRLIB)>>=
${OUT}/RANDSRC.o: ${MID}/RANDSRC.NRLIB
	@ echo 3449-8 making ${OUT}/RANDSRC.o from ${MID}/RANDSRC.NRLIB
	@ cp ${MID}/RANDSRC.NRLIB/code.o ${OUT}/RANDSRC.o

@
<<RANDSRC.NRLIB (NRLIB from MID)>>=
${MID}/RANDSRC.NRLIB: ${MID}/RANDSRC.spad
	@ echo 3450 making ${MID}/RANDSRC.NRLIB from ${MID}/RANDSRC.spad
	@ (cd ${MID} ; 	echo ')co RANDSRC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RANDSRC.spad (SPAD from IN)>>=
${MID}/RANDSRC.spad: ${IN}/random.spad.pamphlet
	@ echo 3451 making ${MID}/RANDSRC.spad from ${IN}/random.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RANDSRC.NRLIB ; \
	${TANGLE} -R"package RANDSRC RandomNumberSource" ${IN}/random.spad.pamphlet >RANDSRC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RDIST.o (O from NRLIB)>>=
${OUT}/RDIST.o: ${MID}/RDIST.NRLIB
	@ echo 3452-17 making ${OUT}/RDIST.o from ${MID}/RDIST.NRLIB
	@ cp ${MID}/RDIST.NRLIB/code.o ${OUT}/RDIST.o

@
<<RDIST.NRLIB (NRLIB from MID)>>=
${MID}/RDIST.NRLIB: ${MID}/RDIST.spad
	@ echo 3453 making ${MID}/RDIST.NRLIB from ${MID}/RDIST.spad
	@ (cd ${MID} ; 	echo ')co RDIST.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RDIST.spad (SPAD from IN)>>=
${MID}/RDIST.spad: ${IN}/random.spad.pamphlet
	@ echo 3454 making ${MID}/RDIST.spad from ${IN}/random.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RDIST.NRLIB ; \
	${TANGLE} -R"package RDIST RandomDistributions" ${IN}/random.spad.pamphlet >RDIST.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RFDIST.o (O from NRLIB)>>=
${OUT}/RFDIST.o: ${MID}/RFDIST.NRLIB
	@ echo 3455-4 making ${OUT}/RFDIST.o from ${MID}/RFDIST.NRLIB
	@ cp ${MID}/RFDIST.NRLIB/code.o ${OUT}/RFDIST.o

@
<<RFDIST.NRLIB (NRLIB from MID)>>=
${MID}/RFDIST.NRLIB: ${MID}/RFDIST.spad
	@ echo 3456 making ${MID}/RFDIST.NRLIB from ${MID}/RFDIST.spad
	@ (cd ${MID} ; 	echo ')co RFDIST.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RFDIST.spad (SPAD from IN)>>=
${MID}/RFDIST.spad: ${IN}/random.spad.pamphlet
	@ echo 3457 making ${MID}/RFDIST.spad from ${IN}/random.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RFDIST.NRLIB ; \
	${TANGLE} -R"package RFDIST RandomFloatDistributions" ${IN}/random.spad.pamphlet >RFDIST.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RIDIST.o (O from NRLIB)>>=
${OUT}/RIDIST.o: ${MID}/RIDIST.NRLIB
	@ echo 3458-4 making ${OUT}/RIDIST.o from ${MID}/RIDIST.NRLIB
	@ cp ${MID}/RIDIST.NRLIB/code.o ${OUT}/RIDIST.o

@
<<RIDIST.NRLIB (NRLIB from MID)>>=
${MID}/RIDIST.NRLIB: ${MID}/RIDIST.spad
	@ echo 3459 making ${MID}/RIDIST.NRLIB from ${MID}/RIDIST.spad
	@ (cd ${MID} ; 	echo ')co RIDIST.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RIDIST.spad (SPAD from IN)>>=
${MID}/RIDIST.spad: ${IN}/random.spad.pamphlet
	@ echo 3460 making ${MID}/RIDIST.spad from ${IN}/random.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RIDIST.NRLIB ; \
	${TANGLE} -R"package RIDIST RandomIntegerDistributions" ${IN}/random.spad.pamphlet >RIDIST.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<random.spad.dvi (DOC from IN)>>=
${DOC}/random.spad.dvi: ${IN}/random.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3461 making ${DOC}/random.spad.dvi from ${IN}/random.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/random.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} random.spad ; \
	rm -f ${DOC}/random.spad.pamphlet ; \
	rm -f ${DOC}/random.spad.tex ; \
	rm -f ${DOC}/random.spad )

@
\subsection{ratfact.spad \cite{1}}
<<ratfact.spad (SPAD from IN)>>=
${OUTSRC}/ratfact.spad: ${IN}/ratfact.spad.pamphlet
	@ echo 3462 making ${OUTSRC}/ratfact.spad from ${IN}/ratfact.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/ratfact.spad.pamphlet >ratfact.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RATFACT.o (O from NRLIB)>>=
${OUT}/RATFACT.o: ${MID}/RATFACT.NRLIB
	@ echo 3463-14 making ${OUT}/RATFACT.o from ${MID}/RATFACT.NRLIB
	@ cp ${MID}/RATFACT.NRLIB/code.o ${OUT}/RATFACT.o

@
<<RATFACT.NRLIB (NRLIB from MID)>>=
${MID}/RATFACT.NRLIB: ${MID}/RATFACT.spad
	@ echo 3464 making ${MID}/RATFACT.NRLIB from ${MID}/RATFACT.spad
	@ (cd ${MID} ; 	echo ')co RATFACT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RATFACT.spad (SPAD from IN)>>=
${MID}/RATFACT.spad: ${IN}/ratfact.spad.pamphlet
	@ echo 3465 making ${MID}/RATFACT.spad from ${IN}/ratfact.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RATFACT.NRLIB ; \
	${TANGLE} -R"package RATFACT RationalFactorize" ${IN}/ratfact.spad.pamphlet >RATFACT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ratfact.spad.dvi (DOC from IN)>>=
${DOC}/ratfact.spad.dvi: ${IN}/ratfact.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3466 making ${DOC}/ratfact.spad.dvi from ${IN}/ratfact.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/ratfact.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} ratfact.spad ; \
	rm -f ${DOC}/ratfact.spad.pamphlet ; \
	rm -f ${DOC}/ratfact.spad.tex ; \
	rm -f ${DOC}/ratfact.spad )

@
\subsection{rdeef.spad \cite{1}}
<<rdeef.spad (SPAD from IN)>>=
${OUTSRC}/rdeef.spad: ${IN}/rdeef.spad.pamphlet
	@ echo 3467 making ${OUTSRC}/rdeef.spad from ${IN}/rdeef.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/rdeef.spad.pamphlet >rdeef.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTTOOLS.o (O from NRLIB)>>=
${OUT}/INTTOOLS.o: ${MID}/INTTOOLS.NRLIB
	@ echo 3468-20 making ${OUT}/INTTOOLS.o from ${MID}/INTTOOLS.NRLIB
	@ cp ${MID}/INTTOOLS.NRLIB/code.o ${OUT}/INTTOOLS.o

@
<<INTTOOLS.NRLIB (NRLIB from MID)>>=
${MID}/INTTOOLS.NRLIB: ${MID}/INTTOOLS.spad
	@ echo 3469 making ${MID}/INTTOOLS.NRLIB from ${MID}/INTTOOLS.spad
	@ (cd ${MID} ; 	echo ')co INTTOOLS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTTOOLS.spad (SPAD from IN)>>=
${MID}/INTTOOLS.spad: ${IN}/rdeef.spad.pamphlet
	@ echo 3470 making ${MID}/INTTOOLS.spad from ${IN}/rdeef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INTTOOLS.NRLIB ; \
	${TANGLE} -R"package INTTOOLS IntegrationTools" ${IN}/rdeef.spad.pamphlet >INTTOOLS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RDEEF.o (O from NRLIB)>>=
${OUT}/RDEEF.o: ${MID}/RDEEF.NRLIB
	@ echo 3471-20 making ${OUT}/RDEEF.o from ${MID}/RDEEF.NRLIB
	@ cp ${MID}/RDEEF.NRLIB/code.o ${OUT}/RDEEF.o

@
<<RDEEF.NRLIB (NRLIB from MID)>>=
${MID}/RDEEF.NRLIB: ${MID}/RDEEF.spad
	@ echo 3472 making ${MID}/RDEEF.NRLIB from ${MID}/RDEEF.spad
	@ (cd ${MID} ; 	echo ')co RDEEF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RDEEF.spad (SPAD from IN)>>=
${MID}/RDEEF.spad: ${IN}/rdeef.spad.pamphlet
	@ echo 3473 making ${MID}/RDEEF.spad from ${IN}/rdeef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RDEEF.NRLIB ; \
	${TANGLE} -R"package RDEEF ElementaryRischDE" ${IN}/rdeef.spad.pamphlet >RDEEF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<rdeef.spad.dvi (DOC from IN)>>=
${DOC}/rdeef.spad.dvi: ${IN}/rdeef.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3474 making ${DOC}/rdeef.spad.dvi from ${IN}/rdeef.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/rdeef.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} rdeef.spad ; \
	rm -f ${DOC}/rdeef.spad.pamphlet ; \
	rm -f ${DOC}/rdeef.spad.tex ; \
	rm -f ${DOC}/rdeef.spad )

@
\subsection{rderf.spad \cite{1}}
<<rderf.spad (SPAD from IN)>>=
${OUTSRC}/rderf.spad: ${IN}/rderf.spad.pamphlet
	@ echo 3475 making ${OUTSRC}/rderf.spad from ${IN}/rderf.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/rderf.spad.pamphlet >rderf.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RDETR.o (O from NRLIB)>>=
${OUT}/RDETR.o: ${MID}/RDETR.NRLIB
	@ echo 3476-14 making ${OUT}/RDETR.o from ${MID}/RDETR.NRLIB
	@ cp ${MID}/RDETR.NRLIB/code.o ${OUT}/RDETR.o

@
<<RDETR.NRLIB (NRLIB from MID)>>=
${MID}/RDETR.NRLIB: ${MID}/RDETR.spad
	@ echo 3477 making ${MID}/RDETR.NRLIB from ${MID}/RDETR.spad
	@ (cd ${MID} ; 	echo ')co RDETR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RDETR.spad (SPAD from IN)>>=
${MID}/RDETR.spad: ${IN}/rderf.spad.pamphlet
	@ echo 3478 making ${MID}/RDETR.spad from ${IN}/rderf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RDETR.NRLIB ; \
	${TANGLE} -R"package RDETR TranscendentalRischDE" ${IN}/rderf.spad.pamphlet >RDETR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<rderf.spad.dvi (DOC from IN)>>=
${DOC}/rderf.spad.dvi: ${IN}/rderf.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3479 making ${DOC}/rderf.spad.dvi from ${IN}/rderf.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/rderf.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} rderf.spad ; \
	rm -f ${DOC}/rderf.spad.pamphlet ; \
	rm -f ${DOC}/rderf.spad.tex ; \
	rm -f ${DOC}/rderf.spad )

@
\subsection{rdesys.spad \cite{1}}
<<rdesys.spad (SPAD from IN)>>=
${OUTSRC}/rdesys.spad: ${IN}/rdesys.spad.pamphlet
	@ echo 3480 making ${OUTSRC}/rdesys.spad from ${IN}/rdesys.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/rdesys.spad.pamphlet >rdesys.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RDEEFS.o (O from NRLIB)>>=
${OUT}/RDEEFS.o: ${MID}/RDEEFS.NRLIB
	@ echo 3481-20 making ${OUT}/RDEEFS.o from ${MID}/RDEEFS.NRLIB
	@ cp ${MID}/RDEEFS.NRLIB/code.o ${OUT}/RDEEFS.o

@
<<RDEEFS.NRLIB (NRLIB from MID)>>=
${MID}/RDEEFS.NRLIB: ${MID}/RDEEFS.spad
	@ echo 3482 making ${MID}/RDEEFS.NRLIB from ${MID}/RDEEFS.spad
	@ (cd ${MID} ; 	echo ')co RDEEFS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RDEEFS.spad (SPAD from IN)>>=
${MID}/RDEEFS.spad: ${IN}/rdesys.spad.pamphlet
	@ echo 3483 making ${MID}/RDEEFS.spad from ${IN}/rdesys.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RDEEFS.NRLIB ; \
	${TANGLE} -R"package RDEEFS ElementaryRischDESystem" ${IN}/rdesys.spad.pamphlet >RDEEFS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RDETRS.o (O from NRLIB)>>=
${OUT}/RDETRS.o: ${MID}/RDETRS.NRLIB
	@ echo 3484-14 making ${OUT}/RDETRS.o from ${MID}/RDETRS.NRLIB
	@ cp ${MID}/RDETRS.NRLIB/code.o ${OUT}/RDETRS.o

@
<<RDETRS.NRLIB (NRLIB from MID)>>=
${MID}/RDETRS.NRLIB: ${MID}/RDETRS.spad
	@ echo 3485 making ${MID}/RDETRS.NRLIB from ${MID}/RDETRS.spad
	@ (cd ${MID} ; 	echo ')co RDETRS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RDETRS.spad (SPAD from IN)>>=
${MID}/RDETRS.spad: ${IN}/rdesys.spad.pamphlet
	@ echo 3486 making ${MID}/RDETRS.spad from ${IN}/rdesys.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RDETRS.NRLIB ; \
	${TANGLE} -R"package RDETRS TranscendentalRischDESystem" ${IN}/rdesys.spad.pamphlet >RDETRS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<rdesys.spad.dvi (DOC from IN)>>=
${DOC}/rdesys.spad.dvi: ${IN}/rdesys.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3487 making ${DOC}/rdesys.spad.dvi from ${IN}/rdesys.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/rdesys.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} rdesys.spad ; \
	rm -f ${DOC}/rdesys.spad.pamphlet ; \
	rm -f ${DOC}/rdesys.spad.tex ; \
	rm -f ${DOC}/rdesys.spad )

@
\subsection{real0q.spad \cite{1}}
<<real0q.spad (SPAD from IN)>>=
${OUTSRC}/real0q.spad: ${IN}/real0q.spad.pamphlet
	@ echo 3488 making ${OUTSRC}/real0q.spad from ${IN}/real0q.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/real0q.spad.pamphlet >real0q.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<REAL0Q.o (O from NRLIB)>>=
${OUT}/REAL0Q.o: ${MID}/REAL0Q.NRLIB
	@ echo 3489-14 making ${OUT}/REAL0Q.o from ${MID}/REAL0Q.NRLIB
	@ cp ${MID}/REAL0Q.NRLIB/code.o ${OUT}/REAL0Q.o

@
<<REAL0Q.NRLIB (NRLIB from MID)>>=
${MID}/REAL0Q.NRLIB: ${MID}/REAL0Q.spad
	@ echo 3490 making ${MID}/REAL0Q.NRLIB from ${MID}/REAL0Q.spad
	@ (cd ${MID} ; 	echo ')co REAL0Q.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<REAL0Q.spad (SPAD from IN)>>=
${MID}/REAL0Q.spad: ${IN}/real0q.spad.pamphlet
	@ echo 3491 making ${MID}/REAL0Q.spad from ${IN}/real0q.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf REAL0Q.NRLIB ; \
	${TANGLE} -R"package REAL0Q RealZeroPackageQ" ${IN}/real0q.spad.pamphlet >REAL0Q.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<real0q.spad.dvi (DOC from IN)>>=
${DOC}/real0q.spad.dvi: ${IN}/real0q.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3492 making ${DOC}/real0q.spad.dvi from ${IN}/real0q.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/real0q.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} real0q.spad ; \
	rm -f ${DOC}/real0q.spad.pamphlet ; \
	rm -f ${DOC}/real0q.spad.tex ; \
	rm -f ${DOC}/real0q.spad )

@
\subsection{realzero.spad \cite{1}}
<<realzero.spad (SPAD from IN)>>=
${OUTSRC}/realzero.spad: ${IN}/realzero.spad.pamphlet
	@ echo 3493 making ${OUTSRC}/realzero.spad from ${IN}/realzero.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/realzero.spad.pamphlet >realzero.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<REAL0.o (O from NRLIB)>>=
${OUT}/REAL0.o: ${MID}/REAL0.NRLIB
	@ echo 3494-14 making ${OUT}/REAL0.o from ${MID}/REAL0.NRLIB
	@ cp ${MID}/REAL0.NRLIB/code.o ${OUT}/REAL0.o

@
<<REAL0.NRLIB (NRLIB from MID)>>=
${MID}/REAL0.NRLIB: ${MID}/REAL0.spad
	@ echo 3495 making ${MID}/REAL0.NRLIB from ${MID}/REAL0.spad
	@ (cd ${MID} ; 	echo ')co REAL0.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<REAL0.spad (SPAD from IN)>>=
${MID}/REAL0.spad: ${IN}/realzero.spad.pamphlet
	@ echo 3496 making ${MID}/REAL0.spad from ${IN}/realzero.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf REAL0.NRLIB ; \
	${TANGLE} -R"package REAL0 RealZeroPackage" ${IN}/realzero.spad.pamphlet >REAL0.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<realzero.spad.dvi (DOC from IN)>>=
${DOC}/realzero.spad.dvi: ${IN}/realzero.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3497 making ${DOC}/realzero.spad.dvi from ${IN}/realzero.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/realzero.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} realzero.spad ; \
	rm -f ${DOC}/realzero.spad.pamphlet ; \
	rm -f ${DOC}/realzero.spad.tex ; \
	rm -f ${DOC}/realzero.spad )

@
\subsection{reclos.spad \cite{1}}
<<reclos.spad (SPAD from IN)>>=
${OUTSRC}/reclos.spad: ${IN}/reclos.spad.pamphlet
	@ echo 3498 making ${OUTSRC}/reclos.spad from ${IN}/reclos.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/reclos.spad.pamphlet >reclos.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<POLUTIL.o (O from NRLIB)>>=
${OUT}/POLUTIL.o: ${MID}/POLUTIL.NRLIB
	@ echo 3499-14 making ${OUT}/POLUTIL.o from ${MID}/POLUTIL.NRLIB
	@ cp ${MID}/POLUTIL.NRLIB/code.o ${OUT}/POLUTIL.o

@
<<POLUTIL.NRLIB (NRLIB from MID)>>=
${MID}/POLUTIL.NRLIB: ${MID}/POLUTIL.spad
	@ echo 3500 making ${MID}/POLUTIL.NRLIB from ${MID}/POLUTIL.spad
	@ (cd ${MID} ; 	echo ')co POLUTIL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<POLUTIL.spad (SPAD from IN)>>=
${MID}/POLUTIL.spad: ${IN}/reclos.spad.pamphlet
	@ echo 3501 making ${MID}/POLUTIL.spad from ${IN}/reclos.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf POLUTIL.NRLIB ; \
	${TANGLE} -R"package POLUTIL RealPolynomialUtilitiesPackage" ${IN}/reclos.spad.pamphlet >POLUTIL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RCFIELD-.o (O from NRLIB)>>=
${OUT}/RCFIELD-.o: ${MID}/RCFIELD.NRLIB
	@ echo 3502-14 making ${OUT}/RCFIELD-.o from ${MID}/RCFIELD-.NRLIB
	@ cp ${MID}/RCFIELD-.NRLIB/code.o ${OUT}/RCFIELD-.o

@
<<RCFIELD-.NRLIB (NRLIB from MID)>>=
${MID}/RCFIELD-.NRLIB: ${MID}/RCFIELD.spad 
	@ echo 3503 making ${MID}/RCFIELD-.NRLIB from ${MID}/RCFIELD.spad
	@ (cd ${MID} ; 	echo ')co RCFIELD.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RCFIELD.o (O from NRLIB)>>=
${OUT}/RCFIELD.o: ${MID}/RCFIELD.NRLIB
	@ echo 3504-14 making ${OUT}/RCFIELD.o from ${MID}/RCFIELD.NRLIB
	@ cp ${MID}/RCFIELD.NRLIB/code.o ${OUT}/RCFIELD.o

@
<<RCFIELD.NRLIB (NRLIB from MID)>>=
${MID}/RCFIELD.NRLIB: ${MID}/RCFIELD.spad
	@ echo 3505 making ${MID}/RCFIELD.NRLIB from ${MID}/RCFIELD.spad
	@ (cd ${MID} ; 	echo ')co RCFIELD.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RCFIELD.spad (SPAD from IN)>>=
${MID}/RCFIELD.spad: ${IN}/reclos.spad.pamphlet
	@ echo 3506 making ${MID}/RCFIELD.spad from ${IN}/reclos.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RCFIELD.NRLIB ; \
	${TANGLE} -R"category RCFIELD RealClosedField" ${IN}/reclos.spad.pamphlet >RCFIELD.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RECLOS.o (O from NRLIB)>>=
${OUT}/RECLOS.o: ${MID}/RECLOS.NRLIB
	@ echo 3507-19 making ${OUT}/RECLOS.o from ${MID}/RECLOS.NRLIB
	@ cp ${MID}/RECLOS.NRLIB/code.o ${OUT}/RECLOS.o

@
<<RECLOS.NRLIB (NRLIB from MID)>>=
${MID}/RECLOS.NRLIB: ${MID}/RECLOS.spad
	@ echo 3508 making ${MID}/RECLOS.NRLIB from ${MID}/RECLOS.spad
	@ (cd ${MID} ; 	echo ')co RECLOS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RECLOS.spad (SPAD from IN)>>=
${MID}/RECLOS.spad: ${IN}/reclos.spad.pamphlet
	@ echo 3509 making ${MID}/RECLOS.spad from ${IN}/reclos.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RECLOS.NRLIB ; \
	${TANGLE} -R"domain RECLOS RealClosure" ${IN}/reclos.spad.pamphlet >RECLOS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ROIRC.o (O from NRLIB)>>=
${OUT}/ROIRC.o: ${MID}/ROIRC.NRLIB
	@ echo 3510-15 making ${OUT}/ROIRC.o from ${MID}/ROIRC.NRLIB
	@ cp ${MID}/ROIRC.NRLIB/code.o ${OUT}/ROIRC.o

@
<<ROIRC.NRLIB (NRLIB from MID)>>=
${MID}/ROIRC.NRLIB: ${MID}/ROIRC.spad
	@ echo 3511 making ${MID}/ROIRC.NRLIB from ${MID}/ROIRC.spad
	@ (cd ${MID} ; 	echo ')co ROIRC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ROIRC.spad (SPAD from IN)>>=
${MID}/ROIRC.spad: ${IN}/reclos.spad.pamphlet
	@ echo 3512 making ${MID}/ROIRC.spad from ${IN}/reclos.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ROIRC.NRLIB ; \
	${TANGLE} -R"domain ROIRC RightOpenIntervalRootCharacterization" ${IN}/reclos.spad.pamphlet >ROIRC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RRCC-.o (O from NRLIB)>>=
${OUT}/RRCC-.o: ${MID}/RRCC.NRLIB
	@ echo 3513-14 making ${OUT}/RRCC-.o from ${MID}/RRCC-.NRLIB
	@ cp ${MID}/RRCC-.NRLIB/code.o ${OUT}/RRCC-.o

@
<<RRCC-.NRLIB (NRLIB from MID)>>=
${MID}/RRCC-.NRLIB: ${MID}/RRCC.spad 
	@ echo 3514 making ${MID}/RRCC-.NRLIB from ${MID}/RRCC.spad
	@ (cd ${MID} ; 	echo ')co RRCC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RRCC.o (O from NRLIB)>>=
${OUT}/RRCC.o: ${MID}/RRCC.NRLIB
	@ echo 3515-14 making ${OUT}/RRCC.o from ${MID}/RRCC.NRLIB
	@ cp ${MID}/RRCC.NRLIB/code.o ${OUT}/RRCC.o

@
<<RRCC.NRLIB (NRLIB from MID)>>=
${MID}/RRCC.NRLIB: ${MID}/RRCC.spad
	@ echo 3516 making ${MID}/RRCC.NRLIB from ${MID}/RRCC.spad
	@ (cd ${MID} ; 	echo ')co RRCC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RRCC.spad (SPAD from IN)>>=
${MID}/RRCC.spad: ${IN}/reclos.spad.pamphlet
	@ echo 3517 making ${MID}/RRCC.spad from ${IN}/reclos.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RRCC.NRLIB ; \
	${TANGLE} -R"category RRCC RealRootCharacterizationCategory" ${IN}/reclos.spad.pamphlet >RRCC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<reclos.spad.dvi (DOC from IN)>>=
${DOC}/reclos.spad.dvi: ${IN}/reclos.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3518 making ${DOC}/reclos.spad.dvi from ${IN}/reclos.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/reclos.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} reclos.spad ; \
	rm -f ${DOC}/reclos.spad.pamphlet ; \
	rm -f ${DOC}/reclos.spad.tex ; \
	rm -f ${DOC}/reclos.spad )

@
\subsection{regset.spad \cite{1}}
<<regset.spad (SPAD from IN)>>=
${OUTSRC}/regset.spad: ${IN}/regset.spad.pamphlet
	@ echo 3519 making ${OUTSRC}/regset.spad from ${IN}/regset.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/regset.spad.pamphlet >regset.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<QCMPACK.o (O from NRLIB)>>=
${OUT}/QCMPACK.o: ${MID}/QCMPACK.NRLIB
	@ echo 3520-23 making ${OUT}/QCMPACK.o from ${MID}/QCMPACK.NRLIB
	@ cp ${MID}/QCMPACK.NRLIB/code.o ${OUT}/QCMPACK.o

@
<<QCMPACK.NRLIB (NRLIB from MID)>>=
${MID}/QCMPACK.NRLIB: ${MID}/QCMPACK.spad
	@ echo 3521 making ${MID}/QCMPACK.NRLIB from ${MID}/QCMPACK.spad
	@ (cd ${MID} ; 	echo ')co QCMPACK.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<QCMPACK.spad (SPAD from IN)>>=
${MID}/QCMPACK.spad: ${IN}/regset.spad.pamphlet
	@ echo 3522 making ${MID}/QCMPACK.spad from ${IN}/regset.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf QCMPACK.NRLIB ; \
	${TANGLE} -R"package QCMPACK QuasiComponentPackage" ${IN}/regset.spad.pamphlet >QCMPACK.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<REGSET.o (O from NRLIB)>>=
${OUT}/REGSET.o: ${MID}/REGSET.NRLIB
	@ echo 3523-22 making ${OUT}/REGSET.o from ${MID}/REGSET.NRLIB
	@ cp ${MID}/REGSET.NRLIB/code.o ${OUT}/REGSET.o

@
<<REGSET.NRLIB (NRLIB from MID)>>=
${MID}/REGSET.NRLIB: ${MID}/REGSET.spad
	@ echo 3524 making ${MID}/REGSET.NRLIB from ${MID}/REGSET.spad
	@ (cd ${MID} ; 	echo ')co REGSET.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<REGSET.spad (SPAD from IN)>>=
${MID}/REGSET.spad: ${IN}/regset.spad.pamphlet
	@ echo 3525 making ${MID}/REGSET.spad from ${IN}/regset.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf REGSET.NRLIB ; \
	${TANGLE} -R"domain REGSET RegularTriangularSet" ${IN}/regset.spad.pamphlet >REGSET.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RSDCMPK.o (O from NRLIB)>>=
${OUT}/RSDCMPK.o: ${MID}/RSDCMPK.NRLIB
	@ echo 3526-22 making ${OUT}/RSDCMPK.o from ${MID}/RSDCMPK.NRLIB
	@ cp ${MID}/RSDCMPK.NRLIB/code.o ${OUT}/RSDCMPK.o

@
<<RSDCMPK.NRLIB (NRLIB from MID)>>=
${MID}/RSDCMPK.NRLIB: ${MID}/RSDCMPK.spad
	@ echo 3527 making ${MID}/RSDCMPK.NRLIB from ${MID}/RSDCMPK.spad
	@ (cd ${MID} ; 	echo ')co RSDCMPK.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RSDCMPK.spad (SPAD from IN)>>=
${MID}/RSDCMPK.spad: ${IN}/regset.spad.pamphlet
	@ echo 3528 making ${MID}/RSDCMPK.spad from ${IN}/regset.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RSDCMPK.NRLIB ; \
	${TANGLE} -R"package RSDCMPK RegularSetDecompositionPackage" ${IN}/regset.spad.pamphlet >RSDCMPK.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RSETCAT-.o (O from NRLIB)>>=
${OUT}/RSETCAT-.o: ${MID}/RSETCAT.NRLIB
	@ echo 3529-20 making ${OUT}/RSETCAT-.o from ${MID}/RSETCAT-.NRLIB
	@ cp ${MID}/RSETCAT-.NRLIB/code.o ${OUT}/RSETCAT-.o

@
<<RSETCAT-.NRLIB (NRLIB from MID)>>=
${MID}/RSETCAT-.NRLIB: ${MID}/RSETCAT.spad 
	@ echo 3530 making ${MID}/RSETCAT-.NRLIB from ${MID}/RSETCAT.spad
	@ (cd ${MID} ; 	echo ')co RSETCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RSETCAT.o (O from NRLIB)>>=
${OUT}/RSETCAT.o: ${MID}/RSETCAT.NRLIB
	@ echo 3531-20 making ${OUT}/RSETCAT.o from ${MID}/RSETCAT.NRLIB
	@ cp ${MID}/RSETCAT.NRLIB/code.o ${OUT}/RSETCAT.o

@
<<RSETCAT.NRLIB (NRLIB from MID)>>=
${MID}/RSETCAT.NRLIB: ${MID}/RSETCAT.spad
	@ echo 3532 making ${MID}/RSETCAT.NRLIB from ${MID}/RSETCAT.spad
	@ (cd ${MID} ; 	echo ')co RSETCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RSETCAT.spad (SPAD from IN)>>=
${MID}/RSETCAT.spad: ${IN}/regset.spad.pamphlet
	@ echo 3533 making ${MID}/RSETCAT.spad from ${IN}/regset.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RSETCAT.NRLIB ; \
	${TANGLE} -R"category RSETCAT RegularTriangularSetCategory" ${IN}/regset.spad.pamphlet >RSETCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RSETGCD.o (O from NRLIB)>>=
${OUT}/RSETGCD.o: ${MID}/RSETGCD.NRLIB
	@ echo 3534-22 making ${OUT}/RSETGCD.o from ${MID}/RSETGCD.NRLIB
	@ cp ${MID}/RSETGCD.NRLIB/code.o ${OUT}/RSETGCD.o

@
<<RSETGCD.NRLIB (NRLIB from MID)>>=
${MID}/RSETGCD.NRLIB: ${MID}/RSETGCD.spad
	@ echo 3535 making ${MID}/RSETGCD.NRLIB from ${MID}/RSETGCD.spad
	@ (cd ${MID} ; 	echo ')co RSETGCD.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RSETGCD.spad (SPAD from IN)>>=
${MID}/RSETGCD.spad: ${IN}/regset.spad.pamphlet
	@ echo 3536 making ${MID}/RSETGCD.spad from ${IN}/regset.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RSETGCD.NRLIB ; \
	${TANGLE} -R"package RSETGCD RegularTriangularSetGcdPackage" ${IN}/regset.spad.pamphlet >RSETGCD.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<regset.spad.dvi (DOC from IN)>>=
${DOC}/regset.spad.dvi: ${IN}/regset.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3537 making ${DOC}/regset.spad.dvi from ${IN}/regset.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/regset.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} regset.spad ; \
	rm -f ${DOC}/regset.spad.pamphlet ; \
	rm -f ${DOC}/regset.spad.tex ; \
	rm -f ${DOC}/regset.spad )

@
\subsection{rep1.spad \cite{1}}
<<rep1.spad (SPAD from IN)>>=
${OUTSRC}/rep1.spad: ${IN}/rep1.spad.pamphlet
	@ echo 3538 making ${OUTSRC}/rep1.spad from ${IN}/rep1.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/rep1.spad.pamphlet >rep1.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<REP1.o (O from NRLIB)>>=
${OUT}/REP1.o: ${MID}/REP1.NRLIB
	@ echo 3539-19 making ${OUT}/REP1.o from ${MID}/REP1.NRLIB
	@ cp ${MID}/REP1.NRLIB/code.o ${OUT}/REP1.o

@
<<REP1.NRLIB (NRLIB from MID)>>=
${MID}/REP1.NRLIB: ${MID}/REP1.spad
	@ echo 3540 making ${MID}/REP1.NRLIB from ${MID}/REP1.spad
	@ (cd ${MID} ; 	echo ')co REP1.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<REP1.spad (SPAD from IN)>>=
${MID}/REP1.spad: ${IN}/rep1.spad.pamphlet
	@ echo 3541 making ${MID}/REP1.spad from ${IN}/rep1.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf REP1.NRLIB ; \
	${TANGLE} -R"package REP1 RepresentationPackage1" ${IN}/rep1.spad.pamphlet >REP1.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<rep1.spad.dvi (DOC from IN)>>=
${DOC}/rep1.spad.dvi: ${IN}/rep1.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3542 making ${DOC}/rep1.spad.dvi from ${IN}/rep1.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/rep1.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} rep1.spad ; \
	rm -f ${DOC}/rep1.spad.pamphlet ; \
	rm -f ${DOC}/rep1.spad.tex ; \
	rm -f ${DOC}/rep1.spad )

@
\subsection{rep2.spad \cite{1}}
<<rep2.spad (SPAD from IN)>>=
${OUTSRC}/rep2.spad: ${IN}/rep2.spad.pamphlet
	@ echo 3543 making ${OUTSRC}/rep2.spad from ${IN}/rep2.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/rep2.spad.pamphlet >rep2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<REP2.o (O from NRLIB)>>=
${OUT}/REP2.o: ${MID}/REP2.NRLIB
	@ echo 3544-13 making ${OUT}/REP2.o from ${MID}/REP2.NRLIB
	@ cp ${MID}/REP2.NRLIB/code.o ${OUT}/REP2.o

@
<<REP2.NRLIB (NRLIB from MID)>>=
${MID}/REP2.NRLIB: ${MID}/REP2.spad
	@ echo 3545 making ${MID}/REP2.NRLIB from ${MID}/REP2.spad
	@ (cd ${MID} ; 	echo ')co REP2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<REP2.spad (SPAD from IN)>>=
${MID}/REP2.spad: ${IN}/rep2.spad.pamphlet
	@ echo 3546 making ${MID}/REP2.spad from ${IN}/rep2.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf REP2.NRLIB ; \
	${TANGLE} -R"package REP2 RepresentationPackage2" ${IN}/rep2.spad.pamphlet >REP2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<rep2.spad.dvi (DOC from IN)>>=
${DOC}/rep2.spad.dvi: ${IN}/rep2.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3547 making ${DOC}/rep2.spad.dvi from ${IN}/rep2.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/rep2.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} rep2.spad ; \
	rm -f ${DOC}/rep2.spad.pamphlet ; \
	rm -f ${DOC}/rep2.spad.tex ; \
	rm -f ${DOC}/rep2.spad )

@
\subsection{resring.spad \cite{1}}
<<resring.spad (SPAD from IN)>>=
${OUTSRC}/resring.spad: ${IN}/resring.spad.pamphlet
	@ echo 3548 making ${OUTSRC}/resring.spad from ${IN}/resring.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/resring.spad.pamphlet >resring.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RESRING.o (O from NRLIB)>>=
${OUT}/RESRING.o: ${MID}/RESRING.NRLIB
	@ echo 3549-14 making ${OUT}/RESRING.o from ${MID}/RESRING.NRLIB
	@ cp ${MID}/RESRING.NRLIB/code.o ${OUT}/RESRING.o

@
<<RESRING.NRLIB (NRLIB from MID)>>=
${MID}/RESRING.NRLIB: ${MID}/RESRING.spad
	@ echo 3550 making ${MID}/RESRING.NRLIB from ${MID}/RESRING.spad
	@ (cd ${MID} ; 	echo ')co RESRING.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RESRING.spad (SPAD from IN)>>=
${MID}/RESRING.spad: ${IN}/resring.spad.pamphlet
	@ echo 3551 making ${MID}/RESRING.spad from ${IN}/resring.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RESRING.NRLIB ; \
	${TANGLE} -R"domain RESRING ResidueRing" ${IN}/resring.spad.pamphlet >RESRING.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<resring.spad.dvi (DOC from IN)>>=
${DOC}/resring.spad.dvi: ${IN}/resring.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3552 making ${DOC}/resring.spad.dvi from ${IN}/resring.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/resring.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} resring.spad ; \
	rm -f ${DOC}/resring.spad.pamphlet ; \
	rm -f ${DOC}/resring.spad.tex ; \
	rm -f ${DOC}/resring.spad )

@
\subsection{retract.spad \cite{1}}
<<retract.spad (SPAD from IN)>>=
${OUTSRC}/retract.spad: ${IN}/retract.spad.pamphlet
	@ echo 3553 making ${OUTSRC}/retract.spad from ${IN}/retract.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/retract.spad.pamphlet >retract.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FRETRCT-.o (O from NRLIB)>>=
${OUT}/FRETRCT-.o: ${MID}/FRETRCT.NRLIB
	@ echo 3554-9 making ${OUT}/FRETRCT-.o from ${MID}/FRETRCT-.NRLIB
	@ cp ${MID}/FRETRCT-.NRLIB/code.o ${OUT}/FRETRCT-.o

@
<<FRETRCT-.NRLIB (NRLIB from MID)>>=
${MID}/FRETRCT-.NRLIB: ${MID}/FRETRCT.spad 
	@ echo 3555 making ${MID}/FRETRCT-.NRLIB from ${MID}/FRETRCT.spad
	@ (cd ${MID} ; 	echo ')co FRETRCT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FRETRCT.o (O from NRLIB)>>=
${OUT}/FRETRCT.o: ${MID}/FRETRCT.NRLIB
	@ echo 3556-9 making ${OUT}/FRETRCT.o from ${MID}/FRETRCT.NRLIB
	@ cp ${MID}/FRETRCT.NRLIB/code.o ${OUT}/FRETRCT.o

@
<<FRETRCT.NRLIB (NRLIB from MID)>>=
${MID}/FRETRCT.NRLIB: ${MID}/FRETRCT.spad
	@ echo 3557 making ${MID}/FRETRCT.NRLIB from ${MID}/FRETRCT.spad
	@ (cd ${MID} ; 	echo ')co FRETRCT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FRETRCT.spad (SPAD from IN)>>=
${MID}/FRETRCT.spad: ${IN}/retract.spad.pamphlet
	@ echo 3558 making ${MID}/FRETRCT.spad from ${IN}/retract.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FRETRCT.NRLIB ; \
	${TANGLE} -R"category FRETRCT FullyRetractableTo" ${IN}/retract.spad.pamphlet >FRETRCT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTRET.o (O from NRLIB)>>=
${OUT}/INTRET.o: ${MID}/INTRET.NRLIB
	@ echo 3559-2 making ${OUT}/INTRET.o from ${MID}/INTRET.NRLIB
	@ cp ${MID}/INTRET.NRLIB/code.o ${OUT}/INTRET.o

@
<<INTRET.NRLIB (NRLIB from MID)>>=
${MID}/INTRET.NRLIB: ${MID}/INTRET.spad
	@ echo 3560 making ${MID}/INTRET.NRLIB from ${MID}/INTRET.spad
	@ (cd ${MID} ; 	echo ')co INTRET.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTRET.spad (SPAD from IN)>>=
${MID}/INTRET.spad: ${IN}/retract.spad.pamphlet
	@ echo 3561 making ${MID}/INTRET.spad from ${IN}/retract.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INTRET.NRLIB ; \
	${TANGLE} -R"package INTRET IntegerRetractions" ${IN}/retract.spad.pamphlet >INTRET.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RATRET.o (O from NRLIB)>>=
${OUT}/RATRET.o: ${MID}/RATRET.NRLIB
	@ echo 3562-9 making ${OUT}/RATRET.o from ${MID}/RATRET.NRLIB
	@ cp ${MID}/RATRET.NRLIB/code.o ${OUT}/RATRET.o

@
<<RATRET.NRLIB (NRLIB from MID)>>=
${MID}/RATRET.NRLIB: ${MID}/RATRET.spad
	@ echo 3563 making ${MID}/RATRET.NRLIB from ${MID}/RATRET.spad
	@ (cd ${MID} ; 	echo ')co RATRET.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RATRET.spad (SPAD from IN)>>=
${MID}/RATRET.spad: ${IN}/retract.spad.pamphlet
	@ echo 3564 making ${MID}/RATRET.spad from ${IN}/retract.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RATRET.NRLIB ; \
	${TANGLE} -R"package RATRET RationalRetractions" ${IN}/retract.spad.pamphlet >RATRET.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<retract.spad.dvi (DOC from IN)>>=
${DOC}/retract.spad.dvi: ${IN}/retract.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3565 making ${DOC}/retract.spad.dvi from ${IN}/retract.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/retract.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} retract.spad ; \
	rm -f ${DOC}/retract.spad.pamphlet ; \
	rm -f ${DOC}/retract.spad.tex ; \
	rm -f ${DOC}/retract.spad )

@
\subsection{rf.spad \cite{1}}
<<rf.spad (SPAD from IN)>>=
${OUTSRC}/rf.spad: ${IN}/rf.spad.pamphlet
	@ echo 3566 making ${OUTSRC}/rf.spad from ${IN}/rf.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/rf.spad.pamphlet >rf.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<POLYCATQ.o (O from NRLIB)>>=
${OUT}/POLYCATQ.o: ${MID}/POLYCATQ.NRLIB
	@ echo 3567-14 making ${OUT}/POLYCATQ.o from ${MID}/POLYCATQ.NRLIB
	@ cp ${MID}/POLYCATQ.NRLIB/code.o ${OUT}/POLYCATQ.o

@
<<POLYCATQ.NRLIB (NRLIB from MID)>>=
${MID}/POLYCATQ.NRLIB: ${MID}/POLYCATQ.spad
	@ echo 3568 making ${MID}/POLYCATQ.NRLIB from ${MID}/POLYCATQ.spad
	@ (cd ${MID} ; 	echo ')co POLYCATQ.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<POLYCATQ.spad (SPAD from IN)>>=
${MID}/POLYCATQ.spad: ${IN}/rf.spad.pamphlet
	@ echo 3569 making ${MID}/POLYCATQ.spad from ${IN}/rf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf POLYCATQ.NRLIB ; \
	${TANGLE} -R"package POLYCATQ PolynomialCategoryQuotientFunctions" ${IN}/rf.spad.pamphlet >POLYCATQ.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RF.o (O from NRLIB)>>=
${OUT}/RF.o: ${MID}/RF.NRLIB
	@ echo 3570-14 making ${OUT}/RF.o from ${MID}/RF.NRLIB
	@ cp ${MID}/RF.NRLIB/code.o ${OUT}/RF.o

@
<<RF.NRLIB (NRLIB from MID)>>=
${MID}/RF.NRLIB: ${MID}/RF.spad
	@ echo 3571 making ${MID}/RF.NRLIB from ${MID}/RF.spad
	@ (cd ${MID} ; 	echo ')co RF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RF.spad (SPAD from IN)>>=
${MID}/RF.spad: ${IN}/rf.spad.pamphlet
	@ echo 3572 making ${MID}/RF.spad from ${IN}/rf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RF.NRLIB ; \
	${TANGLE} -R"package RF RationalFunction" ${IN}/rf.spad.pamphlet >RF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<rf.spad.dvi (DOC from IN)>>=
${DOC}/rf.spad.dvi: ${IN}/rf.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3573 making ${DOC}/rf.spad.dvi from ${IN}/rf.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/rf.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} rf.spad ; \
	rm -f ${DOC}/rf.spad.pamphlet ; \
	rm -f ${DOC}/rf.spad.tex ; \
	rm -f ${DOC}/rf.spad )

@
\subsection{riccati.spad \cite{1}}
<<riccati.spad (SPAD from IN)>>=
${OUTSRC}/riccati.spad: ${IN}/riccati.spad.pamphlet
	@ echo 3574 making ${OUTSRC}/riccati.spad from ${IN}/riccati.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/riccati.spad.pamphlet >riccati.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODEPRRIC.o (O from NRLIB)>>=
${OUT}/ODEPRRIC.o: ${MID}/ODEPRRIC.NRLIB
	@ echo 3575-14 making ${OUT}/ODEPRRIC.o from ${MID}/ODEPRRIC.NRLIB
	@ cp ${MID}/ODEPRRIC.NRLIB/code.o ${OUT}/ODEPRRIC.o

@
<<ODEPRRIC.NRLIB (NRLIB from MID)>>=
${MID}/ODEPRRIC.NRLIB: ${MID}/ODEPRRIC.spad
	@ echo 3576 making ${MID}/ODEPRRIC.NRLIB from ${MID}/ODEPRRIC.spad
	@ (cd ${MID} ; 	echo ')co ODEPRRIC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODEPRRIC.spad (SPAD from IN)>>=
${MID}/ODEPRRIC.spad: ${IN}/riccati.spad.pamphlet
	@ echo 3577 making ${MID}/ODEPRRIC.spad from ${IN}/riccati.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ODEPRRIC.NRLIB ; \
	${TANGLE} -R"package ODEPRRIC PrimitiveRatRicDE" ${IN}/riccati.spad.pamphlet >ODEPRRIC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODERTRIC.o (O from NRLIB)>>=
${OUT}/ODERTRIC.o: ${MID}/ODERTRIC.NRLIB
	@ echo 3578-20 making ${OUT}/ODERTRIC.o from ${MID}/ODERTRIC.NRLIB
	@ cp ${MID}/ODERTRIC.NRLIB/code.o ${OUT}/ODERTRIC.o

@
<<ODERTRIC.NRLIB (NRLIB from MID)>>=
${MID}/ODERTRIC.NRLIB: ${MID}/ODERTRIC.spad
	@ echo 3579 making ${MID}/ODERTRIC.NRLIB from ${MID}/ODERTRIC.spad
	@ (cd ${MID} ; 	echo ')co ODERTRIC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ODERTRIC.spad (SPAD from IN)>>=
${MID}/ODERTRIC.spad: ${IN}/riccati.spad.pamphlet
	@ echo 3580 making ${MID}/ODERTRIC.spad from ${IN}/riccati.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ODERTRIC.NRLIB ; \
	${TANGLE} -R"package ODERTRIC RationalRicDE" ${IN}/riccati.spad.pamphlet >ODERTRIC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<riccati.spad.dvi (DOC from IN)>>=
${DOC}/riccati.spad.dvi: ${IN}/riccati.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3581 making ${DOC}/riccati.spad.dvi from ${IN}/riccati.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/riccati.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} riccati.spad ; \
	rm -f ${DOC}/riccati.spad.pamphlet ; \
	rm -f ${DOC}/riccati.spad.tex ; \
	rm -f ${DOC}/riccati.spad )

@
\subsection{rinterp.spad \cite{1}}
<<rinterp.spad (SPAD from IN)>>=
${OUTSRC}/rinterp.spad: ${IN}/rinterp.spad.pamphlet
	@ echo 3582 making ${OUTSRC}/rinterp.spad from ${IN}/rinterp.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/rinterp.spad.pamphlet >rinterp.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RINTERP.o (O from NRLIB)>>=
${OUT}/RINTERP.o: ${MID}/RINTERP.NRLIB
	@ echo 3583-u making ${OUT}/RINTERP.o from ${MID}/RINTERP.NRLIB
	@ cp ${MID}/RINTERP.NRLIB/code.o ${OUT}/RINTERP.o

@
<<RINTERP.NRLIB (NRLIB from MID)>>=
${MID}/RINTERP.NRLIB: ${MID}/RINTERP.spad
	@ echo 3584 making ${MID}/RINTERP.NRLIB from ${MID}/RINTERP.spad
	@ (cd ${MID} ; 	echo ')co RINTERP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RINTERP.spad (SPAD from IN)>>=
${MID}/RINTERP.spad: ${IN}/rinterp.spad.pamphlet
	@ echo 3585 making ${MID}/RINTERP.spad from ${IN}/rinterp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RINTERP.NRLIB ; \
	${TANGLE} -R"package RINTERP RationalInterpolation" ${IN}/rinterp.spad.pamphlet >RINTERP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<rinterp.spad.dvi (DOC from IN)>>=
${DOC}/rinterp.spad.dvi: ${IN}/rinterp.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3586 making ${DOC}/rinterp.spad.dvi from ${IN}/rinterp.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/rinterp.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} rinterp.spad ; \
	rm -f ${DOC}/rinterp.spad.pamphlet ; \
	rm -f ${DOC}/rinterp.spad.tex ; \
	rm -f ${DOC}/rinterp.spad )

@
\subsection{routines.spad \cite{1}}
<<routines.spad (SPAD from IN)>>=
${OUTSRC}/routines.spad: ${IN}/routines.spad.pamphlet
	@ echo 3587 making ${OUTSRC}/routines.spad from ${IN}/routines.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/routines.spad.pamphlet >routines.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ATTRBUT.o (O from NRLIB)>>=
${OUT}/ATTRBUT.o: ${MID}/ATTRBUT.NRLIB
	@ echo 3588-19 making ${OUT}/ATTRBUT.o from ${MID}/ATTRBUT.NRLIB
	@ cp ${MID}/ATTRBUT.NRLIB/code.o ${OUT}/ATTRBUT.o

@
<<ATTRBUT.NRLIB (NRLIB from MID)>>=
${MID}/ATTRBUT.NRLIB: ${MID}/ATTRBUT.spad
	@ echo 3589 making ${MID}/ATTRBUT.NRLIB from ${MID}/ATTRBUT.spad
	@ (cd ${MID} ; 	echo ')co ATTRBUT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ATTRBUT.spad (SPAD from IN)>>=
${MID}/ATTRBUT.spad: ${IN}/routines.spad.pamphlet
	@ echo 3590 making ${MID}/ATTRBUT.spad from ${IN}/routines.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ATTRBUT.NRLIB ; \
	${TANGLE} -R"domain ATTRBUT AttributeButtons" ${IN}/routines.spad.pamphlet >ATTRBUT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ROUTINE.o (O from NRLIB)>>=
${OUT}/ROUTINE.o: ${MID}/ROUTINE.NRLIB
	@ echo 3591-19 making ${OUT}/ROUTINE.o from ${MID}/ROUTINE.NRLIB
	@ cp ${MID}/ROUTINE.NRLIB/code.o ${OUT}/ROUTINE.o

@
<<ROUTINE.NRLIB (NRLIB from MID)>>=
${MID}/ROUTINE.NRLIB: ${MID}/ROUTINE.spad
	@ echo 3592 making ${MID}/ROUTINE.NRLIB from ${MID}/ROUTINE.spad
	@ (cd ${MID} ; 	echo ')co ROUTINE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ROUTINE.spad (SPAD from IN)>>=
${MID}/ROUTINE.spad: ${IN}/routines.spad.pamphlet
	@ echo 3593 making ${MID}/ROUTINE.spad from ${IN}/routines.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ROUTINE.NRLIB ; \
	${TANGLE} -R"domain ROUTINE RoutinesTable" ${IN}/routines.spad.pamphlet >ROUTINE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<routines.spad.dvi (DOC from IN)>>=
${DOC}/routines.spad.dvi: ${IN}/routines.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3594 making ${DOC}/routines.spad.dvi from ${IN}/routines.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/routines.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} routines.spad ; \
	rm -f ${DOC}/routines.spad.pamphlet ; \
	rm -f ${DOC}/routines.spad.tex ; \
	rm -f ${DOC}/routines.spad )

@
\subsection{rule.spad \cite{1}}
<<rule.spad (SPAD from IN)>>=
${OUTSRC}/rule.spad: ${IN}/rule.spad.pamphlet
	@ echo 3595 making ${OUTSRC}/rule.spad from ${IN}/rule.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/rule.spad.pamphlet >rule.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<APPRULE.o (O from NRLIB)>>=
${OUT}/APPRULE.o: ${MID}/APPRULE.NRLIB
	@ echo 3596-20 making ${OUT}/APPRULE.o from ${MID}/APPRULE.NRLIB
	@ cp ${MID}/APPRULE.NRLIB/code.o ${OUT}/APPRULE.o

@
<<APPRULE.NRLIB (NRLIB from MID)>>=
${MID}/APPRULE.NRLIB: ${MID}/APPRULE.spad
	@ echo 3597 making ${MID}/APPRULE.NRLIB from ${MID}/APPRULE.spad
	@ (cd ${MID} ; 	echo ')co APPRULE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<APPRULE.spad (SPAD from IN)>>=
${MID}/APPRULE.spad: ${IN}/rule.spad.pamphlet
	@ echo 3598 making ${MID}/APPRULE.spad from ${IN}/rule.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf APPRULE.NRLIB ; \
	${TANGLE} -R"package APPRULE ApplyRules" ${IN}/rule.spad.pamphlet >APPRULE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RULE.o (O from NRLIB)>>=
${OUT}/RULE.o: ${MID}/RULE.NRLIB
	@ echo 3599-20 making ${OUT}/RULE.o from ${MID}/RULE.NRLIB
	@ cp ${MID}/RULE.NRLIB/code.o ${OUT}/RULE.o

@
<<RULE.NRLIB (NRLIB from MID)>>=
${MID}/RULE.NRLIB: ${MID}/RULE.spad
	@ echo 3600 making ${MID}/RULE.NRLIB from ${MID}/RULE.spad
	@ (cd ${MID} ; 	echo ')co RULE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RULE.spad (SPAD from IN)>>=
${MID}/RULE.spad: ${IN}/rule.spad.pamphlet
	@ echo 3601 making ${MID}/RULE.spad from ${IN}/rule.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RULE.NRLIB ; \
	${TANGLE} -R"domain RULE RewriteRule" ${IN}/rule.spad.pamphlet >RULE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RULESET.o (O from NRLIB)>>=
${OUT}/RULESET.o: ${MID}/RULESET.NRLIB
	@ echo 3602-20 making ${OUT}/RULESET.o from ${MID}/RULESET.NRLIB
	@ cp ${MID}/RULESET.NRLIB/code.o ${OUT}/RULESET.o

@
<<RULESET.NRLIB (NRLIB from MID)>>=
${MID}/RULESET.NRLIB: ${MID}/RULESET.spad
	@ echo 3603 making ${MID}/RULESET.NRLIB from ${MID}/RULESET.spad
	@ (cd ${MID} ; 	echo ')co RULESET.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RULESET.spad (SPAD from IN)>>=
${MID}/RULESET.spad: ${IN}/rule.spad.pamphlet
	@ echo 3604 making ${MID}/RULESET.spad from ${IN}/rule.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RULESET.NRLIB ; \
	${TANGLE} -R"domain RULESET Ruleset" ${IN}/rule.spad.pamphlet >RULESET.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<rule.spad.dvi (DOC from IN)>>=
${DOC}/rule.spad.dvi: ${IN}/rule.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3605 making ${DOC}/rule.spad.dvi from ${IN}/rule.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/rule.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} rule.spad ; \
	rm -f ${DOC}/rule.spad.pamphlet ; \
	rm -f ${DOC}/rule.spad.tex ; \
	rm -f ${DOC}/rule.spad )

@
\subsection{seg.spad \cite{1}}
<<seg.spad (SPAD from IN)>>=
${OUTSRC}/seg.spad: ${IN}/seg.spad.pamphlet
	@ echo 3606 making ${OUTSRC}/seg.spad from ${IN}/seg.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/seg.spad.pamphlet >seg.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INCRMAPS.o (O from NRLIB)>>=
${OUT}/INCRMAPS.o: ${MID}/INCRMAPS.NRLIB
	@ echo 3607-5 making ${OUT}/INCRMAPS.o from ${MID}/INCRMAPS.NRLIB
	@ cp ${MID}/INCRMAPS.NRLIB/code.o ${OUT}/INCRMAPS.o

@
<<INCRMAPS.NRLIB (NRLIB from MID)>>=
${MID}/INCRMAPS.NRLIB: ${MID}/INCRMAPS.spad
	@ echo 3608 making ${MID}/INCRMAPS.NRLIB from ${MID}/INCRMAPS.spad
	@ (cd ${MID} ; 	echo ')co INCRMAPS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INCRMAPS.spad (SPAD from IN)>>=
${MID}/INCRMAPS.spad: ${IN}/seg.spad.pamphlet
	@ echo 3609 making ${MID}/INCRMAPS.spad from ${IN}/seg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INCRMAPS.NRLIB ; \
	${TANGLE} -R"package INCRMAPS IncrementingMaps" ${IN}/seg.spad.pamphlet >INCRMAPS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SEG.o (O from NRLIB)>>=
${OUT}/SEG.o: ${MID}/SEG.NRLIB
	@ echo 3610-10 making ${OUT}/SEG.o from ${MID}/SEG.NRLIB
	@ cp ${MID}/SEG.NRLIB/code.o ${OUT}/SEG.o

@
<<SEG.NRLIB (NRLIB from MID)>>=
${MID}/SEG.NRLIB: ${MID}/SEG.spad
	@ echo 3611 making ${MID}/SEG.NRLIB from ${MID}/SEG.spad
	@ (cd ${MID} ; 	echo ')co SEG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SEG.spad (SPAD from IN)>>=
${MID}/SEG.spad: ${IN}/seg.spad.pamphlet
	@ echo 3612 making ${MID}/SEG.spad from ${IN}/seg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SEG.NRLIB ; \
	${TANGLE} -R"domain SEG Segment" ${IN}/seg.spad.pamphlet >SEG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SEG2.o (O from NRLIB)>>=
${OUT}/SEG2.o: ${MID}/SEG2.NRLIB
	@ echo 3613-10 making ${OUT}/SEG2.o from ${MID}/SEG2.NRLIB
	@ cp ${MID}/SEG2.NRLIB/code.o ${OUT}/SEG2.o

@
<<SEG2.NRLIB (NRLIB from MID)>>=
${MID}/SEG2.NRLIB: ${MID}/SEG2.spad
	@ echo 3614 making ${MID}/SEG2.NRLIB from ${MID}/SEG2.spad
	@ (cd ${MID} ; 	echo ')co SEG2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SEG2.spad (SPAD from IN)>>=
${MID}/SEG2.spad: ${IN}/seg.spad.pamphlet
	@ echo 3615 making ${MID}/SEG2.spad from ${IN}/seg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SEG2.NRLIB ; \
	${TANGLE} -R"package SEG2 SegmentFunctions2" ${IN}/seg.spad.pamphlet >SEG2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SEGBIND.o (O from NRLIB)>>=
${OUT}/SEGBIND.o: ${MID}/SEGBIND.NRLIB
	@ echo 3616-19 making ${OUT}/SEGBIND.o from ${MID}/SEGBIND.NRLIB
	@ cp ${MID}/SEGBIND.NRLIB/code.o ${OUT}/SEGBIND.o

@
<<SEGBIND.NRLIB (NRLIB from MID)>>=
${MID}/SEGBIND.NRLIB: ${MID}/SEGBIND.spad
	@ echo 3617 making ${MID}/SEGBIND.NRLIB from ${MID}/SEGBIND.spad
	@ (cd ${MID} ; 	echo ')co SEGBIND.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SEGBIND.spad (SPAD from IN)>>=
${MID}/SEGBIND.spad: ${IN}/seg.spad.pamphlet
	@ echo 3618 making ${MID}/SEGBIND.spad from ${IN}/seg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SEGBIND.NRLIB ; \
	${TANGLE} -R"domain SEGBIND SegmentBinding" ${IN}/seg.spad.pamphlet >SEGBIND.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SEGBIND2.o (O from NRLIB)>>=
${OUT}/SEGBIND2.o: ${MID}/SEGBIND2.NRLIB
	@ echo 3619-1 making ${OUT}/SEGBIND2.o from ${MID}/SEGBIND2.NRLIB
	@ cp ${MID}/SEGBIND2.NRLIB/code.o ${OUT}/SEGBIND2.o

@
<<SEGBIND2.NRLIB (NRLIB from MID)>>=
${MID}/SEGBIND2.NRLIB: ${MID}/SEGBIND2.spad
	@ echo 3620 making ${MID}/SEGBIND2.NRLIB from ${MID}/SEGBIND2.spad
	@ (cd ${MID} ; 	echo ')co SEGBIND2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SEGBIND2.spad (SPAD from IN)>>=
${MID}/SEGBIND2.spad: ${IN}/seg.spad.pamphlet
	@ echo 3621 making ${MID}/SEGBIND2.spad from ${IN}/seg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SEGBIND2.NRLIB ; \
	${TANGLE} -R"package SEGBIND2 SegmentBindingFunctions2" ${IN}/seg.spad.pamphlet >SEGBIND2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SEGCAT.o (O from NRLIB)>>=
${OUT}/SEGCAT.o: ${MID}/SEGCAT.NRLIB
	@ echo 3622-1 making ${OUT}/SEGCAT.o from ${MID}/SEGCAT.NRLIB
	@ cp ${MID}/SEGCAT.NRLIB/code.o ${OUT}/SEGCAT.o

@
<<SEGCAT.NRLIB (NRLIB from MID)>>=
${MID}/SEGCAT.NRLIB: ${MID}/SEGCAT.spad
	@ echo 3623 making ${MID}/SEGCAT.NRLIB from ${MID}/SEGCAT.spad
	@ (cd ${MID} ; 	echo ')co SEGCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SEGCAT.spad (SPAD from IN)>>=
${MID}/SEGCAT.spad: ${IN}/seg.spad.pamphlet
	@ echo 3624 making ${MID}/SEGCAT.spad from ${IN}/seg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SEGCAT.NRLIB ; \
	${TANGLE} -R"category SEGCAT SegmentCategory" ${IN}/seg.spad.pamphlet >SEGCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SEGXCAT.o (O from NRLIB)>>=
${OUT}/SEGXCAT.o: ${MID}/SEGXCAT.NRLIB
	@ echo 3625-2 making ${OUT}/SEGXCAT.o from ${MID}/SEGXCAT.NRLIB
	@ cp ${MID}/SEGXCAT.NRLIB/code.o ${OUT}/SEGXCAT.o

@
<<SEGXCAT.NRLIB (NRLIB from MID)>>=
${MID}/SEGXCAT.NRLIB: ${MID}/SEGXCAT.spad
	@ echo 3626 making ${MID}/SEGXCAT.NRLIB from ${MID}/SEGXCAT.spad
	@ (cd ${MID} ; 	echo ')co SEGXCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SEGXCAT.spad (SPAD from IN)>>=
${MID}/SEGXCAT.spad: ${IN}/seg.spad.pamphlet
	@ echo 3627 making ${MID}/SEGXCAT.spad from ${IN}/seg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SEGXCAT.NRLIB ; \
	${TANGLE} -R"category SEGXCAT SegmentExpansionCategory" ${IN}/seg.spad.pamphlet >SEGXCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UNISEG.o (O from NRLIB)>>=
${OUT}/UNISEG.o: ${MID}/UNISEG.NRLIB
	@ echo 3628-10 making ${OUT}/UNISEG.o from ${MID}/UNISEG.NRLIB
	@ cp ${MID}/UNISEG.NRLIB/code.o ${OUT}/UNISEG.o

@
<<UNISEG.NRLIB (NRLIB from MID)>>=
${MID}/UNISEG.NRLIB: ${MID}/UNISEG.spad
	@ echo 3629 making ${MID}/UNISEG.NRLIB from ${MID}/UNISEG.spad
	@ (cd ${MID} ; 	echo ')co UNISEG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UNISEG.spad (SPAD from IN)>>=
${MID}/UNISEG.spad: ${IN}/seg.spad.pamphlet
	@ echo 3630 making ${MID}/UNISEG.spad from ${IN}/seg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UNISEG.NRLIB ; \
	${TANGLE} -R"domain UNISEG UniversalSegment" ${IN}/seg.spad.pamphlet >UNISEG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UNISEG2.o (O from NRLIB)>>=
${OUT}/UNISEG2.o: ${MID}/UNISEG2.NRLIB
	@ echo 3631-8 making ${OUT}/UNISEG2.o from ${MID}/UNISEG2.NRLIB
	@ cp ${MID}/UNISEG2.NRLIB/code.o ${OUT}/UNISEG2.o

@
<<UNISEG2.NRLIB (NRLIB from MID)>>=
${MID}/UNISEG2.NRLIB: ${MID}/UNISEG2.spad
	@ echo 3632 making ${MID}/UNISEG2.NRLIB from ${MID}/UNISEG2.spad
	@ (cd ${MID} ; 	echo ')co UNISEG2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UNISEG2.spad (SPAD from IN)>>=
${MID}/UNISEG2.spad: ${IN}/seg.spad.pamphlet
	@ echo 3633 making ${MID}/UNISEG2.spad from ${IN}/seg.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UNISEG2.NRLIB ; \
	${TANGLE} -R"package UNISEG2 UniversalSegmentFunctions2" ${IN}/seg.spad.pamphlet >UNISEG2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<seg.spad.dvi (DOC from IN)>>=
${DOC}/seg.spad.dvi: ${IN}/seg.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3634 making ${DOC}/seg.spad.dvi from ${IN}/seg.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/seg.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} seg.spad ; \
	rm -f ${DOC}/seg.spad.pamphlet ; \
	rm -f ${DOC}/seg.spad.tex ; \
	rm -f ${DOC}/seg.spad )

@
\subsection{setorder.spad \cite{1}}
<<setorder.spad (SPAD from IN)>>=
${OUTSRC}/setorder.spad: ${IN}/setorder.spad.pamphlet
	@ echo 3635 making ${OUTSRC}/setorder.spad from ${IN}/setorder.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/setorder.spad.pamphlet >setorder.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UDPO.o (O from NRLIB)>>=
${OUT}/UDPO.o: ${MID}/UDPO.NRLIB
	@ echo 3636-10 making ${OUT}/UDPO.o from ${MID}/UDPO.NRLIB
	@ cp ${MID}/UDPO.NRLIB/code.o ${OUT}/UDPO.o

@
<<UDPO.NRLIB (NRLIB from MID)>>=
${MID}/UDPO.NRLIB: ${MID}/UDPO.spad
	@ echo 3637 making ${MID}/UDPO.NRLIB from ${MID}/UDPO.spad
	@ (cd ${MID} ; 	echo ')co UDPO.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UDPO.spad (SPAD from IN)>>=
${MID}/UDPO.spad: ${IN}/setorder.spad.pamphlet
	@ echo 3638 making ${MID}/UDPO.spad from ${IN}/setorder.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UDPO.NRLIB ; \
	${TANGLE} -R"package UDPO UserDefinedPartialOrdering" ${IN}/setorder.spad.pamphlet >UDPO.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UDVO.o (O from NRLIB)>>=
${OUT}/UDVO.o: ${MID}/UDVO.NRLIB
	@ echo 3639-4 making ${OUT}/UDVO.o from ${MID}/UDVO.NRLIB
	@ cp ${MID}/UDVO.NRLIB/code.o ${OUT}/UDVO.o

@
<<UDVO.NRLIB (NRLIB from MID)>>=
${MID}/UDVO.NRLIB: ${MID}/UDVO.spad
	@ echo 3640 making ${MID}/UDVO.NRLIB from ${MID}/UDVO.spad
	@ (cd ${MID} ; 	echo ')co UDVO.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UDVO.spad (SPAD from IN)>>=
${MID}/UDVO.spad: ${IN}/setorder.spad.pamphlet
	@ echo 3641 making ${MID}/UDVO.spad from ${IN}/setorder.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UDVO.NRLIB ; \
	${TANGLE} -R"package UDVO UserDefinedVariableOrdering" ${IN}/setorder.spad.pamphlet >UDVO.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<setorder.spad.dvi (DOC from IN)>>=
${DOC}/setorder.spad.dvi: ${IN}/setorder.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3642 making ${DOC}/setorder.spad.dvi from ${IN}/setorder.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/setorder.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} setorder.spad ; \
	rm -f ${DOC}/setorder.spad.pamphlet ; \
	rm -f ${DOC}/setorder.spad.tex ; \
	rm -f ${DOC}/setorder.spad )

@
\subsection{sets.spad \cite{1}}
<<sets.spad (SPAD from IN)>>=
${OUTSRC}/sets.spad: ${IN}/sets.spad.pamphlet
	@ echo 3643 making ${OUTSRC}/sets.spad from ${IN}/sets.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/sets.spad.pamphlet >sets.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SET.o (O from NRLIB)>>=
${OUT}/SET.o: ${MID}/SET.NRLIB
	@ echo 3644-19 making ${OUT}/SET.o from ${MID}/SET.NRLIB
	@ cp ${MID}/SET.NRLIB/code.o ${OUT}/SET.o

@
<<SET.NRLIB (NRLIB from MID)>>=
${MID}/SET.NRLIB: ${MID}/SET.spad
	@ echo 3645 making ${MID}/SET.NRLIB from ${MID}/SET.spad
	@ (cd ${MID} ; 	echo ')co SET.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SET.spad (SPAD from IN)>>=
${MID}/SET.spad: ${IN}/sets.spad.pamphlet
	@ echo 3646 making ${MID}/SET.spad from ${IN}/sets.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SET.NRLIB ; \
	${TANGLE} -R"domain SET Set" ${IN}/sets.spad.pamphlet >SET.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<sets.spad.dvi (DOC from IN)>>=
${DOC}/sets.spad.dvi: ${IN}/sets.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3647 making ${DOC}/sets.spad.dvi from ${IN}/sets.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/sets.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} sets.spad ; \
	rm -f ${DOC}/sets.spad.pamphlet ; \
	rm -f ${DOC}/sets.spad.tex ; \
	rm -f ${DOC}/sets.spad )

@
\subsection{sex.spad \cite{1}}
<<sex.spad (SPAD from IN)>>=
${OUTSRC}/sex.spad: ${IN}/sex.spad.pamphlet
	@ echo 3648 making ${OUTSRC}/sex.spad from ${IN}/sex.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/sex.spad.pamphlet >sex.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SEX.o (O from NRLIB)>>=
${OUT}/SEX.o: ${MID}/SEX.NRLIB
	@ echo 3649-13 making ${OUT}/SEX.o from ${MID}/SEX.NRLIB
	@ cp ${MID}/SEX.NRLIB/code.o ${OUT}/SEX.o

@
<<SEX.NRLIB (NRLIB from MID)>>=
${MID}/SEX.NRLIB: ${MID}/SEX.spad
	@ echo 3650 making ${MID}/SEX.NRLIB from ${MID}/SEX.spad
	@ (cd ${MID} ; 	echo ')co SEX.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SEX.spad (SPAD from IN)>>=
${MID}/SEX.spad: ${IN}/sex.spad.pamphlet
	@ echo 3651 making ${MID}/SEX.spad from ${IN}/sex.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SEX.NRLIB ; \
	${TANGLE} -R"domain SEX SExpression" ${IN}/sex.spad.pamphlet >SEX.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SEXCAT.o (O from NRLIB)>>=
${OUT}/SEXCAT.o: ${MID}/SEXCAT.NRLIB
	@ echo 3652-4 making ${OUT}/SEXCAT.o from ${MID}/SEXCAT.NRLIB
	@ cp ${MID}/SEXCAT.NRLIB/code.o ${OUT}/SEXCAT.o

@
<<SEXCAT.NRLIB (NRLIB from MID)>>=
${MID}/SEXCAT.NRLIB: ${MID}/SEXCAT.spad
	@ echo 3653 making ${MID}/SEXCAT.NRLIB from ${MID}/SEXCAT.spad
	@ (cd ${MID} ; 	echo ')co SEXCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SEXCAT.spad (SPAD from IN)>>=
${MID}/SEXCAT.spad: ${IN}/sex.spad.pamphlet
	@ echo 3654 making ${MID}/SEXCAT.spad from ${IN}/sex.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SEXCAT.NRLIB ; \
	${TANGLE} -R"category SEXCAT SExpressionCategory" ${IN}/sex.spad.pamphlet >SEXCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SEXOF.o (O from NRLIB)>>=
${OUT}/SEXOF.o: ${MID}/SEXOF.NRLIB
	@ echo 3655-10 making ${OUT}/SEXOF.o from ${MID}/SEXOF.NRLIB
	@ cp ${MID}/SEXOF.NRLIB/code.o ${OUT}/SEXOF.o

@
<<SEXOF.NRLIB (NRLIB from MID)>>=
${MID}/SEXOF.NRLIB: ${MID}/SEXOF.spad
	@ echo 3656 making ${MID}/SEXOF.NRLIB from ${MID}/SEXOF.spad
	@ (cd ${MID} ; 	echo ')co SEXOF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SEXOF.spad (SPAD from IN)>>=
${MID}/SEXOF.spad: ${IN}/sex.spad.pamphlet
	@ echo 3657 making ${MID}/SEXOF.spad from ${IN}/sex.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SEXOF.NRLIB ; \
	${TANGLE} -R"domain SEXOF SExpressionOf" ${IN}/sex.spad.pamphlet >SEXOF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<sex.spad.dvi (DOC from IN)>>=
${DOC}/sex.spad.dvi: ${IN}/sex.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3658 making ${DOC}/sex.spad.dvi from ${IN}/sex.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/sex.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} sex.spad ; \
	rm -f ${DOC}/sex.spad.pamphlet ; \
	rm -f ${DOC}/sex.spad.tex ; \
	rm -f ${DOC}/sex.spad )

@
\subsection{sf.spad \cite{1}}
<<sf.spad (SPAD from IN)>>=
${OUTSRC}/sf.spad: ${IN}/sf.spad.pamphlet
	@ echo 3659 making ${OUTSRC}/sf.spad from ${IN}/sf.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/sf.spad.pamphlet >sf.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DFLOAT.o (O from NRLIB)>>=
${OUT}/DFLOAT.o: ${MID}/DFLOAT.NRLIB
	@ echo 3660-0c making ${OUT}/DFLOAT.o from ${MID}/DFLOAT.NRLIB
	@ cp ${MID}/DFLOAT.NRLIB/code.o ${OUT}/DFLOAT.o

@
<<DFLOAT.NRLIB (NRLIB from MID)>>=
${MID}/DFLOAT.NRLIB: ${MID}/DFLOAT.spad
	@ echo 3661 making ${MID}/DFLOAT.NRLIB from ${MID}/DFLOAT.spad
	@ (cd ${MID} ; 	echo ')co DFLOAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DFLOAT.spad (SPAD from IN)>>=
${MID}/DFLOAT.spad: ${IN}/sf.spad.pamphlet
	@ echo 3662 making ${MID}/DFLOAT.spad from ${IN}/sf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DFLOAT.NRLIB ; \
	${TANGLE} -R"domain DFLOAT DoubleFloat" ${IN}/sf.spad.pamphlet >DFLOAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DFLOAT.o (BOOTSTRAP from MID)>>=
${MID}/DFLOAT.o: ${MID}/DFLOAT.lsp
	@ echo 3663-0b making ${MID}/DFLOAT.o from ${MID}/DFLOAT.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "DFLOAT.lsp" :output-file "DFLOAT.o"))' | ${DEPSYS} )
	@ cp ${MID}/DFLOAT.o ${OUT}/DFLOAT.o

@
<<DFLOAT.lsp (LISP from IN)>>=
${MID}/DFLOAT.lsp: ${IN}/sf.spad.pamphlet
	@ echo 3664 making ${MID}/DFLOAT.lsp from ${IN}/sf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DFLOAT.NRLIB ; \
	rm -rf ${OUT}/DFLOAT.o ; \
	${TANGLE} -R"DFLOAT.lsp BOOTSTRAP" ${IN}/sf.spad.pamphlet >DFLOAT.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FPS-.o (O from NRLIB)>>=
${OUT}/FPS-.o: ${MID}/FPS.NRLIB
	@ echo 3665-0c making ${OUT}/FPS-.o from ${MID}/FPS-.NRLIB
	@ cp ${MID}/FPS-.NRLIB/code.o ${OUT}/FPS-.o

@
<<FPS-.NRLIB (NRLIB from MID)>>=
${MID}/FPS-.NRLIB: ${MID}/FPS.spad 
	@ echo 3666 making ${MID}/FPS-.NRLIB from ${MID}/FPS.spad
	@ (cd ${MID} ; 	echo ')co FPS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FPS.o (O from NRLIB)>>=
${OUT}/FPS.o: ${MID}/FPS.NRLIB
	@ echo 3667-0c making ${OUT}/FPS.o from ${MID}/FPS.NRLIB
	@ cp ${MID}/FPS.NRLIB/code.o ${OUT}/FPS.o

@
<<FPS.NRLIB (NRLIB from MID)>>=
${MID}/FPS.NRLIB: ${MID}/FPS.spad
	@ echo 3668 making ${MID}/FPS.NRLIB from ${MID}/FPS.spad
	@ (cd ${MID} ; 	echo ')co FPS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FPS.spad (SPAD from IN)>>=
${MID}/FPS.spad: ${IN}/sf.spad.pamphlet
	@ echo 3669 making ${MID}/FPS.spad from ${IN}/sf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FPS.NRLIB ; \
	${TANGLE} -R"category FPS FloatingPointSystem" ${IN}/sf.spad.pamphlet >FPS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FPS-.o (BOOTSTRAP from MID)>>=
${MID}/FPS-.o: ${MID}/FPS-.lsp 
	@ echo 3670-0b making ${MID}/FPS-.o from ${MID}/FPS-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "FPS-.lsp" :output-file "FPS-.o"))' | ${DEPSYS} )
	@ cp ${MID}/FPS-.o ${OUT}/FPS-.o

@
<<FPS-.lsp (LISP from IN)>>=
${MID}/FPS-.lsp: ${IN}/sf.spad.pamphlet
	@ echo 3671 making ${MID}/FPS-.lsp from ${IN}/sf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FPS-.NRLIB ; \
	rm -rf ${OUT}/FPS-.o ; \
	${TANGLE} -R"FPS-.lsp BOOTSTRAP" ${IN}/sf.spad.pamphlet >FPS-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FPS.o (BOOTSTRAP from MID)>>=
${MID}/FPS.o: ${MID}/FPS.lsp 
	@ echo 3672-0b making ${MID}/FPS.o from ${MID}/FPS.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "FPS.lsp" :output-file "FPS.o"))' | ${DEPSYS} )
	@ cp ${MID}/FPS.o ${OUT}/FPS.o

@
<<FPS.lsp (LISP from IN)>>=
${MID}/FPS.lsp: ${IN}/sf.spad.pamphlet
	@ echo 3673 making ${MID}/FPS.lsp from ${IN}/sf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FPS.NRLIB ; \
	rm -rf ${OUT}/FPS.o ; \
	${TANGLE} -R"FPS.lsp BOOTSTRAP" ${IN}/sf.spad.pamphlet >FPS.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RADCAT-.o (O from NRLIB)>>=
${OUT}/RADCAT-.o: ${MID}/RADCAT.NRLIB
	@ echo 3674-9 making ${OUT}/RADCAT-.o from ${MID}/RADCAT-.NRLIB
	@ cp ${MID}/RADCAT-.NRLIB/code.o ${OUT}/RADCAT-.o

@
<<RADCAT-.NRLIB (NRLIB from MID)>>=
${MID}/RADCAT-.NRLIB: ${MID}/RADCAT.spad 
	@ echo 3675 making ${MID}/RADCAT-.NRLIB from ${MID}/RADCAT.spad
	@ (cd ${MID} ; 	echo ')co RADCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RADCAT.o (O from NRLIB)>>=
${OUT}/RADCAT.o: ${MID}/RADCAT.NRLIB
	@ echo 3676-9 making ${OUT}/RADCAT.o from ${MID}/RADCAT.NRLIB
	@ cp ${MID}/RADCAT.NRLIB/code.o ${OUT}/RADCAT.o

@
<<RADCAT.NRLIB (NRLIB from MID)>>=
${MID}/RADCAT.NRLIB: ${MID}/RADCAT.spad
	@ echo 3677 making ${MID}/RADCAT.NRLIB from ${MID}/RADCAT.spad
	@ (cd ${MID} ; 	echo ')co RADCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RADCAT.spad (SPAD from IN)>>=
${MID}/RADCAT.spad: ${IN}/sf.spad.pamphlet
	@ echo 3678 making ${MID}/RADCAT.spad from ${IN}/sf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RADCAT.NRLIB ; \
	${TANGLE} -R"category RADCAT RadicalCategory" ${IN}/sf.spad.pamphlet >RADCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<REAL.o (O from NRLIB)>>=
${OUT}/REAL.o: ${MID}/REAL.NRLIB
	@ echo 3679-1 making ${OUT}/REAL.o from ${MID}/REAL.NRLIB
	@ cp ${MID}/REAL.NRLIB/code.o ${OUT}/REAL.o

@
<<REAL.NRLIB (NRLIB from MID)>>=
${MID}/REAL.NRLIB: ${MID}/REAL.spad
	@ echo 3680 making ${MID}/REAL.NRLIB from ${MID}/REAL.spad
	@ (cd ${MID} ; 	echo ')co REAL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<REAL.spad (SPAD from IN)>>=
${MID}/REAL.spad: ${IN}/sf.spad.pamphlet
	@ echo 3681 making ${MID}/REAL.spad from ${IN}/sf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf REAL.NRLIB ; \
	${TANGLE} -R"category REAL RealConstant" ${IN}/sf.spad.pamphlet >REAL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RNS-.o (O from NRLIB)>>=
${OUT}/RNS-.o: ${MID}/RNS.NRLIB
	@ echo 3682-0c making ${OUT}/RNS-.o from ${MID}/RNS-.NRLIB
	@ cp ${MID}/RNS-.NRLIB/code.o ${OUT}/RNS-.o

@
<<RNS-.NRLIB (NRLIB from MID)>>=
${MID}/RNS-.NRLIB: ${MID}/RNS.spad 
	@ echo 3683 making ${MID}/RNS-.NRLIB from ${MID}/RNS.spad
	@ (cd ${MID} ; 	echo ')co RNS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RNS.o (O from NRLIB)>>=
${OUT}/RNS.o: ${MID}/RNS.NRLIB
	@ echo 3684-0c making ${OUT}/RNS.o from ${MID}/RNS.NRLIB
	@ cp ${MID}/RNS.NRLIB/code.o ${OUT}/RNS.o

@
<<RNS.NRLIB (NRLIB from MID)>>=
${MID}/RNS.NRLIB: ${MID}/RNS.spad
	@ echo 3685 making ${MID}/RNS.NRLIB from ${MID}/RNS.spad
	@ (cd ${MID} ; 	echo ')co RNS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RNS.spad (SPAD from IN)>>=
${MID}/RNS.spad: ${IN}/sf.spad.pamphlet
	@ echo 3686 making ${MID}/RNS.spad from ${IN}/sf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RNS.NRLIB ; \
	${TANGLE} -R"category RNS RealNumberSystem" ${IN}/sf.spad.pamphlet >RNS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RNS-.o (BOOTSTRAP from MID)>>=
${MID}/RNS-.o: ${MID}/RNS-.lsp 
	@ echo 3687-0b making ${MID}/RNS-.o from ${MID}/RNS-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "RNS-.lsp" :output-file "RNS-.o"))' | ${DEPSYS} )
	@ cp ${MID}/RNS-.o ${OUT}/RNS-.o

@
<<RNS-.lsp (LISP from IN)>>=
${MID}/RNS-.lsp: ${IN}/sf.spad.pamphlet
	@ echo 3688 making ${MID}/RNS-.lsp from ${IN}/sf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RNS-.NRLIB ; \
	rm -rf ${OUT}/RNS-.o ; \
	${TANGLE} -R"RNS-.lsp BOOTSTRAP" ${IN}/sf.spad.pamphlet >RNS-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RNS.o (BOOTSTRAP from MID)>>=
${MID}/RNS.o: ${MID}/RNS.lsp 
	@ echo 3689-0b making ${MID}/RNS.o from ${MID}/RNS.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "RNS.lsp" :output-file "RNS.o"))' | ${DEPSYS} )
	@ cp ${MID}/RNS.o ${OUT}/RNS.o

@
<<RNS.lsp (LISP from IN)>>=
${MID}/RNS.lsp: ${IN}/sf.spad.pamphlet
	@ echo 3690 making ${MID}/RNS.lsp from ${IN}/sf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RNS.NRLIB ; \
	rm -rf ${OUT}/RNS.o ; \
	${TANGLE} -R"RNS.lsp BOOTSTRAP" ${IN}/sf.spad.pamphlet >RNS.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<sf.spad.dvi (DOC from IN)>>=
${DOC}/sf.spad.dvi: ${IN}/sf.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3691 making ${DOC}/sf.spad.dvi from ${IN}/sf.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/sf.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} sf.spad ; \
	rm -f ${DOC}/sf.spad.pamphlet ; \
	rm -f ${DOC}/sf.spad.tex ; \
	rm -f ${DOC}/sf.spad )

@
\subsection{sgcf.spad \cite{1}}
<<sgcf.spad (SPAD from IN)>>=
${OUTSRC}/sgcf.spad: ${IN}/sgcf.spad.pamphlet
	@ echo 3692 making ${OUTSRC}/sgcf.spad from ${IN}/sgcf.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/sgcf.spad.pamphlet >sgcf.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SGCF.o (O from NRLIB)>>=
${OUT}/SGCF.o: ${MID}/SGCF.NRLIB
	@ echo 3693-17 making ${OUT}/SGCF.o from ${MID}/SGCF.NRLIB
	@ cp ${MID}/SGCF.NRLIB/code.o ${OUT}/SGCF.o

@
<<SGCF.NRLIB (NRLIB from MID)>>=
${MID}/SGCF.NRLIB: ${MID}/SGCF.spad
	@ echo 3694 making ${MID}/SGCF.NRLIB from ${MID}/SGCF.spad
	@ (cd ${MID} ; 	echo ')co SGCF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SGCF.spad (SPAD from IN)>>=
${MID}/SGCF.spad: ${IN}/sgcf.spad.pamphlet
	@ echo 3695 making ${MID}/SGCF.spad from ${IN}/sgcf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SGCF.NRLIB ; \
	${TANGLE} -R"package SGCF SymmetricGroupCombinatoricFunctions" ${IN}/sgcf.spad.pamphlet >SGCF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<sgcf.spad.dvi (DOC from IN)>>=
${DOC}/sgcf.spad.dvi: ${IN}/sgcf.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3696 making ${DOC}/sgcf.spad.dvi from ${IN}/sgcf.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/sgcf.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} sgcf.spad ; \
	rm -f ${DOC}/sgcf.spad.pamphlet ; \
	rm -f ${DOC}/sgcf.spad.tex ; \
	rm -f ${DOC}/sgcf.spad )

@
\subsection{sign.spad \cite{1}}
<<sign.spad (SPAD from IN)>>=
${OUTSRC}/sign.spad: ${IN}/sign.spad.pamphlet
	@ echo 3697 making ${OUTSRC}/sign.spad from ${IN}/sign.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/sign.spad.pamphlet >sign.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INPSIGN.o (O from NRLIB)>>=
${OUT}/INPSIGN.o: ${MID}/INPSIGN.NRLIB
	@ echo 3698-14 making ${OUT}/INPSIGN.o from ${MID}/INPSIGN.NRLIB
	@ cp ${MID}/INPSIGN.NRLIB/code.o ${OUT}/INPSIGN.o

@
<<INPSIGN.NRLIB (NRLIB from MID)>>=
${MID}/INPSIGN.NRLIB: ${MID}/INPSIGN.spad
	@ echo 3699 making ${MID}/INPSIGN.NRLIB from ${MID}/INPSIGN.spad
	@ (cd ${MID} ; 	echo ')co INPSIGN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INPSIGN.spad (SPAD from IN)>>=
${MID}/INPSIGN.spad: ${IN}/sign.spad.pamphlet
	@ echo 3700 making ${MID}/INPSIGN.spad from ${IN}/sign.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INPSIGN.NRLIB ; \
	${TANGLE} -R"package INPSIGN InnerPolySign" ${IN}/sign.spad.pamphlet >INPSIGN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LIMITRF.o (O from NRLIB)>>=
${OUT}/LIMITRF.o: ${MID}/LIMITRF.NRLIB
	@ echo 3701-14 making ${OUT}/LIMITRF.o from ${MID}/LIMITRF.NRLIB
	@ cp ${MID}/LIMITRF.NRLIB/code.o ${OUT}/LIMITRF.o

@
<<LIMITRF.NRLIB (NRLIB from MID)>>=
${MID}/LIMITRF.NRLIB: ${MID}/LIMITRF.spad
	@ echo 3702 making ${MID}/LIMITRF.NRLIB from ${MID}/LIMITRF.spad
	@ (cd ${MID} ; 	echo ')co LIMITRF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LIMITRF.spad (SPAD from IN)>>=
${MID}/LIMITRF.spad: ${IN}/sign.spad.pamphlet
	@ echo 3703 making ${MID}/LIMITRF.spad from ${IN}/sign.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LIMITRF.NRLIB ; \
	${TANGLE} -R"package LIMITRF RationalFunctionLimitPackage" ${IN}/sign.spad.pamphlet >LIMITRF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SIGNRF.o (O from NRLIB)>>=
${OUT}/SIGNRF.o: ${MID}/SIGNRF.NRLIB
	@ echo 3704-14 making ${OUT}/SIGNRF.o from ${MID}/SIGNRF.NRLIB
	@ cp ${MID}/SIGNRF.NRLIB/code.o ${OUT}/SIGNRF.o

@
<<SIGNRF.NRLIB (NRLIB from MID)>>=
${MID}/SIGNRF.NRLIB: ${MID}/SIGNRF.spad
	@ echo 3705 making ${MID}/SIGNRF.NRLIB from ${MID}/SIGNRF.spad
	@ (cd ${MID} ; 	echo ')co SIGNRF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SIGNRF.spad (SPAD from IN)>>=
${MID}/SIGNRF.spad: ${IN}/sign.spad.pamphlet
	@ echo 3706 making ${MID}/SIGNRF.spad from ${IN}/sign.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SIGNRF.NRLIB ; \
	${TANGLE} -R"package SIGNRF RationalFunctionSign" ${IN}/sign.spad.pamphlet >SIGNRF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TOOLSIGN.o (O from NRLIB)>>=
${OUT}/TOOLSIGN.o: ${MID}/TOOLSIGN.NRLIB
	@ echo 3707-20 making ${OUT}/TOOLSIGN.o from ${MID}/TOOLSIGN.NRLIB
	@ cp ${MID}/TOOLSIGN.NRLIB/code.o ${OUT}/TOOLSIGN.o

@
<<TOOLSIGN.NRLIB (NRLIB from MID)>>=
${MID}/TOOLSIGN.NRLIB: ${MID}/TOOLSIGN.spad
	@ echo 3708 making ${MID}/TOOLSIGN.NRLIB from ${MID}/TOOLSIGN.spad
	@ (cd ${MID} ; 	echo ')co TOOLSIGN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TOOLSIGN.spad (SPAD from IN)>>=
${MID}/TOOLSIGN.spad: ${IN}/sign.spad.pamphlet
	@ echo 3709 making ${MID}/TOOLSIGN.spad from ${IN}/sign.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf TOOLSIGN.NRLIB ; \
	${TANGLE} -R"package TOOLSIGN ToolsForSign" ${IN}/sign.spad.pamphlet >TOOLSIGN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<sign.spad.dvi (DOC from IN)>>=
${DOC}/sign.spad.dvi: ${IN}/sign.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3710 making ${DOC}/sign.spad.dvi from ${IN}/sign.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/sign.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} sign.spad ; \
	rm -f ${DOC}/sign.spad.pamphlet ; \
	rm -f ${DOC}/sign.spad.tex ; \
	rm -f ${DOC}/sign.spad )

@
\subsection{si.spad \cite{1}}
<<si.spad (SPAD from IN)>>=
${OUTSRC}/si.spad: ${IN}/si.spad.pamphlet
	@ echo 3711 making ${OUTSRC}/si.spad from ${IN}/si.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/si.spad.pamphlet >si.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SINT.o (O from NRLIB)>>=
${OUT}/SINT.o: ${MID}/SINT.NRLIB
	@ echo 3712-0c making ${OUT}/SINT.o from ${MID}/SINT.NRLIB
	@ cp ${MID}/SINT.NRLIB/code.o ${OUT}/SINT.o

@
<<SINT.NRLIB (NRLIB from MID)>>=
${MID}/SINT.NRLIB: ${MID}/SINT.spad
	@ echo 3713 making ${MID}/SINT.NRLIB from ${MID}/SINT.spad
	@ (cd ${MID} ; 	echo ')co SINT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SINT.spad (SPAD from IN)>>=
${MID}/SINT.spad: ${IN}/si.spad.pamphlet
	@ echo 3714 making ${MID}/SINT.spad from ${IN}/si.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SINT.NRLIB ; \
	${TANGLE} -R"domain SINT SingleInteger" ${IN}/si.spad.pamphlet >SINT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SINT.o (BOOTSTRAP from MID)>>=
${MID}/SINT.o: ${MID}/SINT.lsp
	@ echo 3715-0b making ${MID}/SINT.o from ${MID}/SINT.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "SINT.lsp" :output-file "SINT.o"))' | ${DEPSYS} )
	@ cp ${MID}/SINT.o ${OUT}/SINT.o

@
<<SINT.lsp (LISP from IN)>>=
${MID}/SINT.lsp: ${IN}/si.spad.pamphlet
	@ echo 3716 making ${MID}/SINT.lsp from ${IN}/si.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SINT.NRLIB ; \
	rm -rf ${OUT}/SINT.o ; \
	${TANGLE} -R"SINT.lsp BOOTSTRAP" ${IN}/si.spad.pamphlet >SINT.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INS-.o (O from NRLIB)>>=
${OUT}/INS-.o: ${MID}/INS.NRLIB
	@ echo 3717-0c making ${OUT}/INS-.o from ${MID}/INS-.NRLIB
	@ cp ${MID}/INS-.NRLIB/code.o ${OUT}/INS-.o

@
<<INS-.NRLIB (NRLIB from MID)>>=
${MID}/INS-.NRLIB: ${MID}/INS.spad 
	@ echo 3718 making ${MID}/INS-.NRLIB from ${MID}/INS.spad
	@ (cd ${MID} ; 	echo ')co INS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INS.o (O from NRLIB)>>=
${OUT}/INS.o: ${MID}/INS.NRLIB
	@ echo 3719-0c making ${OUT}/INS.o from ${MID}/INS.NRLIB
	@ cp ${MID}/INS.NRLIB/code.o ${OUT}/INS.o

@
<<INS.NRLIB (NRLIB from MID)>>=
${MID}/INS.NRLIB: ${MID}/INS.spad
	@ echo 3720 making ${MID}/INS.NRLIB from ${MID}/INS.spad
	@ (cd ${MID} ; 	echo ')co INS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INS.spad (SPAD from IN)>>=
${MID}/INS.spad: ${IN}/si.spad.pamphlet
	@ echo 3721 making ${MID}/INS.spad from ${IN}/si.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INS.NRLIB ; \
	${TANGLE} -R"category INS IntegerNumberSystem" ${IN}/si.spad.pamphlet >INS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INS-.o (BOOTSTRAP from MID)>>=
${MID}/INS-.o: ${MID}/INS-.lsp 
	@ echo 3722-0b making ${MID}/INS-.o from ${MID}/INS-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "INS-.lsp" :output-file "INS-.o"))' | ${DEPSYS} )
	@ cp ${MID}/INS-.o ${OUT}/INS-.o

@
<<INS-.lsp (LISP from IN)>>=
${MID}/INS-.lsp: ${IN}/si.spad.pamphlet
	@ echo 3723 making ${MID}/INS-.lsp from ${IN}/si.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INS-.NRLIB ; \
	rm -rf ${OUT}/INS-.o ; \
	${TANGLE} -R"INS-.lsp BOOTSTRAP" ${IN}/si.spad.pamphlet >INS-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INS.o (BOOTSTRAP from MID)>>=
${MID}/INS.o: ${MID}/INS.lsp
	@ echo 3724-0b making ${MID}/INS.o from ${MID}/INS.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "INS.lsp" :output-file "INS.o"))' | ${DEPSYS} )
	@ cp ${MID}/INS.o ${OUT}/INS.o

@
<<INS.lsp (LISP from IN)>>=
${MID}/INS.lsp: ${IN}/si.spad.pamphlet
	@ echo 3725 making ${MID}/INS.lsp from ${IN}/si.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INS.NRLIB ; \
	rm -rf ${OUT}/INS.o ; \
	${TANGLE} -R"INS.lsp BOOTSTRAP" ${IN}/si.spad.pamphlet >INS.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<si.spad.dvi (DOC from IN)>>=
${DOC}/si.spad.dvi: ${IN}/si.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3726 making ${DOC}/si.spad.dvi from ${IN}/si.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/si.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} si.spad ; \
	rm -f ${DOC}/si.spad.pamphlet ; \
	rm -f ${DOC}/si.spad.tex ; \
	rm -f ${DOC}/si.spad )

@
\subsection{smith.spad \cite{1}}
<<smith.spad (SPAD from IN)>>=
${OUTSRC}/smith.spad: ${IN}/smith.spad.pamphlet
	@ echo 3727 making ${OUTSRC}/smith.spad from ${IN}/smith.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/smith.spad.pamphlet >smith.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SMITH.o (O from NRLIB)>>=
${OUT}/SMITH.o: ${MID}/SMITH.NRLIB
	@ echo 3728-14 making ${OUT}/SMITH.o from ${MID}/SMITH.NRLIB
	@ cp ${MID}/SMITH.NRLIB/code.o ${OUT}/SMITH.o

@
<<SMITH.NRLIB (NRLIB from MID)>>=
${MID}/SMITH.NRLIB: ${MID}/SMITH.spad
	@ echo 3729 making ${MID}/SMITH.NRLIB from ${MID}/SMITH.spad
	@ (cd ${MID} ; 	echo ')co SMITH.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SMITH.spad (SPAD from IN)>>=
${MID}/SMITH.spad: ${IN}/smith.spad.pamphlet
	@ echo 3730 making ${MID}/SMITH.spad from ${IN}/smith.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SMITH.NRLIB ; \
	${TANGLE} -R"package SMITH SmithNormalForm" ${IN}/smith.spad.pamphlet >SMITH.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<smith.spad.dvi (DOC from IN)>>=
${DOC}/smith.spad.dvi: ${IN}/smith.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3731 making ${DOC}/smith.spad.dvi from ${IN}/smith.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/smith.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} smith.spad ; \
	rm -f ${DOC}/smith.spad.pamphlet ; \
	rm -f ${DOC}/smith.spad.tex ; \
	rm -f ${DOC}/smith.spad )

@
\subsection{solvedio.spad \cite{1}}
<<solvedio.spad (SPAD from IN)>>=
${OUTSRC}/solvedio.spad: ${IN}/solvedio.spad.pamphlet
	@ echo 3732 making ${OUTSRC}/solvedio.spad from ${IN}/solvedio.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/solvedio.spad.pamphlet >solvedio.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DIOSP.o (O from NRLIB)>>=
${OUT}/DIOSP.o: ${MID}/DIOSP.NRLIB
	@ echo 3733-13 making ${OUT}/DIOSP.o from ${MID}/DIOSP.NRLIB
	@ cp ${MID}/DIOSP.NRLIB/code.o ${OUT}/DIOSP.o

@
<<DIOSP.NRLIB (NRLIB from MID)>>=
${MID}/DIOSP.NRLIB: ${MID}/DIOSP.spad
	@ echo 3734 making ${MID}/DIOSP.NRLIB from ${MID}/DIOSP.spad
	@ (cd ${MID} ; 	echo ')co DIOSP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DIOSP.spad (SPAD from IN)>>=
${MID}/DIOSP.spad: ${IN}/solvedio.spad.pamphlet
	@ echo 3735 making ${MID}/DIOSP.spad from ${IN}/solvedio.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DIOSP.NRLIB ; \
	${TANGLE} -R"package DIOSP DiophantineSolutionPackage" ${IN}/solvedio.spad.pamphlet >DIOSP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<solvedio.spad.dvi (DOC from IN)>>=
${DOC}/solvedio.spad.dvi: ${IN}/solvedio.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3736 making ${DOC}/solvedio.spad.dvi from ${IN}/solvedio.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/solvedio.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} solvedio.spad ; \
	rm -f ${DOC}/solvedio.spad.pamphlet ; \
	rm -f ${DOC}/solvedio.spad.tex ; \
	rm -f ${DOC}/solvedio.spad )

@
\subsection{solvefor.spad \cite{1}}
<<solvefor.spad (SPAD from IN)>>=
${OUTSRC}/solvefor.spad: ${IN}/solvefor.spad.pamphlet
	@ echo 3737 making ${OUTSRC}/solvefor.spad from ${IN}/solvefor.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/solvefor.spad.pamphlet >solvefor.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SOLVEFOR.o (O from NRLIB)>>=
${OUT}/SOLVEFOR.o: ${MID}/SOLVEFOR.NRLIB
	@ echo 3738-14 making ${OUT}/SOLVEFOR.o from ${MID}/SOLVEFOR.NRLIB
	@ cp ${MID}/SOLVEFOR.NRLIB/code.o ${OUT}/SOLVEFOR.o

@
<<SOLVEFOR.NRLIB (NRLIB from MID)>>=
${MID}/SOLVEFOR.NRLIB: ${MID}/SOLVEFOR.spad
	@ echo 3739 making ${MID}/SOLVEFOR.NRLIB from ${MID}/SOLVEFOR.spad
	@ (cd ${MID} ; 	echo ')co SOLVEFOR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SOLVEFOR.spad (SPAD from IN)>>=
${MID}/SOLVEFOR.spad: ${IN}/solvefor.spad.pamphlet
	@ echo 3740 making ${MID}/SOLVEFOR.spad from ${IN}/solvefor.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SOLVEFOR.NRLIB ; \
	${TANGLE} -R"package SOLVEFOR PolynomialSolveByFormulas" ${IN}/solvefor.spad.pamphlet >SOLVEFOR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<solvefor.spad.dvi (DOC from IN)>>=
${DOC}/solvefor.spad.dvi: ${IN}/solvefor.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3741 making ${DOC}/solvefor.spad.dvi from ${IN}/solvefor.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/solvefor.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} solvefor.spad ; \
	rm -f ${DOC}/solvefor.spad.pamphlet ; \
	rm -f ${DOC}/solvefor.spad.tex ; \
	rm -f ${DOC}/solvefor.spad )

@
\subsection{solvelin.spad \cite{1}}
<<solvelin.spad (SPAD from IN)>>=
${OUTSRC}/solvelin.spad: ${IN}/solvelin.spad.pamphlet
	@ echo 3742 making ${OUTSRC}/solvelin.spad from ${IN}/solvelin.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/solvelin.spad.pamphlet >solvelin.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LSMP.o (O from NRLIB)>>=
${OUT}/LSMP.o: ${MID}/LSMP.NRLIB
	@ echo 3743-12 making ${OUT}/LSMP.o from ${MID}/LSMP.NRLIB
	@ cp ${MID}/LSMP.NRLIB/code.o ${OUT}/LSMP.o

@
<<LSMP.NRLIB (NRLIB from MID)>>=
${MID}/LSMP.NRLIB: ${MID}/LSMP.spad
	@ echo 3744 making ${MID}/LSMP.NRLIB from ${MID}/LSMP.spad
	@ (cd ${MID} ; 	echo ')co LSMP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LSMP.spad (SPAD from IN)>>=
${MID}/LSMP.spad: ${IN}/solvelin.spad.pamphlet
	@ echo 3745 making ${MID}/LSMP.spad from ${IN}/solvelin.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LSMP.NRLIB ; \
	${TANGLE} -R"package LSMP LinearSystemMatrixPackage" ${IN}/solvelin.spad.pamphlet >LSMP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LSMP1.o (O from NRLIB)>>=
${OUT}/LSMP1.o: ${MID}/LSMP1.NRLIB
	@ echo 3746-12 making ${OUT}/LSMP1.o from ${MID}/LSMP1.NRLIB
	@ cp ${MID}/LSMP1.NRLIB/code.o ${OUT}/LSMP1.o

@
<<LSMP1.NRLIB (NRLIB from MID)>>=
${MID}/LSMP1.NRLIB: ${MID}/LSMP1.spad
	@ echo 3747 making ${MID}/LSMP1.NRLIB from ${MID}/LSMP1.spad
	@ (cd ${MID} ; 	echo ')co LSMP1.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LSMP1.spad (SPAD from IN)>>=
${MID}/LSMP1.spad: ${IN}/solvelin.spad.pamphlet
	@ echo 3748 making ${MID}/LSMP1.spad from ${IN}/solvelin.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LSMP1.NRLIB ; \
	${TANGLE} -R"package LSMP1 LinearSystemMatrixPackage1" ${IN}/solvelin.spad.pamphlet >LSMP1.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LSPP.o (O from NRLIB)>>=
${OUT}/LSPP.o: ${MID}/LSPP.NRLIB
	@ echo 3749-14 making ${OUT}/LSPP.o from ${MID}/LSPP.NRLIB
	@ cp ${MID}/LSPP.NRLIB/code.o ${OUT}/LSPP.o

@
<<LSPP.NRLIB (NRLIB from MID)>>=
${MID}/LSPP.NRLIB: ${MID}/LSPP.spad
	@ echo 3750 making ${MID}/LSPP.NRLIB from ${MID}/LSPP.spad
	@ (cd ${MID} ; 	echo ')co LSPP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LSPP.spad (SPAD from IN)>>=
${MID}/LSPP.spad: ${IN}/solvelin.spad.pamphlet
	@ echo 3751 making ${MID}/LSPP.spad from ${IN}/solvelin.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LSPP.NRLIB ; \
	${TANGLE} -R"package LSPP LinearSystemPolynomialPackage" ${IN}/solvelin.spad.pamphlet >LSPP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<solvelin.spad.dvi (DOC from IN)>>=
${DOC}/solvelin.spad.dvi: ${IN}/solvelin.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3752 making ${DOC}/solvelin.spad.dvi from ${IN}/solvelin.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/solvelin.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} solvelin.spad ; \
	rm -f ${DOC}/solvelin.spad.pamphlet ; \
	rm -f ${DOC}/solvelin.spad.tex ; \
	rm -f ${DOC}/solvelin.spad )

@
\subsection{solverad.spad \cite{1}}
<<solverad.spad (SPAD from IN)>>=
${OUTSRC}/solverad.spad: ${IN}/solverad.spad.pamphlet
	@ echo 3753 making ${OUTSRC}/solverad.spad from ${IN}/solverad.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/solverad.spad.pamphlet >solverad.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SOLVERAD.o (O from NRLIB)>>=
${OUT}/SOLVERAD.o: ${MID}/SOLVERAD.NRLIB
	@ echo 3754-21 making ${OUT}/SOLVERAD.o from ${MID}/SOLVERAD.NRLIB
	@ cp ${MID}/SOLVERAD.NRLIB/code.o ${OUT}/SOLVERAD.o

@
<<SOLVERAD.NRLIB (NRLIB from MID)>>=
${MID}/SOLVERAD.NRLIB: ${MID}/SOLVERAD.spad
	@ echo 3755 making ${MID}/SOLVERAD.NRLIB from ${MID}/SOLVERAD.spad
	@ (cd ${MID} ; 	echo ')co SOLVERAD.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SOLVERAD.spad (SPAD from IN)>>=
${MID}/SOLVERAD.spad: ${IN}/solverad.spad.pamphlet
	@ echo 3756 making ${MID}/SOLVERAD.spad from ${IN}/solverad.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SOLVERAD.NRLIB ; \
	${TANGLE} -R"package SOLVERAD RadicalSolvePackage" ${IN}/solverad.spad.pamphlet >SOLVERAD.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<solverad.spad.dvi (DOC from IN)>>=
${DOC}/solverad.spad.dvi: ${IN}/solverad.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3757 making ${DOC}/solverad.spad.dvi from ${IN}/solverad.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/solverad.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} solverad.spad ; \
	rm -f ${DOC}/solverad.spad.pamphlet ; \
	rm -f ${DOC}/solverad.spad.tex ; \
	rm -f ${DOC}/solverad.spad )

@
\subsection{sortpak.spad \cite{1}}
<<sortpak.spad (SPAD from IN)>>=
${OUTSRC}/sortpak.spad: ${IN}/sortpak.spad.pamphlet
	@ echo 3758 making ${OUTSRC}/sortpak.spad from ${IN}/sortpak.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/sortpak.spad.pamphlet >sortpak.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SORTPAK.o (O from NRLIB)>>=
${OUT}/SORTPAK.o: ${MID}/SORTPAK.NRLIB
	@ echo 3759-6 making ${OUT}/SORTPAK.o from ${MID}/SORTPAK.NRLIB
	@ cp ${MID}/SORTPAK.NRLIB/code.o ${OUT}/SORTPAK.o

@
<<SORTPAK.NRLIB (NRLIB from MID)>>=
${MID}/SORTPAK.NRLIB: ${MID}/SORTPAK.spad
	@ echo 3760 making ${MID}/SORTPAK.NRLIB from ${MID}/SORTPAK.spad
	@ rm -f ${INT}/algebra/dbcomplete
	@ (cd ${MID} ; 	echo ')co SORTPAK.spad' | ${INTERPSYS} )

@
<<SORTPAK.spad (SPAD from IN)>>=
${MID}/SORTPAK.spad: ${IN}/sortpak.spad.pamphlet
	@ echo 3761 making ${MID}/SORTPAK.spad from ${IN}/sortpak.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SORTPAK.NRLIB ; \
	${TANGLE} -R"package SORTPAK SortPackage" ${IN}/sortpak.spad.pamphlet >SORTPAK.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<sortpak.spad.dvi (DOC from IN)>>=
${DOC}/sortpak.spad.dvi: ${IN}/sortpak.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3762 making ${DOC}/sortpak.spad.dvi from ${IN}/sortpak.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/sortpak.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} sortpak.spad ; \
	rm -f ${DOC}/sortpak.spad.pamphlet ; \
	rm -f ${DOC}/sortpak.spad.tex ; \
	rm -f ${DOC}/sortpak.spad )

@
\subsection{space.spad \cite{1}}
<<space.spad (SPAD from IN)>>=
${OUTSRC}/space.spad: ${IN}/space.spad.pamphlet
	@ echo 3763 making ${OUTSRC}/space.spad from ${IN}/space.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/space.spad.pamphlet >space.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SPACEC.o (O from NRLIB)>>=
${OUT}/SPACEC.o: ${MID}/SPACEC.NRLIB
	@ echo 3764-4 making ${OUT}/SPACEC.o from ${MID}/SPACEC.NRLIB
	@ cp ${MID}/SPACEC.NRLIB/code.o ${OUT}/SPACEC.o

@
<<SPACEC.NRLIB (NRLIB from MID)>>=
${MID}/SPACEC.NRLIB: ${MID}/SPACEC.spad
	@ echo 3765 making ${MID}/SPACEC.NRLIB from ${MID}/SPACEC.spad
	@ (cd ${MID} ; 	echo ')co SPACEC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SPACEC.spad (SPAD from IN)>>=
${MID}/SPACEC.spad: ${IN}/space.spad.pamphlet
	@ echo 3766 making ${MID}/SPACEC.spad from ${IN}/space.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SPACEC.NRLIB ; \
	${TANGLE} -R"category SPACEC ThreeSpaceCategory" ${IN}/space.spad.pamphlet >SPACEC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SPACE3.o (O from NRLIB)>>=
${OUT}/SPACE3.o: ${MID}/SPACE3.NRLIB
	@ echo 3767-16 making ${OUT}/SPACE3.o from ${MID}/SPACE3.NRLIB
	@ cp ${MID}/SPACE3.NRLIB/code.o ${OUT}/SPACE3.o

@
<<SPACE3.NRLIB (NRLIB from MID)>>=
${MID}/SPACE3.NRLIB: ${MID}/SPACE3.spad
	@ echo 3768 making ${MID}/SPACE3.NRLIB from ${MID}/SPACE3.spad
	@ (cd ${MID} ; 	echo ')co SPACE3.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SPACE3.spad (SPAD from IN)>>=
${MID}/SPACE3.spad: ${IN}/space.spad.pamphlet
	@ echo 3769 making ${MID}/SPACE3.spad from ${IN}/space.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SPACE3.NRLIB ; \
	${TANGLE} -R"domain SPACE3 ThreeSpace" ${IN}/space.spad.pamphlet >SPACE3.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TOPSP.o (O from NRLIB)>>=
${OUT}/TOPSP.o: ${MID}/TOPSP.NRLIB
	@ echo 3770-10 making ${OUT}/TOPSP.o from ${MID}/TOPSP.NRLIB
	@ cp ${MID}/TOPSP.NRLIB/code.o ${OUT}/TOPSP.o

@
<<TOPSP.NRLIB (NRLIB from MID)>>=
${MID}/TOPSP.NRLIB: ${MID}/TOPSP.spad
	@ echo 3771 making ${MID}/TOPSP.NRLIB from ${MID}/TOPSP.spad
	@ (cd ${MID} ; 	echo ')co TOPSP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TOPSP.spad (SPAD from IN)>>=
${MID}/TOPSP.spad: ${IN}/space.spad.pamphlet
	@ echo 3772 making ${MID}/TOPSP.spad from ${IN}/space.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf TOPSP.NRLIB ; \
	${TANGLE} -R"package TOPSP TopLevelThreeSpace" ${IN}/space.spad.pamphlet >TOPSP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<space.spad.dvi (DOC from IN)>>=
${DOC}/space.spad.dvi: ${IN}/space.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3773 making ${DOC}/space.spad.dvi from ${IN}/space.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/space.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} space.spad ; \
	rm -f ${DOC}/space.spad.pamphlet ; \
	rm -f ${DOC}/space.spad.tex ; \
	rm -f ${DOC}/space.spad )

@
\subsection{special.spad \cite{1}}
<<special.spad (SPAD from IN)>>=
${OUTSRC}/special.spad: ${IN}/special.spad.pamphlet
	@ echo 3774 making ${OUTSRC}/special.spad from ${IN}/special.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/special.spad.pamphlet >special.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DFSFUN.o (O from NRLIB)>>=
${OUT}/DFSFUN.o: ${MID}/DFSFUN.NRLIB
	@ echo 3775-20 making ${OUT}/DFSFUN.o from ${MID}/DFSFUN.NRLIB
	@ cp ${MID}/DFSFUN.NRLIB/code.o ${OUT}/DFSFUN.o

@
<<DFSFUN.NRLIB (NRLIB from MID)>>=
${MID}/DFSFUN.NRLIB: ${MID}/DFSFUN.spad
	@ echo 3776 making ${MID}/DFSFUN.NRLIB from ${MID}/DFSFUN.spad
	@ (cd ${MID} ; 	echo ')co DFSFUN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DFSFUN.spad (SPAD from IN)>>=
${MID}/DFSFUN.spad: ${IN}/special.spad.pamphlet
	@ echo 3777 making ${MID}/DFSFUN.spad from ${IN}/special.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DFSFUN.NRLIB ; \
	${TANGLE} -R"package DFSFUN DoubleFloatSpecialFunctions" ${IN}/special.spad.pamphlet >DFSFUN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NTPOLFN.o (O from NRLIB)>>=
${OUT}/NTPOLFN.o: ${MID}/NTPOLFN.NRLIB
	@ echo 3778-14 making ${OUT}/NTPOLFN.o from ${MID}/NTPOLFN.NRLIB
	@ cp ${MID}/NTPOLFN.NRLIB/code.o ${OUT}/NTPOLFN.o

@
<<NTPOLFN.NRLIB (NRLIB from MID)>>=
${MID}/NTPOLFN.NRLIB: ${MID}/NTPOLFN.spad
	@ echo 3779 making ${MID}/NTPOLFN.NRLIB from ${MID}/NTPOLFN.spad
	@ (cd ${MID} ; 	echo ')co NTPOLFN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NTPOLFN.spad (SPAD from IN)>>=
${MID}/NTPOLFN.spad: ${IN}/special.spad.pamphlet
	@ echo 3780 making ${MID}/NTPOLFN.spad from ${IN}/special.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NTPOLFN.NRLIB ; \
	${TANGLE} -R"package NTPOLFN NumberTheoreticPolynomialFunctions" ${IN}/special.spad.pamphlet >NTPOLFN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ORTHPOL.o (O from NRLIB)>>=
${OUT}/ORTHPOL.o: ${MID}/ORTHPOL.NRLIB
	@ echo 3781-9 making ${OUT}/ORTHPOL.o from ${MID}/ORTHPOL.NRLIB
	@ cp ${MID}/ORTHPOL.NRLIB/code.o ${OUT}/ORTHPOL.o

@
<<ORTHPOL.NRLIB (NRLIB from MID)>>=
${MID}/ORTHPOL.NRLIB: ${MID}/ORTHPOL.spad
	@ echo 3782 making ${MID}/ORTHPOL.NRLIB from ${MID}/ORTHPOL.spad
	@ (cd ${MID} ; 	echo ')co ORTHPOL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ORTHPOL.spad (SPAD from IN)>>=
${MID}/ORTHPOL.spad: ${IN}/special.spad.pamphlet
	@ echo 3783 making ${MID}/ORTHPOL.spad from ${IN}/special.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ORTHPOL.NRLIB ; \
	${TANGLE} -R"package ORTHPOL OrthogonalPolynomialFunctions" ${IN}/special.spad.pamphlet >ORTHPOL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<special.spad.dvi (DOC from IN)>>=
${DOC}/special.spad.dvi: ${IN}/special.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3784 making ${DOC}/special.spad.dvi from ${IN}/special.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/special.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} special.spad ; \
	rm -f ${DOC}/special.spad.pamphlet ; \
	rm -f ${DOC}/special.spad.tex ; \
	rm -f ${DOC}/special.spad )

@
\subsection{sregset.spad \cite{1}}
<<sregset.spad (SPAD from IN)>>=
${OUTSRC}/sregset.spad: ${IN}/sregset.spad.pamphlet
	@ echo 3785 making ${OUTSRC}/sregset.spad from ${IN}/sregset.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/sregset.spad.pamphlet >sregset.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SFQCMPK.o (O from NRLIB)>>=
${OUT}/SFQCMPK.o: ${MID}/SFQCMPK.NRLIB
	@ echo 3786-23 making ${OUT}/SFQCMPK.o from ${MID}/SFQCMPK.NRLIB
	@ cp ${MID}/SFQCMPK.NRLIB/code.o ${OUT}/SFQCMPK.o

@
<<SFQCMPK.NRLIB (NRLIB from MID)>>=
${MID}/SFQCMPK.NRLIB: ${MID}/SFQCMPK.spad
	@ echo 3787 making ${MID}/SFQCMPK.NRLIB from ${MID}/SFQCMPK.spad
	@ (cd ${MID} ; 	echo ')co SFQCMPK.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SFQCMPK.spad (SPAD from IN)>>=
${MID}/SFQCMPK.spad: ${IN}/sregset.spad.pamphlet
	@ echo 3788 making ${MID}/SFQCMPK.spad from ${IN}/sregset.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SFQCMPK.NRLIB ; \
	${TANGLE} -R"package SFQCMPK SquareFreeQuasiComponentPackage" ${IN}/sregset.spad.pamphlet >SFQCMPK.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SFRGCD.o (O from NRLIB)>>=
${OUT}/SFRGCD.o: ${MID}/SFRGCD.NRLIB
	@ echo 3789-23 making ${OUT}/SFRGCD.o from ${MID}/SFRGCD.NRLIB
	@ cp ${MID}/SFRGCD.NRLIB/code.o ${OUT}/SFRGCD.o

@
<<SFRGCD.NRLIB (NRLIB from MID)>>=
${MID}/SFRGCD.NRLIB: ${MID}/SFRGCD.spad
	@ echo 3790 making ${MID}/SFRGCD.NRLIB from ${MID}/SFRGCD.spad
	@ (cd ${MID} ; 	echo ')co SFRGCD.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SFRGCD.spad (SPAD from IN)>>=
${MID}/SFRGCD.spad: ${IN}/sregset.spad.pamphlet
	@ echo 3791 making ${MID}/SFRGCD.spad from ${IN}/sregset.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SFRGCD.NRLIB ; \
	${TANGLE} -R"package SFRGCD SquareFreeRegularTriangularSetGcdPackage" ${IN}/sregset.spad.pamphlet >SFRGCD.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SFRTCAT.o (O from NRLIB)>>=
${OUT}/SFRTCAT.o: ${MID}/SFRTCAT.NRLIB
	@ echo 3792-22 making ${OUT}/SFRTCAT.o from ${MID}/SFRTCAT.NRLIB
	@ cp ${MID}/SFRTCAT.NRLIB/code.o ${OUT}/SFRTCAT.o

@
<<SFRTCAT.NRLIB (NRLIB from MID)>>=
${MID}/SFRTCAT.NRLIB: ${MID}/SFRTCAT.spad
	@ echo 3793 making ${MID}/SFRTCAT.NRLIB from ${MID}/SFRTCAT.spad
	@ (cd ${MID} ; 	echo ')co SFRTCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SFRTCAT.spad (SPAD from IN)>>=
${MID}/SFRTCAT.spad: ${IN}/sregset.spad.pamphlet
	@ echo 3794 making ${MID}/SFRTCAT.spad from ${IN}/sregset.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SFRTCAT.NRLIB ; \
	${TANGLE} -R"category SFRTCAT SquareFreeRegularTriangularSetCategory" ${IN}/sregset.spad.pamphlet >SFRTCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SRDCMPK.o (O from NRLIB)>>=
${OUT}/SRDCMPK.o: ${MID}/SRDCMPK.NRLIB
	@ echo 3795-22 making ${OUT}/SRDCMPK.o from ${MID}/SRDCMPK.NRLIB
	@ cp ${MID}/SRDCMPK.NRLIB/code.o ${OUT}/SRDCMPK.o

@
<<SRDCMPK.NRLIB (NRLIB from MID)>>=
${MID}/SRDCMPK.NRLIB: ${MID}/SRDCMPK.spad
	@ echo 3796 making ${MID}/SRDCMPK.NRLIB from ${MID}/SRDCMPK.spad
	@ (cd ${MID} ; 	echo ')co SRDCMPK.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SRDCMPK.spad (SPAD from IN)>>=
${MID}/SRDCMPK.spad: ${IN}/sregset.spad.pamphlet
	@ echo 3797 making ${MID}/SRDCMPK.spad from ${IN}/sregset.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SRDCMPK.NRLIB ; \
	${TANGLE} -R"package SRDCMPK SquareFreeRegularSetDecompositionPackage" ${IN}/sregset.spad.pamphlet >SRDCMPK.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SREGSET.o (O from NRLIB)>>=
${OUT}/SREGSET.o: ${MID}/SREGSET.NRLIB
	@ echo 3798-22 making ${OUT}/SREGSET.o from ${MID}/SREGSET.NRLIB
	@ cp ${MID}/SREGSET.NRLIB/code.o ${OUT}/SREGSET.o

@
<<SREGSET.NRLIB (NRLIB from MID)>>=
${MID}/SREGSET.NRLIB: ${MID}/SREGSET.spad
	@ echo 3799 making ${MID}/SREGSET.NRLIB from ${MID}/SREGSET.spad
	@ (cd ${MID} ; 	echo ')co SREGSET.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SREGSET.spad (SPAD from IN)>>=
${MID}/SREGSET.spad: ${IN}/sregset.spad.pamphlet
	@ echo 3800 making ${MID}/SREGSET.spad from ${IN}/sregset.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SREGSET.NRLIB ; \
	${TANGLE} -R"domain SREGSET SquareFreeRegularTriangularSet" ${IN}/sregset.spad.pamphlet >SREGSET.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<sregset.spad.dvi (DOC from IN)>>=
${DOC}/sregset.spad.dvi: ${IN}/sregset.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3801 making ${DOC}/sregset.spad.dvi from ${IN}/sregset.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/sregset.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} sregset.spad ; \
	rm -f ${DOC}/sregset.spad.pamphlet ; \
	rm -f ${DOC}/sregset.spad.tex ; \
	rm -f ${DOC}/sregset.spad )

@
\subsection{s.spad \cite{1}}
<<s.spad (SPAD from IN)>>=
${OUTSRC}/s.spad: ${IN}/s.spad.pamphlet
	@ echo 3802 making ${OUTSRC}/s.spad from ${IN}/s.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/s.spad.pamphlet >s.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGS.o (O from NRLIB)>>=
${OUT}/NAGS.o: ${MID}/NAGS.NRLIB
	@ echo 3803-19 making ${OUT}/NAGS.o from ${MID}/NAGS.NRLIB
	@ cp ${MID}/NAGS.NRLIB/code.o ${OUT}/NAGS.o

@
<<NAGS.NRLIB (NRLIB from MID)>>=
${MID}/NAGS.NRLIB: ${MID}/NAGS.spad
	@ echo 3804 making ${MID}/NAGS.NRLIB from ${MID}/NAGS.spad
	@ (cd ${MID} ; 	echo ')co NAGS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NAGS.spad (SPAD from IN)>>=
${MID}/NAGS.spad: ${IN}/s.spad.pamphlet
	@ echo 3805 making ${MID}/NAGS.spad from ${IN}/s.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NAGS.NRLIB ; \
	${TANGLE} -R"package NAGS NagSpecialFunctionsPackage" ${IN}/s.spad.pamphlet >NAGS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<s.spad.dvi (DOC from IN)>>=
${DOC}/s.spad.dvi: ${IN}/s.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3806 making ${DOC}/s.spad.dvi from ${IN}/s.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/s.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} s.spad ; \
	rm -f ${DOC}/s.spad.pamphlet ; \
	rm -f ${DOC}/s.spad.tex ; \
	rm -f ${DOC}/s.spad )

@
\subsection{stream.spad \cite{1}}
<<stream.spad (SPAD from IN)>>=
${OUTSRC}/stream.spad: ${IN}/stream.spad.pamphlet
	@ echo 3807 making ${OUTSRC}/stream.spad from ${IN}/stream.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/stream.spad.pamphlet >stream.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CSTTOOLS.o (O from NRLIB)>>=
${OUT}/CSTTOOLS.o: ${MID}/CSTTOOLS.NRLIB
	@ echo 3808-11 making ${OUT}/CSTTOOLS.o from ${MID}/CSTTOOLS.NRLIB
	@ cp ${MID}/CSTTOOLS.NRLIB/code.o ${OUT}/CSTTOOLS.o

@
<<CSTTOOLS.NRLIB (NRLIB from MID)>>=
${MID}/CSTTOOLS.NRLIB: ${MID}/CSTTOOLS.spad
	@ echo 3809 making ${MID}/CSTTOOLS.NRLIB from ${MID}/CSTTOOLS.spad
	@ (cd ${MID} ; 	echo ')co CSTTOOLS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CSTTOOLS.spad (SPAD from IN)>>=
${MID}/CSTTOOLS.spad: ${IN}/stream.spad.pamphlet
	@ echo 3810 making ${MID}/CSTTOOLS.spad from ${IN}/stream.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CSTTOOLS.NRLIB ; \
	${TANGLE} -R"package CSTTOOLS CyclicStreamTools" ${IN}/stream.spad.pamphlet >CSTTOOLS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LZSTAGG-.o (O from NRLIB)>>=
${OUT}/LZSTAGG-.o: ${MID}/LZSTAGG.NRLIB
	@ echo 3811-10 making ${OUT}/LZSTAGG-.o from ${MID}/LZSTAGG-.NRLIB
	@ cp ${MID}/LZSTAGG-.NRLIB/code.o ${OUT}/LZSTAGG-.o

@
<<LZSTAGG-.NRLIB (NRLIB from MID)>>=
${MID}/LZSTAGG-.NRLIB: ${MID}/LZSTAGG.spad 
	@ echo 3812 making ${MID}/LZSTAGG-.NRLIB from ${MID}/LZSTAGG.spad
	@ (cd ${MID} ; 	echo ')co LZSTAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LZSTAGG.o (O from NRLIB)>>=
${OUT}/LZSTAGG.o: ${MID}/LZSTAGG.NRLIB
	@ echo 3813-10 making ${OUT}/LZSTAGG.o from ${MID}/LZSTAGG.NRLIB
	@ cp ${MID}/LZSTAGG.NRLIB/code.o ${OUT}/LZSTAGG.o

@
<<LZSTAGG.NRLIB (NRLIB from MID)>>=
${MID}/LZSTAGG.NRLIB: ${MID}/LZSTAGG.spad
	@ echo 3814 making ${MID}/LZSTAGG.NRLIB from ${MID}/LZSTAGG.spad
	@ (cd ${MID} ; 	echo ')co LZSTAGG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LZSTAGG.spad (SPAD from IN)>>=
${MID}/LZSTAGG.spad: ${IN}/stream.spad.pamphlet
	@ echo 3815 making ${MID}/LZSTAGG.spad from ${IN}/stream.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LZSTAGG.NRLIB ; \
	${TANGLE} -R"category LZSTAGG LazyStreamAggregate" ${IN}/stream.spad.pamphlet >LZSTAGG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STREAM.o (O from NRLIB)>>=
${OUT}/STREAM.o: ${MID}/STREAM.NRLIB
	@ echo 3816-11 making ${OUT}/STREAM.o from ${MID}/STREAM.NRLIB
	@ cp ${MID}/STREAM.NRLIB/code.o ${OUT}/STREAM.o

@
<<STREAM.NRLIB (NRLIB from MID)>>=
${MID}/STREAM.NRLIB: ${MID}/STREAM.spad
	@ echo 3817 making ${MID}/STREAM.NRLIB from ${MID}/STREAM.spad
	@ (cd ${MID} ; 	echo ')co STREAM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STREAM.spad (SPAD from IN)>>=
${MID}/STREAM.spad: ${IN}/stream.spad.pamphlet
	@ echo 3818 making ${MID}/STREAM.spad from ${IN}/stream.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf STREAM.NRLIB ; \
	${TANGLE} -R"domain STREAM Stream" ${IN}/stream.spad.pamphlet >STREAM.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STREAM1.o (O from NRLIB)>>=
${OUT}/STREAM1.o: ${MID}/STREAM1.NRLIB
	@ echo 3819-1 making ${OUT}/STREAM1.o from ${MID}/STREAM1.NRLIB
	@ cp ${MID}/STREAM1.NRLIB/code.o ${OUT}/STREAM1.o

@
<<STREAM1.NRLIB (NRLIB from MID)>>=
${MID}/STREAM1.NRLIB: ${MID}/STREAM1.spad
	@ echo 3820 making ${MID}/STREAM1.NRLIB from ${MID}/STREAM1.spad
	@ (cd ${MID} ; 	echo ')co STREAM1.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STREAM1.spad (SPAD from IN)>>=
${MID}/STREAM1.spad: ${IN}/stream.spad.pamphlet
	@ echo 3821 making ${MID}/STREAM1.spad from ${IN}/stream.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf STREAM1.NRLIB ; \
	${TANGLE} -R"package STREAM1 StreamFunctions1" ${IN}/stream.spad.pamphlet >STREAM1.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STREAM2.o (O from NRLIB)>>=
${OUT}/STREAM2.o: ${MID}/STREAM2.NRLIB
	@ echo 3822-1 making ${OUT}/STREAM2.o from ${MID}/STREAM2.NRLIB
	@ cp ${MID}/STREAM2.NRLIB/code.o ${OUT}/STREAM2.o

@
<<STREAM2.NRLIB (NRLIB from MID)>>=
${MID}/STREAM2.NRLIB: ${MID}/STREAM2.spad
	@ echo 3823 making ${MID}/STREAM2.NRLIB from ${MID}/STREAM2.spad
	@ (cd ${MID} ; 	echo ')co STREAM2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STREAM2.spad (SPAD from IN)>>=
${MID}/STREAM2.spad: ${IN}/stream.spad.pamphlet
	@ echo 3824 making ${MID}/STREAM2.spad from ${IN}/stream.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf STREAM2.NRLIB ; \
	${TANGLE} -R"package STREAM2 StreamFunctions2" ${IN}/stream.spad.pamphlet >STREAM2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STREAM3.o (O from NRLIB)>>=
${OUT}/STREAM3.o: ${MID}/STREAM3.NRLIB
	@ echo 3825-1 making ${OUT}/STREAM3.o from ${MID}/STREAM3.NRLIB
	@ cp ${MID}/STREAM3.NRLIB/code.o ${OUT}/STREAM3.o

@
<<STREAM3.NRLIB (NRLIB from MID)>>=
${MID}/STREAM3.NRLIB: ${MID}/STREAM3.spad
	@ echo 3826 making ${MID}/STREAM3.NRLIB from ${MID}/STREAM3.spad
	@ (cd ${MID} ; 	echo ')co STREAM3.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STREAM3.spad (SPAD from IN)>>=
${MID}/STREAM3.spad: ${IN}/stream.spad.pamphlet
	@ echo 3827 making ${MID}/STREAM3.spad from ${IN}/stream.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf STREAM3.NRLIB ; \
	${TANGLE} -R"package STREAM3 StreamFunctions3" ${IN}/stream.spad.pamphlet >STREAM3.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<stream.spad.dvi (DOC from IN)>>=
${DOC}/stream.spad.dvi: ${IN}/stream.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3828 making ${DOC}/stream.spad.dvi from ${IN}/stream.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/stream.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} stream.spad ; \
	rm -f ${DOC}/stream.spad.pamphlet ; \
	rm -f ${DOC}/stream.spad.tex ; \
	rm -f ${DOC}/stream.spad )

@
\subsection{string.spad \cite{1}}
<<string.spad (SPAD from IN)>>=
${OUTSRC}/string.spad: ${IN}/string.spad.pamphlet
	@ echo 3829 making ${OUTSRC}/string.spad from ${IN}/string.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/string.spad.pamphlet >string.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CCLASS.o (O from NRLIB)>>=
${OUT}/CCLASS.o: ${MID}/CCLASS.NRLIB
	@ echo 3830-17 making ${OUT}/CCLASS.o from ${MID}/CCLASS.NRLIB
	@ cp ${MID}/CCLASS.NRLIB/code.o ${OUT}/CCLASS.o

@
<<CCLASS.NRLIB (NRLIB from MID)>>=
${MID}/CCLASS.NRLIB: ${MID}/CCLASS.spad
	@ echo 3831 making ${MID}/CCLASS.NRLIB from ${MID}/CCLASS.spad
	@ (cd ${MID} ; 	echo ')co CCLASS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CCLASS.spad (SPAD from IN)>>=
${MID}/CCLASS.spad: ${IN}/string.spad.pamphlet
	@ echo 3832 making ${MID}/CCLASS.spad from ${IN}/string.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CCLASS.NRLIB ; \
	${TANGLE} -R"domain CCLASS CharacterClass" ${IN}/string.spad.pamphlet >CCLASS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CHAR.o (O from NRLIB)>>=
${OUT}/CHAR.o: ${MID}/CHAR.NRLIB
	@ echo 3833-0c making ${OUT}/CHAR.o from ${MID}/CHAR.NRLIB
	@ cp ${MID}/CHAR.NRLIB/code.o ${OUT}/CHAR.o

@
<<CHAR.NRLIB (NRLIB from MID)>>=
${MID}/CHAR.NRLIB: ${MID}/CHAR.spad
	@ echo 3834 making ${MID}/CHAR.NRLIB from ${MID}/CHAR.spad
	@ (cd ${MID} ; 	echo ')co CHAR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CHAR.spad (SPAD from IN)>>=
${MID}/CHAR.spad: ${IN}/string.spad.pamphlet
	@ echo 3835 making ${MID}/CHAR.spad from ${IN}/string.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CHAR.NRLIB ; \
	${TANGLE} -R"domain CHAR Character" ${IN}/string.spad.pamphlet >CHAR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CHAR.o (BOOTSTRAP from MID)>>=
${MID}/CHAR.o: ${MID}/CHAR.lsp
	@ echo 3836-0b making ${MID}/CHAR.o from ${MID}/CHAR.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "CHAR.lsp" :output-file "CHAR.o"))' | ${DEPSYS} )
	@ cp ${MID}/CHAR.o ${OUT}/CHAR.o

@
<<CHAR.lsp (LISP from IN)>>=
${MID}/CHAR.lsp: ${IN}/string.spad.pamphlet
	@ echo 3837 making ${MID}/CHAR.lsp from ${IN}/string.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CHAR.NRLIB ; \
	rm -rf ${OUT}/CHAR.o ; \
	${TANGLE} -R"CHAR.lsp BOOTSTRAP" ${IN}/string.spad.pamphlet >CHAR.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ISTRING.o (O from NRLIB)>>=
${OUT}/ISTRING.o: ${MID}/ISTRING.NRLIB
	@ echo 3838-0c making ${OUT}/ISTRING.o from ${MID}/ISTRING.NRLIB
	@ cp ${MID}/ISTRING.NRLIB/code.o ${OUT}/ISTRING.o

@
<<ISTRING.NRLIB (NRLIB from MID)>>=
${MID}/ISTRING.NRLIB: ${MID}/ISTRING.spad
	@ echo 3839 making ${MID}/ISTRING.NRLIB from ${MID}/ISTRING.spad
	@ (cd ${MID} ; 	echo ')co ISTRING.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ISTRING.spad (SPAD from IN)>>=
${MID}/ISTRING.spad: ${IN}/string.spad.pamphlet
	@ echo 3840 making ${MID}/ISTRING.spad from ${IN}/string.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ISTRING.NRLIB ; \
	${TANGLE} -R"domain ISTRING IndexedString" ${IN}/string.spad.pamphlet >ISTRING.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ISTRING.o (BOOTSTRAP from MID)>>=
${MID}/ISTRING.o: ${MID}/ISTRING.lsp
	@ echo 3841-0b making ${MID}/ISTRING.o from ${MID}/ISTRING.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "ISTRING.lsp" :output-file "ISTRING.o"))' | ${DEPSYS} )
	@ cp ${MID}/ISTRING.o ${OUT}/ISTRING.o

@
<<ISTRING.lsp (LISP from IN)>>=
${MID}/ISTRING.lsp: ${IN}/string.spad.pamphlet
	@ echo 3842 making ${MID}/ISTRING.lsp from ${IN}/string.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ISTRING.NRLIB ; \
	rm -rf ${OUT}/ISTRING.o ; \
	${TANGLE} -R"ISTRING.lsp BOOTSTRAP" ${IN}/string.spad.pamphlet >ISTRING.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STRICAT.o (O from NRLIB)>>=
${OUT}/STRICAT.o: ${MID}/STRICAT.NRLIB
	@ echo 3843-12 making ${OUT}/STRICAT.o from ${MID}/STRICAT.NRLIB
	@ cp ${MID}/STRICAT.NRLIB/code.o ${OUT}/STRICAT.o

@
<<STRICAT.NRLIB (NRLIB from MID)>>=
${MID}/STRICAT.NRLIB: ${MID}/STRICAT.spad
	@ echo 3844 making ${MID}/STRICAT.NRLIB from ${MID}/STRICAT.spad
	@ (cd ${MID} ; 	echo ')co STRICAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STRICAT.spad (SPAD from IN)>>=
${MID}/STRICAT.spad: ${IN}/string.spad.pamphlet
	@ echo 3845 making ${MID}/STRICAT.spad from ${IN}/string.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf STRICAT.NRLIB ; \
	${TANGLE} -R"category STRICAT StringCategory" ${IN}/string.spad.pamphlet >STRICAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STRING.o (O from NRLIB)>>=
${OUT}/STRING.o: ${MID}/STRING.NRLIB
	@ echo 3846-13 making ${OUT}/STRING.o from ${MID}/STRING.NRLIB
	@ cp ${MID}/STRING.NRLIB/code.o ${OUT}/STRING.o

@
<<STRING.NRLIB (NRLIB from MID)>>=
${MID}/STRING.NRLIB: ${MID}/STRING.spad
	@ echo 3847 making ${MID}/STRING.NRLIB from ${MID}/STRING.spad
	@ (cd ${MID} ; 	echo ')co STRING.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STRING.spad (SPAD from IN)>>=
${MID}/STRING.spad: ${IN}/string.spad.pamphlet
	@ echo 3848 making ${MID}/STRING.spad from ${IN}/string.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf STRING.NRLIB ; \
	${TANGLE} -R"domain STRING String" ${IN}/string.spad.pamphlet >STRING.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<string.spad.dvi (DOC from IN)>>=
${DOC}/string.spad.dvi: ${IN}/string.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3849 making ${DOC}/string.spad.dvi from ${IN}/string.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/string.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} string.spad ; \
	rm -f ${DOC}/string.spad.pamphlet ; \
	rm -f ${DOC}/string.spad.tex ; \
	rm -f ${DOC}/string.spad )

@
\subsection{sttaylor.spad \cite{1}}
<<sttaylor.spad (SPAD from IN)>>=
${OUTSRC}/sttaylor.spad: ${IN}/sttaylor.spad.pamphlet
	@ echo 3850 making ${OUTSRC}/sttaylor.spad from ${IN}/sttaylor.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/sttaylor.spad.pamphlet >sttaylor.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STTAYLOR.o (O from NRLIB)>>=
${OUT}/STTAYLOR.o: ${MID}/STTAYLOR.NRLIB
	@ echo 3851-10 making ${OUT}/STTAYLOR.o from ${MID}/STTAYLOR.NRLIB
	@ cp ${MID}/STTAYLOR.NRLIB/code.o ${OUT}/STTAYLOR.o

@
<<STTAYLOR.NRLIB (NRLIB from MID)>>=
${MID}/STTAYLOR.NRLIB: ${MID}/STTAYLOR.spad
	@ echo 3852 making ${MID}/STTAYLOR.NRLIB from ${MID}/STTAYLOR.spad
	@ (cd ${MID} ; 	echo ')co STTAYLOR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STTAYLOR.spad (SPAD from IN)>>=
${MID}/STTAYLOR.spad: ${IN}/sttaylor.spad.pamphlet
	@ echo 3853 making ${MID}/STTAYLOR.spad from ${IN}/sttaylor.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf STTAYLOR.NRLIB ; \
	${TANGLE} -R"package STTAYLOR StreamTaylorSeriesOperations" ${IN}/sttaylor.spad.pamphlet >STTAYLOR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<sttaylor.spad.dvi (DOC from IN)>>=
${DOC}/sttaylor.spad.dvi: ${IN}/sttaylor.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3854 making ${DOC}/sttaylor.spad.dvi from ${IN}/sttaylor.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/sttaylor.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} sttaylor.spad ; \
	rm -f ${DOC}/sttaylor.spad.pamphlet ; \
	rm -f ${DOC}/sttaylor.spad.tex ; \
	rm -f ${DOC}/sttaylor.spad )

@
\subsection{sttf.spad \cite{1}}
<<sttf.spad (SPAD from IN)>>=
${OUTSRC}/sttf.spad: ${IN}/sttf.spad.pamphlet
	@ echo 3855 making ${OUTSRC}/sttf.spad from ${IN}/sttf.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/sttf.spad.pamphlet >sttf.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STTF.o (O from NRLIB)>>=
${OUT}/STTF.o: ${MID}/STTF.NRLIB
	@ echo 3856-22 making ${OUT}/STTF.o from ${MID}/STTF.NRLIB
	@ cp ${MID}/STTF.NRLIB/code.o ${OUT}/STTF.o

@
<<STTF.NRLIB (NRLIB from MID)>>=
${MID}/STTF.NRLIB: ${MID}/STTF.spad
	@ echo 3857 making ${MID}/STTF.NRLIB from ${MID}/STTF.spad
	@ (cd ${MID} ; 	echo ')co STTF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STTF.spad (SPAD from IN)>>=
${MID}/STTF.spad: ${IN}/sttf.spad.pamphlet
	@ echo 3858 making ${MID}/STTF.spad from ${IN}/sttf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf STTF.NRLIB ; \
	${TANGLE} -R"package STTF StreamTranscendentalFunctions" ${IN}/sttf.spad.pamphlet >STTF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STTFNC.o (O from NRLIB)>>=
${OUT}/STTFNC.o: ${MID}/STTFNC.NRLIB
	@ echo 3859-14 making ${OUT}/STTFNC.o from ${MID}/STTFNC.NRLIB
	@ cp ${MID}/STTFNC.NRLIB/code.o ${OUT}/STTFNC.o

@
<<STTFNC.NRLIB (NRLIB from MID)>>=
${MID}/STTFNC.NRLIB: ${MID}/STTFNC.spad
	@ echo 3860 making ${MID}/STTFNC.NRLIB from ${MID}/STTFNC.spad
	@ (cd ${MID} ; 	echo ')co STTFNC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STTFNC.spad (SPAD from IN)>>=
${MID}/STTFNC.spad: ${IN}/sttf.spad.pamphlet
	@ echo 3861 making ${MID}/STTFNC.spad from ${IN}/sttf.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf STTFNC.NRLIB ; \
	${TANGLE} -R"package STTFNC StreamTranscendentalFunctionsNonCommutative" ${IN}/sttf.spad.pamphlet >STTFNC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<sttf.spad.dvi (DOC from IN)>>=
${DOC}/sttf.spad.dvi: ${IN}/sttf.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3862 making ${DOC}/sttf.spad.dvi from ${IN}/sttf.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/sttf.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} sttf.spad ; \
	rm -f ${DOC}/sttf.spad.pamphlet ; \
	rm -f ${DOC}/sttf.spad.tex ; \
	rm -f ${DOC}/sttf.spad )

@
\subsection{sturm.spad \cite{1}}
<<sturm.spad (SPAD from IN)>>=
${OUTSRC}/sturm.spad: ${IN}/sturm.spad.pamphlet
	@ echo 3863 making ${OUTSRC}/sturm.spad from ${IN}/sturm.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/sturm.spad.pamphlet >sturm.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SHP.o (O from NRLIB)>>=
${OUT}/SHP.o: ${MID}/SHP.NRLIB
	@ echo 3864-14 making ${OUT}/SHP.o from ${MID}/SHP.NRLIB
	@ cp ${MID}/SHP.NRLIB/code.o ${OUT}/SHP.o

@
<<SHP.NRLIB (NRLIB from MID)>>=
${MID}/SHP.NRLIB: ${MID}/SHP.spad
	@ echo 3865 making ${MID}/SHP.NRLIB from ${MID}/SHP.spad
	@ (cd ${MID} ; 	echo ')co SHP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SHP.spad (SPAD from IN)>>=
${MID}/SHP.spad: ${IN}/sturm.spad.pamphlet
	@ echo 3866 making ${MID}/SHP.spad from ${IN}/sturm.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SHP.NRLIB ; \
	${TANGLE} -R"package SHP SturmHabichtPackage" ${IN}/sturm.spad.pamphlet >SHP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<sturm.spad.dvi (DOC from IN)>>=
${DOC}/sturm.spad.dvi: ${IN}/sturm.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3867 making ${DOC}/sturm.spad.dvi from ${IN}/sturm.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/sturm.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} sturm.spad ; \
	rm -f ${DOC}/sturm.spad.pamphlet ; \
	rm -f ${DOC}/sturm.spad.tex ; \
	rm -f ${DOC}/sturm.spad )

@
\subsection{suchthat.spad \cite{1}}
<<suchthat.spad (SPAD from IN)>>=
${OUTSRC}/suchthat.spad: ${IN}/suchthat.spad.pamphlet
	@ echo 3868 making ${OUTSRC}/suchthat.spad from ${IN}/suchthat.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/suchthat.spad.pamphlet >suchthat.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SUCH.o (O from NRLIB)>>=
${OUT}/SUCH.o: ${MID}/SUCH.NRLIB
	@ echo 3869-4 making ${OUT}/SUCH.o from ${MID}/SUCH.NRLIB
	@ cp ${MID}/SUCH.NRLIB/code.o ${OUT}/SUCH.o

@
<<SUCH.NRLIB (NRLIB from MID)>>=
${MID}/SUCH.NRLIB: ${MID}/SUCH.spad
	@ echo 3870 making ${MID}/SUCH.NRLIB from ${MID}/SUCH.spad
	@ (cd ${MID} ; 	echo ')co SUCH.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SUCH.spad (SPAD from IN)>>=
${MID}/SUCH.spad: ${IN}/suchthat.spad.pamphlet
	@ echo 3871 making ${MID}/SUCH.spad from ${IN}/suchthat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SUCH.NRLIB ; \
	${TANGLE} -R"domain SUCH SuchThat" ${IN}/suchthat.spad.pamphlet >SUCH.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<suchthat.spad.dvi (DOC from IN)>>=
${DOC}/suchthat.spad.dvi: ${IN}/suchthat.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3872 making ${DOC}/suchthat.spad.dvi from ${IN}/suchthat.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/suchthat.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} suchthat.spad ; \
	rm -f ${DOC}/suchthat.spad.pamphlet ; \
	rm -f ${DOC}/suchthat.spad.tex ; \
	rm -f ${DOC}/suchthat.spad )

@
\subsection{suls.spad \cite{1}}
<<suls.spad (SPAD from IN)>>=
${OUTSRC}/suls.spad: ${IN}/suls.spad.pamphlet
	@ echo 3873 making ${OUTSRC}/suls.spad from ${IN}/suls.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/suls.spad.pamphlet >suls.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SULS.o (O from NRLIB)>>=
${OUT}/SULS.o: ${MID}/SULS.NRLIB
	@ echo 3874-21 making ${OUT}/SULS.o from ${MID}/SULS.NRLIB
	@ cp ${MID}/SULS.NRLIB/code.o ${OUT}/SULS.o

@
<<SULS.NRLIB (NRLIB from MID)>>=
${MID}/SULS.NRLIB: ${MID}/SULS.spad
	@ echo 3875 making ${MID}/SULS.NRLIB from ${MID}/SULS.spad
	@ (cd ${MID} ; 	echo ')co SULS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SULS.spad (SPAD from IN)>>=
${MID}/SULS.spad: ${IN}/suls.spad.pamphlet
	@ echo 3876 making ${MID}/SULS.spad from ${IN}/suls.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SULS.NRLIB ; \
	${TANGLE} -R"domain SULS SparseUnivariateLaurentSeries" ${IN}/suls.spad.pamphlet >SULS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<suls.spad.dvi (DOC from IN)>>=
${DOC}/suls.spad.dvi: ${IN}/suls.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3877 making ${DOC}/suls.spad.dvi from ${IN}/suls.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/suls.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} suls.spad ; \
	rm -f ${DOC}/suls.spad.pamphlet ; \
	rm -f ${DOC}/suls.spad.tex ; \
	rm -f ${DOC}/suls.spad )

@
\subsection{sum.spad \cite{1}}
<<sum.spad (SPAD from IN)>>=
${OUTSRC}/sum.spad: ${IN}/sum.spad.pamphlet
	@ echo 3878 making ${OUTSRC}/sum.spad from ${IN}/sum.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/sum.spad.pamphlet >sum.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GOSPER.o (O from NRLIB)>>=
${OUT}/GOSPER.o: ${MID}/GOSPER.NRLIB
	@ echo 3879-14 making ${OUT}/GOSPER.o from ${MID}/GOSPER.NRLIB
	@ cp ${MID}/GOSPER.NRLIB/code.o ${OUT}/GOSPER.o

@
<<GOSPER.NRLIB (NRLIB from MID)>>=
${MID}/GOSPER.NRLIB: ${MID}/GOSPER.spad
	@ echo 3880 making ${MID}/GOSPER.NRLIB from ${MID}/GOSPER.spad
	@ (cd ${MID} ; 	echo ')co GOSPER.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GOSPER.spad (SPAD from IN)>>=
${MID}/GOSPER.spad: ${IN}/sum.spad.pamphlet
	@ echo 3881 making ${MID}/GOSPER.spad from ${IN}/sum.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GOSPER.NRLIB ; \
	${TANGLE} -R"package GOSPER GosperSummationMethod" ${IN}/sum.spad.pamphlet >GOSPER.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ISUMP.o (O from NRLIB)>>=
${OUT}/ISUMP.o: ${MID}/ISUMP.NRLIB
	@ echo 3882-14 making ${OUT}/ISUMP.o from ${MID}/ISUMP.NRLIB
	@ cp ${MID}/ISUMP.NRLIB/code.o ${OUT}/ISUMP.o

@
<<ISUMP.NRLIB (NRLIB from MID)>>=
${MID}/ISUMP.NRLIB: ${MID}/ISUMP.spad
	@ echo 3883 making ${MID}/ISUMP.NRLIB from ${MID}/ISUMP.spad
	@ (cd ${MID} ; 	echo ')co ISUMP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ISUMP.spad (SPAD from IN)>>=
${MID}/ISUMP.spad: ${IN}/sum.spad.pamphlet
	@ echo 3884 making ${MID}/ISUMP.spad from ${IN}/sum.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ISUMP.NRLIB ; \
	${TANGLE} -R"package ISUMP InnerPolySum" ${IN}/sum.spad.pamphlet >ISUMP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SUMRF.o (O from NRLIB)>>=
${OUT}/SUMRF.o: ${MID}/SUMRF.NRLIB
	@ echo 3885-14 making ${OUT}/SUMRF.o from ${MID}/SUMRF.NRLIB
	@ cp ${MID}/SUMRF.NRLIB/code.o ${OUT}/SUMRF.o

@
<<SUMRF.NRLIB (NRLIB from MID)>>=
${MID}/SUMRF.NRLIB: ${MID}/SUMRF.spad
	@ echo 3886 making ${MID}/SUMRF.NRLIB from ${MID}/SUMRF.spad
	@ (cd ${MID} ; 	echo ')co SUMRF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SUMRF.spad (SPAD from IN)>>=
${MID}/SUMRF.spad: ${IN}/sum.spad.pamphlet
	@ echo 3887 making ${MID}/SUMRF.spad from ${IN}/sum.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SUMRF.NRLIB ; \
	${TANGLE} -R"package SUMRF RationalFunctionSum" ${IN}/sum.spad.pamphlet >SUMRF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<sum.spad.dvi (DOC from IN)>>=
${DOC}/sum.spad.dvi: ${IN}/sum.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3888 making ${DOC}/sum.spad.dvi from ${IN}/sum.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/sum.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} sum.spad ; \
	rm -f ${DOC}/sum.spad.pamphlet ; \
	rm -f ${DOC}/sum.spad.tex ; \
	rm -f ${DOC}/sum.spad )

@
\subsection{sups.spad \cite{1}}
<<sups.spad (SPAD from IN)>>=
${OUTSRC}/sups.spad: ${IN}/sups.spad.pamphlet
	@ echo 3889 making ${OUTSRC}/sups.spad from ${IN}/sups.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/sups.spad.pamphlet >sups.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ISUPS.o (O from NRLIB)>>=
${OUT}/ISUPS.o: ${MID}/ISUPS.NRLIB
	@ echo 3890-19 making ${OUT}/ISUPS.o from ${MID}/ISUPS.NRLIB
	@ cp ${MID}/ISUPS.NRLIB/code.o ${OUT}/ISUPS.o

@
<<ISUPS.NRLIB (NRLIB from MID)>>=
${MID}/ISUPS.NRLIB: ${MID}/ISUPS.spad
	@ echo 3891 making ${MID}/ISUPS.NRLIB from ${MID}/ISUPS.spad
	@ (cd ${MID} ; 	echo ')co ISUPS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ISUPS.spad (SPAD from IN)>>=
${MID}/ISUPS.spad: ${IN}/sups.spad.pamphlet
	@ echo 3892 making ${MID}/ISUPS.spad from ${IN}/sups.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ISUPS.NRLIB ; \
	${TANGLE} -R"domain ISUPS InnerSparseUnivariatePowerSeries" ${IN}/sups.spad.pamphlet >ISUPS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<sups.spad.dvi (DOC from IN)>>=
${DOC}/sups.spad.dvi: ${IN}/sups.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3893 making ${DOC}/sups.spad.dvi from ${IN}/sups.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/sups.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} sups.spad ; \
	rm -f ${DOC}/sups.spad.pamphlet ; \
	rm -f ${DOC}/sups.spad.tex ; \
	rm -f ${DOC}/sups.spad )

@
\subsection{supxs.spad \cite{1}}
<<supxs.spad (SPAD from IN)>>=
${OUTSRC}/supxs.spad: ${IN}/supxs.spad.pamphlet
	@ echo 3894 making ${OUTSRC}/supxs.spad from ${IN}/supxs.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/supxs.spad.pamphlet >supxs.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SUPXS.o (O from NRLIB)>>=
${OUT}/SUPXS.o: ${MID}/SUPXS.NRLIB
	@ echo 3895-21 making ${OUT}/SUPXS.o from ${MID}/SUPXS.NRLIB
	@ cp ${MID}/SUPXS.NRLIB/code.o ${OUT}/SUPXS.o

@
<<SUPXS.NRLIB (NRLIB from MID)>>=
${MID}/SUPXS.NRLIB: ${MID}/SUPXS.spad
	@ echo 3896 making ${MID}/SUPXS.NRLIB from ${MID}/SUPXS.spad
	@ (cd ${MID} ; 	echo ')co SUPXS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SUPXS.spad (SPAD from IN)>>=
${MID}/SUPXS.spad: ${IN}/supxs.spad.pamphlet
	@ echo 3897 making ${MID}/SUPXS.spad from ${IN}/supxs.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SUPXS.NRLIB ; \
	${TANGLE} -R"domain SUPXS SparseUnivariatePuiseuxSeries" ${IN}/supxs.spad.pamphlet >SUPXS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<supxs.spad.dvi (DOC from IN)>>=
${DOC}/supxs.spad.dvi: ${IN}/supxs.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3898 making ${DOC}/supxs.spad.dvi from ${IN}/supxs.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/supxs.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} supxs.spad ; \
	rm -f ${DOC}/supxs.spad.pamphlet ; \
	rm -f ${DOC}/supxs.spad.tex ; \
	rm -f ${DOC}/supxs.spad )

@
\subsection{suts.spad \cite{1}}
<<suts.spad (SPAD from IN)>>=
${OUTSRC}/suts.spad: ${IN}/suts.spad.pamphlet
	@ echo 3899 making ${OUTSRC}/suts.spad from ${IN}/suts.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/suts.spad.pamphlet >suts.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SUTS.o (O from NRLIB)>>=
${OUT}/SUTS.o: ${MID}/SUTS.NRLIB
	@ echo 3900-20 making ${OUT}/SUTS.o from ${MID}/SUTS.NRLIB
	@ cp ${MID}/SUTS.NRLIB/code.o ${OUT}/SUTS.o

@
<<SUTS.NRLIB (NRLIB from MID)>>=
${MID}/SUTS.NRLIB: ${MID}/SUTS.spad
	@ echo 3901 making ${MID}/SUTS.NRLIB from ${MID}/SUTS.spad
	@ (cd ${MID} ; 	echo ')co SUTS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SUTS.spad (SPAD from IN)>>=
${MID}/SUTS.spad: ${IN}/suts.spad.pamphlet
	@ echo 3902 making ${MID}/SUTS.spad from ${IN}/suts.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SUTS.NRLIB ; \
	${TANGLE} -R"domain SUTS SparseUnivariateTaylorSeries" ${IN}/suts.spad.pamphlet >SUTS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<suts.spad.dvi (DOC from IN)>>=
${DOC}/suts.spad.dvi: ${IN}/suts.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3903 making ${DOC}/suts.spad.dvi from ${IN}/suts.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/suts.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} suts.spad ; \
	rm -f ${DOC}/suts.spad.pamphlet ; \
	rm -f ${DOC}/suts.spad.tex ; \
	rm -f ${DOC}/suts.spad )

@
\subsection{symbol.spad \cite{1}}
<<symbol.spad (SPAD from IN)>>=
${OUTSRC}/symbol.spad: ${IN}/symbol.spad.pamphlet
	@ echo 3904 making ${OUTSRC}/symbol.spad from ${IN}/symbol.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/symbol.spad.pamphlet >symbol.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SYMBOL.o (O from NRLIB)>>=
${OUT}/SYMBOL.o: ${MID}/SYMBOL.NRLIB
	@ echo 3905-0c making ${OUT}/SYMBOL.o from ${MID}/SYMBOL.NRLIB
	@ cp ${MID}/SYMBOL.NRLIB/code.o ${OUT}/SYMBOL.o

@
<<SYMBOL.NRLIB (NRLIB from MID)>>=
${MID}/SYMBOL.NRLIB: ${MID}/SYMBOL.spad
	@ echo 3906 making ${MID}/SYMBOL.NRLIB from ${MID}/SYMBOL.spad
	@ (cd ${MID} ; 	echo ')co SYMBOL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SYMBOL.spad (SPAD from IN)>>=
${MID}/SYMBOL.spad: ${IN}/symbol.spad.pamphlet
	@ echo 3907 making ${MID}/SYMBOL.spad from ${IN}/symbol.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SYMBOL.NRLIB ; \
	${TANGLE} -R"domain SYMBOL Symbol" ${IN}/symbol.spad.pamphlet >SYMBOL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SYMBOL.o (BOOTSTRAP from MID)>>=
${MID}/SYMBOL.o: ${MID}/SYMBOL.lsp
	@ echo 3908-0b making ${MID}/SYMBOL.o from ${MID}/SYMBOL.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "SYMBOL.lsp" :output-file "SYMBOL.o"))' | ${DEPSYS} )
	@ cp ${MID}/SYMBOL.o ${OUT}/SYMBOL.o

@
<<SYMBOL.lsp (LISP from IN)>>=
${MID}/SYMBOL.lsp: ${IN}/symbol.spad.pamphlet
	@ echo 3909 making ${MID}/SYMBOL.lsp from ${IN}/symbol.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SYMBOL.NRLIB ; \
	rm -rf ${OUT}/SYMBOL.o ; \
	${TANGLE} -R"SYMBOL.lsp BOOTSTRAP" ${IN}/symbol.spad.pamphlet >SYMBOL.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<symbol.spad.dvi (DOC from IN)>>=
${DOC}/symbol.spad.dvi: ${IN}/symbol.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3910 making ${DOC}/symbol.spad.dvi from ${IN}/symbol.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/symbol.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} symbol.spad ; \
	rm -f ${DOC}/symbol.spad.pamphlet ; \
	rm -f ${DOC}/symbol.spad.tex ; \
	rm -f ${DOC}/symbol.spad )

@
\subsection{syssolp.spad \cite{1}}
<<syssolp.spad (SPAD from IN)>>=
${OUTSRC}/syssolp.spad: ${IN}/syssolp.spad.pamphlet
	@ echo 3911 making ${OUTSRC}/syssolp.spad from ${IN}/syssolp.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/syssolp.spad.pamphlet >syssolp.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SYSSOLP.o (O from NRLIB)>>=
${OUT}/SYSSOLP.o: ${MID}/SYSSOLP.NRLIB
	@ echo 3912-19 making ${OUT}/SYSSOLP.o from ${MID}/SYSSOLP.NRLIB
	@ cp ${MID}/SYSSOLP.NRLIB/code.o ${OUT}/SYSSOLP.o

@
<<SYSSOLP.NRLIB (NRLIB from MID)>>=
${MID}/SYSSOLP.NRLIB: ${MID}/SYSSOLP.spad
	@ echo 3913 making ${MID}/SYSSOLP.NRLIB from ${MID}/SYSSOLP.spad
	@ (cd ${MID} ; 	echo ')co SYSSOLP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SYSSOLP.spad (SPAD from IN)>>=
${MID}/SYSSOLP.spad: ${IN}/syssolp.spad.pamphlet
	@ echo 3914 making ${MID}/SYSSOLP.spad from ${IN}/syssolp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SYSSOLP.NRLIB ; \
	${TANGLE} -R"package SYSSOLP SystemSolvePackage" ${IN}/syssolp.spad.pamphlet >SYSSOLP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<syssolp.spad.dvi (DOC from IN)>>=
${DOC}/syssolp.spad.dvi: ${IN}/syssolp.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3915 making ${DOC}/syssolp.spad.dvi from ${IN}/syssolp.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/syssolp.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} syssolp.spad ; \
	rm -f ${DOC}/syssolp.spad.pamphlet ; \
	rm -f ${DOC}/syssolp.spad.tex ; \
	rm -f ${DOC}/syssolp.spad )

@
\subsection{system.spad \cite{1}}
<<system.spad (SPAD from IN)>>=
${OUTSRC}/system.spad: ${IN}/system.spad.pamphlet
	@ echo 3916 making ${OUTSRC}/system.spad from ${IN}/system.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/system.spad.pamphlet >system.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MSYSCMD.o (O from NRLIB)>>=
${OUT}/MSYSCMD.o: ${MID}/MSYSCMD.NRLIB
	@ echo 3917-0 making ${OUT}/MSYSCMD.o from ${MID}/MSYSCMD.NRLIB
	@ cp ${MID}/MSYSCMD.NRLIB/code.o ${OUT}/MSYSCMD.o

@
<<MSYSCMD.NRLIB (NRLIB from MID)>>=
${MID}/MSYSCMD.NRLIB: ${MID}/MSYSCMD.spad
	@ echo 3918 making ${MID}/MSYSCMD.NRLIB from ${MID}/MSYSCMD.spad
	@ (cd ${MID} ; 	echo ')co MSYSCMD.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MSYSCMD.spad (SPAD from IN)>>=
${MID}/MSYSCMD.spad: ${IN}/system.spad.pamphlet
	@ echo 3919 making ${MID}/MSYSCMD.spad from ${IN}/system.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MSYSCMD.NRLIB ; \
	${TANGLE} -R"package MSYSCMD MoreSystemCommands" ${IN}/system.spad.pamphlet >MSYSCMD.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<system.spad.dvi (DOC from IN)>>=
${DOC}/system.spad.dvi: ${IN}/system.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3920 making ${DOC}/system.spad.dvi from ${IN}/system.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/system.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} system.spad ; \
	rm -f ${DOC}/system.spad.pamphlet ; \
	rm -f ${DOC}/system.spad.tex ; \
	rm -f ${DOC}/system.spad )

@
\subsection{tableau.spad \cite{1}}
<<tableau.spad (SPAD from IN)>>=
${OUTSRC}/tableau.spad: ${IN}/tableau.spad.pamphlet
	@ echo 3921 making ${OUTSRC}/tableau.spad from ${IN}/tableau.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/tableau.spad.pamphlet >tableau.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TABLBUMP.o (O from NRLIB)>>=
${OUT}/TABLBUMP.o: ${MID}/TABLBUMP.NRLIB
	@ echo 3922-10 making ${OUT}/TABLBUMP.o from ${MID}/TABLBUMP.NRLIB
	@ cp ${MID}/TABLBUMP.NRLIB/code.o ${OUT}/TABLBUMP.o

@
<<TABLBUMP.NRLIB (NRLIB from MID)>>=
${MID}/TABLBUMP.NRLIB: ${MID}/TABLBUMP.spad
	@ echo 3923 making ${MID}/TABLBUMP.NRLIB from ${MID}/TABLBUMP.spad
	@ (cd ${MID} ; 	echo ')co TABLBUMP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TABLBUMP.spad (SPAD from IN)>>=
${MID}/TABLBUMP.spad: ${IN}/tableau.spad.pamphlet
	@ echo 3924 making ${MID}/TABLBUMP.spad from ${IN}/tableau.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf TABLBUMP.NRLIB ; \
	${TANGLE} -R"package TABLBUMP TableauxBumpers" ${IN}/tableau.spad.pamphlet >TABLBUMP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TABLEAU.o (O from NRLIB)>>=
${OUT}/TABLEAU.o: ${MID}/TABLEAU.NRLIB
	@ echo 3925-10 making ${OUT}/TABLEAU.o from ${MID}/TABLEAU.NRLIB
	@ cp ${MID}/TABLEAU.NRLIB/code.o ${OUT}/TABLEAU.o

@
<<TABLEAU.NRLIB (NRLIB from MID)>>=
${MID}/TABLEAU.NRLIB: ${MID}/TABLEAU.spad
	@ echo 3926 making ${MID}/TABLEAU.NRLIB from ${MID}/TABLEAU.spad
	@ (cd ${MID} ; 	echo ')co TABLEAU.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TABLEAU.spad (SPAD from IN)>>=
${MID}/TABLEAU.spad: ${IN}/tableau.spad.pamphlet
	@ echo 3927 making ${MID}/TABLEAU.spad from ${IN}/tableau.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf TABLEAU.NRLIB ; \
	${TANGLE} -R"domain TABLEAU Tableau" ${IN}/tableau.spad.pamphlet >TABLEAU.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<tableau.spad.dvi (DOC from IN)>>=
${DOC}/tableau.spad.dvi: ${IN}/tableau.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3928 making ${DOC}/tableau.spad.dvi from ${IN}/tableau.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/tableau.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} tableau.spad ; \
	rm -f ${DOC}/tableau.spad.pamphlet ; \
	rm -f ${DOC}/tableau.spad.tex ; \
	rm -f ${DOC}/tableau.spad )

@
\subsection{table.spad \cite{1}}
<<table.spad (SPAD from IN)>>=
${OUTSRC}/table.spad: ${IN}/table.spad.pamphlet
	@ echo 3929 making ${OUTSRC}/table.spad from ${IN}/table.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/table.spad.pamphlet >table.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EQTBL.o (O from NRLIB)>>=
${OUT}/EQTBL.o: ${MID}/EQTBL.NRLIB
	@ echo 3930-18 making ${OUT}/EQTBL.o from ${MID}/EQTBL.NRLIB
	@ cp ${MID}/EQTBL.NRLIB/code.o ${OUT}/EQTBL.o

@
<<EQTBL.NRLIB (NRLIB from MID)>>=
${MID}/EQTBL.NRLIB: ${MID}/EQTBL.spad
	@ echo 3931 making ${MID}/EQTBL.NRLIB from ${MID}/EQTBL.spad
	@ (cd ${MID} ; 	echo ')co EQTBL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EQTBL.spad (SPAD from IN)>>=
${MID}/EQTBL.spad: ${IN}/table.spad.pamphlet
	@ echo 3932 making ${MID}/EQTBL.spad from ${IN}/table.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf EQTBL.NRLIB ; \
	${TANGLE} -R"domain EQTBL EqTable" ${IN}/table.spad.pamphlet >EQTBL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GSTBL.o (O from NRLIB)>>=
${OUT}/GSTBL.o: ${MID}/GSTBL.NRLIB
	@ echo 3933-18 making ${OUT}/GSTBL.o from ${MID}/GSTBL.NRLIB
	@ cp ${MID}/GSTBL.NRLIB/code.o ${OUT}/GSTBL.o

@
<<GSTBL.NRLIB (NRLIB from MID)>>=
${MID}/GSTBL.NRLIB: ${MID}/GSTBL.spad
	@ echo 3934 making ${MID}/GSTBL.NRLIB from ${MID}/GSTBL.spad
	@ (cd ${MID} ; 	echo ')co GSTBL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GSTBL.spad (SPAD from IN)>>=
${MID}/GSTBL.spad: ${IN}/table.spad.pamphlet
	@ echo 3935 making ${MID}/GSTBL.spad from ${IN}/table.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GSTBL.NRLIB ; \
	${TANGLE} -R"domain GSTBL GeneralSparseTable" ${IN}/table.spad.pamphlet >GSTBL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<HASHTBL.o (O from NRLIB)>>=
${OUT}/HASHTBL.o: ${MID}/HASHTBL.NRLIB
	@ echo 3936-18 making ${OUT}/HASHTBL.o from ${MID}/HASHTBL.NRLIB
	@ cp ${MID}/HASHTBL.NRLIB/code.o ${OUT}/HASHTBL.o

@
<<HASHTBL.NRLIB (NRLIB from MID)>>=
${MID}/HASHTBL.NRLIB: ${MID}/HASHTBL.spad
	@ echo 3937 making ${MID}/HASHTBL.NRLIB from ${MID}/HASHTBL.spad
	@ (cd ${MID} ; 	echo ')co HASHTBL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<HASHTBL.spad (SPAD from IN)>>=
${MID}/HASHTBL.spad: ${IN}/table.spad.pamphlet
	@ echo 3938 making ${MID}/HASHTBL.spad from ${IN}/table.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf HASHTBL.NRLIB ; \
	${TANGLE} -R"domain HASHTBL HashTable" ${IN}/table.spad.pamphlet >HASHTBL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTABL.o (O from NRLIB)>>=
${OUT}/INTABL.o: ${MID}/INTABL.NRLIB
	@ echo 3939-18 making ${OUT}/INTABL.o from ${MID}/INTABL.NRLIB
	@ cp ${MID}/INTABL.NRLIB/code.o ${OUT}/INTABL.o

@
<<INTABL.NRLIB (NRLIB from MID)>>=
${MID}/INTABL.NRLIB: ${MID}/INTABL.spad
	@ echo 3940 making ${MID}/INTABL.NRLIB from ${MID}/INTABL.spad
	@ (cd ${MID} ; 	echo ')co INTABL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<INTABL.spad (SPAD from IN)>>=
${MID}/INTABL.spad: ${IN}/table.spad.pamphlet
	@ echo 3941 making ${MID}/INTABL.spad from ${IN}/table.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf INTABL.NRLIB ; \
	${TANGLE} -R"domain INTABL InnerTable" ${IN}/table.spad.pamphlet >INTABL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STBL.o (O from NRLIB)>>=
${OUT}/STBL.o: ${MID}/STBL.NRLIB
	@ echo 3942-18 making ${OUT}/STBL.o from ${MID}/STBL.NRLIB
	@ cp ${MID}/STBL.NRLIB/code.o ${OUT}/STBL.o

@
<<STBL.NRLIB (NRLIB from MID)>>=
${MID}/STBL.NRLIB: ${MID}/STBL.spad
	@ echo 3943 making ${MID}/STBL.NRLIB from ${MID}/STBL.spad
	@ (cd ${MID} ; 	echo ')co STBL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STBL.spad (SPAD from IN)>>=
${MID}/STBL.spad: ${IN}/table.spad.pamphlet
	@ echo 3944 making ${MID}/STBL.spad from ${IN}/table.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf STBL.NRLIB ; \
	${TANGLE} -R"domain STBL SparseTable" ${IN}/table.spad.pamphlet >STBL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STRTBL.o (O from NRLIB)>>=
${OUT}/STRTBL.o: ${MID}/STRTBL.NRLIB
	@ echo 3945-18 making ${OUT}/STRTBL.o from ${MID}/STRTBL.NRLIB
	@ cp ${MID}/STRTBL.NRLIB/code.o ${OUT}/STRTBL.o

@
<<STRTBL.NRLIB (NRLIB from MID)>>=
${MID}/STRTBL.NRLIB: ${MID}/STRTBL.spad
	@ echo 3946 making ${MID}/STRTBL.NRLIB from ${MID}/STRTBL.spad
	@ (cd ${MID} ; 	echo ')co STRTBL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<STRTBL.spad (SPAD from IN)>>=
${MID}/STRTBL.spad: ${IN}/table.spad.pamphlet
	@ echo 3947 making ${MID}/STRTBL.spad from ${IN}/table.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf STRTBL.NRLIB ; \
	${TANGLE} -R"domain STRTBL StringTable" ${IN}/table.spad.pamphlet >STRTBL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TABLE.o (O from NRLIB)>>=
${OUT}/TABLE.o: ${MID}/TABLE.NRLIB
	@ echo 3948-18 making ${OUT}/TABLE.o from ${MID}/TABLE.NRLIB
	@ cp ${MID}/TABLE.NRLIB/code.o ${OUT}/TABLE.o

@
<<TABLE.NRLIB (NRLIB from MID)>>=
${MID}/TABLE.NRLIB: ${MID}/TABLE.spad
	@ echo 3949 making ${MID}/TABLE.NRLIB from ${MID}/TABLE.spad
	@ (cd ${MID} ; 	echo ')co TABLE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TABLE.spad (SPAD from IN)>>=
${MID}/TABLE.spad: ${IN}/table.spad.pamphlet
	@ echo 3950 making ${MID}/TABLE.spad from ${IN}/table.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf TABLE.NRLIB ; \
	${TANGLE} -R"domain TABLE Table" ${IN}/table.spad.pamphlet >TABLE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<table.spad.dvi (DOC from IN)>>=
${DOC}/table.spad.dvi: ${IN}/table.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3951 making ${DOC}/table.spad.dvi from ${IN}/table.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/table.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} table.spad ; \
	rm -f ${DOC}/table.spad.pamphlet ; \
	rm -f ${DOC}/table.spad.tex ; \
	rm -f ${DOC}/table.spad )

@
\subsection{taylor.spad \cite{1}}
<<taylor.spad (SPAD from IN)>>=
${OUTSRC}/taylor.spad: ${IN}/taylor.spad.pamphlet
	@ echo 3952 making ${OUTSRC}/taylor.spad from ${IN}/taylor.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/taylor.spad.pamphlet >taylor.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ITAYLOR.o (O from NRLIB)>>=
${OUT}/ITAYLOR.o: ${MID}/ITAYLOR.NRLIB
	@ echo 3953-8 making ${OUT}/ITAYLOR.o from ${MID}/ITAYLOR.NRLIB
	@ cp ${MID}/ITAYLOR.NRLIB/code.o ${OUT}/ITAYLOR.o

@
<<ITAYLOR.NRLIB (NRLIB from MID)>>=
${MID}/ITAYLOR.NRLIB: ${MID}/ITAYLOR.spad
	@ echo 3954 making ${MID}/ITAYLOR.NRLIB from ${MID}/ITAYLOR.spad
	@ (cd ${MID} ; 	echo ')co ITAYLOR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ITAYLOR.spad (SPAD from IN)>>=
${MID}/ITAYLOR.spad: ${IN}/taylor.spad.pamphlet
	@ echo 3955 making ${MID}/ITAYLOR.spad from ${IN}/taylor.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ITAYLOR.NRLIB ; \
	${TANGLE} -R"domain ITAYLOR InnerTaylorSeries" ${IN}/taylor.spad.pamphlet >ITAYLOR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UTS.o (O from NRLIB)>>=
${OUT}/UTS.o: ${MID}/UTS.NRLIB
	@ echo 3956-21 making ${OUT}/UTS.o from ${MID}/UTS.NRLIB
	@ cp ${MID}/UTS.NRLIB/code.o ${OUT}/UTS.o

@
<<UTS.NRLIB (NRLIB from MID)>>=
${MID}/UTS.NRLIB: ${MID}/UTS.spad
	@ echo 3957 making ${MID}/UTS.NRLIB from ${MID}/UTS.spad
	@ (cd ${MID} ; 	echo ')co UTS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UTS.spad (SPAD from IN)>>=
${MID}/UTS.spad: ${IN}/taylor.spad.pamphlet
	@ echo 3958 making ${MID}/UTS.spad from ${IN}/taylor.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UTS.NRLIB ; \
	${TANGLE} -R"domain UTS UnivariateTaylorSeries" ${IN}/taylor.spad.pamphlet >UTS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UTS2.o (O from NRLIB)>>=
${OUT}/UTS2.o: ${MID}/UTS2.NRLIB
	@ echo 3959-20 making ${OUT}/UTS2.o from ${MID}/UTS2.NRLIB
	@ cp ${MID}/UTS2.NRLIB/code.o ${OUT}/UTS2.o

@
<<UTS2.NRLIB (NRLIB from MID)>>=
${MID}/UTS2.NRLIB: ${MID}/UTS2.spad
	@ echo 3960 making ${MID}/UTS2.NRLIB from ${MID}/UTS2.spad
	@ (cd ${MID} ; 	echo ')co UTS2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UTS2.spad (SPAD from IN)>>=
${MID}/UTS2.spad: ${IN}/taylor.spad.pamphlet
	@ echo 3961 making ${MID}/UTS2.spad from ${IN}/taylor.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UTS2.NRLIB ; \
	${TANGLE} -R"package UTS2 UnivariateTaylorSeriesFunctions2" ${IN}/taylor.spad.pamphlet >UTS2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<taylor.spad.dvi (DOC from IN)>>=
${DOC}/taylor.spad.dvi: ${IN}/taylor.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3962 making ${DOC}/taylor.spad.dvi from ${IN}/taylor.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/taylor.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} taylor.spad ; \
	rm -f ${DOC}/taylor.spad.pamphlet ; \
	rm -f ${DOC}/taylor.spad.tex ; \
	rm -f ${DOC}/taylor.spad )

@
\subsection{tex.spad \cite{1}}
<<tex.spad (SPAD from IN)>>=
${OUTSRC}/tex.spad: ${IN}/tex.spad.pamphlet
	@ echo 3963 making ${OUTSRC}/tex.spad from ${IN}/tex.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/tex.spad.pamphlet >tex.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TEX.o (O from NRLIB)>>=
${OUT}/TEX.o: ${MID}/TEX.NRLIB
	@ echo 3964-14 making ${OUT}/TEX.o from ${MID}/TEX.NRLIB
	@ cp ${MID}/TEX.NRLIB/code.o ${OUT}/TEX.o

@
<<TEX.NRLIB (NRLIB from MID)>>=
${MID}/TEX.NRLIB: ${MID}/TEX.spad
	@ echo 3965 making ${MID}/TEX.NRLIB from ${MID}/TEX.spad
	@ (cd ${MID} ; 	echo ')co TEX.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TEX.spad (SPAD from IN)>>=
${MID}/TEX.spad: ${IN}/tex.spad.pamphlet
	@ echo 3966 making ${MID}/TEX.spad from ${IN}/tex.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf TEX.NRLIB ; \
	${TANGLE} -R"domain TEX TexFormat" ${IN}/tex.spad.pamphlet >TEX.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TEX1.o (O from NRLIB)>>=
${OUT}/TEX1.o: ${MID}/TEX1.NRLIB
	@ echo 3967-4 making ${OUT}/TEX1.o from ${MID}/TEX1.NRLIB
	@ cp ${MID}/TEX1.NRLIB/code.o ${OUT}/TEX1.o

@
<<TEX1.NRLIB (NRLIB from MID)>>=
${MID}/TEX1.NRLIB: ${MID}/TEX1.spad
	@ echo 3968 making ${MID}/TEX1.NRLIB from ${MID}/TEX1.spad
	@ (cd ${MID} ; 	echo ')co TEX1.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TEX1.spad (SPAD from IN)>>=
${MID}/TEX1.spad: ${IN}/tex.spad.pamphlet
	@ echo 3969 making ${MID}/TEX1.spad from ${IN}/tex.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf TEX1.NRLIB ; \
	${TANGLE} -R"package TEX1 TexFormat1" ${IN}/tex.spad.pamphlet >TEX1.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<tex.spad.dvi (DOC from IN)>>=
${DOC}/tex.spad.dvi: ${IN}/tex.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3970 making ${DOC}/tex.spad.dvi from ${IN}/tex.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/tex.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} tex.spad ; \
	rm -f ${DOC}/tex.spad.pamphlet ; \
	rm -f ${DOC}/tex.spad.tex ; \
	rm -f ${DOC}/tex.spad )

@
\subsection{tools.spad \cite{1}}
<<tools.spad (SPAD from IN)>>=
${OUTSRC}/tools.spad: ${IN}/tools.spad.pamphlet
	@ echo 3971 making ${OUTSRC}/tools.spad from ${IN}/tools.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/tools.spad.pamphlet >tools.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ESTOOLS.o (O from NRLIB)>>=
${OUT}/ESTOOLS.o: ${MID}/ESTOOLS.NRLIB
	@ echo 3972-20 making ${OUT}/ESTOOLS.o from ${MID}/ESTOOLS.NRLIB
	@ cp ${MID}/ESTOOLS.NRLIB/code.o ${OUT}/ESTOOLS.o

@
<<ESTOOLS.NRLIB (NRLIB from MID)>>=
${MID}/ESTOOLS.NRLIB: ${MID}/ESTOOLS.spad
	@ echo 3973 making ${MID}/ESTOOLS.NRLIB from ${MID}/ESTOOLS.spad
	@ (cd ${MID} ; 	echo ')co ESTOOLS.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ESTOOLS.spad (SPAD from IN)>>=
${MID}/ESTOOLS.spad: ${IN}/tools.spad.pamphlet
	@ echo 3974 making ${MID}/ESTOOLS.spad from ${IN}/tools.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ESTOOLS.NRLIB ; \
	${TANGLE} -R"package ESTOOLS ExpertSystemToolsPackage" ${IN}/tools.spad.pamphlet >ESTOOLS.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ESTOOLS1.o (O from NRLIB)>>=
${OUT}/ESTOOLS1.o: ${MID}/ESTOOLS1.NRLIB
	@ echo 3975-9 making ${OUT}/ESTOOLS1.o from ${MID}/ESTOOLS1.NRLIB
	@ cp ${MID}/ESTOOLS1.NRLIB/code.o ${OUT}/ESTOOLS1.o

@
<<ESTOOLS1.NRLIB (NRLIB from MID)>>=
${MID}/ESTOOLS1.NRLIB: ${MID}/ESTOOLS1.spad
	@ echo 3976 making ${MID}/ESTOOLS1.NRLIB from ${MID}/ESTOOLS1.spad
	@ (cd ${MID} ; 	echo ')co ESTOOLS1.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ESTOOLS1.spad (SPAD from IN)>>=
${MID}/ESTOOLS1.spad: ${IN}/tools.spad.pamphlet
	@ echo 3977 making ${MID}/ESTOOLS1.spad from ${IN}/tools.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ESTOOLS1.NRLIB ; \
	${TANGLE} -R"package ESTOOLS1 ExpertSystemToolsPackage1" ${IN}/tools.spad.pamphlet >ESTOOLS1.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ESTOOLS2.o (O from NRLIB)>>=
${OUT}/ESTOOLS2.o: ${MID}/ESTOOLS2.NRLIB
	@ echo 3978-5 making ${OUT}/ESTOOLS2.o from ${MID}/ESTOOLS2.NRLIB
	@ cp ${MID}/ESTOOLS2.NRLIB/code.o ${OUT}/ESTOOLS2.o

@
<<ESTOOLS2.NRLIB (NRLIB from MID)>>=
${MID}/ESTOOLS2.NRLIB: ${MID}/ESTOOLS2.spad
	@ echo 3979 making ${MID}/ESTOOLS2.NRLIB from ${MID}/ESTOOLS2.spad
	@ (cd ${MID} ; 	echo ')co ESTOOLS2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ESTOOLS2.spad (SPAD from IN)>>=
${MID}/ESTOOLS2.spad: ${IN}/tools.spad.pamphlet
	@ echo 3980 making ${MID}/ESTOOLS2.spad from ${IN}/tools.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ESTOOLS2.NRLIB ; \
	${TANGLE} -R"package ESTOOLS2 ExpertSystemToolsPackage2" ${IN}/tools.spad.pamphlet >ESTOOLS2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<tools.spad.dvi (DOC from IN)>>=
${DOC}/tools.spad.dvi: ${IN}/tools.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3981 making ${DOC}/tools.spad.dvi from ${IN}/tools.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/tools.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} tools.spad ; \
	rm -f ${DOC}/tools.spad.pamphlet ; \
	rm -f ${DOC}/tools.spad.tex ; \
	rm -f ${DOC}/tools.spad )

@
\subsection{transsolve.spad \cite{1}}
<<transsolve.spad (SPAD from IN)>>=
${OUTSRC}/transsolve.spad: ${IN}/transsolve.spad.pamphlet
	@ echo 3982 making ${OUTSRC}/transsolve.spad from ${IN}/transsolve.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/transsolve.spad.pamphlet >transsolve.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SOLVESER.o (O from NRLIB)>>=
${OUT}/SOLVESER.o: ${MID}/SOLVESER.NRLIB
	@ echo 3983-20 making ${OUT}/SOLVESER.o from ${MID}/SOLVESER.NRLIB
	@ cp ${MID}/SOLVESER.NRLIB/code.o ${OUT}/SOLVESER.o

@
<<SOLVESER.NRLIB (NRLIB from MID)>>=
${MID}/SOLVESER.NRLIB: ${MID}/SOLVESER.spad
	@ echo 3984 making ${MID}/SOLVESER.NRLIB from ${MID}/SOLVESER.spad
	@ (cd ${MID} ; 	echo ')co SOLVESER.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SOLVESER.spad (SPAD from IN)>>=
${MID}/SOLVESER.spad: ${IN}/transsolve.spad.pamphlet
	@ echo 3985 making ${MID}/SOLVESER.spad from ${IN}/transsolve.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SOLVESER.NRLIB ; \
	${TANGLE} -R"package SOLVESER TransSolvePackageService" ${IN}/transsolve.spad.pamphlet >SOLVESER.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SOLVETRA.o (O from NRLIB)>>=
${OUT}/SOLVETRA.o: ${MID}/SOLVETRA.NRLIB
	@ echo 3986-22 making ${OUT}/SOLVETRA.o from ${MID}/SOLVETRA.NRLIB
	@ cp ${MID}/SOLVETRA.NRLIB/code.o ${OUT}/SOLVETRA.o

@
<<SOLVETRA.NRLIB (NRLIB from MID)>>=
${MID}/SOLVETRA.NRLIB: ${MID}/SOLVETRA.spad
	@ echo 3987 making ${MID}/SOLVETRA.NRLIB from ${MID}/SOLVETRA.spad
	@ (cd ${MID} ; 	echo ')co SOLVETRA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SOLVETRA.spad (SPAD from IN)>>=
${MID}/SOLVETRA.spad: ${IN}/transsolve.spad.pamphlet
	@ echo 3988 making ${MID}/SOLVETRA.spad from ${IN}/transsolve.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SOLVETRA.NRLIB ; \
	${TANGLE} -R"package SOLVETRA TransSolvePackage" ${IN}/transsolve.spad.pamphlet >SOLVETRA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<transsolve.spad.dvi (DOC from IN)>>=
${DOC}/transsolve.spad.dvi: ${IN}/transsolve.spad.pamphlet ${DOC}/axiom.sty
	@ echo 3989 making ${DOC}/transsolve.spad.dvi from ${IN}/transsolve.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/transsolve.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} transsolve.spad ; \
	rm -f ${DOC}/transsolve.spad.pamphlet ; \
	rm -f ${DOC}/transsolve.spad.tex ; \
	rm -f ${DOC}/transsolve.spad )

@
\subsection{tree.spad \cite{1}}
<<tree.spad (SPAD from IN)>>=
${OUTSRC}/tree.spad: ${IN}/tree.spad.pamphlet
	@ echo 3990 making ${OUTSRC}/tree.spad from ${IN}/tree.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/tree.spad.pamphlet >tree.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BBTREE.o (O from NRLIB)>>=
${OUT}/BBTREE.o: ${MID}/BBTREE.NRLIB
	@ echo 3991-10 making ${OUT}/BBTREE.o from ${MID}/BBTREE.NRLIB
	@ cp ${MID}/BBTREE.NRLIB/code.o ${OUT}/BBTREE.o

@
<<BBTREE.NRLIB (NRLIB from MID)>>=
${MID}/BBTREE.NRLIB: ${MID}/BBTREE.spad
	@ echo 3992 making ${MID}/BBTREE.NRLIB from ${MID}/BBTREE.spad
	@ (cd ${MID} ; 	echo ')co BBTREE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BBTREE.spad (SPAD from IN)>>=
${MID}/BBTREE.spad: ${IN}/tree.spad.pamphlet
	@ echo 3993 making ${MID}/BBTREE.spad from ${IN}/tree.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf BBTREE.NRLIB ; \
	${TANGLE} -R"domain BBTREE BalancedBinaryTree" ${IN}/tree.spad.pamphlet >BBTREE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BSTREE.o (O from NRLIB)>>=
${OUT}/BSTREE.o: ${MID}/BSTREE.NRLIB
	@ echo 3994-8 making ${OUT}/BSTREE.o from ${MID}/BSTREE.NRLIB
	@ cp ${MID}/BSTREE.NRLIB/code.o ${OUT}/BSTREE.o

@
<<BSTREE.NRLIB (NRLIB from MID)>>=
${MID}/BSTREE.NRLIB: ${MID}/BSTREE.spad
	@ echo 3995 making ${MID}/BSTREE.NRLIB from ${MID}/BSTREE.spad
	@ (cd ${MID} ; 	echo ')co BSTREE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BSTREE.spad (SPAD from IN)>>=
${MID}/BSTREE.spad: ${IN}/tree.spad.pamphlet
	@ echo 3996 making ${MID}/BSTREE.spad from ${IN}/tree.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf BSTREE.NRLIB ; \
	${TANGLE} -R"domain BSTREE BinarySearchTree" ${IN}/tree.spad.pamphlet >BSTREE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BTCAT-.o (O from NRLIB)>>=
${OUT}/BTCAT-.o: ${MID}/BTCAT.NRLIB
	@ echo 3997-7 making ${OUT}/BTCAT-.o from ${MID}/BTCAT-.NRLIB
	@ cp ${MID}/BTCAT-.NRLIB/code.o ${OUT}/BTCAT-.o

@
<<BTCAT-.NRLIB (NRLIB from MID)>>=
${MID}/BTCAT-.NRLIB: ${MID}/BTCAT.spad 
	@ echo 3998 making ${MID}/BTCAT-.NRLIB from ${MID}/BTCAT.spad
	@ (cd ${MID} ; 	echo ')co BTCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BTCAT.o (O from NRLIB)>>=
${OUT}/BTCAT.o: ${MID}/BTCAT.NRLIB
	@ echo 3999-7 making ${OUT}/BTCAT.o from ${MID}/BTCAT.NRLIB
	@ cp ${MID}/BTCAT.NRLIB/code.o ${OUT}/BTCAT.o

@
<<BTCAT.NRLIB (NRLIB from MID)>>=
${MID}/BTCAT.NRLIB: ${MID}/BTCAT.spad
	@ echo 4000 making ${MID}/BTCAT.NRLIB from ${MID}/BTCAT.spad
	@ (cd ${MID} ; 	echo ')co BTCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BTCAT.spad (SPAD from IN)>>=
${MID}/BTCAT.spad: ${IN}/tree.spad.pamphlet
	@ echo 4001 making ${MID}/BTCAT.spad from ${IN}/tree.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf BTCAT.NRLIB ; \
	${TANGLE} -R"category BTCAT BinaryTreeCategory" ${IN}/tree.spad.pamphlet >BTCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BTOURN.o (O from NRLIB)>>=
${OUT}/BTOURN.o: ${MID}/BTOURN.NRLIB
	@ echo 4002-8 making ${OUT}/BTOURN.o from ${MID}/BTOURN.NRLIB
	@ cp ${MID}/BTOURN.NRLIB/code.o ${OUT}/BTOURN.o

@
<<BTOURN.NRLIB (NRLIB from MID)>>=
${MID}/BTOURN.NRLIB: ${MID}/BTOURN.spad
	@ echo 4003 making ${MID}/BTOURN.NRLIB from ${MID}/BTOURN.spad
	@ (cd ${MID} ; 	echo ')co BTOURN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BTOURN.spad (SPAD from IN)>>=
${MID}/BTOURN.spad: ${IN}/tree.spad.pamphlet
	@ echo 4004 making ${MID}/BTOURN.spad from ${IN}/tree.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf BTOURN.NRLIB ; \
	${TANGLE} -R"domain BTOURN BinaryTournament" ${IN}/tree.spad.pamphlet >BTOURN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BTREE.o (O from NRLIB)>>=
${OUT}/BTREE.o: ${MID}/BTREE.NRLIB
	@ echo 4005-10 making ${OUT}/BTREE.o from ${MID}/BTREE.NRLIB
	@ cp ${MID}/BTREE.NRLIB/code.o ${OUT}/BTREE.o

@
<<BTREE.NRLIB (NRLIB from MID)>>=
${MID}/BTREE.NRLIB: ${MID}/BTREE.spad
	@ echo 4006 making ${MID}/BTREE.NRLIB from ${MID}/BTREE.spad
	@ (cd ${MID} ; 	echo ')co BTREE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<BTREE.spad (SPAD from IN)>>=
${MID}/BTREE.spad: ${IN}/tree.spad.pamphlet
	@ echo 4007 making ${MID}/BTREE.spad from ${IN}/tree.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf BTREE.NRLIB ; \
	${TANGLE} -R"domain BTREE BinaryTree" ${IN}/tree.spad.pamphlet >BTREE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PENDTREE.o (O from NRLIB)>>=
${OUT}/PENDTREE.o: ${MID}/PENDTREE.NRLIB
	@ echo 4008-10 making ${OUT}/PENDTREE.o from ${MID}/PENDTREE.NRLIB
	@ cp ${MID}/PENDTREE.NRLIB/code.o ${OUT}/PENDTREE.o

@
<<PENDTREE.NRLIB (NRLIB from MID)>>=
${MID}/PENDTREE.NRLIB: ${MID}/PENDTREE.spad
	@ echo 4009 making ${MID}/PENDTREE.NRLIB from ${MID}/PENDTREE.spad
	@ (cd ${MID} ; 	echo ')co PENDTREE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PENDTREE.spad (SPAD from IN)>>=
${MID}/PENDTREE.spad: ${IN}/tree.spad.pamphlet
	@ echo 4010 making ${MID}/PENDTREE.spad from ${IN}/tree.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PENDTREE.NRLIB ; \
	${TANGLE} -R"domain PENDTREE PendantTree" ${IN}/tree.spad.pamphlet >PENDTREE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TREE.o (O from NRLIB)>>=
${OUT}/TREE.o: ${MID}/TREE.NRLIB
	@ echo 4011-14 making ${OUT}/TREE.o from ${MID}/TREE.NRLIB
	@ cp ${MID}/TREE.NRLIB/code.o ${OUT}/TREE.o

@
<<TREE.NRLIB (NRLIB from MID)>>=
${MID}/TREE.NRLIB: ${MID}/TREE.spad
	@ echo 4012 making ${MID}/TREE.NRLIB from ${MID}/TREE.spad
	@ (cd ${MID} ; 	echo ')co TREE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TREE.spad (SPAD from IN)>>=
${MID}/TREE.spad: ${IN}/tree.spad.pamphlet
	@ echo 4013 making ${MID}/TREE.spad from ${IN}/tree.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf TREE.NRLIB ; \
	${TANGLE} -R"domain TREE Tree" ${IN}/tree.spad.pamphlet >TREE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<tree.spad.dvi (DOC from IN)>>=
${DOC}/tree.spad.dvi: ${IN}/tree.spad.pamphlet ${DOC}/axiom.sty
	@ echo 4014 making ${DOC}/tree.spad.dvi from ${IN}/tree.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/tree.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} tree.spad ; \
	rm -f ${DOC}/tree.spad.pamphlet ; \
	rm -f ${DOC}/tree.spad.tex ; \
	rm -f ${DOC}/tree.spad )

@
\subsection{trigcat.spad \cite{1}}
<<trigcat.spad (SPAD from IN)>>=
${OUTSRC}/trigcat.spad: ${IN}/trigcat.spad.pamphlet
	@ echo 4015 making ${OUTSRC}/trigcat.spad from ${IN}/trigcat.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/trigcat.spad.pamphlet >trigcat.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<AHYP.o (O from NRLIB)>>=
${OUT}/AHYP.o: ${MID}/AHYP.NRLIB
	@ echo 4016-0 making ${OUT}/AHYP.o from ${MID}/AHYP.NRLIB
	@ cp ${MID}/AHYP.NRLIB/code.o ${OUT}/AHYP.o

@
<<AHYP.NRLIB (NRLIB from MID)>>=
${MID}/AHYP.NRLIB: ${MID}/AHYP.spad
	@ echo 4017 making ${MID}/AHYP.NRLIB from ${MID}/AHYP.spad
	@ (cd ${MID} ; 	echo ')co AHYP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<AHYP.spad (SPAD from IN)>>=
${MID}/AHYP.spad: ${IN}/trigcat.spad.pamphlet
	@ echo 4018 making ${MID}/AHYP.spad from ${IN}/trigcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf AHYP.NRLIB ; \
	${TANGLE} -R"category AHYP ArcHyperbolicFunctionCategory" ${IN}/trigcat.spad.pamphlet >AHYP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ATRIG-.o (O from NRLIB)>>=
${OUT}/ATRIG-.o: ${MID}/ATRIG.NRLIB
	@ echo 4019-5 making ${OUT}/ATRIG-.o from ${MID}/ATRIG-.NRLIB
	@ cp ${MID}/ATRIG-.NRLIB/code.o ${OUT}/ATRIG-.o

@
<<ATRIG-.NRLIB (NRLIB from MID)>>=
${MID}/ATRIG-.NRLIB: ${MID}/ATRIG.spad 
	@ echo 4020 making ${MID}/ATRIG-.NRLIB from ${MID}/ATRIG.spad
	@ (cd ${MID} ; 	echo ')co ATRIG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ATRIG.o (O from NRLIB)>>=
${OUT}/ATRIG.o: ${MID}/ATRIG.NRLIB
	@ echo 4021-5 making ${OUT}/ATRIG.o from ${MID}/ATRIG.NRLIB
	@ cp ${MID}/ATRIG.NRLIB/code.o ${OUT}/ATRIG.o

@
<<ATRIG.NRLIB (NRLIB from MID)>>=
${MID}/ATRIG.NRLIB: ${MID}/ATRIG.spad
	@ echo 4022 making ${MID}/ATRIG.NRLIB from ${MID}/ATRIG.spad
	@ (cd ${MID} ; 	echo ')co ATRIG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ATRIG.spad (SPAD from IN)>>=
${MID}/ATRIG.spad: ${IN}/trigcat.spad.pamphlet
	@ echo 4023 making ${MID}/ATRIG.spad from ${IN}/trigcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ATRIG.NRLIB ; \
	${TANGLE} -R"category ATRIG ArcTrigonometricFunctionCategory" ${IN}/trigcat.spad.pamphlet >ATRIG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CFCAT.o (O from NRLIB)>>=
${OUT}/CFCAT.o: ${MID}/CFCAT.NRLIB
	@ echo 4024-0 making ${OUT}/CFCAT.o from ${MID}/CFCAT.NRLIB
	@ cp ${MID}/CFCAT.NRLIB/code.o ${OUT}/CFCAT.o

@
<<CFCAT.NRLIB (NRLIB from MID)>>=
${MID}/CFCAT.NRLIB: ${MID}/CFCAT.spad
	@ echo 4025 making ${MID}/CFCAT.NRLIB from ${MID}/CFCAT.spad
	@ (cd ${MID} ; 	echo ')co CFCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<CFCAT.spad (SPAD from IN)>>=
${MID}/CFCAT.spad: ${IN}/trigcat.spad.pamphlet
	@ echo 4026 making ${MID}/CFCAT.spad from ${IN}/trigcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf CFCAT.NRLIB ; \
	${TANGLE} -R"category CFCAT CombinatorialFunctionCategory" ${IN}/trigcat.spad.pamphlet >CFCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ELEMFUN-.o (O from NRLIB)>>=
${OUT}/ELEMFUN-.o: ${MID}/ELEMFUN.NRLIB
	@ echo 4027-5 making ${OUT}/ELEMFUN-.o from ${MID}/ELEMFUN-.NRLIB
	@ cp ${MID}/ELEMFUN-.NRLIB/code.o ${OUT}/ELEMFUN-.o

@
<<ELEMFUN-.NRLIB (NRLIB from MID)>>=
${MID}/ELEMFUN-.NRLIB: ${MID}/ELEMFUN.spad 
	@ echo 4028 making ${MID}/ELEMFUN-.NRLIB from ${MID}/ELEMFUN.spad
	@ (cd ${MID} ; 	echo ')co ELEMFUN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ELEMFUN.o (O from NRLIB)>>=
${OUT}/ELEMFUN.o: ${MID}/ELEMFUN.NRLIB
	@ echo 4029-5 making ${OUT}/ELEMFUN.o from ${MID}/ELEMFUN.NRLIB
	@ cp ${MID}/ELEMFUN.NRLIB/code.o ${OUT}/ELEMFUN.o

@
<<ELEMFUN.NRLIB (NRLIB from MID)>>=
${MID}/ELEMFUN.NRLIB: ${MID}/ELEMFUN.spad
	@ echo 4030 making ${MID}/ELEMFUN.NRLIB from ${MID}/ELEMFUN.spad
	@ (cd ${MID} ; 	echo ')co ELEMFUN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ELEMFUN.spad (SPAD from IN)>>=
${MID}/ELEMFUN.spad: ${IN}/trigcat.spad.pamphlet
	@ echo 4031 making ${MID}/ELEMFUN.spad from ${IN}/trigcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ELEMFUN.NRLIB ; \
	${TANGLE} -R"category ELEMFUN ElementaryFunctionCategory" ${IN}/trigcat.spad.pamphlet >ELEMFUN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<HYPCAT-.o (O from NRLIB)>>=
${OUT}/HYPCAT-.o: ${MID}/HYPCAT.NRLIB
	@ echo 4032-6 making ${OUT}/HYPCAT-.o from ${MID}/HYPCAT-.NRLIB
	@ cp ${MID}/HYPCAT-.NRLIB/code.o ${OUT}/HYPCAT-.o

@
<<HYPCAT-.NRLIB (NRLIB from MID)>>=
${MID}/HYPCAT-.NRLIB: ${MID}/HYPCAT.spad 
	@ echo 4033 making ${MID}/HYPCAT-.NRLIB from ${MID}/HYPCAT.spad
	@ (cd ${MID} ; 	echo ')co HYPCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<HYPCAT.o (O from NRLIB)>>=
${OUT}/HYPCAT.o: ${MID}/HYPCAT.NRLIB
	@ echo 4034-6 making ${OUT}/HYPCAT.o from ${MID}/HYPCAT.NRLIB
	@ cp ${MID}/HYPCAT.NRLIB/code.o ${OUT}/HYPCAT.o

@
<<HYPCAT.NRLIB (NRLIB from MID)>>=
${MID}/HYPCAT.NRLIB: ${MID}/HYPCAT.spad
	@ echo 4035 making ${MID}/HYPCAT.NRLIB from ${MID}/HYPCAT.spad
	@ (cd ${MID} ; 	echo ')co HYPCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<HYPCAT.spad (SPAD from IN)>>=
${MID}/HYPCAT.spad: ${IN}/trigcat.spad.pamphlet
	@ echo 4036 making ${MID}/HYPCAT.spad from ${IN}/trigcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf HYPCAT.NRLIB ; \
	${TANGLE} -R"category HYPCAT HyperbolicFunctionCategory" ${IN}/trigcat.spad.pamphlet >HYPCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LFCAT.o (O from NRLIB)>>=
${OUT}/LFCAT.o: ${MID}/LFCAT.NRLIB
	@ echo 4037-11 making ${OUT}/LFCAT.o from ${MID}/LFCAT.NRLIB
	@ cp ${MID}/LFCAT.NRLIB/code.o ${OUT}/LFCAT.o

@
<<LFCAT.NRLIB (NRLIB from MID)>>=
${MID}/LFCAT.NRLIB: ${MID}/LFCAT.spad
	@ echo 4038 making ${MID}/LFCAT.NRLIB from ${MID}/LFCAT.spad
	@ (cd ${MID} ; 	echo ')co LFCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LFCAT.spad (SPAD from IN)>>=
${MID}/LFCAT.spad: ${IN}/trigcat.spad.pamphlet
	@ echo 4039 making ${MID}/LFCAT.spad from ${IN}/trigcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LFCAT.NRLIB ; \
	${TANGLE} -R"category LFCAT LiouvillianFunctionCategory" ${IN}/trigcat.spad.pamphlet >LFCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PRIMCAT.o (O from NRLIB)>>=
${OUT}/PRIMCAT.o: ${MID}/PRIMCAT.NRLIB
	@ echo 4040-0 making ${OUT}/PRIMCAT.o from ${MID}/PRIMCAT.NRLIB
	@ cp ${MID}/PRIMCAT.NRLIB/code.o ${OUT}/PRIMCAT.o

@
<<PRIMCAT.NRLIB (NRLIB from MID)>>=
${MID}/PRIMCAT.NRLIB: ${MID}/PRIMCAT.spad
	@ echo 4041 making ${MID}/PRIMCAT.NRLIB from ${MID}/PRIMCAT.spad
	@ (cd ${MID} ; 	echo ')co PRIMCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PRIMCAT.spad (SPAD from IN)>>=
${MID}/PRIMCAT.spad: ${IN}/trigcat.spad.pamphlet
	@ echo 4042 making ${MID}/PRIMCAT.spad from ${IN}/trigcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PRIMCAT.NRLIB ; \
	${TANGLE} -R"category PRIMCAT PrimitiveFunctionCategory" ${IN}/trigcat.spad.pamphlet >PRIMCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SPFCAT.o (O from NRLIB)>>=
${OUT}/SPFCAT.o: ${MID}/SPFCAT.NRLIB
	@ echo 4043-0 making ${OUT}/SPFCAT.o from ${MID}/SPFCAT.NRLIB
	@ cp ${MID}/SPFCAT.NRLIB/code.o ${OUT}/SPFCAT.o

@
<<SPFCAT.NRLIB (NRLIB from MID)>>=
${MID}/SPFCAT.NRLIB: ${MID}/SPFCAT.spad
	@ echo 4044 making ${MID}/SPFCAT.NRLIB from ${MID}/SPFCAT.spad
	@ (cd ${MID} ; 	echo ')co SPFCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<SPFCAT.spad (SPAD from IN)>>=
${MID}/SPFCAT.spad: ${IN}/trigcat.spad.pamphlet
	@ echo 4045 making ${MID}/SPFCAT.spad from ${IN}/trigcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf SPFCAT.NRLIB ; \
	${TANGLE} -R"category SPFCAT SpecialFunctionCategory" ${IN}/trigcat.spad.pamphlet >SPFCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TRANFUN-.o (O from NRLIB)>>=
${OUT}/TRANFUN-.o: ${MID}/TRANFUN.NRLIB
	@ echo 4046-10 making ${OUT}/TRANFUN-.o from ${MID}/TRANFUN-.NRLIB
	@ cp ${MID}/TRANFUN-.NRLIB/code.o ${OUT}/TRANFUN-.o

@
<<TRANFUN-.NRLIB (NRLIB from MID)>>=
${MID}/TRANFUN-.NRLIB: ${MID}/TRANFUN.spad 
	@ echo 4047 making ${MID}/TRANFUN-.NRLIB from ${MID}/TRANFUN.spad
	@ (cd ${MID} ; 	echo ')co TRANFUN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TRANFUN.o (O from NRLIB)>>=
${OUT}/TRANFUN.o: ${MID}/TRANFUN.NRLIB
	@ echo 4048-10 making ${OUT}/TRANFUN.o from ${MID}/TRANFUN.NRLIB
	@ cp ${MID}/TRANFUN.NRLIB/code.o ${OUT}/TRANFUN.o

@
<<TRANFUN.NRLIB (NRLIB from MID)>>=
${MID}/TRANFUN.NRLIB: ${MID}/TRANFUN.spad
	@ echo 4049 making ${MID}/TRANFUN.NRLIB from ${MID}/TRANFUN.spad
	@ (cd ${MID} ; 	echo ')co TRANFUN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TRANFUN.spad (SPAD from IN)>>=
${MID}/TRANFUN.spad: ${IN}/trigcat.spad.pamphlet
	@ echo 4050 making ${MID}/TRANFUN.spad from ${IN}/trigcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf TRANFUN.NRLIB ; \
	${TANGLE} -R"category TRANFUN TranscendentalFunctionCategory" ${IN}/trigcat.spad.pamphlet >TRANFUN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TRIGCAT-.o (O from NRLIB)>>=
${OUT}/TRIGCAT-.o: ${MID}/TRIGCAT.NRLIB
	@ echo 4051-5 making ${OUT}/TRIGCAT-.o from ${MID}/TRIGCAT-.NRLIB
	@ cp ${MID}/TRIGCAT-.NRLIB/code.o ${OUT}/TRIGCAT-.o

@
<<TRIGCAT-.NRLIB (NRLIB from MID)>>=
${MID}/TRIGCAT-.NRLIB: ${MID}/TRIGCAT.spad 
	@ echo 4052 making ${MID}/TRIGCAT-.NRLIB from ${MID}/TRIGCAT.spad
	@ (cd ${MID} ; 	echo ')co TRIGCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TRIGCAT.o (O from NRLIB)>>=
${OUT}/TRIGCAT.o: ${MID}/TRIGCAT.NRLIB
	@ echo 4053-5 making ${OUT}/TRIGCAT.o from ${MID}/TRIGCAT.NRLIB
	@ cp ${MID}/TRIGCAT.NRLIB/code.o ${OUT}/TRIGCAT.o

@
<<TRIGCAT.NRLIB (NRLIB from MID)>>=
${MID}/TRIGCAT.NRLIB: ${MID}/TRIGCAT.spad
	@ echo 4054 making ${MID}/TRIGCAT.NRLIB from ${MID}/TRIGCAT.spad
	@ (cd ${MID} ; 	echo ')co TRIGCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TRIGCAT.spad (SPAD from IN)>>=
${MID}/TRIGCAT.spad: ${IN}/trigcat.spad.pamphlet
	@ echo 4055 making ${MID}/TRIGCAT.spad from ${IN}/trigcat.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf TRIGCAT.NRLIB ; \
	${TANGLE} -R"category TRIGCAT TrigonometricFunctionCategory" ${IN}/trigcat.spad.pamphlet >TRIGCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<trigcat.spad.dvi (DOC from IN)>>=
${DOC}/trigcat.spad.dvi: ${IN}/trigcat.spad.pamphlet ${DOC}/axiom.sty
	@ echo 4056 making ${DOC}/trigcat.spad.dvi from ${IN}/trigcat.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/trigcat.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} trigcat.spad ; \
	rm -f ${DOC}/trigcat.spad.pamphlet ; \
	rm -f ${DOC}/trigcat.spad.tex ; \
	rm -f ${DOC}/trigcat.spad )

@
\subsection{triset.spad \cite{1}}
<<triset.spad (SPAD from IN)>>=
${OUTSRC}/triset.spad: ${IN}/triset.spad.pamphlet
	@ echo 4057 making ${OUTSRC}/triset.spad from ${IN}/triset.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/triset.spad.pamphlet >triset.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GTSET.o (O from NRLIB)>>=
${OUT}/GTSET.o: ${MID}/GTSET.NRLIB
	@ echo 4058-20 making ${OUT}/GTSET.o from ${MID}/GTSET.NRLIB
	@ cp ${MID}/GTSET.NRLIB/code.o ${OUT}/GTSET.o

@
<<GTSET.NRLIB (NRLIB from MID)>>=
${MID}/GTSET.NRLIB: ${MID}/GTSET.spad
	@ echo 4059 making ${MID}/GTSET.NRLIB from ${MID}/GTSET.spad
	@ (cd ${MID} ; 	echo ')co GTSET.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GTSET.spad (SPAD from IN)>>=
${MID}/GTSET.spad: ${IN}/triset.spad.pamphlet
	@ echo 4060 making ${MID}/GTSET.spad from ${IN}/triset.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GTSET.NRLIB ; \
	${TANGLE} -R"domain GTSET GeneralTriangularSet" ${IN}/triset.spad.pamphlet >GTSET.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PSETPK.o (O from NRLIB)>>=
${OUT}/PSETPK.o: ${MID}/PSETPK.NRLIB
	@ echo 4061-20 making ${OUT}/PSETPK.o from ${MID}/PSETPK.NRLIB
	@ cp ${MID}/PSETPK.NRLIB/code.o ${OUT}/PSETPK.o

@
<<PSETPK.NRLIB (NRLIB from MID)>>=
${MID}/PSETPK.NRLIB: ${MID}/PSETPK.spad
	@ echo 4062 making ${MID}/PSETPK.NRLIB from ${MID}/PSETPK.spad
	@ (cd ${MID} ; 	echo ')co PSETPK.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PSETPK.spad (SPAD from IN)>>=
${MID}/PSETPK.spad: ${IN}/triset.spad.pamphlet
	@ echo 4063 making ${MID}/PSETPK.spad from ${IN}/triset.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PSETPK.NRLIB ; \
	${TANGLE} -R"package PSETPK PolynomialSetUtilitiesPackage" ${IN}/triset.spad.pamphlet >PSETPK.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TSETCAT-.o (O from NRLIB)>>=
${OUT}/TSETCAT-.o: ${MID}/TSETCAT.NRLIB
	@ echo 4064-0c making ${OUT}/TSETCAT-.o from ${MID}/TSETCAT-.NRLIB
	@ cp ${MID}/TSETCAT-.NRLIB/code.o ${OUT}/TSETCAT-.o

@
<<TSETCAT-.NRLIB (NRLIB from MID)>>=
${MID}/TSETCAT-.NRLIB: ${MID}/TSETCAT.spad 
	@ echo 4065 making ${MID}/TSETCAT-.NRLIB from ${MID}/TSETCAT.spad
	@ (cd ${MID} ; 	echo ')co TSETCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TSETCAT.o (O from NRLIB)>>=
${OUT}/TSETCAT.o: ${MID}/TSETCAT.NRLIB
	@ echo 4066-0c making ${OUT}/TSETCAT.o from ${MID}/TSETCAT.NRLIB
	@ cp ${MID}/TSETCAT.NRLIB/code.o ${OUT}/TSETCAT.o

@
<<TSETCAT.NRLIB (NRLIB from MID)>>=
${MID}/TSETCAT.NRLIB: ${MID}/TSETCAT.spad
	@ echo 4067 making ${MID}/TSETCAT.NRLIB from ${MID}/TSETCAT.spad
	@ (cd ${MID} ; 	echo ')co TSETCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TSETCAT.spad (SPAD from IN)>>=
${MID}/TSETCAT.spad: ${IN}/triset.spad.pamphlet
	@ echo 4068 making ${MID}/TSETCAT.spad from ${IN}/triset.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf TSETCAT.NRLIB ; \
	${TANGLE} -R"category TSETCAT TriangularSetCategory" ${IN}/triset.spad.pamphlet >TSETCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TSETCAT-.o (BOOTSTRAP from MID)>>=
${MID}/TSETCAT-.o: ${MID}/TSETCAT-.lsp 
	@ echo 4069-0b making ${MID}/TSETCAT-.o from ${MID}/TSETCAT-.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "TSETCAT-.lsp" :output-file "TSETCAT-.o"))' | ${DEPSYS} )
	@ cp ${MID}/TSETCAT-.o ${OUT}/TSETCAT-.o

@
<<TSETCAT-.lsp (LISP from IN)>>=
${MID}/TSETCAT-.lsp: ${IN}/triset.spad.pamphlet
	@ echo 4070 making ${MID}/TSETCAT-.lsp from ${IN}/triset.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf TSETCAT-.NRLIB ; \
	rm -rf ${OUT}/TSETCAT-.o ; \
	${TANGLE} -R"TSETCAT-.lsp BOOTSTRAP" ${IN}/triset.spad.pamphlet >TSETCAT-.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TSETCAT.o (BOOTSTRAP from MID)>>=
${MID}/TSETCAT.o: ${MID}/TSETCAT.lsp 
	@ echo 4071-0b making ${MID}/TSETCAT.o from ${MID}/TSETCAT.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "TSETCAT.lsp" :output-file "TSETCAT.o"))' | ${DEPSYS} )
	@ cp ${MID}/TSETCAT.o ${OUT}/TSETCAT.o

@
<<TSETCAT.lsp (LISP from IN)>>=
${MID}/TSETCAT.lsp: ${IN}/triset.spad.pamphlet
	@ echo 4072 making ${MID}/TSETCAT.lsp from ${IN}/triset.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf TSETCAT.NRLIB ; \
	rm -rf ${OUT}/TSETCAT.o ; \
	${TANGLE} -R"TSETCAT.lsp BOOTSTRAP" ${IN}/triset.spad.pamphlet >TSETCAT.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

<<WUTSET.o (O from NRLIB)>>=
${OUT}/WUTSET.o: ${MID}/WUTSET.NRLIB
	@ echo 4073-20 making ${OUT}/WUTSET.o from ${MID}/WUTSET.NRLIB
	@ cp ${MID}/WUTSET.NRLIB/code.o ${OUT}/WUTSET.o

@
<<WUTSET.NRLIB (NRLIB from MID)>>=
${MID}/WUTSET.NRLIB: ${MID}/WUTSET.spad
	@ echo 4074 making ${MID}/WUTSET.NRLIB from ${MID}/WUTSET.spad
	@ (cd ${MID} ; 	echo ')co WUTSET.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<WUTSET.spad (SPAD from IN)>>=
${MID}/WUTSET.spad: ${IN}/triset.spad.pamphlet
	@ echo 4075 making ${MID}/WUTSET.spad from ${IN}/triset.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf WUTSET.NRLIB ; \
	${TANGLE} -R"domain WUTSET WuWenTsunTriangularSet" ${IN}/triset.spad.pamphlet >WUTSET.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<triset.spad.dvi (DOC from IN)>>=
${DOC}/triset.spad.dvi: ${IN}/triset.spad.pamphlet ${DOC}/axiom.sty
	@ echo 4076 making ${DOC}/triset.spad.dvi from ${IN}/triset.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/triset.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} triset.spad ; \
	rm -f ${DOC}/triset.spad.pamphlet ; \
	rm -f ${DOC}/triset.spad.tex ; \
	rm -f ${DOC}/triset.spad )

@
\subsection{tube.spad \cite{1}}
<<tube.spad (SPAD from IN)>>=
${OUTSRC}/tube.spad: ${IN}/tube.spad.pamphlet
	@ echo 4077 making ${OUTSRC}/tube.spad from ${IN}/tube.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/tube.spad.pamphlet >tube.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EXPRTUBE.o (O from NRLIB)>>=
${OUT}/EXPRTUBE.o: ${MID}/EXPRTUBE.NRLIB
	@ echo 4078-20 making ${OUT}/EXPRTUBE.o from ${MID}/EXPRTUBE.NRLIB
	@ cp ${MID}/EXPRTUBE.NRLIB/code.o ${OUT}/EXPRTUBE.o

@
<<EXPRTUBE.NRLIB (NRLIB from MID)>>=
${MID}/EXPRTUBE.NRLIB: ${MID}/EXPRTUBE.spad
	@ echo 4079 making ${MID}/EXPRTUBE.NRLIB from ${MID}/EXPRTUBE.spad
	@ (cd ${MID} ; 	echo ')co EXPRTUBE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EXPRTUBE.spad (SPAD from IN)>>=
${MID}/EXPRTUBE.spad: ${IN}/tube.spad.pamphlet
	@ echo 4080 making ${MID}/EXPRTUBE.spad from ${IN}/tube.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf EXPRTUBE.NRLIB ; \
	${TANGLE} -R"package EXPRTUBE ExpressionTubePlot" ${IN}/tube.spad.pamphlet >EXPRTUBE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NUMTUBE.o (O from NRLIB)>>=
${OUT}/NUMTUBE.o: ${MID}/NUMTUBE.NRLIB
	@ echo 4081-10 making ${OUT}/NUMTUBE.o from ${MID}/NUMTUBE.NRLIB
	@ cp ${MID}/NUMTUBE.NRLIB/code.o ${OUT}/NUMTUBE.o

@
<<NUMTUBE.NRLIB (NRLIB from MID)>>=
${MID}/NUMTUBE.NRLIB: ${MID}/NUMTUBE.spad
	@ echo 4082 making ${MID}/NUMTUBE.NRLIB from ${MID}/NUMTUBE.spad
	@ (cd ${MID} ; 	echo ')co NUMTUBE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NUMTUBE.spad (SPAD from IN)>>=
${MID}/NUMTUBE.spad: ${IN}/tube.spad.pamphlet
	@ echo 4083 making ${MID}/NUMTUBE.spad from ${IN}/tube.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NUMTUBE.NRLIB ; \
	${TANGLE} -R"package NUMTUBE NumericTubePlot" ${IN}/tube.spad.pamphlet >NUMTUBE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TUBE.o (O from NRLIB)>>=
${OUT}/TUBE.o: ${MID}/TUBE.NRLIB
	@ echo 4084-10 making ${OUT}/TUBE.o from ${MID}/TUBE.NRLIB
	@ cp ${MID}/TUBE.NRLIB/code.o ${OUT}/TUBE.o

@
<<TUBE.NRLIB (NRLIB from MID)>>=
${MID}/TUBE.NRLIB: ${MID}/TUBE.spad
	@ echo 4085 making ${MID}/TUBE.NRLIB from ${MID}/TUBE.spad
	@ (cd ${MID} ; 	echo ')co TUBE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TUBE.spad (SPAD from IN)>>=
${MID}/TUBE.spad: ${IN}/tube.spad.pamphlet
	@ echo 4086 making ${MID}/TUBE.spad from ${IN}/tube.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf TUBE.NRLIB ; \
	${TANGLE} -R"domain TUBE TubePlot" ${IN}/tube.spad.pamphlet >TUBE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TUBETOOL.o (O from NRLIB)>>=
${OUT}/TUBETOOL.o: ${MID}/TUBETOOL.NRLIB
	@ echo 4087-15 making ${OUT}/TUBETOOL.o from ${MID}/TUBETOOL.NRLIB
	@ cp ${MID}/TUBETOOL.NRLIB/code.o ${OUT}/TUBETOOL.o

@
<<TUBETOOL.NRLIB (NRLIB from MID)>>=
${MID}/TUBETOOL.NRLIB: ${MID}/TUBETOOL.spad
	@ echo 4088 making ${MID}/TUBETOOL.NRLIB from ${MID}/TUBETOOL.spad
	@ (cd ${MID} ; 	echo ')co TUBETOOL.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TUBETOOL.spad (SPAD from IN)>>=
${MID}/TUBETOOL.spad: ${IN}/tube.spad.pamphlet
	@ echo 4089 making ${MID}/TUBETOOL.spad from ${IN}/tube.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf TUBETOOL.NRLIB ; \
	${TANGLE} -R"package TUBETOOL TubePlotTools" ${IN}/tube.spad.pamphlet >TUBETOOL.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<tube.spad.dvi (DOC from IN)>>=
${DOC}/tube.spad.dvi: ${IN}/tube.spad.pamphlet ${DOC}/axiom.sty
	@ echo 4090 making ${DOC}/tube.spad.dvi from ${IN}/tube.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/tube.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} tube.spad ; \
	rm -f ${DOC}/tube.spad.pamphlet ; \
	rm -f ${DOC}/tube.spad.tex ; \
	rm -f ${DOC}/tube.spad )

@
\subsection{twofact.spad \cite{1}}
<<twofact.spad (SPAD from IN)>>=
${OUTSRC}/twofact.spad: ${IN}/twofact.spad.pamphlet
	@ echo 4091 making ${OUTSRC}/twofact.spad from ${IN}/twofact.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/twofact.spad.pamphlet >twofact.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NORMRETR.o (O from NRLIB)>>=
${OUT}/NORMRETR.o: ${MID}/NORMRETR.NRLIB
	@ echo 4092-14 making ${OUT}/NORMRETR.o from ${MID}/NORMRETR.NRLIB
	@ cp ${MID}/NORMRETR.NRLIB/code.o ${OUT}/NORMRETR.o

@
<<NORMRETR.NRLIB (NRLIB from MID)>>=
${MID}/NORMRETR.NRLIB: ${MID}/NORMRETR.spad
	@ echo 4093 making ${MID}/NORMRETR.NRLIB from ${MID}/NORMRETR.spad
	@ (cd ${MID} ; 	echo ')co NORMRETR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<NORMRETR.spad (SPAD from IN)>>=
${MID}/NORMRETR.spad: ${IN}/twofact.spad.pamphlet
	@ echo 4094 making ${MID}/NORMRETR.spad from ${IN}/twofact.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf NORMRETR.NRLIB ; \
	${TANGLE} -R"package NORMRETR NormRetractPackage" ${IN}/twofact.spad.pamphlet >NORMRETR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TWOFACT.o (O from NRLIB)>>=
${OUT}/TWOFACT.o: ${MID}/TWOFACT.NRLIB
	@ echo 4095-14 making ${OUT}/TWOFACT.o from ${MID}/TWOFACT.NRLIB
	@ cp ${MID}/TWOFACT.NRLIB/code.o ${OUT}/TWOFACT.o

@
<<TWOFACT.NRLIB (NRLIB from MID)>>=
${MID}/TWOFACT.NRLIB: ${MID}/TWOFACT.spad
	@ echo 4096 making ${MID}/TWOFACT.NRLIB from ${MID}/TWOFACT.spad
	@ (cd ${MID} ; 	echo ')co TWOFACT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<TWOFACT.spad (SPAD from IN)>>=
${MID}/TWOFACT.spad: ${IN}/twofact.spad.pamphlet
	@ echo 4097 making ${MID}/TWOFACT.spad from ${IN}/twofact.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf TWOFACT.NRLIB ; \
	${TANGLE} -R"package TWOFACT TwoFactorize" ${IN}/twofact.spad.pamphlet >TWOFACT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<twofact.spad.dvi (DOC from IN)>>=
${DOC}/twofact.spad.dvi: ${IN}/twofact.spad.pamphlet ${DOC}/axiom.sty
	@ echo 4098 making ${DOC}/twofact.spad.dvi from ${IN}/twofact.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/twofact.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} twofact.spad ; \
	rm -f ${DOC}/twofact.spad.pamphlet ; \
	rm -f ${DOC}/twofact.spad.tex ; \
	rm -f ${DOC}/twofact.spad )

@
\subsection{unifact.spad \cite{1}}
<<unifact.spad (SPAD from IN)>>=
${OUTSRC}/unifact.spad: ${IN}/unifact.spad.pamphlet
	@ echo 4099 making ${OUTSRC}/unifact.spad from ${IN}/unifact.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/unifact.spad.pamphlet >unifact.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UNIFACT.o (O from NRLIB)>>=
${OUT}/UNIFACT.o: ${MID}/UNIFACT.NRLIB
	@ echo 4100-14 making ${OUT}/UNIFACT.o from ${MID}/UNIFACT.NRLIB
	@ cp ${MID}/UNIFACT.NRLIB/code.o ${OUT}/UNIFACT.o

@
<<UNIFACT.NRLIB (NRLIB from MID)>>=
${MID}/UNIFACT.NRLIB: ${MID}/UNIFACT.spad
	@ echo 4101 making ${MID}/UNIFACT.NRLIB from ${MID}/UNIFACT.spad
	@ (cd ${MID} ; 	echo ')co UNIFACT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UNIFACT.spad (SPAD from IN)>>=
${MID}/UNIFACT.spad: ${IN}/unifact.spad.pamphlet
	@ echo 4102 making ${MID}/UNIFACT.spad from ${IN}/unifact.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UNIFACT.NRLIB ; \
	${TANGLE} -R"package UNIFACT UnivariateFactorize" ${IN}/unifact.spad.pamphlet >UNIFACT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<unifact.spad.dvi (DOC from IN)>>=
${DOC}/unifact.spad.dvi: ${IN}/unifact.spad.pamphlet ${DOC}/axiom.sty
	@ echo 4103 making ${DOC}/unifact.spad.dvi from ${IN}/unifact.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/unifact.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} unifact.spad ; \
	rm -f ${DOC}/unifact.spad.pamphlet ; \
	rm -f ${DOC}/unifact.spad.tex ; \
	rm -f ${DOC}/unifact.spad )

@
\subsection{updecomp.spad \cite{1}}
<<updecomp.spad (SPAD from IN)>>=
${OUTSRC}/updecomp.spad: ${IN}/updecomp.spad.pamphlet
	@ echo 4104 making ${OUTSRC}/updecomp.spad from ${IN}/updecomp.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/updecomp.spad.pamphlet >updecomp.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPDECOMP.o (O from NRLIB)>>=
${OUT}/UPDECOMP.o: ${MID}/UPDECOMP.NRLIB
	@ echo 4105-14 making ${OUT}/UPDECOMP.o from ${MID}/UPDECOMP.NRLIB
	@ cp ${MID}/UPDECOMP.NRLIB/code.o ${OUT}/UPDECOMP.o

@
<<UPDECOMP.NRLIB (NRLIB from MID)>>=
${MID}/UPDECOMP.NRLIB: ${MID}/UPDECOMP.spad
	@ echo 4106 making ${MID}/UPDECOMP.NRLIB from ${MID}/UPDECOMP.spad
	@ (cd ${MID} ; 	echo ')co UPDECOMP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPDECOMP.spad (SPAD from IN)>>=
${MID}/UPDECOMP.spad: ${IN}/updecomp.spad.pamphlet
	@ echo 4107 making ${MID}/UPDECOMP.spad from ${IN}/updecomp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UPDECOMP.NRLIB ; \
	${TANGLE} -R"package UPDECOMP UnivariatePolynomialDecompositionPackage" ${IN}/updecomp.spad.pamphlet >UPDECOMP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<updecomp.spad.dvi (DOC from IN)>>=
${DOC}/updecomp.spad.dvi: ${IN}/updecomp.spad.pamphlet ${DOC}/axiom.sty
	@ echo 4108 making ${DOC}/updecomp.spad.dvi from ${IN}/updecomp.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/updecomp.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} updecomp.spad ; \
	rm -f ${DOC}/updecomp.spad.pamphlet ; \
	rm -f ${DOC}/updecomp.spad.tex ; \
	rm -f ${DOC}/updecomp.spad )

@
\subsection{updivp.spad \cite{1}}
<<updivp.spad (SPAD from IN)>>=
${OUTSRC}/updivp.spad: ${IN}/updivp.spad.pamphlet
	@ echo 4109 making ${OUTSRC}/updivp.spad from ${IN}/updivp.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/updivp.spad.pamphlet >updivp.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPDIVP.o (O from NRLIB)>>=
${OUT}/UPDIVP.o: ${MID}/UPDIVP.NRLIB
	@ echo 4110-14 making ${OUT}/UPDIVP.o from ${MID}/UPDIVP.NRLIB
	@ cp ${MID}/UPDIVP.NRLIB/code.o ${OUT}/UPDIVP.o

@
<<UPDIVP.NRLIB (NRLIB from MID)>>=
${MID}/UPDIVP.NRLIB: ${MID}/UPDIVP.spad
	@ echo 4111 making ${MID}/UPDIVP.NRLIB from ${MID}/UPDIVP.spad
	@ (cd ${MID} ; 	echo ')co UPDIVP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UPDIVP.spad (SPAD from IN)>>=
${MID}/UPDIVP.spad: ${IN}/updivp.spad.pamphlet
	@ echo 4112 making ${MID}/UPDIVP.spad from ${IN}/updivp.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UPDIVP.NRLIB ; \
	${TANGLE} -R"package UPDIVP UnivariatePolynomialDivisionPackage" ${IN}/updivp.spad.pamphlet >UPDIVP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<updivp.spad.dvi (DOC from IN)>>=
${DOC}/updivp.spad.dvi: ${IN}/updivp.spad.pamphlet ${DOC}/axiom.sty
	@ echo 4113 making ${DOC}/updivp.spad.dvi from ${IN}/updivp.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/updivp.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} updivp.spad ; \
	rm -f ${DOC}/updivp.spad.pamphlet ; \
	rm -f ${DOC}/updivp.spad.tex ; \
	rm -f ${DOC}/updivp.spad )

@
\subsection{utsode.spad \cite{1}}
<<utsode.spad (SPAD from IN)>>=
${OUTSRC}/utsode.spad: ${IN}/utsode.spad.pamphlet
	@ echo 4114 making ${OUTSRC}/utsode.spad from ${IN}/utsode.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/utsode.spad.pamphlet >utsode.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UTSODE.o (O from NRLIB)>>=
${OUT}/UTSODE.o: ${MID}/UTSODE.NRLIB
	@ echo 4115-20 making ${OUT}/UTSODE.o from ${MID}/UTSODE.NRLIB
	@ cp ${MID}/UTSODE.NRLIB/code.o ${OUT}/UTSODE.o

@
<<UTSODE.NRLIB (NRLIB from MID)>>=
${MID}/UTSODE.NRLIB: ${MID}/UTSODE.spad
	@ echo 4116 making ${MID}/UTSODE.NRLIB from ${MID}/UTSODE.spad
	@ (cd ${MID} ; 	echo ')co UTSODE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<UTSODE.spad (SPAD from IN)>>=
${MID}/UTSODE.spad: ${IN}/utsode.spad.pamphlet
	@ echo 4117 making ${MID}/UTSODE.spad from ${IN}/utsode.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf UTSODE.NRLIB ; \
	${TANGLE} -R"package UTSODE UnivariateTaylorSeriesODESolver" ${IN}/utsode.spad.pamphlet >UTSODE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<utsode.spad.dvi (DOC from IN)>>=
${DOC}/utsode.spad.dvi: ${IN}/utsode.spad.pamphlet ${DOC}/axiom.sty
	@ echo 4118 making ${DOC}/utsode.spad.dvi from ${IN}/utsode.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/utsode.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} utsode.spad ; \
	rm -f ${DOC}/utsode.spad.pamphlet ; \
	rm -f ${DOC}/utsode.spad.tex ; \
	rm -f ${DOC}/utsode.spad )

@
\subsection{variable.spad \cite{1}}
<<variable.spad (SPAD from IN)>>=
${OUTSRC}/variable.spad: ${IN}/variable.spad.pamphlet
	@ echo 4119 making ${OUTSRC}/variable.spad from ${IN}/variable.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/variable.spad.pamphlet >variable.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ANON.o (O from NRLIB)>>=
${OUT}/ANON.o: ${MID}/ANON.NRLIB
	@ echo 4120-4 making ${OUT}/ANON.o from ${MID}/ANON.NRLIB
	@ cp ${MID}/ANON.NRLIB/code.o ${OUT}/ANON.o

@
<<ANON.NRLIB (NRLIB from MID)>>=
${MID}/ANON.NRLIB: ${MID}/ANON.spad
	@ echo 4121 making ${MID}/ANON.NRLIB from ${MID}/ANON.spad
	@ (cd ${MID} ; 	echo ')co ANON.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ANON.spad (SPAD from IN)>>=
${MID}/ANON.spad: ${IN}/variable.spad.pamphlet
	@ echo 4122 making ${MID}/ANON.spad from ${IN}/variable.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ANON.NRLIB ; \
	${TANGLE} -R"domain ANON AnonymousFunction" ${IN}/variable.spad.pamphlet >ANON.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FUNCTION.o (O from NRLIB)>>=
${OUT}/FUNCTION.o: ${MID}/FUNCTION.NRLIB
	@ echo 4123-19 making ${OUT}/FUNCTION.o from ${MID}/FUNCTION.NRLIB
	@ cp ${MID}/FUNCTION.NRLIB/code.o ${OUT}/FUNCTION.o

@
<<FUNCTION.NRLIB (NRLIB from MID)>>=
${MID}/FUNCTION.NRLIB: ${MID}/FUNCTION.spad
	@ echo 4124 making ${MID}/FUNCTION.NRLIB from ${MID}/FUNCTION.spad
	@ (cd ${MID} ; 	echo ')co FUNCTION.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FUNCTION.spad (SPAD from IN)>>=
${MID}/FUNCTION.spad: ${IN}/variable.spad.pamphlet
	@ echo 4125 making ${MID}/FUNCTION.spad from ${IN}/variable.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FUNCTION.NRLIB ; \
	${TANGLE} -R"domain FUNCTION FunctionCalled" ${IN}/variable.spad.pamphlet >FUNCTION.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OVAR.o (O from NRLIB)>>=
${OUT}/OVAR.o: ${MID}/OVAR.NRLIB
	@ echo 4126-19 making ${OUT}/OVAR.o from ${MID}/OVAR.NRLIB
	@ cp ${MID}/OVAR.NRLIB/code.o ${OUT}/OVAR.o

@
<<OVAR.NRLIB (NRLIB from MID)>>=
${MID}/OVAR.NRLIB: ${MID}/OVAR.spad
	@ echo 4127 making ${MID}/OVAR.NRLIB from ${MID}/OVAR.spad
	@ (cd ${MID} ; 	echo ')co OVAR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OVAR.spad (SPAD from IN)>>=
${MID}/OVAR.spad: ${IN}/variable.spad.pamphlet
	@ echo 4128 making ${MID}/OVAR.spad from ${IN}/variable.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OVAR.NRLIB ; \
	${TANGLE} -R"domain OVAR OrderedVariableList" ${IN}/variable.spad.pamphlet >OVAR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RULECOLD.o (O from NRLIB)>>=
${OUT}/RULECOLD.o: ${MID}/RULECOLD.NRLIB
	@ echo 4129-19 making ${OUT}/RULECOLD.o from ${MID}/RULECOLD.NRLIB
	@ cp ${MID}/RULECOLD.NRLIB/code.o ${OUT}/RULECOLD.o

@
<<RULECOLD.NRLIB (NRLIB from MID)>>=
${MID}/RULECOLD.NRLIB: ${MID}/RULECOLD.spad
	@ echo 4130 making ${MID}/RULECOLD.NRLIB from ${MID}/RULECOLD.spad
	@ (cd ${MID} ; 	echo ')co RULECOLD.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RULECOLD.spad (SPAD from IN)>>=
${MID}/RULECOLD.spad: ${IN}/variable.spad.pamphlet
	@ echo 4131 making ${MID}/RULECOLD.spad from ${IN}/variable.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RULECOLD.NRLIB ; \
	${TANGLE} -R"domain RULECOLD RuleCalled" ${IN}/variable.spad.pamphlet >RULECOLD.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<VARIABLE.o (O from NRLIB)>>=
${OUT}/VARIABLE.o: ${MID}/VARIABLE.NRLIB
	@ echo 4132-19 making ${OUT}/VARIABLE.o from ${MID}/VARIABLE.NRLIB
	@ cp ${MID}/VARIABLE.NRLIB/code.o ${OUT}/VARIABLE.o

@
<<VARIABLE.NRLIB (NRLIB from MID)>>=
${MID}/VARIABLE.NRLIB: ${MID}/VARIABLE.spad
	@ echo 4133 making ${MID}/VARIABLE.NRLIB from ${MID}/VARIABLE.spad
	@ (cd ${MID} ; 	echo ')co VARIABLE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<VARIABLE.spad (SPAD from IN)>>=
${MID}/VARIABLE.spad: ${IN}/variable.spad.pamphlet
	@ echo 4134 making ${MID}/VARIABLE.spad from ${IN}/variable.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf VARIABLE.NRLIB ; \
	${TANGLE} -R"domain VARIABLE Variable" ${IN}/variable.spad.pamphlet >VARIABLE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<variable.spad.dvi (DOC from IN)>>=
${DOC}/variable.spad.dvi: ${IN}/variable.spad.pamphlet ${DOC}/axiom.sty
	@ echo 4135 making ${DOC}/variable.spad.dvi from ${IN}/variable.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/variable.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} variable.spad ; \
	rm -f ${DOC}/variable.spad.pamphlet ; \
	rm -f ${DOC}/variable.spad.tex ; \
	rm -f ${DOC}/variable.spad )

@
\subsection{vector.spad \cite{1}}
<<vector.spad (SPAD from IN)>>=
${OUTSRC}/vector.spad: ${IN}/vector.spad.pamphlet
	@ echo 4136 making ${OUTSRC}/vector.spad from ${IN}/vector.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/vector.spad.pamphlet >vector.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DIRPCAT-.o (O from NRLIB)>>=
${OUT}/DIRPCAT-.o: ${MID}/DIRPCAT.NRLIB
	@ echo 4137-13 making ${OUT}/DIRPCAT-.o from ${MID}/DIRPCAT-.NRLIB
	@ cp ${MID}/DIRPCAT-.NRLIB/code.o ${OUT}/DIRPCAT-.o

@
<<DIRPCAT-.NRLIB (NRLIB from MID)>>=
${MID}/DIRPCAT-.NRLIB: ${MID}/DIRPCAT.spad 
	@ echo 4138 making ${MID}/DIRPCAT-.NRLIB from ${MID}/DIRPCAT.spad
	@ (cd ${MID} ; 	echo ')co DIRPCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DIRPCAT.o (O from NRLIB)>>=
${OUT}/DIRPCAT.o: ${MID}/DIRPCAT.NRLIB
	@ echo 4139-13 making ${OUT}/DIRPCAT.o from ${MID}/DIRPCAT.NRLIB
	@ cp ${MID}/DIRPCAT.NRLIB/code.o ${OUT}/DIRPCAT.o

@
<<DIRPCAT.NRLIB (NRLIB from MID)>>=
${MID}/DIRPCAT.NRLIB: ${MID}/DIRPCAT.spad
	@ echo 4140 making ${MID}/DIRPCAT.NRLIB from ${MID}/DIRPCAT.spad
	@ (cd ${MID} ; 	echo ')co DIRPCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DIRPCAT.spad (SPAD from IN)>>=
${MID}/DIRPCAT.spad: ${IN}/vector.spad.pamphlet
	@ echo 4141 making ${MID}/DIRPCAT.spad from ${IN}/vector.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DIRPCAT.NRLIB ; \
	${TANGLE} -R"category DIRPCAT DirectProductCategory" ${IN}/vector.spad.pamphlet >DIRPCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DIRPROD.o (O from NRLIB)>>=
${OUT}/DIRPROD.o: ${MID}/DIRPROD.NRLIB
	@ echo 4142-14 making ${OUT}/DIRPROD.o from ${MID}/DIRPROD.NRLIB
	@ cp ${MID}/DIRPROD.NRLIB/code.o ${OUT}/DIRPROD.o

@
<<DIRPROD.NRLIB (NRLIB from MID)>>=
${MID}/DIRPROD.NRLIB: ${MID}/DIRPROD.spad
	@ echo 4143 making ${MID}/DIRPROD.NRLIB from ${MID}/DIRPROD.spad
	@ (cd ${MID} ; 	echo ')co DIRPROD.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DIRPROD.spad (SPAD from IN)>>=
${MID}/DIRPROD.spad: ${IN}/vector.spad.pamphlet
	@ echo 4144 making ${MID}/DIRPROD.spad from ${IN}/vector.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DIRPROD.NRLIB ; \
	${TANGLE} -R"domain DIRPROD DirectProduct" ${IN}/vector.spad.pamphlet >DIRPROD.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DIRPROD2.o (O from NRLIB)>>=
${OUT}/DIRPROD2.o: ${MID}/DIRPROD2.NRLIB
	@ echo 4145-12 making ${OUT}/DIRPROD2.o from ${MID}/DIRPROD2.NRLIB
	@ cp ${MID}/DIRPROD2.NRLIB/code.o ${OUT}/DIRPROD2.o

@
<<DIRPROD2.NRLIB (NRLIB from MID)>>=
${MID}/DIRPROD2.NRLIB: ${MID}/DIRPROD2.spad
	@ echo 4146 making ${MID}/DIRPROD2.NRLIB from ${MID}/DIRPROD2.spad
	@ (cd ${MID} ; 	echo ')co DIRPROD2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<DIRPROD2.spad (SPAD from IN)>>=
${MID}/DIRPROD2.spad: ${IN}/vector.spad.pamphlet
	@ echo 4147 making ${MID}/DIRPROD2.spad from ${IN}/vector.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf DIRPROD2.NRLIB ; \
	${TANGLE} -R"package DIRPROD2 DirectProductFunctions2" ${IN}/vector.spad.pamphlet >DIRPROD2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IVECTOR.o (O from NRLIB)>>=
${OUT}/IVECTOR.o: ${MID}/IVECTOR.NRLIB
	@ echo 4148-12 making ${OUT}/IVECTOR.o from ${MID}/IVECTOR.NRLIB
	@ cp ${MID}/IVECTOR.NRLIB/code.o ${OUT}/IVECTOR.o

@
<<IVECTOR.NRLIB (NRLIB from MID)>>=
${MID}/IVECTOR.NRLIB: ${MID}/IVECTOR.spad
	@ echo 4149 making ${MID}/IVECTOR.NRLIB from ${MID}/IVECTOR.spad
	@ (cd ${MID} ; 	echo ')co IVECTOR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IVECTOR.spad (SPAD from IN)>>=
${MID}/IVECTOR.spad: ${IN}/vector.spad.pamphlet
	@ echo 4150 making ${MID}/IVECTOR.spad from ${IN}/vector.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IVECTOR.NRLIB ; \
	${TANGLE} -R"domain IVECTOR IndexedVector" ${IN}/vector.spad.pamphlet >IVECTOR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<VECTCAT-.o (O from NRLIB)>>=
${OUT}/VECTCAT-.o: ${MID}/VECTCAT.NRLIB
	@ echo 4151-11 making ${OUT}/VECTCAT-.o from ${MID}/VECTCAT-.NRLIB
	@ cp ${MID}/VECTCAT-.NRLIB/code.o ${OUT}/VECTCAT-.o

@
<<VECTCAT-.NRLIB (NRLIB from MID)>>=
${MID}/VECTCAT-.NRLIB: ${MID}/VECTCAT.spad 
	@ echo 4152 making ${MID}/VECTCAT-.NRLIB from ${MID}/VECTCAT.spad
	@ (cd ${MID} ; 	echo ')co VECTCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<VECTCAT.o (O from NRLIB)>>=
${OUT}/VECTCAT.o: ${MID}/VECTCAT.NRLIB
	@ echo 4153-11 making ${OUT}/VECTCAT.o from ${MID}/VECTCAT.NRLIB
	@ cp ${MID}/VECTCAT.NRLIB/code.o ${OUT}/VECTCAT.o

@
<<VECTCAT.NRLIB (NRLIB from MID)>>=
${MID}/VECTCAT.NRLIB: ${MID}/VECTCAT.spad
	@ echo 4154 making ${MID}/VECTCAT.NRLIB from ${MID}/VECTCAT.spad
	@ (cd ${MID} ; 	echo ')co VECTCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<VECTCAT.spad (SPAD from IN)>>=
${MID}/VECTCAT.spad: ${IN}/vector.spad.pamphlet
	@ echo 4155 making ${MID}/VECTCAT.spad from ${IN}/vector.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf VECTCAT.NRLIB ; \
	${TANGLE} -R"category VECTCAT VectorCategory" ${IN}/vector.spad.pamphlet >VECTCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<VECTOR.o (O from NRLIB)>>=
${OUT}/VECTOR.o: ${MID}/VECTOR.NRLIB
	@ echo 4156-0c making ${OUT}/VECTOR.o from ${MID}/VECTOR.NRLIB
	@ cp ${MID}/VECTOR.NRLIB/code.o ${OUT}/VECTOR.o

@
<<VECTOR.NRLIB (NRLIB from MID)>>=
${MID}/VECTOR.NRLIB: ${MID}/VECTOR.spad
	@ echo 4157 making ${MID}/VECTOR.NRLIB from ${MID}/VECTOR.spad
	@ (cd ${MID} ; 	echo ')co VECTOR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<VECTOR.spad (SPAD from IN)>>=
${MID}/VECTOR.spad: ${IN}/vector.spad.pamphlet
	@ echo 4158 making ${MID}/VECTOR.spad from ${IN}/vector.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf VECTOR.NRLIB ; \
	${TANGLE} -R"domain VECTOR Vector" ${IN}/vector.spad.pamphlet >VECTOR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<VECTOR.o (BOOTSTRAP from MID)>>=
${MID}/VECTOR.o: ${MID}/VECTOR.lsp
	@ echo 4159-0b making ${MID}/VECTOR.o from ${MID}/VECTOR.lsp
	@ (cd ${MID} ; \
	echo '(progn (in-package (quote boot)) (compile-file "VECTOR.lsp" :output-file "VECTOR.o"))' | ${DEPSYS} )
	@ cp ${MID}/VECTOR.o ${OUT}/VECTOR.o

@
<<VECTOR.lsp (LISP from IN)>>=
${MID}/VECTOR.lsp: ${IN}/vector.spad.pamphlet
	@ echo 4160 making ${MID}/VECTOR.lsp from ${IN}/vector.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf VECTOR.NRLIB ; \
	rm -rf ${OUT}/VECTOR.o ; \
	${TANGLE} -R"VECTOR.lsp BOOTSTRAP" ${IN}/vector.spad.pamphlet >VECTOR.lsp )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<VECTOR2.o (O from NRLIB)>>=
${OUT}/VECTOR2.o: ${MID}/VECTOR2.NRLIB
	@ echo 4161-13 making ${OUT}/VECTOR2.o from ${MID}/VECTOR2.NRLIB
	@ cp ${MID}/VECTOR2.NRLIB/code.o ${OUT}/VECTOR2.o

@
<<VECTOR2.NRLIB (NRLIB from MID)>>=
${MID}/VECTOR2.NRLIB: ${MID}/VECTOR2.spad
	@ echo 4162 making ${MID}/VECTOR2.NRLIB from ${MID}/VECTOR2.spad
	@ (cd ${MID} ; 	echo ')co VECTOR2.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<VECTOR2.spad (SPAD from IN)>>=
${MID}/VECTOR2.spad: ${IN}/vector.spad.pamphlet
	@ echo 4163 making ${MID}/VECTOR2.spad from ${IN}/vector.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf VECTOR2.NRLIB ; \
	${TANGLE} -R"package VECTOR2 VectorFunctions2" ${IN}/vector.spad.pamphlet >VECTOR2.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<vector.spad.dvi (DOC from IN)>>=
${DOC}/vector.spad.dvi: ${IN}/vector.spad.pamphlet ${DOC}/axiom.sty
	@ echo 4164 making ${DOC}/vector.spad.dvi from ${IN}/vector.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/vector.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} vector.spad ; \
	rm -f ${DOC}/vector.spad.pamphlet ; \
	rm -f ${DOC}/vector.spad.tex ; \
	rm -f ${DOC}/vector.spad )

@
\subsection{view2D.spad \cite{1}}
<<view2D.spad (SPAD from IN)>>=
${OUTSRC}/view2D.spad: ${IN}/view2D.spad.pamphlet
	@ echo 4165 making ${OUTSRC}/view2D.spad from ${IN}/view2D.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/view2D.spad.pamphlet >view2D.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GRIMAGE.o (O from NRLIB)>>=
${OUT}/GRIMAGE.o: ${MID}/GRIMAGE.NRLIB
	@ echo 4166-14 making ${OUT}/GRIMAGE.o from ${MID}/GRIMAGE.NRLIB
	@ cp ${MID}/GRIMAGE.NRLIB/code.o ${OUT}/GRIMAGE.o

@
<<GRIMAGE.NRLIB (NRLIB from MID)>>=
${MID}/GRIMAGE.NRLIB: ${MID}/GRIMAGE.spad
	@ echo 4167 making ${MID}/GRIMAGE.NRLIB from ${MID}/GRIMAGE.spad
	@ (cd ${MID} ; 	echo ')co GRIMAGE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<GRIMAGE.spad (SPAD from IN)>>=
${MID}/GRIMAGE.spad: ${IN}/view2D.spad.pamphlet
	@ echo 4168 making ${MID}/GRIMAGE.spad from ${IN}/view2D.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf GRIMAGE.NRLIB ; \
	${TANGLE} -R"domain GRIMAGE GraphImage" ${IN}/view2D.spad.pamphlet >GRIMAGE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<VIEW2D.o (O from NRLIB)>>=
${OUT}/VIEW2D.o: ${MID}/VIEW2D.NRLIB
	@ echo 4169-14 making ${OUT}/VIEW2D.o from ${MID}/VIEW2D.NRLIB
	@ cp ${MID}/VIEW2D.NRLIB/code.o ${OUT}/VIEW2D.o

@
<<VIEW2D.NRLIB (NRLIB from MID)>>=
${MID}/VIEW2D.NRLIB: ${MID}/VIEW2D.spad
	@ echo 4170 making ${MID}/VIEW2D.NRLIB from ${MID}/VIEW2D.spad
	@ (cd ${MID} ; 	echo ')co VIEW2D.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<VIEW2D.spad (SPAD from IN)>>=
${MID}/VIEW2D.spad: ${IN}/view2D.spad.pamphlet
	@ echo 4171 making ${MID}/VIEW2D.spad from ${IN}/view2D.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf VIEW2D.NRLIB ; \
	${TANGLE} -R"domain VIEW2D TwoDimensionalViewport" ${IN}/view2D.spad.pamphlet >VIEW2D.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<view2D.spad.dvi (DOC from IN)>>=
${DOC}/view2D.spad.dvi: ${IN}/view2D.spad.pamphlet ${DOC}/axiom.sty
	@ echo 4172 making ${DOC}/view2D.spad.dvi from ${IN}/view2D.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/view2D.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} view2D.spad ; \
	rm -f ${DOC}/view2D.spad.pamphlet ; \
	rm -f ${DOC}/view2D.spad.tex ; \
	rm -f ${DOC}/view2D.spad )

@
\subsection{view3D.spad \cite{1}}
<<view3D.spad (SPAD from IN)>>=
${OUTSRC}/view3D.spad: ${IN}/view3D.spad.pamphlet
	@ echo 4173 making ${OUTSRC}/view3D.spad from ${IN}/view3D.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/view3D.spad.pamphlet >view3D.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<VIEW3D.o (O from NRLIB)>>=
${OUT}/VIEW3D.o: ${MID}/VIEW3D.NRLIB
	@ echo 4174-17 making ${OUT}/VIEW3D.o from ${MID}/VIEW3D.NRLIB
	@ cp ${MID}/VIEW3D.NRLIB/code.o ${OUT}/VIEW3D.o

@
<<VIEW3D.NRLIB (NRLIB from MID)>>=
${MID}/VIEW3D.NRLIB: ${MID}/VIEW3D.spad
	@ echo 4175 making ${MID}/VIEW3D.NRLIB from ${MID}/VIEW3D.spad
	@ (cd ${MID} ; 	echo ')co VIEW3D.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<VIEW3D.spad (SPAD from IN)>>=
${MID}/VIEW3D.spad: ${IN}/view3D.spad.pamphlet
	@ echo 4176 making ${MID}/VIEW3D.spad from ${IN}/view3D.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf VIEW3D.NRLIB ; \
	${TANGLE} -R"domain VIEW3D ThreeDimensionalViewport" ${IN}/view3D.spad.pamphlet >VIEW3D.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<view3D.spad.dvi (DOC from IN)>>=
${DOC}/view3D.spad.dvi: ${IN}/view3D.spad.pamphlet ${DOC}/axiom.sty
	@ echo 4177 making ${DOC}/view3D.spad.dvi from ${IN}/view3D.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/view3D.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} view3D.spad ; \
	rm -f ${DOC}/view3D.spad.pamphlet ; \
	rm -f ${DOC}/view3D.spad.tex ; \
	rm -f ${DOC}/view3D.spad )

@
\subsection{viewDef.spad \cite{1}}
<<viewDef.spad (SPAD from IN)>>=
${OUTSRC}/viewDef.spad: ${IN}/viewDef.spad.pamphlet
	@ echo 4178 making ${OUTSRC}/viewDef.spad from ${IN}/viewDef.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/viewDef.spad.pamphlet >viewDef.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<VIEWDEF.o (O from NRLIB)>>=
${OUT}/VIEWDEF.o: ${MID}/VIEWDEF.NRLIB
	@ echo 4179-14 making ${OUT}/VIEWDEF.o from ${MID}/VIEWDEF.NRLIB
	@ cp ${MID}/VIEWDEF.NRLIB/code.o ${OUT}/VIEWDEF.o

@
<<VIEWDEF.NRLIB (NRLIB from MID)>>=
${MID}/VIEWDEF.NRLIB: ${MID}/VIEWDEF.spad
	@ echo 4180 making ${MID}/VIEWDEF.NRLIB from ${MID}/VIEWDEF.spad
	@ (cd ${MID} ; 	echo ')co VIEWDEF.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<VIEWDEF.spad (SPAD from IN)>>=
${MID}/VIEWDEF.spad: ${IN}/viewDef.spad.pamphlet
	@ echo 4181 making ${MID}/VIEWDEF.spad from ${IN}/viewDef.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf VIEWDEF.NRLIB ; \
	${TANGLE} -R"package VIEWDEF ViewDefaultsPackage" ${IN}/viewDef.spad.pamphlet >VIEWDEF.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<viewDef.spad.dvi (DOC from IN)>>=
${DOC}/viewDef.spad.dvi: ${IN}/viewDef.spad.pamphlet ${DOC}/axiom.sty
	@ echo 4182 making ${DOC}/viewDef.spad.dvi from ${IN}/viewDef.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/viewDef.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} viewDef.spad ; \
	rm -f ${DOC}/viewDef.spad.pamphlet ; \
	rm -f ${DOC}/viewDef.spad.tex ; \
	rm -f ${DOC}/viewDef.spad )

@
\subsection{viewpack.spad \cite{1}}
<<viewpack.spad (SPAD from IN)>>=
${OUTSRC}/viewpack.spad: ${IN}/viewpack.spad.pamphlet
	@ echo 4183 making ${OUTSRC}/viewpack.spad from ${IN}/viewpack.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/viewpack.spad.pamphlet >viewpack.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<VIEW.o (O from NRLIB)>>=
${OUT}/VIEW.o: ${MID}/VIEW.NRLIB
	@ echo 4184-10 making ${OUT}/VIEW.o from ${MID}/VIEW.NRLIB
	@ cp ${MID}/VIEW.NRLIB/code.o ${OUT}/VIEW.o

@
<<VIEW.NRLIB (NRLIB from MID)>>=
${MID}/VIEW.NRLIB: ${MID}/VIEW.spad
	@ echo 4185 making ${MID}/VIEW.NRLIB from ${MID}/VIEW.spad
	@ (cd ${MID} ; 	echo ')co VIEW.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<VIEW.spad (SPAD from IN)>>=
${MID}/VIEW.spad: ${IN}/viewpack.spad.pamphlet
	@ echo 4186 making ${MID}/VIEW.spad from ${IN}/viewpack.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf VIEW.NRLIB ; \
	${TANGLE} -R"package VIEW ViewportPackage" ${IN}/viewpack.spad.pamphlet >VIEW.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<viewpack.spad.dvi (DOC from IN)>>=
${DOC}/viewpack.spad.dvi: ${IN}/viewpack.spad.pamphlet ${DOC}/axiom.sty
	@ echo 4187 making ${DOC}/viewpack.spad.dvi from ${IN}/viewpack.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/viewpack.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} viewpack.spad ; \
	rm -f ${DOC}/viewpack.spad.pamphlet ; \
	rm -f ${DOC}/viewpack.spad.tex ; \
	rm -f ${DOC}/viewpack.spad )

@
\subsection{void.spad \cite{1}}
<<void.spad (SPAD from IN)>>=
${OUTSRC}/void.spad: ${IN}/void.spad.pamphlet
	@ echo 4188 making ${OUTSRC}/void.spad from ${IN}/void.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/void.spad.pamphlet >void.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EXIT.o (O from NRLIB)>>=
${OUT}/EXIT.o: ${MID}/EXIT.NRLIB
	@ echo 4189-4 making ${OUT}/EXIT.o from ${MID}/EXIT.NRLIB
	@ cp ${MID}/EXIT.NRLIB/code.o ${OUT}/EXIT.o

@
<<EXIT.NRLIB (NRLIB from MID)>>=
${MID}/EXIT.NRLIB: ${MID}/EXIT.spad
	@ echo 4190 making ${MID}/EXIT.NRLIB from ${MID}/EXIT.spad
	@ (cd ${MID} ; 	echo ')co EXIT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<EXIT.spad (SPAD from IN)>>=
${MID}/EXIT.spad: ${IN}/void.spad.pamphlet
	@ echo 4191 making ${MID}/EXIT.spad from ${IN}/void.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf EXIT.NRLIB ; \
	${TANGLE} -R"domain EXIT Exit" ${IN}/void.spad.pamphlet >EXIT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RESLATC.o (O from NRLIB)>>=
${OUT}/RESLATC.o: ${MID}/RESLATC.NRLIB
	@ echo 4192-1 making ${OUT}/RESLATC.o from ${MID}/RESLATC.NRLIB
	@ cp ${MID}/RESLATC.NRLIB/code.o ${OUT}/RESLATC.o

@
<<RESLATC.NRLIB (NRLIB from MID)>>=
${MID}/RESLATC.NRLIB: ${MID}/RESLATC.spad
	@ echo 4193 making ${MID}/RESLATC.NRLIB from ${MID}/RESLATC.spad
	@ (cd ${MID} ; 	echo ')co RESLATC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RESLATC.spad (SPAD from IN)>>=
${MID}/RESLATC.spad: ${IN}/void.spad.pamphlet
	@ echo 4194 making ${MID}/RESLATC.spad from ${IN}/void.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RESLATC.NRLIB ; \
	${TANGLE} -R"package RESLATC ResolveLatticeCompletion" ${IN}/void.spad.pamphlet >RESLATC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<VOID.o (O from NRLIB)>>=
${OUT}/VOID.o: ${MID}/VOID.NRLIB
	@ echo 4195-14 making ${OUT}/VOID.o from ${MID}/VOID.NRLIB
	@ cp ${MID}/VOID.NRLIB/code.o ${OUT}/VOID.o

@
<<VOID.NRLIB (NRLIB from MID)>>=
${MID}/VOID.NRLIB: ${MID}/VOID.spad
	@ echo 4196 making ${MID}/VOID.NRLIB from ${MID}/VOID.spad
	@ (cd ${MID} ; 	echo ')co VOID.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<VOID.spad (SPAD from IN)>>=
${MID}/VOID.spad: ${IN}/void.spad.pamphlet
	@ echo 4197 making ${MID}/VOID.spad from ${IN}/void.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf VOID.NRLIB ; \
	${TANGLE} -R"domain VOID Void" ${IN}/void.spad.pamphlet >VOID.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<void.spad.dvi (DOC from IN)>>=
${DOC}/void.spad.dvi: ${IN}/void.spad.pamphlet ${DOC}/axiom.sty
	@ echo 4198 making ${DOC}/void.spad.dvi from ${IN}/void.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/void.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} void.spad ; \
	rm -f ${DOC}/void.spad.pamphlet ; \
	rm -f ${DOC}/void.spad.tex ; \
	rm -f ${DOC}/void.spad )

@
\subsection{weier.spad \cite{1}}
<<weier.spad (SPAD from IN)>>=
${OUTSRC}/weier.spad: ${IN}/weier.spad.pamphlet
	@ echo 4199 making ${OUTSRC}/weier.spad from ${IN}/weier.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/weier.spad.pamphlet >weier.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<WEIER.o (O from NRLIB)>>=
${OUT}/WEIER.o: ${MID}/WEIER.NRLIB
	@ echo 4200-14 making ${OUT}/WEIER.o from ${MID}/WEIER.NRLIB
	@ cp ${MID}/WEIER.NRLIB/code.o ${OUT}/WEIER.o

@
<<WEIER.NRLIB (NRLIB from MID)>>=
${MID}/WEIER.NRLIB: ${MID}/WEIER.spad
	@ echo 4201 making ${MID}/WEIER.NRLIB from ${MID}/WEIER.spad
	@ (cd ${MID} ; 	echo ')co WEIER.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<WEIER.spad (SPAD from IN)>>=
${MID}/WEIER.spad: ${IN}/weier.spad.pamphlet
	@ echo 4202 making ${MID}/WEIER.spad from ${IN}/weier.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf WEIER.NRLIB ; \
	${TANGLE} -R"package WEIER WeierstrassPreparation" ${IN}/weier.spad.pamphlet >WEIER.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<weier.spad.dvi (DOC from IN)>>=
${DOC}/weier.spad.dvi: ${IN}/weier.spad.pamphlet ${DOC}/axiom.sty
	@ echo 4203 making ${DOC}/weier.spad.dvi from ${IN}/weier.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/weier.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} weier.spad ; \
	rm -f ${DOC}/weier.spad.pamphlet ; \
	rm -f ${DOC}/weier.spad.tex ; \
	rm -f ${DOC}/weier.spad )

@
\subsection{wtpol.spad \cite{1}}
<<wtpol.spad (SPAD from IN)>>=
${OUTSRC}/wtpol.spad: ${IN}/wtpol.spad.pamphlet
	@ echo 4204 making ${OUTSRC}/wtpol.spad from ${IN}/wtpol.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/wtpol.spad.pamphlet >wtpol.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OWP.o (O from NRLIB)>>=
${OUT}/OWP.o: ${MID}/OWP.NRLIB
	@ echo 4205-10 making ${OUT}/OWP.o from ${MID}/OWP.NRLIB
	@ cp ${MID}/OWP.NRLIB/code.o ${OUT}/OWP.o

@
<<OWP.NRLIB (NRLIB from MID)>>=
${MID}/OWP.NRLIB: ${MID}/OWP.spad
	@ echo 4206 making ${MID}/OWP.NRLIB from ${MID}/OWP.spad
	@ (cd ${MID} ; 	echo ')co OWP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OWP.spad (SPAD from IN)>>=
${MID}/OWP.spad: ${IN}/wtpol.spad.pamphlet
	@ echo 4207 making ${MID}/OWP.spad from ${IN}/wtpol.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OWP.NRLIB ; \
	${TANGLE} -R"domain OWP OrdinaryWeightedPolynomials" ${IN}/wtpol.spad.pamphlet >OWP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<WP.o (O from NRLIB)>>=
${OUT}/WP.o: ${MID}/WP.NRLIB
	@ echo 4208-14 making ${OUT}/WP.o from ${MID}/WP.NRLIB
	@ cp ${MID}/WP.NRLIB/code.o ${OUT}/WP.o

@
<<WP.NRLIB (NRLIB from MID)>>=
${MID}/WP.NRLIB: ${MID}/WP.spad
	@ echo 4209 making ${MID}/WP.NRLIB from ${MID}/WP.spad
	@ (cd ${MID} ; 	echo ')co WP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<WP.spad (SPAD from IN)>>=
${MID}/WP.spad: ${IN}/wtpol.spad.pamphlet
	@ echo 4210 making ${MID}/WP.spad from ${IN}/wtpol.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf WP.NRLIB ; \
	${TANGLE} -R"domain WP WeightedPolynomials" ${IN}/wtpol.spad.pamphlet >WP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<wtpol.spad.dvi (DOC from IN)>>=
${DOC}/wtpol.spad.dvi: ${IN}/wtpol.spad.pamphlet ${DOC}/axiom.sty
	@ echo 4211 making ${DOC}/wtpol.spad.dvi from ${IN}/wtpol.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/wtpol.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} wtpol.spad ; \
	rm -f ${DOC}/wtpol.spad.pamphlet ; \
	rm -f ${DOC}/wtpol.spad.tex ; \
	rm -f ${DOC}/wtpol.spad )

@
\subsection{xlpoly.spad \cite{1}}
<<xlpoly.spad (SPAD from IN)>>=
${OUTSRC}/xlpoly.spad: ${IN}/xlpoly.spad.pamphlet
	@ echo 4212 making ${OUTSRC}/xlpoly.spad from ${IN}/xlpoly.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/xlpoly.spad.pamphlet >xlpoly.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FLALG.o (O from NRLIB)>>=
${OUT}/FLALG.o: ${MID}/FLALG.NRLIB
	@ echo 4213-11 making ${OUT}/FLALG.o from ${MID}/FLALG.NRLIB
	@ cp ${MID}/FLALG.NRLIB/code.o ${OUT}/FLALG.o

@
<<FLALG.NRLIB (NRLIB from MID)>>=
${MID}/FLALG.NRLIB: ${MID}/FLALG.spad
	@ echo 4214 making ${MID}/FLALG.NRLIB from ${MID}/FLALG.spad
	@ (cd ${MID} ; 	echo ')co FLALG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FLALG.spad (SPAD from IN)>>=
${MID}/FLALG.spad: ${IN}/xlpoly.spad.pamphlet
	@ echo 4215 making ${MID}/FLALG.spad from ${IN}/xlpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FLALG.NRLIB ; \
	${TANGLE} -R"category FLALG FreeLieAlgebra" ${IN}/xlpoly.spad.pamphlet >FLALG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LEXP.o (O from NRLIB)>>=
${OUT}/LEXP.o: ${MID}/LEXP.NRLIB
	@ echo 4216-10 making ${OUT}/LEXP.o from ${MID}/LEXP.NRLIB
	@ cp ${MID}/LEXP.NRLIB/code.o ${OUT}/LEXP.o

@
<<LEXP.NRLIB (NRLIB from MID)>>=
${MID}/LEXP.NRLIB: ${MID}/LEXP.spad
	@ echo 4217 making ${MID}/LEXP.NRLIB from ${MID}/LEXP.spad
	@ (cd ${MID} ; 	echo ')co LEXP.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LEXP.spad (SPAD from IN)>>=
${MID}/LEXP.spad: ${IN}/xlpoly.spad.pamphlet
	@ echo 4218 making ${MID}/LEXP.spad from ${IN}/xlpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LEXP.NRLIB ; \
	${TANGLE} -R"domain LEXP LieExponentials" ${IN}/xlpoly.spad.pamphlet >LEXP.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LIECAT-.o (O from NRLIB)>>=
${OUT}/LIECAT-.o: ${MID}/LIECAT.NRLIB
	@ echo 4219-10 making ${OUT}/LIECAT-.o from ${MID}/LIECAT-.NRLIB
	@ cp ${MID}/LIECAT-.NRLIB/code.o ${OUT}/LIECAT-.o

@
<<LIECAT-.NRLIB (NRLIB from MID)>>=
${MID}/LIECAT-.NRLIB: ${MID}/LIECAT.spad 
	@ echo 4220 making ${MID}/LIECAT-.NRLIB from ${MID}/LIECAT.spad
	@ (cd ${MID} ; 	echo ')co LIECAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LIECAT.o (O from NRLIB)>>=
${OUT}/LIECAT.o: ${MID}/LIECAT.NRLIB
	@ echo 4221-10 making ${OUT}/LIECAT.o from ${MID}/LIECAT.NRLIB
	@ cp ${MID}/LIECAT.NRLIB/code.o ${OUT}/LIECAT.o

@
<<LIECAT.NRLIB (NRLIB from MID)>>=
${MID}/LIECAT.NRLIB: ${MID}/LIECAT.spad
	@ echo 4222 making ${MID}/LIECAT.NRLIB from ${MID}/LIECAT.spad
	@ (cd ${MID} ; 	echo ')co LIECAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LIECAT.spad (SPAD from IN)>>=
${MID}/LIECAT.spad: ${IN}/xlpoly.spad.pamphlet
	@ echo 4223 making ${MID}/LIECAT.spad from ${IN}/xlpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LIECAT.NRLIB ; \
	${TANGLE} -R"category LIECAT LieAlgebra" ${IN}/xlpoly.spad.pamphlet >LIECAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LPOLY.o (O from NRLIB)>>=
${OUT}/LPOLY.o: ${MID}/LPOLY.NRLIB
	@ echo 4224-12 making ${OUT}/LPOLY.o from ${MID}/LPOLY.NRLIB
	@ cp ${MID}/LPOLY.NRLIB/code.o ${OUT}/LPOLY.o

@
<<LPOLY.NRLIB (NRLIB from MID)>>=
${MID}/LPOLY.NRLIB: ${MID}/LPOLY.spad
	@ echo 4225 making ${MID}/LPOLY.NRLIB from ${MID}/LPOLY.spad
	@ (cd ${MID} ; 	echo ')co LPOLY.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LPOLY.spad (SPAD from IN)>>=
${MID}/LPOLY.spad: ${IN}/xlpoly.spad.pamphlet
	@ echo 4226 making ${MID}/LPOLY.spad from ${IN}/xlpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LPOLY.NRLIB ; \
	${TANGLE} -R"domain LPOLY LiePolynomial" ${IN}/xlpoly.spad.pamphlet >LPOLY.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LWORD.o (O from NRLIB)>>=
${OUT}/LWORD.o: ${MID}/LWORD.NRLIB
	@ echo 4227-11 making ${OUT}/LWORD.o from ${MID}/LWORD.NRLIB
	@ cp ${MID}/LWORD.NRLIB/code.o ${OUT}/LWORD.o

@
<<LWORD.NRLIB (NRLIB from MID)>>=
${MID}/LWORD.NRLIB: ${MID}/LWORD.spad
	@ echo 4228 making ${MID}/LWORD.NRLIB from ${MID}/LWORD.spad
	@ (cd ${MID} ; 	echo ')co LWORD.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LWORD.spad (SPAD from IN)>>=
${MID}/LWORD.spad: ${IN}/xlpoly.spad.pamphlet
	@ echo 4229 making ${MID}/LWORD.spad from ${IN}/xlpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LWORD.NRLIB ; \
	${TANGLE} -R"domain LWORD LyndonWord" ${IN}/xlpoly.spad.pamphlet >LWORD.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MAGMA.o (O from NRLIB)>>=
${OUT}/MAGMA.o: ${MID}/MAGMA.NRLIB
	@ echo 4230-10 making ${OUT}/MAGMA.o from ${MID}/MAGMA.NRLIB
	@ cp ${MID}/MAGMA.NRLIB/code.o ${OUT}/MAGMA.o

@
<<MAGMA.NRLIB (NRLIB from MID)>>=
${MID}/MAGMA.NRLIB: ${MID}/MAGMA.spad
	@ echo 4231 making ${MID}/MAGMA.NRLIB from ${MID}/MAGMA.spad
	@ (cd ${MID} ; 	echo ')co MAGMA.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<MAGMA.spad (SPAD from IN)>>=
${MID}/MAGMA.spad: ${IN}/xlpoly.spad.pamphlet
	@ echo 4232 making ${MID}/MAGMA.spad from ${IN}/xlpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf MAGMA.NRLIB ; \
	${TANGLE} -R"domain MAGMA Magma" ${IN}/xlpoly.spad.pamphlet >MAGMA.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PBWLB.o (O from NRLIB)>>=
${OUT}/PBWLB.o: ${MID}/PBWLB.NRLIB
	@ echo 4233-10 making ${OUT}/PBWLB.o from ${MID}/PBWLB.NRLIB
	@ cp ${MID}/PBWLB.NRLIB/code.o ${OUT}/PBWLB.o

@
<<PBWLB.NRLIB (NRLIB from MID)>>=
${MID}/PBWLB.NRLIB: ${MID}/PBWLB.spad
	@ echo 4234 making ${MID}/PBWLB.NRLIB from ${MID}/PBWLB.spad
	@ (cd ${MID} ; 	echo ')co PBWLB.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<PBWLB.spad (SPAD from IN)>>=
${MID}/PBWLB.spad: ${IN}/xlpoly.spad.pamphlet
	@ echo 4235 making ${MID}/PBWLB.spad from ${IN}/xlpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf PBWLB.NRLIB ; \
	${TANGLE} -R"domain PBWLB PoincareBirkhoffWittLyndonBasis" ${IN}/xlpoly.spad.pamphlet >PBWLB.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<XEXPPKG.o (O from NRLIB)>>=
${OUT}/XEXPPKG.o: ${MID}/XEXPPKG.NRLIB
	@ echo 4236-11 making ${OUT}/XEXPPKG.o from ${MID}/XEXPPKG.NRLIB
	@ cp ${MID}/XEXPPKG.NRLIB/code.o ${OUT}/XEXPPKG.o

@
<<XEXPPKG.NRLIB (NRLIB from MID)>>=
${MID}/XEXPPKG.NRLIB: ${MID}/XEXPPKG.spad
	@ echo 4237 making ${MID}/XEXPPKG.NRLIB from ${MID}/XEXPPKG.spad
	@ (cd ${MID} ; 	echo ')co XEXPPKG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<XEXPPKG.spad (SPAD from IN)>>=
${MID}/XEXPPKG.spad: ${IN}/xlpoly.spad.pamphlet
	@ echo 4238 making ${MID}/XEXPPKG.spad from ${IN}/xlpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf XEXPPKG.NRLIB ; \
	${TANGLE} -R"package XEXPPKG XExponentialPackage" ${IN}/xlpoly.spad.pamphlet >XEXPPKG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<XPBWPOLY.o (O from NRLIB)>>=
${OUT}/XPBWPOLY.o: ${MID}/XPBWPOLY.NRLIB
	@ echo 4239-11 making ${OUT}/XPBWPOLY.o from ${MID}/XPBWPOLY.NRLIB
	@ cp ${MID}/XPBWPOLY.NRLIB/code.o ${OUT}/XPBWPOLY.o

@
<<XPBWPOLY.NRLIB (NRLIB from MID)>>=
${MID}/XPBWPOLY.NRLIB: ${MID}/XPBWPOLY.spad
	@ echo 4240 making ${MID}/XPBWPOLY.NRLIB from ${MID}/XPBWPOLY.spad
	@ (cd ${MID} ; 	echo ')co XPBWPOLY.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<XPBWPOLY.spad (SPAD from IN)>>=
${MID}/XPBWPOLY.spad: ${IN}/xlpoly.spad.pamphlet
	@ echo 4241 making ${MID}/XPBWPOLY.spad from ${IN}/xlpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf XPBWPOLY.NRLIB ; \
	${TANGLE} -R"domain XPBWPOLY XPBWPolynomial" ${IN}/xlpoly.spad.pamphlet >XPBWPOLY.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<xlpoly.spad.dvi (DOC from IN)>>=
${DOC}/xlpoly.spad.dvi: ${IN}/xlpoly.spad.pamphlet ${DOC}/axiom.sty
	@ echo 4242 making ${DOC}/xlpoly.spad.dvi from ${IN}/xlpoly.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/xlpoly.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} xlpoly.spad ; \
	rm -f ${DOC}/xlpoly.spad.pamphlet ; \
	rm -f ${DOC}/xlpoly.spad.tex ; \
	rm -f ${DOC}/xlpoly.spad )

@
\subsection{xpoly.spad \cite{1}}
<<xpoly.spad (SPAD from IN)>>=
${OUTSRC}/xpoly.spad: ${IN}/xpoly.spad.pamphlet
	@ echo 4243 making ${OUTSRC}/xpoly.spad from ${IN}/xpoly.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/xpoly.spad.pamphlet >xpoly.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FMCAT.o (O from NRLIB)>>=
${OUT}/FMCAT.o: ${MID}/FMCAT.NRLIB
	@ echo 4244-7 making ${OUT}/FMCAT.o from ${MID}/FMCAT.NRLIB
	@ cp ${MID}/FMCAT.NRLIB/code.o ${OUT}/FMCAT.o

@
<<FMCAT.NRLIB (NRLIB from MID)>>=
${MID}/FMCAT.NRLIB: ${MID}/FMCAT.spad
	@ echo 4245 making ${MID}/FMCAT.NRLIB from ${MID}/FMCAT.spad
	@ (cd ${MID} ; 	echo ')co FMCAT.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FMCAT.spad (SPAD from IN)>>=
${MID}/FMCAT.spad: ${IN}/xpoly.spad.pamphlet
	@ echo 4246 making ${MID}/FMCAT.spad from ${IN}/xpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FMCAT.NRLIB ; \
	${TANGLE} -R"category FMCAT FreeModuleCat" ${IN}/xpoly.spad.pamphlet >FMCAT.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FM1.o (O from NRLIB)>>=
${OUT}/FM1.o: ${MID}/FM1.NRLIB
	@ echo 4247-10 making ${OUT}/FM1.o from ${MID}/FM1.NRLIB
	@ cp ${MID}/FM1.NRLIB/code.o ${OUT}/FM1.o

@
<<FM1.NRLIB (NRLIB from MID)>>=
${MID}/FM1.NRLIB: ${MID}/FM1.spad
	@ echo 4248 making ${MID}/FM1.NRLIB from ${MID}/FM1.spad
	@ (cd ${MID} ; 	echo ')co FM1.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FM1.spad (SPAD from IN)>>=
${MID}/FM1.spad: ${IN}/xpoly.spad.pamphlet
	@ echo 4249 making ${MID}/FM1.spad from ${IN}/xpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FM1.NRLIB ; \
	${TANGLE} -R"domain FM1 FreeModule1" ${IN}/xpoly.spad.pamphlet >FM1.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OFMONOID.o (O from NRLIB)>>=
${OUT}/OFMONOID.o: ${MID}/OFMONOID.NRLIB
	@ echo 4250-10 making ${OUT}/OFMONOID.o from ${MID}/OFMONOID.NRLIB
	@ cp ${MID}/OFMONOID.NRLIB/code.o ${OUT}/OFMONOID.o

@
<<OFMONOID.NRLIB (NRLIB from MID)>>=
${MID}/OFMONOID.NRLIB: ${MID}/OFMONOID.spad
	@ echo 4251 making ${MID}/OFMONOID.NRLIB from ${MID}/OFMONOID.spad
	@ (cd ${MID} ; 	echo ')co OFMONOID.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<OFMONOID.spad (SPAD from IN)>>=
${MID}/OFMONOID.spad: ${IN}/xpoly.spad.pamphlet
	@ echo 4252 making ${MID}/OFMONOID.spad from ${IN}/xpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf OFMONOID.NRLIB ; \
	${TANGLE} -R"domain OFMONOID OrderedFreeMonoid" ${IN}/xpoly.spad.pamphlet >OFMONOID.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<XALG.o (O from NRLIB)>>=
${OUT}/XALG.o: ${MID}/XALG.NRLIB
	@ echo 4253-8 making ${OUT}/XALG.o from ${MID}/XALG.NRLIB
	@ cp ${MID}/XALG.NRLIB/code.o ${OUT}/XALG.o

@
<<XALG.NRLIB (NRLIB from MID)>>=
${MID}/XALG.NRLIB: ${MID}/XALG.spad
	@ echo 4254 making ${MID}/XALG.NRLIB from ${MID}/XALG.spad
	@ (cd ${MID} ; 	echo ')co XALG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<XALG.spad (SPAD from IN)>>=
${MID}/XALG.spad: ${IN}/xpoly.spad.pamphlet
	@ echo 4255 making ${MID}/XALG.spad from ${IN}/xpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf XALG.NRLIB ; \
	${TANGLE} -R"category XALG XAlgebra" ${IN}/xpoly.spad.pamphlet >XALG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<XDPOLY.o (O from NRLIB)>>=
${OUT}/XDPOLY.o: ${MID}/XDPOLY.NRLIB
	@ echo 4256-11 making ${OUT}/XDPOLY.o from ${MID}/XDPOLY.NRLIB
	@ cp ${MID}/XDPOLY.NRLIB/code.o ${OUT}/XDPOLY.o

@
<<XDPOLY.NRLIB (NRLIB from MID)>>=
${MID}/XDPOLY.NRLIB: ${MID}/XDPOLY.spad
	@ echo 4257 making ${MID}/XDPOLY.NRLIB from ${MID}/XDPOLY.spad
	@ (cd ${MID} ; 	echo ')co XDPOLY.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<XDPOLY.spad (SPAD from IN)>>=
${MID}/XDPOLY.spad: ${IN}/xpoly.spad.pamphlet
	@ echo 4258 making ${MID}/XDPOLY.spad from ${IN}/xpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf XDPOLY.NRLIB ; \
	${TANGLE} -R"domain XDPOLY XDistributedPolynomial" ${IN}/xpoly.spad.pamphlet >XDPOLY.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<XFALG.o (O from NRLIB)>>=
${OUT}/XFALG.o: ${MID}/XFALG.NRLIB
	@ echo 4259-9 making ${OUT}/XFALG.o from ${MID}/XFALG.NRLIB
	@ cp ${MID}/XFALG.NRLIB/code.o ${OUT}/XFALG.o

@
<<XFALG.NRLIB (NRLIB from MID)>>=
${MID}/XFALG.NRLIB: ${MID}/XFALG.spad
	@ echo 4260 making ${MID}/XFALG.NRLIB from ${MID}/XFALG.spad
	@ (cd ${MID} ; 	echo ')co XFALG.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<XFALG.spad (SPAD from IN)>>=
${MID}/XFALG.spad: ${IN}/xpoly.spad.pamphlet
	@ echo 4261 making ${MID}/XFALG.spad from ${IN}/xpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf XFALG.NRLIB ; \
	${TANGLE} -R"category XFALG XFreeAlgebra" ${IN}/xpoly.spad.pamphlet >XFALG.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<XPOLY.o (O from NRLIB)>>=
${OUT}/XPOLY.o: ${MID}/XPOLY.NRLIB
	@ echo 4262-11 making ${OUT}/XPOLY.o from ${MID}/XPOLY.NRLIB
	@ cp ${MID}/XPOLY.NRLIB/code.o ${OUT}/XPOLY.o

@
<<XPOLY.NRLIB (NRLIB from MID)>>=
${MID}/XPOLY.NRLIB: ${MID}/XPOLY.spad
	@ echo 4263 making ${MID}/XPOLY.NRLIB from ${MID}/XPOLY.spad
	@ (cd ${MID} ; 	echo ')co XPOLY.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<XPOLY.spad (SPAD from IN)>>=
${MID}/XPOLY.spad: ${IN}/xpoly.spad.pamphlet
	@ echo 4264 making ${MID}/XPOLY.spad from ${IN}/xpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf XPOLY.NRLIB ; \
	${TANGLE} -R"domain XPOLY XPolynomial" ${IN}/xpoly.spad.pamphlet >XPOLY.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<XPOLYC.o (O from NRLIB)>>=
${OUT}/XPOLYC.o: ${MID}/XPOLYC.NRLIB
	@ echo 4265-10 making ${OUT}/XPOLYC.o from ${MID}/XPOLYC.NRLIB
	@ cp ${MID}/XPOLYC.NRLIB/code.o ${OUT}/XPOLYC.o

@
<<XPOLYC.NRLIB (NRLIB from MID)>>=
${MID}/XPOLYC.NRLIB: ${MID}/XPOLYC.spad
	@ echo 4266 making ${MID}/XPOLYC.NRLIB from ${MID}/XPOLYC.spad
	@ (cd ${MID} ; 	echo ')co XPOLYC.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<XPOLYC.spad (SPAD from IN)>>=
${MID}/XPOLYC.spad: ${IN}/xpoly.spad.pamphlet
	@ echo 4267 making ${MID}/XPOLYC.spad from ${IN}/xpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf XPOLYC.NRLIB ; \
	${TANGLE} -R"category XPOLYC XPolynomialsCat" ${IN}/xpoly.spad.pamphlet >XPOLYC.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<XPR.o (O from NRLIB)>>=
${OUT}/XPR.o: ${MID}/XPR.NRLIB
	@ echo 4268-10 making ${OUT}/XPR.o from ${MID}/XPR.NRLIB
	@ cp ${MID}/XPR.NRLIB/code.o ${OUT}/XPR.o

@
<<XPR.NRLIB (NRLIB from MID)>>=
${MID}/XPR.NRLIB: ${MID}/XPR.spad
	@ echo 4269 making ${MID}/XPR.NRLIB from ${MID}/XPR.spad
	@ (cd ${MID} ; 	echo ')co XPR.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<XPR.spad (SPAD from IN)>>=
${MID}/XPR.spad: ${IN}/xpoly.spad.pamphlet
	@ echo 4270 making ${MID}/XPR.spad from ${IN}/xpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf XPR.NRLIB ; \
	${TANGLE} -R"domain XPR XPolynomialRing" ${IN}/xpoly.spad.pamphlet >XPR.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<XRPOLY.o (O from NRLIB)>>=
${OUT}/XRPOLY.o: ${MID}/XRPOLY.NRLIB
	@ echo 4271-11 making ${OUT}/XRPOLY.o from ${MID}/XRPOLY.NRLIB
	@ cp ${MID}/XRPOLY.NRLIB/code.o ${OUT}/XRPOLY.o

@
<<XRPOLY.NRLIB (NRLIB from MID)>>=
${MID}/XRPOLY.NRLIB: ${MID}/XRPOLY.spad
	@ echo 4272 making ${MID}/XRPOLY.NRLIB from ${MID}/XRPOLY.spad
	@ (cd ${MID} ; 	echo ')co XRPOLY.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<XRPOLY.spad (SPAD from IN)>>=
${MID}/XRPOLY.spad: ${IN}/xpoly.spad.pamphlet
	@ echo 4273 making ${MID}/XRPOLY.spad from ${IN}/xpoly.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf XRPOLY.NRLIB ; \
	${TANGLE} -R"domain XRPOLY XRecursivePolynomial" ${IN}/xpoly.spad.pamphlet >XRPOLY.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<xpoly.spad.dvi (DOC from IN)>>=
${DOC}/xpoly.spad.dvi: ${IN}/xpoly.spad.pamphlet ${DOC}/axiom.sty
	@ echo 4274 making ${DOC}/xpoly.spad.dvi from ${IN}/xpoly.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/xpoly.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} xpoly.spad ; \
	rm -f ${DOC}/xpoly.spad.pamphlet ; \
	rm -f ${DOC}/xpoly.spad.tex ; \
	rm -f ${DOC}/xpoly.spad )

@
\subsection{ystream.spad \cite{1}}
<<ystream.spad (SPAD from IN)>>=
${OUTSRC}/ystream.spad: ${IN}/ystream.spad.pamphlet
	@ echo 4275 making ${OUTSRC}/ystream.spad from ${IN}/ystream.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/ystream.spad.pamphlet >ystream.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<YSTREAM.o (O from NRLIB)>>=
${OUT}/YSTREAM.o: ${MID}/YSTREAM.NRLIB
	@ echo 4276-4 making ${OUT}/YSTREAM.o from ${MID}/YSTREAM.NRLIB
	@ cp ${MID}/YSTREAM.NRLIB/code.o ${OUT}/YSTREAM.o

@
<<YSTREAM.NRLIB (NRLIB from MID)>>=
${MID}/YSTREAM.NRLIB: ${MID}/YSTREAM.spad
	@ echo 4277 making ${MID}/YSTREAM.NRLIB from ${MID}/YSTREAM.spad
	@ (cd ${MID} ; 	echo ')co YSTREAM.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<YSTREAM.spad (SPAD from IN)>>=
${MID}/YSTREAM.spad: ${IN}/ystream.spad.pamphlet
	@ echo 4278 making ${MID}/YSTREAM.spad from ${IN}/ystream.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf YSTREAM.NRLIB ; \
	${TANGLE} -R"package YSTREAM ParadoxicalCombinatorsForStreams" ${IN}/ystream.spad.pamphlet >YSTREAM.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ystream.spad.dvi (DOC from IN)>>=
${DOC}/ystream.spad.dvi: ${IN}/ystream.spad.pamphlet ${DOC}/axiom.sty
	@ echo 4279 making ${DOC}/ystream.spad.dvi from ${IN}/ystream.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/ystream.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} ystream.spad ; \
	rm -f ${DOC}/ystream.spad.pamphlet ; \
	rm -f ${DOC}/ystream.spad.tex ; \
	rm -f ${DOC}/ystream.spad )

@
\subsection{zerodim.spad \cite{1}}
<<zerodim.spad (SPAD from IN)>>=
${OUTSRC}/zerodim.spad: ${IN}/zerodim.spad.pamphlet
	@ echo 4280 making ${OUTSRC}/zerodim.spad from ${IN}/zerodim.spad.pamphlet
	@(cd ${OUTSRC} ; \
	${TANGLE} ${IN}/zerodim.spad.pamphlet >zerodim.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FGLMICPK.o (O from NRLIB)>>=
${OUT}/FGLMICPK.o: ${MID}/FGLMICPK.NRLIB
	@ echo 4281-14 making ${OUT}/FGLMICPK.o from ${MID}/FGLMICPK.NRLIB
	@ cp ${MID}/FGLMICPK.NRLIB/code.o ${OUT}/FGLMICPK.o

@
<<FGLMICPK.NRLIB (NRLIB from MID)>>=
${MID}/FGLMICPK.NRLIB: ${MID}/FGLMICPK.spad
	@ echo 4282 making ${MID}/FGLMICPK.NRLIB from ${MID}/FGLMICPK.spad
	@ (cd ${MID} ; 	echo ')co FGLMICPK.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<FGLMICPK.spad (SPAD from IN)>>=
${MID}/FGLMICPK.spad: ${IN}/zerodim.spad.pamphlet
	@ echo 4283 making ${MID}/FGLMICPK.spad from ${IN}/zerodim.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf FGLMICPK.NRLIB ; \
	${TANGLE} -R"package FGLMICPK FGLMIfCanPackage" ${IN}/zerodim.spad.pamphlet >FGLMICPK.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IRURPK.o (O from NRLIB)>>=
${OUT}/IRURPK.o: ${MID}/IRURPK.NRLIB
	@ echo 4284-23 making ${OUT}/IRURPK.o from ${MID}/IRURPK.NRLIB
	@ cp ${MID}/IRURPK.NRLIB/code.o ${OUT}/IRURPK.o

@
<<IRURPK.NRLIB (NRLIB from MID)>>=
${MID}/IRURPK.NRLIB: ${MID}/IRURPK.spad
	@ echo 4285 making ${MID}/IRURPK.NRLIB from ${MID}/IRURPK.spad
	@ (cd ${MID} ; 	echo ')co IRURPK.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<IRURPK.spad (SPAD from IN)>>=
${MID}/IRURPK.spad: ${IN}/zerodim.spad.pamphlet
	@ echo 4286 making ${MID}/IRURPK.spad from ${IN}/zerodim.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf IRURPK.NRLIB ; \
	${TANGLE} -R"package IRURPK InternalRationalUnivariateRepresentationPackage" ${IN}/zerodim.spad.pamphlet >IRURPK.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LEXTRIPK.o (O from NRLIB)>>=
${OUT}/LEXTRIPK.o: ${MID}/LEXTRIPK.NRLIB
	@ echo 4287-23 making ${OUT}/LEXTRIPK.o from ${MID}/LEXTRIPK.NRLIB
	@ cp ${MID}/LEXTRIPK.NRLIB/code.o ${OUT}/LEXTRIPK.o

@
<<LEXTRIPK.NRLIB (NRLIB from MID)>>=
${MID}/LEXTRIPK.NRLIB: ${MID}/LEXTRIPK.spad
	@ echo 4288 making ${MID}/LEXTRIPK.NRLIB from ${MID}/LEXTRIPK.spad
	@ (cd ${MID} ; 	echo ')co LEXTRIPK.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<LEXTRIPK.spad (SPAD from IN)>>=
${MID}/LEXTRIPK.spad: ${IN}/zerodim.spad.pamphlet
	@ echo 4289 making ${MID}/LEXTRIPK.spad from ${IN}/zerodim.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf LEXTRIPK.NRLIB ; \
	${TANGLE} -R"package LEXTRIPK LexTriangularPackage" ${IN}/zerodim.spad.pamphlet >LEXTRIPK.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RGCHAIN.o (O from NRLIB)>>=
${OUT}/RGCHAIN.o: ${MID}/RGCHAIN.NRLIB
	@ echo 4290-22 making ${OUT}/RGCHAIN.o from ${MID}/RGCHAIN.NRLIB
	@ cp ${MID}/RGCHAIN.NRLIB/code.o ${OUT}/RGCHAIN.o

@
<<RGCHAIN.NRLIB (NRLIB from MID)>>=
${MID}/RGCHAIN.NRLIB: ${MID}/RGCHAIN.spad
	@ echo 4291 making ${MID}/RGCHAIN.NRLIB from ${MID}/RGCHAIN.spad
	@ (cd ${MID} ; 	echo ')co RGCHAIN.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RGCHAIN.spad (SPAD from IN)>>=
${MID}/RGCHAIN.spad: ${IN}/zerodim.spad.pamphlet
	@ echo 4292 making ${MID}/RGCHAIN.spad from ${IN}/zerodim.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RGCHAIN.NRLIB ; \
	${TANGLE} -R"domain RGCHAIN RegularChain" ${IN}/zerodim.spad.pamphlet >RGCHAIN.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RURPK.o (O from NRLIB)>>=
${OUT}/RURPK.o: ${MID}/RURPK.NRLIB
	@ echo 4293-23 making ${OUT}/RURPK.o from ${MID}/RURPK.NRLIB
	@ cp ${MID}/RURPK.NRLIB/code.o ${OUT}/RURPK.o

@
<<RURPK.NRLIB (NRLIB from MID)>>=
${MID}/RURPK.NRLIB: ${MID}/RURPK.spad
	@ echo 4294 making ${MID}/RURPK.NRLIB from ${MID}/RURPK.spad
	@ (cd ${MID} ; 	echo ')co RURPK.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<RURPK.spad (SPAD from IN)>>=
${MID}/RURPK.spad: ${IN}/zerodim.spad.pamphlet
	@ echo 4295 making ${MID}/RURPK.spad from ${IN}/zerodim.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf RURPK.NRLIB ; \
	${TANGLE} -R"package RURPK RationalUnivariateRepresentationPackage" ${IN}/zerodim.spad.pamphlet >RURPK.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ZDSOLVE.o (O from NRLIB)>>=
${OUT}/ZDSOLVE.o: ${MID}/ZDSOLVE.NRLIB
	@ echo 4296-22 making ${OUT}/ZDSOLVE.o from ${MID}/ZDSOLVE.NRLIB
	@ cp ${MID}/ZDSOLVE.NRLIB/code.o ${OUT}/ZDSOLVE.o

@
<<ZDSOLVE.NRLIB (NRLIB from MID)>>=
${MID}/ZDSOLVE.NRLIB: ${MID}/ZDSOLVE.spad
	@ echo 4297 making ${MID}/ZDSOLVE.NRLIB from ${MID}/ZDSOLVE.spad
	@ (cd ${MID} ; 	echo ')co ZDSOLVE.spad' | ${INTERPSYS} )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<ZDSOLVE.spad (SPAD from IN)>>=
${MID}/ZDSOLVE.spad: ${IN}/zerodim.spad.pamphlet
	@ echo 4298 making ${MID}/ZDSOLVE.spad from ${IN}/zerodim.spad.pamphlet
	@(cd ${MID} ; \
	rm -rf ZDSOLVE.NRLIB ; \
	${TANGLE} -R"package ZDSOLVE ZeroDimensionalSolvePackage" ${IN}/zerodim.spad.pamphlet >ZDSOLVE.spad )
	@ rm -f ${INT}/algebra/dbcomplete

@
<<zerodim.spad.dvi (DOC from IN)>>=
${DOC}/zerodim.spad.dvi: ${IN}/zerodim.spad.pamphlet ${DOC}/axiom.sty
	@ echo 4299 making ${DOC}/zerodim.spad.dvi from ${IN}/zerodim.spad.pamphlet
	@ (cd ${DOC} ; \
	cp ${IN}/zerodim.spad.pamphlet ${DOC} ; \
	${SPADBIN}/document ${NOISE} zerodim.spad ; \
	rm -f ${DOC}/zerodim.spad.pamphlet ; \
	rm -f ${DOC}/zerodim.spad.tex ; \
	rm -f ${DOC}/zerodim.spad )

@
\section{axiom.sty}
<<axiom.sty (OUT from IN)>>=
${DOC}/axiom.sty: ${SRC}/doc/axiom.sty.pamphlet
	@ echo 4300 making ${DOC}/axiom.sty from ${SRC}/doc/axiom.sty.pamphlet
	@(cd ${DOC} ; \
	cp ${SRC}/doc/axiom.sty.pamphlet ${DOC} ; \
	${SPADBIN}/lib/notangle -Raxiom.sty axiom.sty.pamphlet >axiom.sty ; \
	rm -f ${DOC}/axiom.sty.pamphlet )
 
@

<<original Makefile>>=
## src/algebra Makeile
# subparts: 
# 	db 	--- make databases for the current machine
#	db-win32 --- make databases for PCs

IN=	${SRC}/algebra

MID=	${INT}/algebra
CENTER=      ${INT}/lib/unix
WIN32CENTER= ${INT}/lib/win32
MAIL=   ${MID}/libcheck

OUT=	${MNT}/${SYS}/algebra

WIN32OUT=${MNT}/win32/algebra

LIB=	${INT}/lib

DEPSYS=	${OBJ}/${SYS}/bin/depsys

INTERPSYS= ${MNT}/${SYS}/bin/AXIOMsys
WIN32INTERPSYS = ${MNT}/${SYS}/bin/AXIOMsys-win32
AS=	ibits.as 

cmd: ${CENTER} ${CENTER}/libdb.text 
	@ echo Building command.list
	@ (cat ${CENTER}/libdb.text |sed -n "s/^o//p" |sed s\/\`\.\*\/\/p |sort -u > ${CENTER}/command.list )
	@ (cat ${CENTER}/libdb.text |sed -n "s/^c//p" |sed s\/\`\.\*\/\/p |sort -u >> ${CENTER}/command.list )
	@ (cat ${CENTER}/libdb.text |sed -n "s/^d//p" |sed s\/\`\.\*\/\/p |sort -u >> ${CENTER}/command.list )
	@ (cat ${CENTER}/libdb.text |sed -n "s/^p//p" |sed s\/\`\.\*\/\/p |sort -u >> ${CENTER}/command.list )

lib: ${OBJ}/${SYS}/etc/helpmake.o
	@ echo checking libraries...
	@ echo comparing dates ...
	@ echo '(progn (let ((*package* (find-package "BOOT"))) (load "${OBJ}/${SYS}/etc/helpmake") (boot::makelib "${MID}" "${OUT}" "${LISP}" "${O}")) (${BYE}))' | ${DEPSYS}

${OBJ}/${SYS}/etc/helpmake.${O} : ${SRC}/etc/helpmake.${LISP}
	@ echo Rebuilding helpmake ...
	@ (cd ${OBJ}/${SYS} ; \
	   echo '(progn (let ((*package* (find-package "BOOT"))) (compile-file "${SRC}/etc/helpmake.${LISP}" :output-file "${OBJ}/${SYS}/etc/helpmake.${O}")))  (${BYE})' | ${DEPSYS} )

gloss: ${CENTER}
	@ echo rebuilding glossary...
	@ cp -p ${SRC}/doc/gloss.text ${CENTER}
#	buildGloss needs it in share/algebra 
	@ cp -p ${SRC}/doc/gloss.text ${SPD}/share/algebra 
	@ (cd ${MID} ; \
	   echo ')fin' >/tmp/tmp.input ; \
	   echo '(|oldCompilerAutoloadOnceTrigger|)' >>/tmp/tmp.input ; \
	   echo '(|browserAutoloadOnceTrigger|)' >>/tmp/tmp.input ; \
	   echo '(|buildGloss|)' >>/tmp/tmp.input ; \
	   echo '(bye)' >>/tmp/tmp.input ; \
	   cat /tmp/tmp.input | ${INTERPSYS} ; \
	   rm -f /tmp/tmp.input )
	@ echo installing glosskey.text
	@ mv ${MID}/glosskey.text ${CENTER}
	@ echo installing glossdef.text
	@ mv ${MID}/glossdef.text ${CENTER}
	@ echo installing gloss.ht
	@ cp -p ${MID}/gloss.ht ${SPD}/share/doc/hypertex/pages
	@ cp -p ${MID}/gloss.ht ${INT}/paste
	@ echo adding gloss.ht to ht database
	@ htadd -s gloss.ht

${CENTER} :
	mkdir ${CENTER}

${WIN32CENTER} :
	mkdir ${WIN32CENTER}


db: ${CENTER}
	@ echo rebuilding databases...
	@ cp -p ${SRC}/doc/gloss.text ${LIB}
	@ cp -p ${SRC}/doc/topics.data ${MID}
	@ echo rebuilding daase files
	@ (cd ${MID} ; \
	   echo ')set out le 200' >/tmp/tmp.input ; \
	   echo ')fin' >>/tmp/tmp.input ; \
	   echo '(make-databases "" (QUOTE ("unix")))' >>/tmp/tmp.input ; \
	   echo '(bye)' >>/tmp/tmp.input ; \
	   cat /tmp/tmp.input | ${INTERPSYS} ; \
	   rm -f /tmp/tmp.input )
	@ echo If all went well, go-ahead Mike and do a db-install as well !

db-install:
# 
#  Now move everything to int/lib/unix
#
	@ echo moving ${MID}/unix/compress.daase to ${CENTER}/
	@ mv ${MID}/unix/compress.daase ${CENTER}/
#
	@ echo moving ${MID}/unix/interp.daase to ${CENTER}/
	@ mv ${MID}/unix/interp.daase ${CENTER}/
#
	@ echo moving ${MID}/unix/browse.daase to ${CENTER}/
	@ mv ${MID}/unix/browse.daase ${CENTER}/
#
	@ echo moving ${MID}/unix/category.daase to ${CENTER}/
	@ mv ${MID}/unix/category.daase ${CENTER}/
#
	@ echo moving ${MID}/unix/operation.daase to ${CENTER}/
	@ mv ${MID}/unix/operation.daase ${CENTER}/
#
	@ echo moving ${MID}/unix/USERS.DAASE to ${CENTER}
	@ rm -rf ${CENTER}/USERS.DAASE
	@ mv ${MID}/unix/USERS.DAASE ${CENTER}
#
	@ echo moving ${MID}/unix/DEPENDENTS.DAASE to ${CENTER}
	@ rm -rf ${CENTER}/DEPENDENTS.DAASE
	@ mv ${MID}/unix/DEPENDENTS.DAASE ${CENTER}
#
	@ echo moving ${MID}/unix/libdb.text to ${CENTER}
	@ mv ${MID}/unix/libdb.text ${CENTER}
#
	@ echo moving ${MID}/unix/comdb.text to ${CENTER}
	@ mv ${MID}/unix/comdb.text ${CENTER}
#
	@ echo Now you need to promote the databases \(make PART=dbpromote\)
	@ echo Then remake and promote the *.img files
#	@ echo rebuilding interpsys with the new database
#	@ touch ${OBJ}/${SYS}/interp/database.date
#	@ (cd ${SPD} ; ${MAKE} PART=interp)

db-win32:
	echo rebuilding databases...
	cp -p ${IN}/INTERP.EXPOSED ${MID}
	cp -p ${IN}/INTERP.EXPOSED ${WIN32CENTER}
	cp -p ${SRC}/doc/gloss.text ${LIB}
	cp -p ${SRC}/doc/topics.data ${MID}
	echo rebuilding daase files
	(cd ${MID} ; \
	   echo ')fin' >/tmp/tmp.input ; \
	   echo '(make-databases "-win32" (QUOTE ("win32")))' >>/tmp/tmp.input ; \
	   echo '(bye)' >>/tmp/tmp.input ; \
	   cat /tmp/tmp.input | ${WIN32INTERPSYS} ; \
	   rm -f /tmp/tmp.input )

db-win32-install:
	@ echo moving ${MID}/compress.daase-win32 to ${WIN32CENTER}/compress.daase
	@ mv ${MID}/win32/compress.daase-win32 ${WIN32CENTER}/compress.daase
	@ echo moving ${MID}/interp.daase-win32 to ${WIN32CENTER}/interp.daase
	@ mv ${MID}/win32/interp.daase-win32 ${WIN32CENTER}/interp.daase
	@ echo moving ${MID}/browse.daase-win32 to ${WIN32CENTER}/browse.daase-
	@ mv ${MID}/win32/browse.daase-win32 ${WIN32CENTER}/browse.daase
	@ echo moving ${MID}/category.daase-win32 to ${WIN32CENTER}/category.daase
	@ mv ${MID}/win32/category.daase-win32 ${WIN32CENTER}/category.daase
	@ echo moving ${MID}/operation.daase-win32 to ${WIN32CENTER}/operation.daase
	@ mv ${MID}/win32/operation.daase-win32 ${WIN32CENTER}/operation.daase
	@ echo installing libdb.text
	@ mv ${MID}/win32/libdb.text ${WIN32CENTER}
	@ echo installing comdb.text
	@ mv ${MID}/win32/comdb.text ${WIN32CENTER}
#	@ echo installing glosskey.text
#	@ mv ${MID}/win32/glosskey.text ${WIN32CENTER}
#	@ echo installing glossdef.text
#	@ mv ${MID}/win32/glossdef.text ${WIN32CENTER}

ibits.as:	${MID}/ibits.nrlib/ibits.l
	@echo building ${MID}/ibits.o from ibits.as
	@( cd ${MID} ; \
	   rm -rf ibits.nrlib ; \
	   mkdir ibits.nrlib ; \
	   cd ibits.nrlib ; \
	   asharp -Fl -Fasy ${SRC}/ibits.as )

@
\section{Generic Make Rules}
The idea is to use generic rules to try to cut down the size of this file.

It seems that these kind of rules should work. They will under normal
circumstances such as changing a file.spad.pamphlet file. However there 
is a subtle bug with these rules. This Makefile works very hard to cache
intermediate results in order to minimize the re-build time. The cached
files are kept in the [[int]] or [[obj]] directories. If one of these
files disappears but the original pamphlet file is unchanged we only
need to rebuild the intermediate file. These rule will attempt to do
that and they succeed. However, they also try to remove the NRLIB
directory and fail, causing the [[make]] to fail. If you believe that
you can get around this problem you need to test all possible combinations
of missing files in order to ensure that the [[make]] succeeds in all cases.

<<genericDotOfiles>>=
${OUT}/%.o: ${MID}/%.NRLIB
	@ echo generic 1 -- making ${OUT}/$*.o from ${MID}/$*.NRLIB
	@ echo cp ${MID}/$*.NRLIB/code.o ${OUT}/$*.o
	@ cp ${MID}/$*.NRLIB/code.o ${OUT}/$*.o

@ 
<<genericNRLIBfiles>>=
${MID}/%.NRLIB: ${MID}/%.spad
	@ echo generic 2 -- making ${MID}/$*.NRLIB from ${MID}/$*.spad
	@ echo ")co $*.spad" 
	@ (cd ${MID} ; echo ")co $*.spad" | ${INTERPSYS} )

@ 
This chunk is not used due to the problem explained above. It is left
here so the bug is not repeated by others.
<<genericRules>>=
<<genericDotOfiles>>
<<genericNRLIBfiles>>

@
\section{The databases}
This stanza is ``guarded'' by the file called [[${INT}/algebra/dbcomplete]].
The first time the system is built this file does not exist. After the
databases have been built this file is created. If the system is built a
again and this file exists then the databases are not rebuilt. Every stanza
that changes the algebra files also removes the [[dbcomplete]] file which
will cause the algebra to rebuild.
<<dbcomplete>>=
${INT}/algebra/dbcomplete:
	@ echo 4301 rebuilding databases...
	@ cp ${SRC}/doc/gloss.text ${MID}
	@ cp ${SRC}/doc/gloss.text ${OUT}
	@ cp ${SRC}/doc/topics.data ${MID}
	@ cp ${SRC}/doc/topics.data ${OUT}
	@ (cd ${MID} ; echo ')lisp (make-databases "" nil)' | ${INTERPSYS} )
	@ cp ${MID}/*.daase ${OUT}
	@ echo "databases up to date" >${INT}/algebra/dbcomplete

@
<<*>>=

<<environment>>

<<layer0 bootstrap>>
<<layer0 copy>>
<<layer0>> 
<<layer1>>
<<layer2>>
<<layer3>>
<<layer4>>
<<layer5>>
<<layer6>>
<<layer7>>
<<layer8>>
<<layer9>>
<<layer10>>
<<layer11>>
<<layer12>>
<<layer13>>
<<layer14>>
<<layer15>>
<<layer16>>
<<layer17>>
<<layer18>>
<<layer19>>
<<layer20>>
<<layer21>>
<<layer22>>
<<layer23>>
<<USERLAYER>>
<<order>>

all: src ${INT}/algebra/dbcomplete ${DOCFILES}
	@ echo 4302 finished ${IN}

#all:	${SUBPART}

everything: check lib db cmd gloss
	@ echo 4303 invoking make in `pwd` with parms:
	@ echo SYS= ${SYS} LSP= ${LSP} PART= ${PART} SUBPART= ${SUBPART}
	@ echo SPAD= ${SPAD} SRC= ${SRC} INT= ${INT}
	@ echo OBJ= ${OBJ} MNT= ${MNT} O=${O} LISP=${LISP} BYE=${BYE}

#src:	${AS}
src:	${SPADFILES} ${ORDER}
	@ echo 4304 Building NRLIBS from spad sources

#	@ (cd ${MID} ; \
#	   echo '(progn (let ((*package* (find-package "BOOT"))) (boot::makespad "${MID}" "${MID}" "${LISP}")) (${BYE}))' | ${DEPSYS} )

<<dbcomplete>>

check:
	@ echo 4305 Checking that INTERP.EXPOSED and NRLIBs are consistent
	@ echo 4306 libcheck needs to use exposed.lsp, not INTERP.EXPOSED
#	@ (cd ${MID} ; \
#           echo '(progn (let ((*package* (find-package "BOOT"))) (boot::libcheck "${IN}" "${MID}" "${OUT}" "${MAIL}")) (${BYE}))' | ${DEPSYS} )


document: ${DOCFILES}


<<ACPLOT.o (O from NRLIB)>>
<<ACPLOT.NRLIB (NRLIB from MID)>>
<<ACPLOT.spad (SPAD from IN)>>

<<REALSOLV.o (O from NRLIB)>>
<<REALSOLV.NRLIB (NRLIB from MID)>>
<<REALSOLV.spad (SPAD from IN)>>

<<acplot.spad (SPAD from IN)>>
<<acplot.spad.dvi (DOC from IN)>>

<<FLAGG2.o (O from NRLIB)>>
<<FLAGG2.NRLIB (NRLIB from MID)>>
<<FLAGG2.spad (SPAD from IN)>>

<<FSAGG2.o (O from NRLIB)>>
<<FSAGG2.NRLIB (NRLIB from MID)>>
<<FSAGG2.spad (SPAD from IN)>>

<<aggcat2.spad (SPAD from IN)>>
<<aggcat2.spad.dvi (DOC from IN)>>

<<ALAGG.o (O from NRLIB)>>
<<ALAGG.NRLIB (NRLIB from MID)>>
<<ALAGG.spad (SPAD from IN)>>
<<ALAGG.o (BOOTSTRAP from MID)>>
<<ALAGG.lsp (LISP from IN)>>

<<A1AGG-.o (O from NRLIB)>>
<<A1AGG-.NRLIB (NRLIB from MID)>>
<<A1AGG.o (O from NRLIB)>>
<<A1AGG.NRLIB (NRLIB from MID)>>
<<A1AGG.spad (SPAD from IN)>>

<<AGG-.o (O from NRLIB)>>
<<AGG-.NRLIB (NRLIB from MID)>>
<<AGG.o (O from NRLIB)>>
<<AGG.NRLIB (NRLIB from MID)>>
<<AGG.spad (SPAD from IN)>>

<<BGAGG-.o (O from NRLIB)>>
<<BGAGG-.NRLIB (NRLIB from MID)>>
<<BGAGG.o (O from NRLIB)>>
<<BGAGG.NRLIB (NRLIB from MID)>>
<<BGAGG.spad (SPAD from IN)>>

<<BTAGG-.o (O from NRLIB)>>
<<BTAGG-.NRLIB (NRLIB from MID)>>
<<BTAGG.o (O from NRLIB)>>
<<BTAGG.NRLIB (NRLIB from MID)>>
<<BTAGG.spad (SPAD from IN)>>

<<BRAGG-.o (O from NRLIB)>>
<<BRAGG-.NRLIB (NRLIB from MID)>>
<<BRAGG.o (O from NRLIB)>>
<<BRAGG.NRLIB (NRLIB from MID)>>
<<BRAGG.spad (SPAD from IN)>>

<<CLAGG-.o (O from NRLIB)>>
<<CLAGG-.NRLIB (NRLIB from MID)>>
<<CLAGG.o (O from NRLIB)>>
<<CLAGG.NRLIB (NRLIB from MID)>>
<<CLAGG.spad (SPAD from IN)>>
<<CLAGG-.o (BOOTSTRAP from MID)>>
<<CLAGG-.lsp (LISP from IN)>>
<<CLAGG.o (BOOTSTRAP from MID)>>
<<CLAGG.lsp (LISP from IN)>>

<<DIAGG-.o (O from NRLIB)>>
<<DIAGG-.NRLIB (NRLIB from MID)>>
<<DIAGG.o (O from NRLIB)>>
<<DIAGG.NRLIB (NRLIB from MID)>>
<<DIAGG.spad (SPAD from IN)>>

<<DIOPS-.o (O from NRLIB)>>
<<DIOPS-.NRLIB (NRLIB from MID)>>
<<DIOPS.o (O from NRLIB)>>
<<DIOPS.NRLIB (NRLIB from MID)>>
<<DIOPS.spad (SPAD from IN)>>

<<DLAGG.o (O from NRLIB)>>
<<DLAGG.NRLIB (NRLIB from MID)>>
<<DLAGG.spad (SPAD from IN)>>

<<DQAGG.o (O from NRLIB)>>
<<DQAGG.NRLIB (NRLIB from MID)>>
<<DQAGG.spad (SPAD from IN)>>

<<ELAGG-.o (O from NRLIB)>>
<<ELAGG-.NRLIB (NRLIB from MID)>>
<<ELAGG.o (O from NRLIB)>>
<<ELAGG.NRLIB (NRLIB from MID)>>
<<ELAGG.spad (SPAD from IN)>>

<<ELTAGG-.o (O from NRLIB)>>
<<ELTAGG-.NRLIB (NRLIB from MID)>>
<<ELTAGG.o (O from NRLIB)>>
<<ELTAGG.NRLIB (NRLIB from MID)>>
<<ELTAGG.spad (SPAD from IN)>>

<<ELTAB.o (O from NRLIB)>>
<<ELTAB.NRLIB (NRLIB from MID)>>
<<ELTAB.spad (SPAD from IN)>>

<<FLAGG-.o (O from NRLIB)>>
<<FLAGG-.NRLIB (NRLIB from MID)>>
<<FLAGG.o (O from NRLIB)>>
<<FLAGG.NRLIB (NRLIB from MID)>>
<<FLAGG.spad (SPAD from IN)>>

<<FSAGG-.o (O from NRLIB)>>
<<FSAGG-.NRLIB (NRLIB from MID)>>
<<FSAGG.o (O from NRLIB)>>
<<FSAGG.NRLIB (NRLIB from MID)>>
<<FSAGG.spad (SPAD from IN)>>

<<MSETAGG.o (O from NRLIB)>>
<<MSETAGG.NRLIB (NRLIB from MID)>>
<<MSETAGG.spad (SPAD from IN)>>

<<HOAGG-.o (O from NRLIB)>>
<<HOAGG-.NRLIB (NRLIB from MID)>>
<<HOAGG.o (O from NRLIB)>>
<<HOAGG.NRLIB (NRLIB from MID)>>
<<HOAGG.spad (SPAD from IN)>>
<<HOAGG-.o (BOOTSTRAP from MID)>>
<<HOAGG-.lsp (LISP from IN)>>
<<HOAGG.o (BOOTSTRAP from MID)>>
<<HOAGG.lsp (LISP from IN)>>

<<IXAGG-.o (O from NRLIB)>>
<<IXAGG-.NRLIB (NRLIB from MID)>>
<<IXAGG.o (O from NRLIB)>>
<<IXAGG.NRLIB (NRLIB from MID)>>
<<IXAGG.spad (SPAD from IN)>>

<<KDAGG-.o (O from NRLIB)>>
<<KDAGG-.NRLIB (NRLIB from MID)>>
<<KDAGG.o (O from NRLIB)>>
<<KDAGG.NRLIB (NRLIB from MID)>>
<<KDAGG.spad (SPAD from IN)>>

<<LNAGG-.o (O from NRLIB)>>
<<LNAGG-.NRLIB (NRLIB from MID)>>
<<LNAGG.o (O from NRLIB)>>
<<LNAGG.NRLIB (NRLIB from MID)>>
<<LNAGG.spad (SPAD from IN)>>
<<LNAGG-.o (BOOTSTRAP from MID)>>
<<LNAGG-.lsp (LISP from IN)>>
<<LNAGG.o (BOOTSTRAP from MID)>>
<<LNAGG.lsp (LISP from IN)>>

<<LSAGG-.o (O from NRLIB)>>
<<LSAGG-.NRLIB (NRLIB from MID)>>
<<LSAGG.o (O from NRLIB)>>
<<LSAGG.NRLIB (NRLIB from MID)>>
<<LSAGG.spad (SPAD from IN)>>
<<LSAGG-.o (BOOTSTRAP from MID)>>
<<LSAGG-.lsp (LISP from IN)>>
<<LSAGG.o (BOOTSTRAP from MID)>>
<<LSAGG.lsp (LISP from IN)>>

<<MDAGG.o (O from NRLIB)>>
<<MDAGG.NRLIB (NRLIB from MID)>>
<<MDAGG.spad (SPAD from IN)>>

<<OMSAGG.o (O from NRLIB)>>
<<OMSAGG.NRLIB (NRLIB from MID)>>
<<OMSAGG.spad (SPAD from IN)>>

<<PRQAGG.o (O from NRLIB)>>
<<PRQAGG.NRLIB (NRLIB from MID)>>
<<PRQAGG.spad (SPAD from IN)>>

<<QUAGG.o (O from NRLIB)>>
<<QUAGG.NRLIB (NRLIB from MID)>>
<<QUAGG.spad (SPAD from IN)>>

<<RCAGG-.o (O from NRLIB)>>
<<RCAGG-.NRLIB (NRLIB from MID)>>
<<RCAGG.o (O from NRLIB)>>
<<RCAGG.NRLIB (NRLIB from MID)>>
<<RCAGG.spad (SPAD from IN)>>
<<RCAGG-.o (BOOTSTRAP from MID)>>
<<RCAGG-.lsp (LISP from IN)>>
<<RCAGG.o (BOOTSTRAP from MID)>>
<<RCAGG.lsp (LISP from IN)>>

<<SETAGG-.o (O from NRLIB)>>
<<SETAGG-.NRLIB (NRLIB from MID)>>
<<SETAGG.o (O from NRLIB)>>
<<SETAGG.NRLIB (NRLIB from MID)>>
<<SETAGG.spad (SPAD from IN)>>
<<SETAGG-.o (BOOTSTRAP from MID)>>
<<SETAGG-.lsp (LISP from IN)>>
<<SETAGG.o (BOOTSTRAP from MID)>>
<<SETAGG.lsp (LISP from IN)>>

<<SKAGG.o (O from NRLIB)>>
<<SKAGG.NRLIB (NRLIB from MID)>>
<<SKAGG.spad (SPAD from IN)>>

<<SRAGG-.o (O from NRLIB)>>
<<SRAGG-.NRLIB (NRLIB from MID)>>
<<SRAGG.o (O from NRLIB)>>
<<SRAGG.NRLIB (NRLIB from MID)>>
<<SRAGG.spad (SPAD from IN)>>

<<STAGG-.o (O from NRLIB)>>
<<STAGG-.NRLIB (NRLIB from MID)>>
<<STAGG.o (O from NRLIB)>>
<<STAGG.NRLIB (NRLIB from MID)>>
<<STAGG.spad (SPAD from IN)>>
<<STAGG-.o (BOOTSTRAP from MID)>>
<<STAGG-.lsp (LISP from IN)>>
<<STAGG.o (BOOTSTRAP from MID)>>
<<STAGG.lsp (LISP from IN)>>

<<TBAGG-.o (O from NRLIB)>>
<<TBAGG-.NRLIB (NRLIB from MID)>>
<<TBAGG.o (O from NRLIB)>>
<<TBAGG.NRLIB (NRLIB from MID)>>
<<TBAGG.spad (SPAD from IN)>>

<<URAGG-.o (O from NRLIB)>>
<<URAGG-.NRLIB (NRLIB from MID)>>
<<URAGG.o (O from NRLIB)>>
<<URAGG.NRLIB (NRLIB from MID)>>
<<URAGG.spad (SPAD from IN)>>
<<URAGG-.o (BOOTSTRAP from MID)>>
<<URAGG-.lsp (LISP from IN)>>
<<URAGG.o (BOOTSTRAP from MID)>>
<<URAGG.lsp (LISP from IN)>>

<<aggcat.spad (SPAD from IN)>>
<<aggcat.spad.dvi (DOC from IN)>>

<<CPIMA.o (O from NRLIB)>>
<<CPIMA.NRLIB (NRLIB from MID)>>
<<CPIMA.spad (SPAD from IN)>>

<<FINRALG-.o (O from NRLIB)>>
<<FINRALG-.NRLIB (NRLIB from MID)>>
<<FINRALG.o (O from NRLIB)>>
<<FINRALG.NRLIB (NRLIB from MID)>>
<<FINRALG.spad (SPAD from IN)>>

<<FRAMALG-.o (O from NRLIB)>>
<<FRAMALG-.NRLIB (NRLIB from MID)>>
<<FRAMALG.o (O from NRLIB)>>
<<FRAMALG.NRLIB (NRLIB from MID)>>
<<FRAMALG.spad (SPAD from IN)>>

<<MONOGEN-.o (O from NRLIB)>>
<<MONOGEN-.NRLIB (NRLIB from MID)>>
<<MONOGEN.o (O from NRLIB)>>
<<MONOGEN.NRLIB (NRLIB from MID)>>
<<MONOGEN.spad (SPAD from IN)>>

<<NORMMA.o (O from NRLIB)>>
<<NORMMA.NRLIB (NRLIB from MID)>>
<<NORMMA.spad (SPAD from IN)>>

<<algcat.spad (SPAD from IN)>>
<<algcat.spad.dvi (DOC from IN)>>

<<SAE.o (O from NRLIB)>>
<<SAE.NRLIB (NRLIB from MID)>>
<<SAE.spad (SPAD from IN)>>

<<algext.spad (SPAD from IN)>>
<<algext.spad.dvi (DOC from IN)>>

<<ALGFACT.o (O from NRLIB)>>
<<ALGFACT.NRLIB (NRLIB from MID)>>
<<ALGFACT.spad (SPAD from IN)>>

<<IALGFACT.o (O from NRLIB)>>
<<IALGFACT.NRLIB (NRLIB from MID)>>
<<IALGFACT.spad (SPAD from IN)>>

<<RFFACT.o (O from NRLIB)>>
<<RFFACT.NRLIB (NRLIB from MID)>>
<<RFFACT.spad (SPAD from IN)>>

<<SAEFACT.o (O from NRLIB)>>
<<SAEFACT.NRLIB (NRLIB from MID)>>
<<SAEFACT.spad (SPAD from IN)>>

<<SAERFFC.o (O from NRLIB)>>
<<SAERFFC.NRLIB (NRLIB from MID)>>
<<SAERFFC.spad (SPAD from IN)>>

<<algfact.spad (SPAD from IN)>>
<<algfact.spad.dvi (DOC from IN)>>

<<ACF-.o (O from NRLIB)>>
<<ACF-.NRLIB (NRLIB from MID)>>
<<ACF.o (O from NRLIB)>>
<<ACF.NRLIB (NRLIB from MID)>>
<<ACF.spad (SPAD from IN)>>

<<ACFS-.o (O from NRLIB)>>
<<ACFS-.NRLIB (NRLIB from MID)>>
<<ACFS.o (O from NRLIB)>>
<<ACFS.NRLIB (NRLIB from MID)>>
<<ACFS.spad (SPAD from IN)>>

<<AF.o (O from NRLIB)>>
<<AF.NRLIB (NRLIB from MID)>>
<<AF.spad (SPAD from IN)>>

<<algfunc.spad (SPAD from IN)>>
<<algfunc.spad.dvi (DOC from IN)>>

<<GENMFACT.o (O from NRLIB)>>
<<GENMFACT.NRLIB (NRLIB from MID)>>
<<GENMFACT.spad (SPAD from IN)>>

<<MPCPF.o (O from NRLIB)>>
<<MPCPF.NRLIB (NRLIB from MID)>>
<<MPCPF.spad (SPAD from IN)>>

<<MPRFF.o (O from NRLIB)>>
<<MPRFF.NRLIB (NRLIB from MID)>>
<<MPRFF.spad (SPAD from IN)>>

<<MRATFAC.o (O from NRLIB)>>
<<MRATFAC.NRLIB (NRLIB from MID)>>
<<MRATFAC.spad (SPAD from IN)>>

<<RFFACTOR.o (O from NRLIB)>>
<<RFFACTOR.NRLIB (NRLIB from MID)>>
<<RFFACTOR.spad (SPAD from IN)>>

<<SUPFRACF.o (O from NRLIB)>>
<<SUPFRACF.NRLIB (NRLIB from MID)>>
<<SUPFRACF.spad (SPAD from IN)>>

<<allfact.spad (SPAD from IN)>>
<<allfact.spad.dvi (DOC from IN)>>

<<DBASE.o (O from NRLIB)>>
<<DBASE.NRLIB (NRLIB from MID)>>
<<DBASE.spad (SPAD from IN)>>

<<DLIST.o (O from NRLIB)>>
<<DLIST.NRLIB (NRLIB from MID)>>
<<DLIST.spad (SPAD from IN)>>

<<ICARD.o (O from NRLIB)>>
<<ICARD.NRLIB (NRLIB from MID)>>
<<ICARD.spad (SPAD from IN)>>

<<MTHING.o (O from NRLIB)>>
<<MTHING.NRLIB (NRLIB from MID)>>
<<MTHING.spad (SPAD from IN)>>

<<OPQUERY.o (O from NRLIB)>>
<<OPQUERY.NRLIB (NRLIB from MID)>>
<<OPQUERY.spad (SPAD from IN)>>

<<QEQUAT.o (O from NRLIB)>>
<<QEQUAT.NRLIB (NRLIB from MID)>>
<<QEQUAT.spad (SPAD from IN)>>

<<alql.spad (SPAD from IN)>>
<<alql.spad.dvi (DOC from IN)>>

<<NIPROB.o (O from NRLIB)>>
<<NIPROB.NRLIB (NRLIB from MID)>>
<<NIPROB.spad (SPAD from IN)>>

<<NUMINT.o (O from NRLIB)>>
<<NUMINT.NRLIB (NRLIB from MID)>>
<<NUMINT.spad (SPAD from IN)>>

<<ODECAT.o (O from NRLIB)>>
<<ODECAT.NRLIB (NRLIB from MID)>>
<<ODECAT.spad (SPAD from IN)>>

<<ODEPROB.o (O from NRLIB)>>
<<ODEPROB.NRLIB (NRLIB from MID)>>
<<ODEPROB.spad (SPAD from IN)>>

<<OPTPROB.o (O from NRLIB)>>
<<OPTPROB.NRLIB (NRLIB from MID)>>
<<OPTPROB.spad (SPAD from IN)>>

<<PDECAT.o (O from NRLIB)>>
<<PDECAT.NRLIB (NRLIB from MID)>>
<<PDECAT.spad (SPAD from IN)>>

<<PDEPROB.o (O from NRLIB)>>
<<PDEPROB.NRLIB (NRLIB from MID)>>
<<PDEPROB.spad (SPAD from IN)>>

<<OPTCAT.o (O from NRLIB)>>
<<OPTCAT.NRLIB (NRLIB from MID)>>
<<OPTCAT.spad (SPAD from IN)>>

<<annacat.spad (SPAD from IN)>>
<<annacat.spad.dvi (DOC from IN)>>

<<ANY.o (O from NRLIB)>>
<<ANY.NRLIB (NRLIB from MID)>>
<<ANY.spad (SPAD from IN)>>

<<ANY1.o (O from NRLIB)>>
<<ANY1.NRLIB (NRLIB from MID)>>
<<ANY1.spad (SPAD from IN)>>

<<NONE1.o (O from NRLIB)>>
<<NONE1.NRLIB (NRLIB from MID)>>
<<NONE1.spad (SPAD from IN)>>

<<NONE.o (O from NRLIB)>>
<<NONE.NRLIB (NRLIB from MID)>>
<<NONE.spad (SPAD from IN)>>

<<any.spad (SPAD from IN)>>
<<any.spad.dvi (DOC from IN)>>

<<ARRAY1.o (O from NRLIB)>>
<<ARRAY1.NRLIB (NRLIB from MID)>>
<<ARRAY1.spad (SPAD from IN)>>

<<ARRAY12.o (O from NRLIB)>>
<<ARRAY12.NRLIB (NRLIB from MID)>>
<<ARRAY12.spad (SPAD from IN)>>

<<FARRAY.o (O from NRLIB)>>
<<FARRAY.NRLIB (NRLIB from MID)>>
<<FARRAY.spad (SPAD from IN)>>

<<IARRAY1.o (O from NRLIB)>>
<<IARRAY1.NRLIB (NRLIB from MID)>>
<<IARRAY1.spad (SPAD from IN)>>

<<IFARRAY.o (O from NRLIB)>>
<<IFARRAY.NRLIB (NRLIB from MID)>>
<<IFARRAY.spad (SPAD from IN)>>

<<PRIMARR.o (O from NRLIB)>>
<<PRIMARR.NRLIB (NRLIB from MID)>>
<<PRIMARR.spad (SPAD from IN)>>
<<PRIMARR.o (BOOTSTRAP from MID)>>
<<PRIMARR.lsp (LISP from IN)>>

<<PRIMARR2.o (O from NRLIB)>>
<<PRIMARR2.NRLIB (NRLIB from MID)>>
<<PRIMARR2.spad (SPAD from IN)>>

<<TUPLE.o (O from NRLIB)>>
<<TUPLE.NRLIB (NRLIB from MID)>>
<<TUPLE.spad (SPAD from IN)>>

<<array1.spad (SPAD from IN)>>
<<array1.spad.dvi (DOC from IN)>>

<<ARRAY2.o (O from NRLIB)>>
<<ARRAY2.NRLIB (NRLIB from MID)>>
<<ARRAY2.spad (SPAD from IN)>>

<<ARR2CAT-.o (O from NRLIB)>>
<<ARR2CAT-.NRLIB (NRLIB from MID)>>
<<ARR2CAT.o (O from NRLIB)>>
<<ARR2CAT.NRLIB (NRLIB from MID)>>
<<ARR2CAT.spad (SPAD from IN)>>

<<IARRAY2.o (O from NRLIB)>>
<<IARRAY2.NRLIB (NRLIB from MID)>>
<<IARRAY2.spad (SPAD from IN)>>

<<IIARRAY2.o (O from NRLIB)>>
<<IIARRAY2.NRLIB (NRLIB from MID)>>
<<IIARRAY2.spad (SPAD from IN)>>

<<array2.spad (SPAD from IN)>>
<<array2.spad.dvi (DOC from IN)>>

<<ASP1.o (O from NRLIB)>>
<<ASP1.NRLIB (NRLIB from MID)>>
<<ASP1.spad (SPAD from IN)>>

<<ASP10.o (O from NRLIB)>>
<<ASP10.NRLIB (NRLIB from MID)>>
<<ASP10.spad (SPAD from IN)>>

<<ASP12.o (O from NRLIB)>>
<<ASP12.NRLIB (NRLIB from MID)>>
<<ASP12.spad (SPAD from IN)>>

<<ASP19.o (O from NRLIB)>>
<<ASP19.NRLIB (NRLIB from MID)>>
<<ASP19.spad (SPAD from IN)>>

<<ASP20.o (O from NRLIB)>>
<<ASP20.NRLIB (NRLIB from MID)>>
<<ASP20.spad (SPAD from IN)>>

<<ASP24.o (O from NRLIB)>>
<<ASP24.NRLIB (NRLIB from MID)>>
<<ASP24.spad (SPAD from IN)>>

<<ASP27.o (O from NRLIB)>>
<<ASP27.NRLIB (NRLIB from MID)>>
<<ASP27.spad (SPAD from IN)>>

<<ASP28.o (O from NRLIB)>>
<<ASP28.NRLIB (NRLIB from MID)>>
<<ASP28.spad (SPAD from IN)>>

<<ASP29.o (O from NRLIB)>>
<<ASP29.NRLIB (NRLIB from MID)>>
<<ASP29.spad (SPAD from IN)>>

<<ASP30.o (O from NRLIB)>>
<<ASP30.NRLIB (NRLIB from MID)>>
<<ASP30.spad (SPAD from IN)>>

<<ASP31.o (O from NRLIB)>>
<<ASP31.NRLIB (NRLIB from MID)>>
<<ASP31.spad (SPAD from IN)>>

<<ASP33.o (O from NRLIB)>>
<<ASP33.NRLIB (NRLIB from MID)>>
<<ASP33.spad (SPAD from IN)>>

<<ASP34.o (O from NRLIB)>>
<<ASP34.NRLIB (NRLIB from MID)>>
<<ASP34.spad (SPAD from IN)>>

<<ASP35.o (O from NRLIB)>>
<<ASP35.NRLIB (NRLIB from MID)>>
<<ASP35.spad (SPAD from IN)>>

<<ASP4.o (O from NRLIB)>>
<<ASP4.NRLIB (NRLIB from MID)>>
<<ASP4.spad (SPAD from IN)>>

<<ASP41.o (O from NRLIB)>>
<<ASP41.NRLIB (NRLIB from MID)>>
<<ASP41.spad (SPAD from IN)>>

<<ASP42.o (O from NRLIB)>>
<<ASP42.NRLIB (NRLIB from MID)>>
<<ASP42.spad (SPAD from IN)>>

<<ASP49.o (O from NRLIB)>>
<<ASP49.NRLIB (NRLIB from MID)>>
<<ASP49.spad (SPAD from IN)>>

<<ASP50.o (O from NRLIB)>>
<<ASP50.NRLIB (NRLIB from MID)>>
<<ASP50.spad (SPAD from IN)>>

<<ASP55.o (O from NRLIB)>>
<<ASP55.NRLIB (NRLIB from MID)>>
<<ASP55.spad (SPAD from IN)>>

<<ASP6.o (O from NRLIB)>>
<<ASP6.NRLIB (NRLIB from MID)>>
<<ASP6.spad (SPAD from IN)>>

<<ASP7.o (O from NRLIB)>>
<<ASP7.NRLIB (NRLIB from MID)>>
<<ASP7.spad (SPAD from IN)>>

<<ASP73.o (O from NRLIB)>>
<<ASP73.NRLIB (NRLIB from MID)>>
<<ASP73.spad (SPAD from IN)>>

<<ASP74.o (O from NRLIB)>>
<<ASP74.NRLIB (NRLIB from MID)>>
<<ASP74.spad (SPAD from IN)>>

<<ASP77.o (O from NRLIB)>>
<<ASP77.NRLIB (NRLIB from MID)>>
<<ASP77.spad (SPAD from IN)>>

<<ASP78.o (O from NRLIB)>>
<<ASP78.NRLIB (NRLIB from MID)>>
<<ASP78.spad (SPAD from IN)>>

<<ASP8.o (O from NRLIB)>>
<<ASP8.NRLIB (NRLIB from MID)>>
<<ASP8.spad (SPAD from IN)>>

<<ASP80.o (O from NRLIB)>>
<<ASP80.NRLIB (NRLIB from MID)>>
<<ASP80.spad (SPAD from IN)>>

<<ASP9.o (O from NRLIB)>>
<<ASP9.NRLIB (NRLIB from MID)>>
<<ASP9.spad (SPAD from IN)>>

<<asp.spad (SPAD from IN)>>
<<asp.spad.dvi (DOC from IN)>>

<<ATTREG.o (O from NRLIB)>>
<<ATTREG.NRLIB (NRLIB from MID)>>
<<ATTREG.spad (SPAD from IN)>>

<<attreg.spad (SPAD from IN)>>
<<attreg.spad.dvi (DOC from IN)>>

<<axtimer.as (SPAD from IN)>>
<<axtimer.as.dvi (DOC from IN)>>

<<ASTACK.o (O from NRLIB)>>
<<ASTACK.NRLIB (NRLIB from MID)>>
<<ASTACK.spad (SPAD from IN)>>

<<DEQUEUE.o (O from NRLIB)>>
<<DEQUEUE.NRLIB (NRLIB from MID)>>
<<DEQUEUE.spad (SPAD from IN)>>

<<HEAP.o (O from NRLIB)>>
<<HEAP.NRLIB (NRLIB from MID)>>
<<HEAP.spad (SPAD from IN)>>

<<QUEUE.o (O from NRLIB)>>
<<QUEUE.NRLIB (NRLIB from MID)>>
<<QUEUE.spad (SPAD from IN)>>

<<STACK.o (O from NRLIB)>>
<<STACK.NRLIB (NRLIB from MID)>>
<<STACK.spad (SPAD from IN)>>

<<bags.spad (SPAD from IN)>>
<<bags.spad.dvi (DOC from IN)>>

<<BEZOUT.o (O from NRLIB)>>
<<BEZOUT.NRLIB (NRLIB from MID)>>
<<BEZOUT.spad (SPAD from IN)>>

<<bezout.spad (SPAD from IN)>>
<<bezout.spad.dvi (DOC from IN)>>

<<BITS.o (O from NRLIB)>>
<<BITS.NRLIB (NRLIB from MID)>>
<<BITS.spad (SPAD from IN)>>

<<BOOLEAN.o (O from NRLIB)>>
<<BOOLEAN.NRLIB (NRLIB from MID)>>
<<BOOLEAN.spad (SPAD from IN)>>
<<BOOLEAN.o (BOOTSTRAP from MID)>>
<<BOOLEAN.lsp (LISP from IN)>>

<<IBITS.o (O from NRLIB)>>
<<IBITS.NRLIB (NRLIB from MID)>>
<<IBITS.spad (SPAD from IN)>>

<<LOGIC-.o (O from NRLIB)>>
<<LOGIC-.NRLIB (NRLIB from MID)>>
<<LOGIC.o (O from NRLIB)>>
<<LOGIC.NRLIB (NRLIB from MID)>>
<<LOGIC.spad (SPAD from IN)>>

<<REF.o (O from NRLIB)>>
<<REF.NRLIB (NRLIB from MID)>>
<<REF.spad (SPAD from IN)>>
<<REF.o (BOOTSTRAP from MID)>>
<<REF.lsp (LISP from IN)>>

<<boolean.spad (SPAD from IN)>>
<<boolean.spad.dvi (DOC from IN)>>

<<BRILL.o (O from NRLIB)>>
<<BRILL.NRLIB (NRLIB from MID)>>
<<BRILL.spad (SPAD from IN)>>

<<brill.spad (SPAD from IN)>>
<<brill.spad.dvi (DOC from IN)>>

<<NAGC02.o (O from NRLIB)>>
<<NAGC02.NRLIB (NRLIB from MID)>>
<<NAGC02.spad (SPAD from IN)>>

<<c02.spad (SPAD from IN)>>
<<c02.spad.dvi (DOC from IN)>>

<<NAGC05.o (O from NRLIB)>>
<<NAGC05.NRLIB (NRLIB from MID)>>
<<NAGC05.spad (SPAD from IN)>>

<<c05.spad (SPAD from IN)>>
<<c05.spad.dvi (DOC from IN)>>

<<NAGC06.o (O from NRLIB)>>
<<NAGC06.NRLIB (NRLIB from MID)>>
<<NAGC06.spad (SPAD from IN)>>

<<c06.spad (SPAD from IN)>>
<<c06.spad.dvi (DOC from IN)>>

<<CARD.o (O from NRLIB)>>
<<CARD.NRLIB (NRLIB from MID)>>
<<CARD.spad (SPAD from IN)>>

<<card.spad (SPAD from IN)>>
<<card.spad.dvi (DOC from IN)>>

<<CARTEN.o (O from NRLIB)>>
<<CARTEN.NRLIB (NRLIB from MID)>>
<<CARTEN.spad (SPAD from IN)>>

<<CARTEN2.o (O from NRLIB)>>
<<CARTEN2.NRLIB (NRLIB from MID)>>
<<CARTEN2.spad (SPAD from IN)>>

<<GRALG-.o (O from NRLIB)>>
<<GRALG-.NRLIB (NRLIB from MID)>>
<<GRALG.o (O from NRLIB)>>
<<GRALG.NRLIB (NRLIB from MID)>>
<<GRALG.spad (SPAD from IN)>>

<<GRMOD-.o (O from NRLIB)>>
<<GRMOD-.NRLIB (NRLIB from MID)>>
<<GRMOD.o (O from NRLIB)>>
<<GRMOD.NRLIB (NRLIB from MID)>>
<<GRMOD.spad (SPAD from IN)>>

<<carten.spad (SPAD from IN)>>
<<carten.spad.dvi (DOC from IN)>>

<<ABELGRP-.o (O from NRLIB)>>
<<ABELGRP-.NRLIB (NRLIB from MID)>>
<<ABELGRP.o (O from NRLIB)>>
<<ABELGRP.NRLIB (NRLIB from MID)>>
<<ABELGRP.spad (SPAD from IN)>>
<<ABELGRP-.o (BOOTSTRAP from MID)>>
<<ABELGRP-.lsp (LISP from IN)>>
<<ABELGRP.o (BOOTSTRAP from MID)>>
<<ABELGRP.lsp (LISP from IN)>>

<<ABELMON-.o (O from NRLIB)>>
<<ABELMON-.NRLIB (NRLIB from MID)>>
<<ABELMON.o (O from NRLIB)>>
<<ABELMON.NRLIB (NRLIB from MID)>>
<<ABELMON.spad (SPAD from IN)>>
<<ABELMON-.o (BOOTSTRAP from MID)>>
<<ABELMON-.lsp (LISP from IN)>>
<<ABELMON.o (BOOTSTRAP from MID)>>
<<ABELMON.lsp (LISP from IN)>>

<<ABELSG-.o (O from NRLIB)>>
<<ABELSG-.NRLIB (NRLIB from MID)>>
<<ABELSG.o (O from NRLIB)>>
<<ABELSG.NRLIB (NRLIB from MID)>>
<<ABELSG.spad (SPAD from IN)>>
<<ABELSG-.o (BOOTSTRAP from MID)>>
<<ABELSG-.lsp (LISP from IN)>>
<<ABELSG.o (BOOTSTRAP from MID)>>
<<ABELSG.lsp (LISP from IN)>>

<<ALGEBRA-.o (O from NRLIB)>>
<<ALGEBRA-.NRLIB (NRLIB from MID)>>
<<ALGEBRA.o (O from NRLIB)>>
<<ALGEBRA.NRLIB (NRLIB from MID)>>
<<ALGEBRA.spad (SPAD from IN)>>

<<BASTYPE-.o (O from NRLIB)>>
<<BASTYPE-.NRLIB (NRLIB from MID)>>
<<BASTYPE.o (O from NRLIB)>>
<<BASTYPE.NRLIB (NRLIB from MID)>>
<<BASTYPE.spad (SPAD from IN)>>

<<BMODULE.o (O from NRLIB)>>
<<BMODULE.NRLIB (NRLIB from MID)>>
<<BMODULE.spad (SPAD from IN)>>

<<CABMON.o (O from NRLIB)>>
<<CABMON.NRLIB (NRLIB from MID)>>
<<CABMON.spad (SPAD from IN)>>
<<CABMON.o (BOOTSTRAP from MID)>>
<<CABMON.lsp (LISP from IN)>>

<<CHARNZ.o (O from NRLIB)>>
<<CHARNZ.NRLIB (NRLIB from MID)>>
<<CHARNZ.spad (SPAD from IN)>>

<<CHARZ.o (O from NRLIB)>>
<<CHARZ.NRLIB (NRLIB from MID)>>
<<CHARZ.spad (SPAD from IN)>>

<<COMRING.o (O from NRLIB)>>
<<COMRING.NRLIB (NRLIB from MID)>>
<<COMRING.spad (SPAD from IN)>>
<<COMRING.o (BOOTSTRAP from MID)>>
<<COMRING.lsp (LISP from IN)>>

<<DIFEXT-.o (O from NRLIB)>>
<<DIFEXT-.NRLIB (NRLIB from MID)>>
<<DIFEXT.o (O from NRLIB)>>
<<DIFEXT.NRLIB (NRLIB from MID)>>
<<DIFEXT.spad (SPAD from IN)>>

<<DIFRING-.o (O from NRLIB)>>
<<DIFRING-.NRLIB (NRLIB from MID)>>
<<DIFRING.o (O from NRLIB)>>
<<DIFRING.NRLIB (NRLIB from MID)>>
<<DIFRING.spad (SPAD from IN)>>
<<DIFRING-.o (BOOTSTRAP from MID)>>
<<DIFRING-.lsp (LISP from IN)>>
<<DIFRING.o (BOOTSTRAP from MID)>>
<<DIFRING.lsp (LISP from IN)>>

<<DIVRING-.o (O from NRLIB)>>
<<DIVRING-.NRLIB (NRLIB from MID)>>
<<DIVRING.o (O from NRLIB)>>
<<DIVRING.NRLIB (NRLIB from MID)>>
<<DIVRING.spad (SPAD from IN)>>
<<DIVRING-.o (BOOTSTRAP from MID)>>
<<DIVRING-.lsp (LISP from IN)>>
<<DIVRING.o (BOOTSTRAP from MID)>>
<<DIVRING.lsp (LISP from IN)>>

<<ENTIRER.o (O from NRLIB)>>
<<ENTIRER.NRLIB (NRLIB from MID)>>
<<ENTIRER.spad (SPAD from IN)>>
<<ENTIRER.o (BOOTSTRAP from MID)>>
<<ENTIRER.lsp (LISP from IN)>>

<<EUCDOM-.o (O from NRLIB)>>
<<EUCDOM-.NRLIB (NRLIB from MID)>>
<<EUCDOM.o (O from NRLIB)>>
<<EUCDOM.NRLIB (NRLIB from MID)>>
<<EUCDOM.spad (SPAD from IN)>>
<<EUCDOM-.o (BOOTSTRAP from MID)>>
<<EUCDOM-.lsp (LISP from IN)>>
<<EUCDOM.o (BOOTSTRAP from MID)>>
<<EUCDOM.lsp (LISP from IN)>>

<<FIELD-.o (O from NRLIB)>>
<<FIELD-.NRLIB (NRLIB from MID)>>
<<FIELD.o (O from NRLIB)>>
<<FIELD.NRLIB (NRLIB from MID)>>
<<FIELD.spad (SPAD from IN)>>

<<FINITE.o (O from NRLIB)>>
<<FINITE.NRLIB (NRLIB from MID)>>
<<FINITE.spad (SPAD from IN)>>

<<FLINEXP-.o (O from NRLIB)>>
<<FLINEXP-.NRLIB (NRLIB from MID)>>
<<FLINEXP.o (O from NRLIB)>>
<<FLINEXP.NRLIB (NRLIB from MID)>>
<<FLINEXP.spad (SPAD from IN)>>

<<GCDDOM-.o (O from NRLIB)>>
<<GCDDOM-.NRLIB (NRLIB from MID)>>
<<GCDDOM.o (O from NRLIB)>>
<<GCDDOM.NRLIB (NRLIB from MID)>>
<<GCDDOM.spad (SPAD from IN)>>
<<GCDDOM-.o (BOOTSTRAP from MID)>>
<<GCDDOM-.lsp (LISP from IN)>>
<<GCDDOM.o (BOOTSTRAP from MID)>>
<<GCDDOM.lsp (LISP from IN)>>

<<GROUP-.o (O from NRLIB)>>
<<GROUP-.NRLIB (NRLIB from MID)>>
<<GROUP.o (O from NRLIB)>>
<<GROUP.NRLIB (NRLIB from MID)>>
<<GROUP.spad (SPAD from IN)>>

<<INTDOM-.o (O from NRLIB)>>
<<INTDOM-.NRLIB (NRLIB from MID)>>
<<INTDOM.o (O from NRLIB)>>
<<INTDOM.NRLIB (NRLIB from MID)>>
<<INTDOM.spad (SPAD from IN)>>
<<INTDOM-.o (BOOTSTRAP from MID)>>
<<INTDOM-.lsp (LISP from IN)>>
<<INTDOM.o (BOOTSTRAP from MID)>>
<<INTDOM.lsp (LISP from IN)>>

<<LINEXP.o (O from NRLIB)>>
<<LINEXP.NRLIB (NRLIB from MID)>>
<<LINEXP.spad (SPAD from IN)>>

<<LMODULE.o (O from NRLIB)>>
<<LMODULE.NRLIB (NRLIB from MID)>>
<<LMODULE.spad (SPAD from IN)>>

<<MONOID-.o (O from NRLIB)>>
<<MONOID-.NRLIB (NRLIB from MID)>>
<<MONOID.o (O from NRLIB)>>
<<MONOID.NRLIB (NRLIB from MID)>>
<<MONOID.spad (SPAD from IN)>>
<<MONOID-.o (BOOTSTRAP from MID)>>
<<MONOID-.lsp (LISP from IN)>>
<<MONOID.o (BOOTSTRAP from MID)>>
<<MONOID.lsp (LISP from IN)>>

<<MODULE-.o (O from NRLIB)>>
<<MODULE-.NRLIB (NRLIB from MID)>>
<<MODULE.o (O from NRLIB)>>
<<MODULE.NRLIB (NRLIB from MID)>>
<<MODULE.spad (SPAD from IN)>>

<<OCAMON.o (O from NRLIB)>>
<<OCAMON.NRLIB (NRLIB from MID)>>
<<OCAMON.spad (SPAD from IN)>>

<<OAGROUP.o (O from NRLIB)>>
<<OAGROUP.NRLIB (NRLIB from MID)>>
<<OAGROUP.spad (SPAD from IN)>>

<<OAMON.o (O from NRLIB)>>
<<OAMON.NRLIB (NRLIB from MID)>>
<<OAMON.spad (SPAD from IN)>>

<<OAMONS.o (O from NRLIB)>>
<<OAMONS.NRLIB (NRLIB from MID)>>
<<OAMONS.spad (SPAD from IN)>>

<<OASGP.o (O from NRLIB)>>
<<OASGP.NRLIB (NRLIB from MID)>>
<<OASGP.spad (SPAD from IN)>>

<<ORDFIN.o (O from NRLIB)>>
<<ORDFIN.NRLIB (NRLIB from MID)>>
<<ORDFIN.spad (SPAD from IN)>>

<<OINTDOM.o (O from NRLIB)>>
<<OINTDOM.NRLIB (NRLIB from MID)>>
<<OINTDOM.spad (SPAD from IN)>>
<<OINTDOM.o (BOOTSTRAP from MID)>>
<<OINTDOM.lsp (LISP from IN)>>

<<ORDMON.o (O from NRLIB)>>
<<ORDMON.NRLIB (NRLIB from MID)>>
<<ORDMON.spad (SPAD from IN)>>

<<ORDRING-.o (O from NRLIB)>>
<<ORDRING-.NRLIB (NRLIB from MID)>>
<<ORDRING.o (O from NRLIB)>>
<<ORDRING.NRLIB (NRLIB from MID)>>
<<ORDRING.spad (SPAD from IN)>>
<<ORDRING-.o (BOOTSTRAP from MID)>>
<<ORDRING-.lsp (LISP from IN)>>
<<ORDRING.o (BOOTSTRAP from MID)>>
<<ORDRING.lsp (LISP from IN)>>

<<ORDSET-.o (O from NRLIB)>>
<<ORDSET-.NRLIB (NRLIB from MID)>>
<<ORDSET.o (O from NRLIB)>>
<<ORDSET.NRLIB (NRLIB from MID)>>
<<ORDSET.spad (SPAD from IN)>>

<<PDRING-.o (O from NRLIB)>>
<<PDRING-.NRLIB (NRLIB from MID)>>
<<PDRING.o (O from NRLIB)>>
<<PDRING.NRLIB (NRLIB from MID)>>
<<PDRING.spad (SPAD from IN)>>

<<PFECAT-.o (O from NRLIB)>>
<<PFECAT-.NRLIB (NRLIB from MID)>>
<<PFECAT.o (O from NRLIB)>>
<<PFECAT.NRLIB (NRLIB from MID)>>
<<PFECAT.spad (SPAD from IN)>>

<<PID.o (O from NRLIB)>>
<<PID.NRLIB (NRLIB from MID)>>
<<PID.spad (SPAD from IN)>>

<<RMODULE.o (O from NRLIB)>>
<<RMODULE.NRLIB (NRLIB from MID)>>
<<RMODULE.spad (SPAD from IN)>>

<<RING-.o (O from NRLIB)>>
<<RING-.NRLIB (NRLIB from MID)>>
<<RING.o (O from NRLIB)>>
<<RING.NRLIB (NRLIB from MID)>>
<<RING.spad (SPAD from IN)>>
<<RING-.o (BOOTSTRAP from MID)>>
<<RING-.lsp (LISP from IN)>>
<<RING.o (BOOTSTRAP from MID)>>
<<RING.lsp (LISP from IN)>>

<<RNG.o (O from NRLIB)>>
<<RNG.NRLIB (NRLIB from MID)>>
<<RNG.spad (SPAD from IN)>>
<<RNG.o (BOOTSTRAP from MID)>>
<<RNG.lsp (LISP from IN)>>

<<SETCAT-.o (O from NRLIB)>>
<<SETCAT-.NRLIB (NRLIB from MID)>>
<<SETCAT-.o (BOOTSTRAP from MID)>>
<<SETCAT-.lsp (LISP from IN)>>

<<SETCAT.o (O from NRLIB)>>
<<SETCAT.NRLIB (NRLIB from MID)>>
<<SETCAT.spad (SPAD from IN)>>
<<SETCAT.o (BOOTSTRAP from MID)>>
<<SETCAT.lsp (LISP from IN)>>

<<SGROUP-.o (O from NRLIB)>>
<<SGROUP-.NRLIB (NRLIB from MID)>>
<<SGROUP.o (O from NRLIB)>>
<<SGROUP.NRLIB (NRLIB from MID)>>
<<SGROUP.spad (SPAD from IN)>>

<<STEP.o (O from NRLIB)>>
<<STEP.NRLIB (NRLIB from MID)>>
<<STEP.spad (SPAD from IN)>>

<<UFD-.o (O from NRLIB)>>
<<UFD-.NRLIB (NRLIB from MID)>>
<<UFD.o (O from NRLIB)>>
<<UFD.NRLIB (NRLIB from MID)>>
<<UFD.spad (SPAD from IN)>>
<<UFD-.o (BOOTSTRAP from MID)>>
<<UFD-.lsp (LISP from IN)>>
<<UFD.o (BOOTSTRAP from MID)>>
<<UFD.lsp (LISP from IN)>>

<<VSPACE-.o (O from NRLIB)>>
<<VSPACE-.NRLIB (NRLIB from MID)>>
<<VSPACE.o (O from NRLIB)>>
<<VSPACE.NRLIB (NRLIB from MID)>>
<<VSPACE.spad (SPAD from IN)>>

<<catdef.spad (SPAD from IN)>>
<<catdef.spad.dvi (DOC from IN)>>

<<CDEN.o (O from NRLIB)>>
<<CDEN.NRLIB (NRLIB from MID)>>
<<CDEN.spad (SPAD from IN)>>

<<ICDEN.o (O from NRLIB)>>
<<ICDEN.NRLIB (NRLIB from MID)>>
<<ICDEN.spad (SPAD from IN)>>

<<MCDEN.o (O from NRLIB)>>
<<MCDEN.NRLIB (NRLIB from MID)>>
<<MCDEN.spad (SPAD from IN)>>

<<UPCDEN.o (O from NRLIB)>>
<<UPCDEN.NRLIB (NRLIB from MID)>>
<<UPCDEN.spad (SPAD from IN)>>

<<cden.spad (SPAD from IN)>>
<<cden.spad.dvi (DOC from IN)>>

<<CLIF.o (O from NRLIB)>>
<<CLIF.NRLIB (NRLIB from MID)>>
<<CLIF.spad (SPAD from IN)>>

<<QFORM.o (O from NRLIB)>>
<<QFORM.NRLIB (NRLIB from MID)>>
<<QFORM.spad (SPAD from IN)>>

<<clifford.spad (SPAD from IN)>>
<<clifford.spad.dvi (DOC from IN)>>

<<CLIP.o (O from NRLIB)>>
<<CLIP.NRLIB (NRLIB from MID)>>
<<CLIP.spad (SPAD from IN)>>

<<clip.spad (SPAD from IN)>>
<<clip.spad.dvi (DOC from IN)>>

<<CMPLXRT.o (O from NRLIB)>>
<<CMPLXRT.NRLIB (NRLIB from MID)>>
<<CMPLXRT.spad (SPAD from IN)>>

<<cmplxrt.spad (SPAD from IN)>>
<<cmplxrt.spad.dvi (DOC from IN)>>

<<KOERCE.o (O from NRLIB)>>
<<KOERCE.NRLIB (NRLIB from MID)>>
<<KOERCE.spad (SPAD from IN)>>

<<KONVERT.o (O from NRLIB)>>
<<KONVERT.NRLIB (NRLIB from MID)>>
<<KONVERT.spad (SPAD from IN)>>

<<RETRACT-.o (O from NRLIB)>>
<<RETRACT-.NRLIB (NRLIB from MID)>>
<<RETRACT.o (O from NRLIB)>>
<<RETRACT.NRLIB (NRLIB from MID)>>
<<RETRACT.spad (SPAD from IN)>>

<<TYPE.o (O from NRLIB)>>
<<TYPE.NRLIB (NRLIB from MID)>>
<<TYPE.spad (SPAD from IN)>>

<<coerce.spad (SPAD from IN)>>
<<coerce.spad.dvi (DOC from IN)>>

<<COLOR.o (O from NRLIB)>>
<<COLOR.NRLIB (NRLIB from MID)>>
<<COLOR.spad (SPAD from IN)>>

<<PALETTE.o (O from NRLIB)>>
<<PALETTE.NRLIB (NRLIB from MID)>>
<<PALETTE.spad (SPAD from IN)>>

<<color.spad (SPAD from IN)>>
<<color.spad.dvi (DOC from IN)>>

<<COMBF.o (O from NRLIB)>>
<<COMBF.NRLIB (NRLIB from MID)>>
<<COMBF.spad (SPAD from IN)>>

<<COMBOPC.o (O from NRLIB)>>
<<COMBOPC.NRLIB (NRLIB from MID)>>
<<COMBOPC.spad (SPAD from IN)>>

<<FSPECF.o (O from NRLIB)>>
<<FSPECF.NRLIB (NRLIB from MID)>>
<<FSPECF.spad (SPAD from IN)>>

<<SUMFS.o (O from NRLIB)>>
<<SUMFS.NRLIB (NRLIB from MID)>>
<<SUMFS.spad (SPAD from IN)>>

<<combfunc.spad (SPAD from IN)>>
<<combfunc.spad.dvi (DOC from IN)>>

<<COMBINAT.o (O from NRLIB)>>
<<COMBINAT.NRLIB (NRLIB from MID)>>
<<COMBINAT.spad (SPAD from IN)>>

<<combinat.spad (SPAD from IN)>>
<<combinat.spad.dvi (DOC from IN)>>

<<INFINITY.o (O from NRLIB)>>
<<INFINITY.NRLIB (NRLIB from MID)>>
<<INFINITY.spad (SPAD from IN)>>

<<ONECOMP.o (O from NRLIB)>>
<<ONECOMP.NRLIB (NRLIB from MID)>>
<<ONECOMP.spad (SPAD from IN)>>

<<ONECOMP2.o (O from NRLIB)>>
<<ONECOMP2.NRLIB (NRLIB from MID)>>
<<ONECOMP2.spad (SPAD from IN)>>

<<ORDCOMP.o (O from NRLIB)>>
<<ORDCOMP.NRLIB (NRLIB from MID)>>
<<ORDCOMP.spad (SPAD from IN)>>

<<ORDCOMP2.o (O from NRLIB)>>
<<ORDCOMP2.NRLIB (NRLIB from MID)>>
<<ORDCOMP2.spad (SPAD from IN)>>

<<complet.spad (SPAD from IN)>>
<<complet.spad.dvi (DOC from IN)>>

<<AN.o (O from NRLIB)>>
<<AN.NRLIB (NRLIB from MID)>>
<<AN.spad (SPAD from IN)>>

<<IAN.o (O from NRLIB)>>
<<IAN.NRLIB (NRLIB from MID)>>
<<IAN.spad (SPAD from IN)>>

<<constant.spad (SPAD from IN)>>
<<constant.spad.dvi (DOC from IN)>>

<<CONTFRAC.o (O from NRLIB)>>
<<CONTFRAC.NRLIB (NRLIB from MID)>>
<<CONTFRAC.spad (SPAD from IN)>>

<<NCNTFRAC.o (O from NRLIB)>>
<<NCNTFRAC.NRLIB (NRLIB from MID)>>
<<NCNTFRAC.spad (SPAD from IN)>>

<<contfrac.spad (SPAD from IN)>>
<<contfrac.spad.dvi (DOC from IN)>>

<<ESCONT.o (O from NRLIB)>>
<<ESCONT.NRLIB (NRLIB from MID)>>
<<ESCONT.spad (SPAD from IN)>>

<<ESCONT1.o (O from NRLIB)>>
<<ESCONT1.NRLIB (NRLIB from MID)>>
<<ESCONT1.spad (SPAD from IN)>>

<<cont.spad (SPAD from IN)>>
<<cont.spad.dvi (DOC from IN)>>

<<COORDSYS.o (O from NRLIB)>>
<<COORDSYS.NRLIB (NRLIB from MID)>>
<<COORDSYS.spad (SPAD from IN)>>

<<coordsys.spad (SPAD from IN)>>
<<coordsys.spad.dvi (DOC from IN)>>

<<CRAPACK.o (O from NRLIB)>>
<<CRAPACK.NRLIB (NRLIB from MID)>>
<<CRAPACK.spad (SPAD from IN)>>

<<cra.spad (SPAD from IN)>>
<<cra.spad.dvi (DOC from IN)>>

<<CRFP.o (O from NRLIB)>>
<<CRFP.NRLIB (NRLIB from MID)>>
<<CRFP.spad (SPAD from IN)>>

<<crfp.spad (SPAD from IN)>>
<<crfp.spad.dvi (DOC from IN)>>

<<ALGFF.o (O from NRLIB)>>
<<ALGFF.NRLIB (NRLIB from MID)>>
<<ALGFF.spad (SPAD from IN)>>

<<CHVAR.o (O from NRLIB)>>
<<CHVAR.NRLIB (NRLIB from MID)>>
<<CHVAR.spad (SPAD from IN)>>

<<FAXF-.o (O from NRLIB)>>
<<FAXF-.NRLIB (NRLIB from MID)>>
<<FAXF.o (O from NRLIB)>>
<<FAXF.NRLIB (NRLIB from MID)>>
<<FAXF.spad (SPAD from IN)>>

<<FFCAT-.o (O from NRLIB)>>
<<FFCAT-.NRLIB (NRLIB from MID)>>
<<FFCAT.o (O from NRLIB)>>
<<FFCAT.NRLIB (NRLIB from MID)>>
<<FFCAT.spad (SPAD from IN)>>

<<FFCAT2.o (O from NRLIB)>>
<<FFCAT2.NRLIB (NRLIB from MID)>>
<<FFCAT2.spad (SPAD from IN)>>

<<MMAP.o (O from NRLIB)>>
<<MMAP.NRLIB (NRLIB from MID)>>
<<MMAP.spad (SPAD from IN)>>

<<RADFF.o (O from NRLIB)>>
<<RADFF.NRLIB (NRLIB from MID)>>
<<RADFF.spad (SPAD from IN)>>

<<curve.spad (SPAD from IN)>>
<<curve.spad.dvi (DOC from IN)>>

<<CYCLES.o (O from NRLIB)>>
<<CYCLES.NRLIB (NRLIB from MID)>>
<<CYCLES.spad (SPAD from IN)>>

<<EVALCYC.o (O from NRLIB)>>
<<EVALCYC.NRLIB (NRLIB from MID)>>
<<EVALCYC.spad (SPAD from IN)>>

<<cycles.spad (SPAD from IN)>>
<<cycles.spad.dvi (DOC from IN)>>

<<CYCLOTOM.o (O from NRLIB)>>
<<CYCLOTOM.NRLIB (NRLIB from MID)>>
<<CYCLOTOM.spad (SPAD from IN)>>

<<cyclotom.spad (SPAD from IN)>>
<<cyclotom.spad.dvi (DOC from IN)>>

<<D01AGNT.o (O from NRLIB)>>
<<D01AGNT.NRLIB (NRLIB from MID)>>
<<D01AGNT.spad (SPAD from IN)>>

<<INTFTBL.o (O from NRLIB)>>
<<INTFTBL.NRLIB (NRLIB from MID)>>
<<INTFTBL.spad (SPAD from IN)>>

<<d01agents.spad (SPAD from IN)>>
<<d01agents.spad.dvi (DOC from IN)>>

<<INTPACK.o (O from NRLIB)>>
<<INTPACK.NRLIB (NRLIB from MID)>>
<<INTPACK.spad (SPAD from IN)>>

<<d01Package.spad (SPAD from IN)>>
<<d01Package.spad.dvi (DOC from IN)>>

<<D01AJFA.o (O from NRLIB)>>
<<D01AJFA.NRLIB (NRLIB from MID)>>
<<D01AJFA.spad (SPAD from IN)>>

<<D01AKFA.o (O from NRLIB)>>
<<D01AKFA.NRLIB (NRLIB from MID)>>
<<D01AKFA.spad (SPAD from IN)>>

<<D01ALFA.o (O from NRLIB)>>
<<D01ALFA.NRLIB (NRLIB from MID)>>
<<D01ALFA.spad (SPAD from IN)>>

<<D01AMFA.o (O from NRLIB)>>
<<D01AMFA.NRLIB (NRLIB from MID)>>
<<D01AMFA.spad (SPAD from IN)>>

<<D01ANFA.o (O from NRLIB)>>
<<D01ANFA.NRLIB (NRLIB from MID)>>
<<D01ANFA.spad (SPAD from IN)>>

<<D01APFA.o (O from NRLIB)>>
<<D01APFA.NRLIB (NRLIB from MID)>>
<<D01APFA.spad (SPAD from IN)>>

<<D01AQFA.o (O from NRLIB)>>
<<D01AQFA.NRLIB (NRLIB from MID)>>
<<D01AQFA.spad (SPAD from IN)>>

<<D01ASFA.o (O from NRLIB)>>
<<D01ASFA.NRLIB (NRLIB from MID)>>
<<D01ASFA.spad (SPAD from IN)>>

<<D01FCFA.o (O from NRLIB)>>
<<D01FCFA.NRLIB (NRLIB from MID)>>
<<D01FCFA.spad (SPAD from IN)>>

<<D01GBFA.o (O from NRLIB)>>
<<D01GBFA.NRLIB (NRLIB from MID)>>
<<D01GBFA.spad (SPAD from IN)>>

<<d01routine.spad (SPAD from IN)>>
<<d01routine.spad.dvi (DOC from IN)>>

<<NAGD01.o (O from NRLIB)>>
<<NAGD01.NRLIB (NRLIB from MID)>>
<<NAGD01.spad (SPAD from IN)>>

<<d01.spad (SPAD from IN)>>
<<d01.spad.dvi (DOC from IN)>>

<<D01TRNS.o (O from NRLIB)>>
<<D01TRNS.NRLIB (NRLIB from MID)>>
<<D01TRNS.spad (SPAD from IN)>>

<<d01transform.spad (SPAD from IN)>>
<<d01transform.spad.dvi (DOC from IN)>>

<<D01WGTS.o (O from NRLIB)>>
<<D01WGTS.NRLIB (NRLIB from MID)>>
<<D01WGTS.spad (SPAD from IN)>>

<<d01weights.spad (SPAD from IN)>>
<<d01weights.spad.dvi (DOC from IN)>>

<<D02AGNT.o (O from NRLIB)>>
<<D02AGNT.NRLIB (NRLIB from MID)>>
<<D02AGNT.spad (SPAD from IN)>>

<<ODEIFTBL.o (O from NRLIB)>>
<<ODEIFTBL.NRLIB (NRLIB from MID)>>
<<ODEIFTBL.spad (SPAD from IN)>>

<<d02agents.spad (SPAD from IN)>>
<<d02agents.spad.dvi (DOC from IN)>>

<<ODEPACK.o (O from NRLIB)>>
<<ODEPACK.NRLIB (NRLIB from MID)>>
<<ODEPACK.spad (SPAD from IN)>>

<<d02Package.spad (SPAD from IN)>>
<<d02Package.spad.dvi (DOC from IN)>>

<<D02BBFA.o (O from NRLIB)>>
<<D02BBFA.NRLIB (NRLIB from MID)>>
<<D02BBFA.spad (SPAD from IN)>>

<<D02BHFA.o (O from NRLIB)>>
<<D02BHFA.NRLIB (NRLIB from MID)>>
<<D02BHFA.spad (SPAD from IN)>>

<<D02CJFA.o (O from NRLIB)>>
<<D02CJFA.NRLIB (NRLIB from MID)>>
<<D02CJFA.spad (SPAD from IN)>>

<<D02EJFA.o (O from NRLIB)>>
<<D02EJFA.NRLIB (NRLIB from MID)>>
<<D02EJFA.spad (SPAD from IN)>>

<<d02routine.spad (SPAD from IN)>>
<<d02routine.spad.dvi (DOC from IN)>>

<<NAGD02.o (O from NRLIB)>>
<<NAGD02.NRLIB (NRLIB from MID)>>
<<NAGD02.spad (SPAD from IN)>>

<<d02.spad (SPAD from IN)>>
<<d02.spad.dvi (DOC from IN)>>

<<D03AGNT.o (O from NRLIB)>>
<<D03AGNT.NRLIB (NRLIB from MID)>>
<<D03AGNT.spad (SPAD from IN)>>

<<d03agents.spad (SPAD from IN)>>
<<d03agents.spad.dvi (DOC from IN)>>

<<PDEPACK.o (O from NRLIB)>>
<<PDEPACK.NRLIB (NRLIB from MID)>>
<<PDEPACK.spad (SPAD from IN)>>

<<d03Package.spad (SPAD from IN)>>
<<d03Package.spad.dvi (DOC from IN)>>

<<D03EEFA.o (O from NRLIB)>>
<<D03EEFA.NRLIB (NRLIB from MID)>>
<<D03EEFA.spad (SPAD from IN)>>

<<D03FAFA.o (O from NRLIB)>>
<<D03FAFA.NRLIB (NRLIB from MID)>>
<<D03FAFA.spad (SPAD from IN)>>

<<d03routine.spad (SPAD from IN)>>
<<d03routine.spad.dvi (DOC from IN)>>

<<NAGD03.o (O from NRLIB)>>
<<NAGD03.NRLIB (NRLIB from MID)>>
<<NAGD03.spad (SPAD from IN)>>

<<d03.spad (SPAD from IN)>>
<<d03.spad.dvi (DOC from IN)>>

<<DDFACT.o (O from NRLIB)>>
<<DDFACT.NRLIB (NRLIB from MID)>>
<<DDFACT.spad (SPAD from IN)>>

<<ddfact.spad (SPAD from IN)>>
<<ddfact.spad.dvi (DOC from IN)>>

<<FLASORT.o (O from NRLIB)>>
<<FLASORT.NRLIB (NRLIB from MID)>>
<<FLASORT.spad (SPAD from IN)>>

<<REPDB.o (O from NRLIB)>>
<<REPDB.NRLIB (NRLIB from MID)>>
<<REPDB.spad (SPAD from IN)>>

<<REPSQ.o (O from NRLIB)>>
<<REPSQ.NRLIB (NRLIB from MID)>>
<<REPSQ.spad (SPAD from IN)>>

<<defaults.spad (SPAD from IN)>>
<<defaults.spad.dvi (DOC from IN)>>

<<DEFINTEF.o (O from NRLIB)>>
<<DEFINTEF.NRLIB (NRLIB from MID)>>
<<DEFINTEF.spad (SPAD from IN)>>

<<defintef.spad (SPAD from IN)>>
<<defintef.spad.dvi (DOC from IN)>>

<<DEFINTRF.o (O from NRLIB)>>
<<DEFINTRF.NRLIB (NRLIB from MID)>>
<<DEFINTRF.spad (SPAD from IN)>>

<<DFINTTLS.o (O from NRLIB)>>
<<DFINTTLS.NRLIB (NRLIB from MID)>>
<<DFINTTLS.spad (SPAD from IN)>>

<<defintrf.spad (SPAD from IN)>>
<<defintrf.spad.dvi (DOC from IN)>>

<<DEGRED.o (O from NRLIB)>>
<<DEGRED.NRLIB (NRLIB from MID)>>
<<DEGRED.spad (SPAD from IN)>>

<<degred.spad (SPAD from IN)>>
<<degred.spad.dvi (DOC from IN)>>

<<ANTISYM.o (O from NRLIB)>>
<<ANTISYM.NRLIB (NRLIB from MID)>>
<<ANTISYM.spad (SPAD from IN)>>

<<DERHAM.o (O from NRLIB)>>
<<DERHAM.NRLIB (NRLIB from MID)>>
<<DERHAM.spad (SPAD from IN)>>

<<EAB.o (O from NRLIB)>>
<<EAB.NRLIB (NRLIB from MID)>>
<<EAB.spad (SPAD from IN)>>

<<LALG-.o (O from NRLIB)>>
<<LALG-.NRLIB (NRLIB from MID)>>
<<LALG.o (O from NRLIB)>>
<<LALG.NRLIB (NRLIB from MID)>>
<<LALG.spad (SPAD from IN)>>

<<derham.spad (SPAD from IN)>>
<<derham.spad.dvi (DOC from IN)>>

<<DHMATRIX.o (O from NRLIB)>>
<<DHMATRIX.NRLIB (NRLIB from MID)>>
<<DHMATRIX.spad (SPAD from IN)>>

<<dhmatrix.spad (SPAD from IN)>>
<<dhmatrix.spad.dvi (DOC from IN)>>

<<FDIV.o (O from NRLIB)>>
<<FDIV.NRLIB (NRLIB from MID)>>
<<FDIV.spad (SPAD from IN)>>

<<FDIV2.o (O from NRLIB)>>
<<FDIV2.NRLIB (NRLIB from MID)>>
<<FDIV2.spad (SPAD from IN)>>

<<FDIVCAT-.o (O from NRLIB)>>
<<FDIVCAT-.NRLIB (NRLIB from MID)>>
<<FDIVCAT.o (O from NRLIB)>>
<<FDIVCAT.NRLIB (NRLIB from MID)>>
<<FDIVCAT.spad (SPAD from IN)>>

<<FRIDEAL.o (O from NRLIB)>>
<<FRIDEAL.NRLIB (NRLIB from MID)>>
<<FRIDEAL.spad (SPAD from IN)>>

<<FRIDEAL2.o (O from NRLIB)>>
<<FRIDEAL2.NRLIB (NRLIB from MID)>>
<<FRIDEAL2.spad (SPAD from IN)>>

<<FRMOD.o (O from NRLIB)>>
<<FRMOD.NRLIB (NRLIB from MID)>>
<<FRMOD.spad (SPAD from IN)>>

<<HELLFDIV.o (O from NRLIB)>>
<<HELLFDIV.NRLIB (NRLIB from MID)>>
<<HELLFDIV.spad (SPAD from IN)>>

<<MHROWRED.o (O from NRLIB)>>
<<MHROWRED.NRLIB (NRLIB from MID)>>
<<MHROWRED.spad (SPAD from IN)>>

<<divisor.spad (SPAD from IN)>>
<<divisor.spad.dvi (DOC from IN)>>

<<DSMP.o (O from NRLIB)>>
<<DSMP.NRLIB (NRLIB from MID)>>
<<DSMP.spad (SPAD from IN)>>

<<DPOLCAT-.o (O from NRLIB)>>
<<DPOLCAT-.NRLIB (NRLIB from MID)>>
<<DPOLCAT.o (O from NRLIB)>>
<<DPOLCAT.NRLIB (NRLIB from MID)>>
<<DPOLCAT.spad (SPAD from IN)>>

<<DVARCAT-.o (O from NRLIB)>>
<<DVARCAT-.NRLIB (NRLIB from MID)>>
<<DVARCAT.o (O from NRLIB)>>
<<DVARCAT.NRLIB (NRLIB from MID)>>
<<DVARCAT.spad (SPAD from IN)>>

<<ODPOL.o (O from NRLIB)>>
<<ODPOL.NRLIB (NRLIB from MID)>>
<<ODPOL.spad (SPAD from IN)>>

<<ODVAR.o (O from NRLIB)>>
<<ODVAR.NRLIB (NRLIB from MID)>>
<<ODVAR.spad (SPAD from IN)>>

<<SDPOL.o (O from NRLIB)>>
<<SDPOL.NRLIB (NRLIB from MID)>>
<<SDPOL.spad (SPAD from IN)>>

<<SDVAR.o (O from NRLIB)>>
<<SDVAR.NRLIB (NRLIB from MID)>>
<<SDVAR.spad (SPAD from IN)>>

<<dpolcat.spad (SPAD from IN)>>
<<dpolcat.spad.dvi (DOC from IN)>>

<<DROPT.o (O from NRLIB)>>
<<DROPT.NRLIB (NRLIB from MID)>>
<<DROPT.spad (SPAD from IN)>>

<<DROPT0.o (O from NRLIB)>>
<<DROPT0.NRLIB (NRLIB from MID)>>
<<DROPT0.spad (SPAD from IN)>>

<<DROPT1.o (O from NRLIB)>>
<<DROPT1.NRLIB (NRLIB from MID)>>
<<DROPT1.spad (SPAD from IN)>>

<<drawopt.spad (SPAD from IN)>>
<<drawopt.spad.dvi (DOC from IN)>>

<<DRAWCX.o (O from NRLIB)>>
<<DRAWCX.NRLIB (NRLIB from MID)>>
<<DRAWCX.spad (SPAD from IN)>>

<<drawpak.spad (SPAD from IN)>>
<<drawpak.spad.dvi (DOC from IN)>>

<<DRAW.o (O from NRLIB)>>
<<DRAW.NRLIB (NRLIB from MID)>>
<<DRAW.spad (SPAD from IN)>>

<<DRAWCFUN.o (O from NRLIB)>>
<<DRAWCFUN.NRLIB (NRLIB from MID)>>
<<DRAWCFUN.spad (SPAD from IN)>>

<<DRAWCURV.o (O from NRLIB)>>
<<DRAWCURV.NRLIB (NRLIB from MID)>>
<<DRAWCURV.spad (SPAD from IN)>>

<<DRAWPT.o (O from NRLIB)>>
<<DRAWPT.NRLIB (NRLIB from MID)>>
<<DRAWPT.spad (SPAD from IN)>>

<<draw.spad (SPAD from IN)>>
<<draw.spad.dvi (DOC from IN)>>

<<NAGE01.o (O from NRLIB)>>
<<NAGE01.NRLIB (NRLIB from MID)>>
<<NAGE01.spad (SPAD from IN)>>

<<e01.spad (SPAD from IN)>>
<<e01.spad.dvi (DOC from IN)>>

<<NAGE02.o (O from NRLIB)>>
<<NAGE02.NRLIB (NRLIB from MID)>>
<<NAGE02.spad (SPAD from IN)>>

<<e02.spad (SPAD from IN)>>
<<e02.spad.dvi (DOC from IN)>>

<<E04AGNT.o (O from NRLIB)>>
<<E04AGNT.NRLIB (NRLIB from MID)>>
<<E04AGNT.spad (SPAD from IN)>>

<<e04agents.spad (SPAD from IN)>>
<<e04agents.spad.dvi (DOC from IN)>>

<<OPTPACK.o (O from NRLIB)>>
<<OPTPACK.NRLIB (NRLIB from MID)>>
<<OPTPACK.spad (SPAD from IN)>>

<<e04Package.spad (SPAD from IN)>>
<<e04Package.spad.dvi (DOC from IN)>>

<<E04DGFA.o (O from NRLIB)>>
<<E04DGFA.NRLIB (NRLIB from MID)>>
<<E04DGFA.spad (SPAD from IN)>>

<<E04FDFA.o (O from NRLIB)>>
<<E04FDFA.NRLIB (NRLIB from MID)>>
<<E04FDFA.spad (SPAD from IN)>>

<<E04GCFA.o (O from NRLIB)>>
<<E04GCFA.NRLIB (NRLIB from MID)>>
<<E04GCFA.spad (SPAD from IN)>>

<<E04JAFA.o (O from NRLIB)>>
<<E04JAFA.NRLIB (NRLIB from MID)>>
<<E04JAFA.spad (SPAD from IN)>>

<<E04MBFA.o (O from NRLIB)>>
<<E04MBFA.NRLIB (NRLIB from MID)>>
<<E04MBFA.spad (SPAD from IN)>>

<<E04NAFA.o (O from NRLIB)>>
<<E04NAFA.NRLIB (NRLIB from MID)>>
<<E04NAFA.spad (SPAD from IN)>>

<<E04UCFA.o (O from NRLIB)>>
<<E04UCFA.NRLIB (NRLIB from MID)>>
<<E04UCFA.spad (SPAD from IN)>>

<<e04routine.spad (SPAD from IN)>>
<<e04routine.spad.dvi (DOC from IN)>>

<<NAGE04.o (O from NRLIB)>>
<<NAGE04.NRLIB (NRLIB from MID)>>
<<NAGE04.spad (SPAD from IN)>>

<<e04.spad (SPAD from IN)>>
<<e04.spad.dvi (DOC from IN)>>

<<CTRIGMNP.o (O from NRLIB)>>
<<CTRIGMNP.NRLIB (NRLIB from MID)>>
<<CTRIGMNP.spad (SPAD from IN)>>

<<EFSTRUC.o (O from NRLIB)>>
<<EFSTRUC.NRLIB (NRLIB from MID)>>
<<EFSTRUC.spad (SPAD from IN)>>

<<ITRIGMNP.o (O from NRLIB)>>
<<ITRIGMNP.NRLIB (NRLIB from MID)>>
<<ITRIGMNP.spad (SPAD from IN)>>

<<SYMFUNC.o (O from NRLIB)>>
<<SYMFUNC.NRLIB (NRLIB from MID)>>
<<SYMFUNC.spad (SPAD from IN)>>

<<TRIGMNIP.o (O from NRLIB)>>
<<TRIGMNIP.NRLIB (NRLIB from MID)>>
<<TRIGMNIP.spad (SPAD from IN)>>

<<TANEXP.o (O from NRLIB)>>
<<TANEXP.NRLIB (NRLIB from MID)>>
<<TANEXP.spad (SPAD from IN)>>

<<efstruc.spad (SPAD from IN)>>
<<efstruc.spad.dvi (DOC from IN)>>

<<EFULS.o (O from NRLIB)>>
<<EFULS.NRLIB (NRLIB from MID)>>
<<EFULS.spad (SPAD from IN)>>

<<efuls.spad (SPAD from IN)>>
<<efuls.spad.dvi (DOC from IN)>>

<<EFUPXS.o (O from NRLIB)>>
<<EFUPXS.NRLIB (NRLIB from MID)>>
<<EFUPXS.spad (SPAD from IN)>>

<<efupxs.spad (SPAD from IN)>>
<<efupxs.spad.dvi (DOC from IN)>>

<<CHARPOL.o (O from NRLIB)>>
<<CHARPOL.NRLIB (NRLIB from MID)>>
<<CHARPOL.spad (SPAD from IN)>>

<<EP.o (O from NRLIB)>>
<<EP.NRLIB (NRLIB from MID)>>
<<EP.spad (SPAD from IN)>>

<<eigen.spad (SPAD from IN)>>
<<eigen.spad.dvi (DOC from IN)>>

<<EF.o (O from NRLIB)>>
<<EF.NRLIB (NRLIB from MID)>>
<<EF.spad (SPAD from IN)>>

<<elemntry.spad (SPAD from IN)>>
<<elemntry.spad.dvi (DOC from IN)>>

<<ELFUTS.o (O from NRLIB)>>
<<ELFUTS.NRLIB (NRLIB from MID)>>
<<ELFUTS.spad (SPAD from IN)>>

<<elfuts.spad (SPAD from IN)>>
<<elfuts.spad.dvi (DOC from IN)>>

<<EVALAB-.o (O from NRLIB)>>
<<EVALAB-.NRLIB (NRLIB from MID)>>
<<EVALAB.o (O from NRLIB)>>
<<EVALAB.NRLIB (NRLIB from MID)>>
<<EVALAB.spad (SPAD from IN)>>

<<IEVALAB-.o (O from NRLIB)>>
<<IEVALAB-.NRLIB (NRLIB from MID)>>
<<IEVALAB.o (O from NRLIB)>>
<<IEVALAB.NRLIB (NRLIB from MID)>>
<<IEVALAB.spad (SPAD from IN)>>

<<equation1.spad (SPAD from IN)>>
<<equation1.spad.dvi (DOC from IN)>>

<<EQ.o (O from NRLIB)>>
<<EQ.NRLIB (NRLIB from MID)>>
<<EQ.spad (SPAD from IN)>>

<<EQ2.o (O from NRLIB)>>
<<EQ2.NRLIB (NRLIB from MID)>>
<<EQ2.spad (SPAD from IN)>>

<<FEVALAB-.o (O from NRLIB)>>
<<FEVALAB-.NRLIB (NRLIB from MID)>>
<<FEVALAB.o (O from NRLIB)>>
<<FEVALAB.NRLIB (NRLIB from MID)>>
<<FEVALAB.spad (SPAD from IN)>>

<<equation2.spad (SPAD from IN)>>
<<equation2.spad.dvi (DOC from IN)>>

<<ERROR.o (O from NRLIB)>>
<<ERROR.NRLIB (NRLIB from MID)>>
<<ERROR.spad (SPAD from IN)>>

<<error.spad (SPAD from IN)>>
<<error.spad.dvi (DOC from IN)>>

<<EXPEXPAN.o (O from NRLIB)>>
<<EXPEXPAN.NRLIB (NRLIB from MID)>>
<<EXPEXPAN.spad (SPAD from IN)>>

<<EXPUPXS.o (O from NRLIB)>>
<<EXPUPXS.NRLIB (NRLIB from MID)>>
<<EXPUPXS.spad (SPAD from IN)>>

<<UPXSSING.o (O from NRLIB)>>
<<UPXSSING.NRLIB (NRLIB from MID)>>
<<UPXSSING.spad (SPAD from IN)>>

<<expexpan.spad (SPAD from IN)>>
<<expexpan.spad.dvi (DOC from IN)>>

<<exposed.lsp.dvi (DOC from IN)>>

<<EXPR2UPS.o (O from NRLIB)>>
<<EXPR2UPS.NRLIB (NRLIB from MID)>>
<<EXPR2UPS.spad (SPAD from IN)>>

<<expr2ups.spad (SPAD from IN)>>
<<expr2ups.spad.dvi (DOC from IN)>>

<<EXPRODE.o (O from NRLIB)>>
<<EXPRODE.NRLIB (NRLIB from MID)>>
<<EXPRODE.spad (SPAD from IN)>>

<<exprode.spad (SPAD from IN)>>
<<exprode.spad.dvi (DOC from IN)>>

<<EXPR.o (O from NRLIB)>>
<<EXPR.NRLIB (NRLIB from MID)>>
<<EXPR.spad (SPAD from IN)>>

<<EXPR2.o (O from NRLIB)>>
<<EXPR2.NRLIB (NRLIB from MID)>>
<<EXPR2.spad (SPAD from IN)>>

<<HACKPI.o (O from NRLIB)>>
<<HACKPI.NRLIB (NRLIB from MID)>>
<<HACKPI.spad (SPAD from IN)>>

<<PAN2EXPR.o (O from NRLIB)>>
<<PAN2EXPR.NRLIB (NRLIB from MID)>>
<<PAN2EXPR.spad (SPAD from IN)>>

<<PICOERCE.o (O from NRLIB)>>
<<PICOERCE.NRLIB (NRLIB from MID)>>
<<PICOERCE.spad (SPAD from IN)>>

<<PMASS.o (O from NRLIB)>>
<<PMASS.NRLIB (NRLIB from MID)>>
<<PMASS.spad (SPAD from IN)>>

<<PMASSFS.o (O from NRLIB)>>
<<PMASSFS.NRLIB (NRLIB from MID)>>
<<PMASSFS.spad (SPAD from IN)>>

<<PMPRED.o (O from NRLIB)>>
<<PMPRED.NRLIB (NRLIB from MID)>>
<<PMPRED.spad (SPAD from IN)>>

<<PMPREDFS.o (O from NRLIB)>>
<<PMPREDFS.NRLIB (NRLIB from MID)>>
<<PMPREDFS.spad (SPAD from IN)>>

<<expr.spad (SPAD from IN)>>
<<expr.spad.dvi (DOC from IN)>>

<<NAGF01.o (O from NRLIB)>>
<<NAGF01.NRLIB (NRLIB from MID)>>
<<NAGF01.spad (SPAD from IN)>>

<<f01.spad (SPAD from IN)>>
<<f01.spad.dvi (DOC from IN)>>

<<NAGF02.o (O from NRLIB)>>
<<NAGF02.NRLIB (NRLIB from MID)>>
<<NAGF02.spad (SPAD from IN)>>

<<f02.spad (SPAD from IN)>>
<<f02.spad.dvi (DOC from IN)>>

<<NAGF04.o (O from NRLIB)>>
<<NAGF04.NRLIB (NRLIB from MID)>>
<<NAGF04.spad (SPAD from IN)>>

<<f04.spad (SPAD from IN)>>
<<f04.spad.dvi (DOC from IN)>>

<<NAGF07.o (O from NRLIB)>>
<<NAGF07.NRLIB (NRLIB from MID)>>
<<NAGF07.spad (SPAD from IN)>>

<<f07.spad (SPAD from IN)>>
<<f07.spad.dvi (DOC from IN)>>

<<FACUTIL.o (O from NRLIB)>>
<<FACUTIL.NRLIB (NRLIB from MID)>>
<<FACUTIL.spad (SPAD from IN)>>

<<PUSHVAR.o (O from NRLIB)>>
<<PUSHVAR.NRLIB (NRLIB from MID)>>
<<PUSHVAR.spad (SPAD from IN)>>

<<facutil.spad (SPAD from IN)>>
<<facutil.spad.dvi (DOC from IN)>>

<<DLP.o (O from NRLIB)>>
<<DLP.NRLIB (NRLIB from MID)>>
<<DLP.spad (SPAD from IN)>>

<<FFIELDC-.o (O from NRLIB)>>
<<FFIELDC-.NRLIB (NRLIB from MID)>>
<<FFIELDC.o (O from NRLIB)>>
<<FFIELDC.NRLIB (NRLIB from MID)>>
<<FFIELDC.spad (SPAD from IN)>>
<<FFIELDC-.o (BOOTSTRAP from MID)>>
<<FFIELDC-.lsp (LISP from IN)>>
<<FFIELDC.o (BOOTSTRAP from MID)>>
<<FFIELDC.lsp (LISP from IN)>>

<<FFSLPE.o (O from NRLIB)>>
<<FFSLPE.NRLIB (NRLIB from MID)>>
<<FFSLPE.spad (SPAD from IN)>>

<<FPC-.o (O from NRLIB)>>
<<FPC-.NRLIB (NRLIB from MID)>>
<<FPC.o (O from NRLIB)>>
<<FPC.NRLIB (NRLIB from MID)>>
<<FPC.spad (SPAD from IN)>>

<<XF-.o (O from NRLIB)>>
<<XF-.NRLIB (NRLIB from MID)>>
<<XF.o (O from NRLIB)>>
<<XF.NRLIB (NRLIB from MID)>>
<<XF.spad (SPAD from IN)>>

<<ffcat.spad (SPAD from IN)>>
<<ffcat.spad.dvi (DOC from IN)>>

<<FFCG.o (O from NRLIB)>>
<<FFCG.NRLIB (NRLIB from MID)>>
<<FFCG.spad (SPAD from IN)>>

<<FFCGP.o (O from NRLIB)>>
<<FFCGP.NRLIB (NRLIB from MID)>>
<<FFCGP.spad (SPAD from IN)>>

<<FFCGX.o (O from NRLIB)>>
<<FFCGX.NRLIB (NRLIB from MID)>>
<<FFCGX.spad (SPAD from IN)>>

<<ffcg.spad (SPAD from IN)>>
<<ffcg.spad.dvi (DOC from IN)>>

<<FFF.o (O from NRLIB)>>
<<FFF.NRLIB (NRLIB from MID)>>
<<FFF.spad (SPAD from IN)>>

<<fff.spad (SPAD from IN)>>
<<fff.spad.dvi (DOC from IN)>>

<<FFHOM.o (O from NRLIB)>>
<<FFHOM.NRLIB (NRLIB from MID)>>
<<FFHOM.spad (SPAD from IN)>>

<<ffhom.spad (SPAD from IN)>>
<<ffhom.spad.dvi (DOC from IN)>>

<<FFNB.o (O from NRLIB)>>
<<FFNB.NRLIB (NRLIB from MID)>>
<<FFNB.spad (SPAD from IN)>>

<<FFNBX.o (O from NRLIB)>>
<<FFNBX.NRLIB (NRLIB from MID)>>
<<FFNBX.spad (SPAD from IN)>>

<<FFNBP.o (O from NRLIB)>>
<<FFNBP.NRLIB (NRLIB from MID)>>
<<FFNBP.spad (SPAD from IN)>>

<<INBFF.o (O from NRLIB)>>
<<INBFF.NRLIB (NRLIB from MID)>>
<<INBFF.spad (SPAD from IN)>>

<<ffnb.spad (SPAD from IN)>>
<<ffnb.spad.dvi (DOC from IN)>>

<<FFPOLY2.o (O from NRLIB)>>
<<FFPOLY2.NRLIB (NRLIB from MID)>>
<<FFPOLY2.spad (SPAD from IN)>>

<<ffpoly2.spad (SPAD from IN)>>
<<ffpoly2.spad.dvi (DOC from IN)>>

<<FFPOLY.o (O from NRLIB)>>
<<FFPOLY.NRLIB (NRLIB from MID)>>
<<FFPOLY.spad (SPAD from IN)>>

<<ffpoly.spad (SPAD from IN)>>
<<ffpoly.spad.dvi (DOC from IN)>>

<<IFF.o (O from NRLIB)>>
<<IFF.NRLIB (NRLIB from MID)>>
<<IFF.spad (SPAD from IN)>>

<<FF.o (O from NRLIB)>>
<<FF.NRLIB (NRLIB from MID)>>
<<FF.spad (SPAD from IN)>>

<<FFP.o (O from NRLIB)>>
<<FFP.NRLIB (NRLIB from MID)>>
<<FFP.spad (SPAD from IN)>>

<<FFX.o (O from NRLIB)>>
<<FFX.NRLIB (NRLIB from MID)>>
<<FFX.spad (SPAD from IN)>>

<<ffp.spad (SPAD from IN)>>
<<ffp.spad.dvi (DOC from IN)>>

<<ffrac.as (SPAD from IN)>>
<<ffrac.as.dvi (DOC from IN)>>

<<IRREDFFX.o (O from NRLIB)>>
<<IRREDFFX.NRLIB (NRLIB from MID)>>
<<IRREDFFX.spad (SPAD from IN)>>

<<ffx.spad (SPAD from IN)>>
<<ffx.spad.dvi (DOC from IN)>>

<<BINFILE.o (O from NRLIB)>>
<<BINFILE.NRLIB (NRLIB from MID)>>
<<BINFILE.spad (SPAD from IN)>>

<<FILE.o (O from NRLIB)>>
<<FILE.NRLIB (NRLIB from MID)>>
<<FILE.spad (SPAD from IN)>>

<<FILECAT.o (O from NRLIB)>>
<<FILECAT.NRLIB (NRLIB from MID)>>
<<FILECAT.spad (SPAD from IN)>>

<<KAFILE.o (O from NRLIB)>>
<<KAFILE.NRLIB (NRLIB from MID)>>
<<KAFILE.spad (SPAD from IN)>>

<<LIB.o (O from NRLIB)>>
<<LIB.NRLIB (NRLIB from MID)>>
<<LIB.spad (SPAD from IN)>>

<<TEXTFILE.o (O from NRLIB)>>
<<TEXTFILE.NRLIB (NRLIB from MID)>>
<<TEXTFILE.spad (SPAD from IN)>>

<<files.spad (SPAD from IN)>>
<<files.spad.dvi (DOC from IN)>>

<<FLOAT.o (O from NRLIB)>>
<<FLOAT.NRLIB (NRLIB from MID)>>
<<FLOAT.spad (SPAD from IN)>>

<<float.spad (SPAD from IN)>>
<<float.spad.dvi (DOC from IN)>>

<<ZMOD.o (O from NRLIB)>>
<<ZMOD.NRLIB (NRLIB from MID)>>
<<ZMOD.spad (SPAD from IN)>>

<<fmod.spad (SPAD from IN)>>
<<fmod.spad.dvi (DOC from IN)>>

<<FNAME.o (O from NRLIB)>>
<<FNAME.NRLIB (NRLIB from MID)>>
<<FNAME.spad (SPAD from IN)>>

<<FNCAT.o (O from NRLIB)>>
<<FNCAT.NRLIB (NRLIB from MID)>>
<<FNCAT.spad (SPAD from IN)>>

<<fname.spad (SPAD from IN)>>
<<fname.spad.dvi (DOC from IN)>>

<<COMM.o (O from NRLIB)>>
<<COMM.NRLIB (NRLIB from MID)>>
<<COMM.spad (SPAD from IN)>>

<<FNLA.o (O from NRLIB)>>
<<FNLA.NRLIB (NRLIB from MID)>>
<<FNLA.spad (SPAD from IN)>>

<<HB.o (O from NRLIB)>>
<<HB.NRLIB (NRLIB from MID)>>
<<HB.spad (SPAD from IN)>>

<<OSI.o (O from NRLIB)>>
<<OSI.NRLIB (NRLIB from MID)>>
<<OSI.spad (SPAD from IN)>>

<<fnla.spad (SPAD from IN)>>
<<fnla.spad.dvi (DOC from IN)>>

<<FORMULA.o (O from NRLIB)>>
<<FORMULA.NRLIB (NRLIB from MID)>>
<<FORMULA.spad (SPAD from IN)>>

<<FORMULA1.o (O from NRLIB)>>
<<FORMULA1.NRLIB (NRLIB from MID)>>
<<FORMULA1.spad (SPAD from IN)>>

<<formula.spad (SPAD from IN)>>
<<formula.spad.dvi (DOC from IN)>>

<<FMTC.o (O from NRLIB)>>
<<FMTC.NRLIB (NRLIB from MID)>>
<<FMTC.spad (SPAD from IN)>>

<<FORTCAT.o (O from NRLIB)>>
<<FORTCAT.NRLIB (NRLIB from MID)>>
<<FORTCAT.spad (SPAD from IN)>>

<<FORTFN.o (O from NRLIB)>>
<<FORTFN.NRLIB (NRLIB from MID)>>
<<FORTFN.spad (SPAD from IN)>>

<<FVC.o (O from NRLIB)>>
<<FVC.NRLIB (NRLIB from MID)>>
<<FVC.spad (SPAD from IN)>>

<<FVFUN.o (O from NRLIB)>>
<<FVFUN.NRLIB (NRLIB from MID)>>
<<FVFUN.spad (SPAD from IN)>>

<<FMC.o (O from NRLIB)>>
<<FMC.NRLIB (NRLIB from MID)>>
<<FMC.spad (SPAD from IN)>>

<<FMFUN.o (O from NRLIB)>>
<<FMFUN.NRLIB (NRLIB from MID)>>
<<FMFUN.spad (SPAD from IN)>>

<<fortcat.spad (SPAD from IN)>>
<<fortcat.spad.dvi (DOC from IN)>>

<<MCMPLX.o (O from NRLIB)>>
<<MCMPLX.NRLIB (NRLIB from MID)>>
<<MCMPLX.spad (SPAD from IN)>>

<<MFLOAT.o (O from NRLIB)>>
<<MFLOAT.NRLIB (NRLIB from MID)>>
<<MFLOAT.spad (SPAD from IN)>>

<<MINT.o (O from NRLIB)>>
<<MINT.NRLIB (NRLIB from MID)>>
<<MINT.spad (SPAD from IN)>>

<<fortmac.spad (SPAD from IN)>>
<<fortmac.spad.dvi (DOC from IN)>>

<<FCPAK1.o (O from NRLIB)>>
<<FCPAK1.NRLIB (NRLIB from MID)>>
<<FCPAK1.spad (SPAD from IN)>>

<<FOP.o (O from NRLIB)>>
<<FOP.NRLIB (NRLIB from MID)>>
<<FOP.spad (SPAD from IN)>>

<<FORT.o (O from NRLIB)>>
<<FORT.NRLIB (NRLIB from MID)>>
<<FORT.spad (SPAD from IN)>>

<<MCALCFN.o (O from NRLIB)>>
<<MCALCFN.NRLIB (NRLIB from MID)>>
<<MCALCFN.spad (SPAD from IN)>>

<<NAGSP.o (O from NRLIB)>>
<<NAGSP.NRLIB (NRLIB from MID)>>
<<NAGSP.spad (SPAD from IN)>>

<<TEMUTL.o (O from NRLIB)>>
<<TEMUTL.NRLIB (NRLIB from MID)>>
<<TEMUTL.spad (SPAD from IN)>>

<<fortpak.spad (SPAD from IN)>>
<<fortpak.spad.dvi (DOC from IN)>>

<<FC.o (O from NRLIB)>>
<<FC.NRLIB (NRLIB from MID)>>
<<FC.spad (SPAD from IN)>>

<<FEXPR.o (O from NRLIB)>>
<<FEXPR.NRLIB (NRLIB from MID)>>
<<FEXPR.spad (SPAD from IN)>>

<<FTEM.o (O from NRLIB)>>
<<FTEM.NRLIB (NRLIB from MID)>>
<<FTEM.spad (SPAD from IN)>>

<<FORTRAN.o (O from NRLIB)>>
<<FORTRAN.NRLIB (NRLIB from MID)>>
<<FORTRAN.spad (SPAD from IN)>>

<<M3D.o (O from NRLIB)>>
<<M3D.NRLIB (NRLIB from MID)>>
<<M3D.spad (SPAD from IN)>>

<<RESULT.o (O from NRLIB)>>
<<RESULT.NRLIB (NRLIB from MID)>>
<<RESULT.spad (SPAD from IN)>>

<<SWITCH.o (O from NRLIB)>>
<<SWITCH.NRLIB (NRLIB from MID)>>
<<SWITCH.spad (SPAD from IN)>>

<<SFORT.o (O from NRLIB)>>
<<SFORT.NRLIB (NRLIB from MID)>>
<<SFORT.spad (SPAD from IN)>>

<<fortran.spad (SPAD from IN)>>
<<fortran.spad.dvi (DOC from IN)>>

<<FST.o (O from NRLIB)>>
<<FST.NRLIB (NRLIB from MID)>>
<<FST.spad (SPAD from IN)>>

<<FT.o (O from NRLIB)>>
<<FT.NRLIB (NRLIB from MID)>>
<<FT.spad (SPAD from IN)>>

<<SYMS.o (O from NRLIB)>>
<<SYMS.NRLIB (NRLIB from MID)>>
<<SYMS.spad (SPAD from IN)>>

<<SYMTAB.o (O from NRLIB)>>
<<SYMTAB.NRLIB (NRLIB from MID)>>
<<SYMTAB.spad (SPAD from IN)>>

<<forttyp.spad (SPAD from IN)>>
<<forttyp.spad.dvi (DOC from IN)>>

<<FCOMP.o (O from NRLIB)>>
<<FCOMP.NRLIB (NRLIB from MID)>>
<<FCOMP.spad (SPAD from IN)>>

<<FSERIES.o (O from NRLIB)>>
<<FSERIES.NRLIB (NRLIB from MID)>>
<<FSERIES.spad (SPAD from IN)>>

<<fourier.spad (SPAD from IN)>>
<<fourier.spad.dvi (DOC from IN)>>

<<FPARFRAC.o (O from NRLIB)>>
<<FPARFRAC.NRLIB (NRLIB from MID)>>
<<FPARFRAC.spad (SPAD from IN)>>

<<fparfrac.spad (SPAD from IN)>>
<<fparfrac.spad.dvi (DOC from IN)>>

<<FRAC.o (O from NRLIB)>>
<<FRAC.NRLIB (NRLIB from MID)>>
<<FRAC.spad (SPAD from IN)>>

<<FRAC2.o (O from NRLIB)>>
<<FRAC2.NRLIB (NRLIB from MID)>>
<<FRAC2.spad (SPAD from IN)>>

<<LA.o (O from NRLIB)>>
<<LA.NRLIB (NRLIB from MID)>>
<<LA.spad (SPAD from IN)>>

<<LO.o (O from NRLIB)>>
<<LO.NRLIB (NRLIB from MID)>>
<<LO.spad (SPAD from IN)>>

<<LPEFRAC.o (O from NRLIB)>>
<<LPEFRAC.NRLIB (NRLIB from MID)>>
<<LPEFRAC.spad (SPAD from IN)>>

<<QFCAT-.o (O from NRLIB)>>
<<QFCAT-.NRLIB (NRLIB from MID)>>
<<QFCAT.o (O from NRLIB)>>
<<QFCAT.NRLIB (NRLIB from MID)>>
<<QFCAT.spad (SPAD from IN)>>
<<QFCAT-.o (BOOTSTRAP from MID)>>
<<QFCAT-.lsp (LISP from IN)>>
<<QFCAT.o (BOOTSTRAP from MID)>>
<<QFCAT.lsp (LISP from IN)>>

<<QFCAT2.o (O from NRLIB)>>
<<QFCAT2.NRLIB (NRLIB from MID)>>
<<QFCAT2.spad (SPAD from IN)>>

<<fraction.spad (SPAD from IN)>>
<<fraction.spad.dvi (DOC from IN)>>

<<FAGROUP.o (O from NRLIB)>>
<<FAGROUP.NRLIB (NRLIB from MID)>>
<<FAGROUP.spad (SPAD from IN)>>

<<FAMONC.o (O from NRLIB)>>
<<FAMONC.NRLIB (NRLIB from MID)>>
<<FAMONC.spad (SPAD from IN)>>

<<FAMONOID.o (O from NRLIB)>>
<<FAMONOID.NRLIB (NRLIB from MID)>>
<<FAMONOID.spad (SPAD from IN)>>

<<FGROUP.o (O from NRLIB)>>
<<FGROUP.NRLIB (NRLIB from MID)>>
<<FGROUP.spad (SPAD from IN)>>

<<FMONOID.o (O from NRLIB)>>
<<FMONOID.NRLIB (NRLIB from MID)>>
<<FMONOID.spad (SPAD from IN)>>

<<IFAMON.o (O from NRLIB)>>
<<IFAMON.NRLIB (NRLIB from MID)>>
<<IFAMON.spad (SPAD from IN)>>

<<LMOPS.o (O from NRLIB)>>
<<LMOPS.NRLIB (NRLIB from MID)>>
<<LMOPS.spad (SPAD from IN)>>

<<free.spad (SPAD from IN)>>
<<free.spad.dvi (DOC from IN)>>

<<FR.o (O from NRLIB)>>
<<FR.NRLIB (NRLIB from MID)>>
<<FR.spad (SPAD from IN)>>

<<FR2.o (O from NRLIB)>>
<<FR2.NRLIB (NRLIB from MID)>>
<<FR2.spad (SPAD from IN)>>

<<FRUTIL.o (O from NRLIB)>>
<<FRUTIL.NRLIB (NRLIB from MID)>>
<<FRUTIL.spad (SPAD from IN)>>

<<fr.spad (SPAD from IN)>>
<<fr.spad.dvi (DOC from IN)>>

<<FS2EXPXP.o (O from NRLIB)>>
<<FS2EXPXP.NRLIB (NRLIB from MID)>>
<<FS2EXPXP.spad (SPAD from IN)>>

<<fs2expxp.spad (SPAD from IN)>>
<<fs2expxp.spad.dvi (DOC from IN)>>

<<FS2UPS.o (O from NRLIB)>>
<<FS2UPS.NRLIB (NRLIB from MID)>>
<<FS2UPS.spad (SPAD from IN)>>

<<fs2ups.spad (SPAD from IN)>>
<<fs2ups.spad.dvi (DOC from IN)>>

<<ES-.o (O from NRLIB)>>
<<ES-.NRLIB (NRLIB from MID)>>
<<ES.o (O from NRLIB)>>
<<ES.NRLIB (NRLIB from MID)>>
<<ES.spad (SPAD from IN)>>
<<ES-.o (BOOTSTRAP from MID)>>
<<ES-.lsp (LISP from IN)>>
<<ES.o (BOOTSTRAP from MID)>>
<<ES.lsp (LISP from IN)>>

<<ES1.o (O from NRLIB)>>
<<ES1.NRLIB (NRLIB from MID)>>
<<ES1.spad (SPAD from IN)>>

<<ES2.o (O from NRLIB)>>
<<ES2.NRLIB (NRLIB from MID)>>
<<ES2.spad (SPAD from IN)>>

<<FS-.o (O from NRLIB)>>
<<FS-.NRLIB (NRLIB from MID)>>
<<FS.o (O from NRLIB)>>
<<FS.NRLIB (NRLIB from MID)>>
<<FS.spad (SPAD from IN)>>

<<FS2.o (O from NRLIB)>>
<<FS2.NRLIB (NRLIB from MID)>>
<<FS2.spad (SPAD from IN)>>

<<fspace.spad (SPAD from IN)>>
<<fspace.spad.dvi (DOC from IN)>>

<<FSUPFACT.o (O from NRLIB)>>
<<FSUPFACT.NRLIB (NRLIB from MID)>>
<<FSUPFACT.spad (SPAD from IN)>>

<<funcpkgs.spad (SPAD from IN)>>
<<funcpkgs.spad.dvi (DOC from IN)>>

<<BFUNCT.o (O from NRLIB)>>
<<BFUNCT.NRLIB (NRLIB from MID)>>
<<BFUNCT.spad (SPAD from IN)>>

<<functions.spad (SPAD from IN)>>
<<functions.spad.dvi (DOC from IN)>>

<<GALFACT.o (O from NRLIB)>>
<<GALFACT.NRLIB (NRLIB from MID)>>
<<GALFACT.spad (SPAD from IN)>>

<<galfact.spad (SPAD from IN)>>
<<galfact.spad.dvi (DOC from IN)>>

<<GALFACTU.o (O from NRLIB)>>
<<GALFACTU.NRLIB (NRLIB from MID)>>
<<GALFACTU.spad (SPAD from IN)>>

<<galfactu.spad (SPAD from IN)>>
<<galfactu.spad.dvi (DOC from IN)>>

<<GALPOLYU.o (O from NRLIB)>>
<<GALPOLYU.NRLIB (NRLIB from MID)>>
<<GALPOLYU.spad (SPAD from IN)>>

<<galpolyu.spad (SPAD from IN)>>
<<galpolyu.spad.dvi (DOC from IN)>>

<<GALUTIL.o (O from NRLIB)>>
<<GALUTIL.NRLIB (NRLIB from MID)>>
<<GALUTIL.spad (SPAD from IN)>>

<<galutil.spad (SPAD from IN)>>
<<galutil.spad.dvi (DOC from IN)>>

<<GAUSSFAC.o (O from NRLIB)>>
<<GAUSSFAC.NRLIB (NRLIB from MID)>>
<<GAUSSFAC.spad (SPAD from IN)>>

<<gaussfac.spad (SPAD from IN)>>
<<gaussfac.spad.dvi (DOC from IN)>>

<<CINTSLPE.o (O from NRLIB)>>
<<CINTSLPE.NRLIB (NRLIB from MID)>>
<<CINTSLPE.spad (SPAD from IN)>>

<<COMPCAT-.o (O from NRLIB)>>
<<COMPCAT-.NRLIB (NRLIB from MID)>>
<<COMPCAT.o (O from NRLIB)>>
<<COMPCAT.NRLIB (NRLIB from MID)>>
<<COMPCAT.spad (SPAD from IN)>>

<<COMPFACT.o (O from NRLIB)>>
<<COMPFACT.NRLIB (NRLIB from MID)>>
<<COMPFACT.spad (SPAD from IN)>>

<<COMPLEX.o (O from NRLIB)>>
<<COMPLEX.NRLIB (NRLIB from MID)>>
<<COMPLEX.spad (SPAD from IN)>>

<<COMPLEX2.o (O from NRLIB)>>
<<COMPLEX2.NRLIB (NRLIB from MID)>>
<<COMPLEX2.spad (SPAD from IN)>>

<<COMPLPAT.o (O from NRLIB)>>
<<COMPLPAT.NRLIB (NRLIB from MID)>>
<<COMPLPAT.spad (SPAD from IN)>>

<<CPMATCH.o (O from NRLIB)>>
<<CPMATCH.NRLIB (NRLIB from MID)>>
<<CPMATCH.spad (SPAD from IN)>>

<<gaussian.spad (SPAD from IN)>>
<<gaussian.spad.dvi (DOC from IN)>>

<<GBEUCLID.o (O from NRLIB)>>
<<GBEUCLID.NRLIB (NRLIB from MID)>>
<<GBEUCLID.spad (SPAD from IN)>>

<<gbeuclid.spad (SPAD from IN)>>
<<gbeuclid.spad.dvi (DOC from IN)>>

<<GBINTERN.o (O from NRLIB)>>
<<GBINTERN.NRLIB (NRLIB from MID)>>
<<GBINTERN.spad (SPAD from IN)>>

<<gbintern.spad (SPAD from IN)>>
<<gbintern.spad.dvi (DOC from IN)>>

<<GB.o (O from NRLIB)>>
<<GB.NRLIB (NRLIB from MID)>>
<<GB.spad (SPAD from IN)>>

<<gb.spad (SPAD from IN)>>
<<gb.spad.dvi (DOC from IN)>>

<<HDP.o (O from NRLIB)>>
<<HDP.NRLIB (NRLIB from MID)>>
<<HDP.spad (SPAD from IN)>>

<<ODP.o (O from NRLIB)>>
<<ODP.NRLIB (NRLIB from MID)>>
<<ODP.spad (SPAD from IN)>>

<<ORDFUNS.o (O from NRLIB)>>
<<ORDFUNS.NRLIB (NRLIB from MID)>>
<<ORDFUNS.spad (SPAD from IN)>>

<<SHDP.o (O from NRLIB)>>
<<SHDP.NRLIB (NRLIB from MID)>>
<<SHDP.spad (SPAD from IN)>>

<<gdirprod.spad (SPAD from IN)>>
<<gdirprod.spad.dvi (DOC from IN)>>

<<DMP.o (O from NRLIB)>>
<<DMP.NRLIB (NRLIB from MID)>>
<<DMP.spad (SPAD from IN)>>

<<GDMP.o (O from NRLIB)>>
<<GDMP.NRLIB (NRLIB from MID)>>
<<GDMP.spad (SPAD from IN)>>

<<HDMP.o (O from NRLIB)>>
<<HDMP.NRLIB (NRLIB from MID)>>
<<HDMP.spad (SPAD from IN)>>

<<gdpoly.spad (SPAD from IN)>>
<<gdpoly.spad.dvi (DOC from IN)>>

<<GENEEZ.o (O from NRLIB)>>
<<GENEEZ.NRLIB (NRLIB from MID)>>
<<GENEEZ.spad (SPAD from IN)>>

<<geneez.spad (SPAD from IN)>>
<<geneez.spad.dvi (DOC from IN)>>

<<CVMP.o (O from NRLIB)>>
<<CVMP.NRLIB (NRLIB from MID)>>
<<CVMP.spad (SPAD from IN)>>

<<GCNAALG.o (O from NRLIB)>>
<<GCNAALG.NRLIB (NRLIB from MID)>>
<<GCNAALG.spad (SPAD from IN)>>

<<generic.spad (SPAD from IN)>>
<<generic.spad.dvi (DOC from IN)>>

<<GENUFACT.o (O from NRLIB)>>
<<GENUFACT.NRLIB (NRLIB from MID)>>
<<GENUFACT.spad (SPAD from IN)>>

<<genufact.spad (SPAD from IN)>>
<<genufact.spad.dvi (DOC from IN)>>

<<GENUPS.o (O from NRLIB)>>
<<GENUPS.NRLIB (NRLIB from MID)>>
<<GENUPS.spad (SPAD from IN)>>

<<genups.spad (SPAD from IN)>>
<<genups.spad.dvi (DOC from IN)>>

<<GHENSEL.o (O from NRLIB)>>
<<GHENSEL.NRLIB (NRLIB from MID)>>
<<GHENSEL.spad (SPAD from IN)>>

<<ghensel.spad (SPAD from IN)>>
<<ghensel.spad.dvi (DOC from IN)>>

<<GENPGCD.o (O from NRLIB)>>
<<GENPGCD.NRLIB (NRLIB from MID)>>
<<GENPGCD.spad (SPAD from IN)>>

<<gpgcd.spad (SPAD from IN)>>
<<gpgcd.spad.dvi (DOC from IN)>>

<<LAUPOL.o (O from NRLIB)>>
<<LAUPOL.NRLIB (NRLIB from MID)>>
<<LAUPOL.spad (SPAD from IN)>>

<<gpol.spad (SPAD from IN)>>
<<gpol.spad.dvi (DOC from IN)>>

<<GRDEF.o (O from NRLIB)>>
<<GRDEF.NRLIB (NRLIB from MID)>>
<<GRDEF.spad (SPAD from IN)>>

<<grdef.spad (SPAD from IN)>>
<<grdef.spad.dvi (DOC from IN)>>

<<GBF.o (O from NRLIB)>>
<<GBF.NRLIB (NRLIB from MID)>>
<<GBF.spad (SPAD from IN)>>

<<groebf.spad (SPAD from IN)>>
<<groebf.spad.dvi (DOC from IN)>>

<<GROEBSOL.o (O from NRLIB)>>
<<GROEBSOL.NRLIB (NRLIB from MID)>>
<<GROEBSOL.spad (SPAD from IN)>>

<<groebsol.spad (SPAD from IN)>>
<<groebsol.spad.dvi (DOC from IN)>>

<<GSERIES.o (O from NRLIB)>>
<<GSERIES.NRLIB (NRLIB from MID)>>
<<GSERIES.spad (SPAD from IN)>>

<<gseries.spad (SPAD from IN)>>
<<gseries.spad.dvi (DOC from IN)>>

<<herm.as (SPAD from IN)>>
<<herm.as.dvi (DOC from IN)>>

<<IDEAL.o (O from NRLIB)>>
<<IDEAL.NRLIB (NRLIB from MID)>>
<<IDEAL.spad (SPAD from IN)>>

<<ideal.spad (SPAD from IN)>>
<<ideal.spad.dvi (DOC from IN)>>

<<IDECOMP.o (O from NRLIB)>>
<<IDECOMP.NRLIB (NRLIB from MID)>>
<<IDECOMP.spad (SPAD from IN)>>

<<idecomp.spad (SPAD from IN)>>
<<idecomp.spad.dvi (DOC from IN)>>

<<IDPAG.o (O from NRLIB)>>
<<IDPAG.NRLIB (NRLIB from MID)>>
<<IDPAG.spad (SPAD from IN)>>

<<IDPAM.o (O from NRLIB)>>
<<IDPAM.NRLIB (NRLIB from MID)>>
<<IDPAM.spad (SPAD from IN)>>

<<IDPC.o (O from NRLIB)>>
<<IDPC.NRLIB (NRLIB from MID)>>
<<IDPC.spad (SPAD from IN)>>

<<IDPO.o (O from NRLIB)>>
<<IDPO.NRLIB (NRLIB from MID)>>
<<IDPO.spad (SPAD from IN)>>

<<IDPOAM.o (O from NRLIB)>>
<<IDPOAM.NRLIB (NRLIB from MID)>>
<<IDPOAM.spad (SPAD from IN)>>

<<IDPOAMS.o (O from NRLIB)>>
<<IDPOAMS.NRLIB (NRLIB from MID)>>
<<IDPOAMS.spad (SPAD from IN)>>

<<indexedp.spad (SPAD from IN)>>
<<indexedp.spad.dvi (DOC from IN)>>

<<INFPROD0.o (O from NRLIB)>>
<<INFPROD0.NRLIB (NRLIB from MID)>>
<<INFPROD0.spad (SPAD from IN)>>

<<INPRODFF.o (O from NRLIB)>>
<<INPRODFF.NRLIB (NRLIB from MID)>>
<<INPRODFF.spad (SPAD from IN)>>

<<INPRODPF.o (O from NRLIB)>>
<<INPRODPF.NRLIB (NRLIB from MID)>>
<<INPRODPF.spad (SPAD from IN)>>

<<STINPROD.o (O from NRLIB)>>
<<STINPROD.NRLIB (NRLIB from MID)>>
<<STINPROD.spad (SPAD from IN)>>

<<infprod.spad (SPAD from IN)>>
<<infprod.spad.dvi (DOC from IN)>>

<<INTAF.o (O from NRLIB)>>
<<INTAF.NRLIB (NRLIB from MID)>>
<<INTAF.spad (SPAD from IN)>>

<<INTG0.o (O from NRLIB)>>
<<INTG0.NRLIB (NRLIB from MID)>>
<<INTG0.spad (SPAD from IN)>>

<<INTPAF.o (O from NRLIB)>>
<<INTPAF.NRLIB (NRLIB from MID)>>
<<INTPAF.spad (SPAD from IN)>>

<<intaf.spad (SPAD from IN)>>
<<intaf.spad.dvi (DOC from IN)>>

<<DBLRESP.o (O from NRLIB)>>
<<DBLRESP.NRLIB (NRLIB from MID)>>
<<DBLRESP.spad (SPAD from IN)>>

<<INTALG.o (O from NRLIB)>>
<<INTALG.NRLIB (NRLIB from MID)>>
<<INTALG.spad (SPAD from IN)>>

<<INTHERAL.o (O from NRLIB)>>
<<INTHERAL.NRLIB (NRLIB from MID)>>
<<INTHERAL.spad (SPAD from IN)>>

<<intalg.spad (SPAD from IN)>>
<<intalg.spad.dvi (DOC from IN)>>

<<IR.o (O from NRLIB)>>
<<IR.NRLIB (NRLIB from MID)>>
<<IR.spad (SPAD from IN)>>

<<IR2.o (O from NRLIB)>>
<<IR2.NRLIB (NRLIB from MID)>>
<<IR2.spad (SPAD from IN)>>

<<intaux.spad (SPAD from IN)>>
<<intaux.spad.dvi (DOC from IN)>>

<<IBATOOL.o (O from NRLIB)>>
<<IBATOOL.NRLIB (NRLIB from MID)>>
<<IBATOOL.spad (SPAD from IN)>>

<<FFINTBAS.o (O from NRLIB)>>
<<FFINTBAS.NRLIB (NRLIB from MID)>>
<<FFINTBAS.spad (SPAD from IN)>>

<<NFINTBAS.o (O from NRLIB)>>
<<NFINTBAS.NRLIB (NRLIB from MID)>>
<<NFINTBAS.spad (SPAD from IN)>>

<<TRIMAT.o (O from NRLIB)>>
<<TRIMAT.NRLIB (NRLIB from MID)>>
<<TRIMAT.spad (SPAD from IN)>>

<<WFFINTBS.o (O from NRLIB)>>
<<WFFINTBS.NRLIB (NRLIB from MID)>>
<<WFFINTBS.spad (SPAD from IN)>>

<<intclos.spad (SPAD from IN)>>
<<intclos.spad.dvi (DOC from IN)>>

<<INTEF.o (O from NRLIB)>>
<<INTEF.NRLIB (NRLIB from MID)>>
<<INTEF.spad (SPAD from IN)>>

<<intef.spad (SPAD from IN)>>
<<intef.spad.dvi (DOC from IN)>>

<<INT.o (O from NRLIB)>>
<<INT.NRLIB (NRLIB from MID)>>
<<INT.spad (SPAD from IN)>>
<<INT.o (BOOTSTRAP from MID)>>
<<INT.lsp (LISP from IN)>>

<<INTSLPE.o (O from NRLIB)>>
<<INTSLPE.NRLIB (NRLIB from MID)>>
<<INTSLPE.spad (SPAD from IN)>>

<<NNI.o (O from NRLIB)>>
<<NNI.NRLIB (NRLIB from MID)>>
<<NNI.spad (SPAD from IN)>>
<<NNI.o (BOOTSTRAP from MID)>>
<<NNI.lsp (LISP from IN)>>

<<PI.o (O from NRLIB)>>
<<PI.NRLIB (NRLIB from MID)>>
<<PI.spad (SPAD from IN)>>
<<PI.o (BOOTSTRAP from MID)>>
<<PI.lsp (LISP from IN)>>

<<ROMAN.o (O from NRLIB)>>
<<ROMAN.NRLIB (NRLIB from MID)>>
<<ROMAN.spad (SPAD from IN)>>

<<integer.spad (SPAD from IN)>>
<<integer.spad.dvi (DOC from IN)>>

<<FSCINT.o (O from NRLIB)>>
<<FSCINT.NRLIB (NRLIB from MID)>>
<<FSCINT.spad (SPAD from IN)>>

<<FSINT.o (O from NRLIB)>>
<<FSINT.NRLIB (NRLIB from MID)>>
<<FSINT.spad (SPAD from IN)>>

<<integrat.spad (SPAD from IN)>>
<<integrat.spad.dvi (DOC from IN)>>

<<interval.as (SPAD from IN)>>
<<interval.as.dvi (DOC from IN)>>

<<INTCAT.o (O from NRLIB)>>
<<INTCAT.NRLIB (NRLIB from MID)>>
<<INTCAT.spad (SPAD from IN)>>

<<INTRVL.o (O from NRLIB)>>
<<INTRVL.NRLIB (NRLIB from MID)>>
<<INTRVL.spad (SPAD from IN)>>

<<interval.spad (SPAD from IN)>>
<<interval.spad.dvi (DOC from IN)>>

<<INTFACT.o (O from NRLIB)>>
<<INTFACT.NRLIB (NRLIB from MID)>>
<<INTFACT.spad (SPAD from IN)>>

<<IROOT.o (O from NRLIB)>>
<<IROOT.NRLIB (NRLIB from MID)>>
<<IROOT.spad (SPAD from IN)>>

<<PRIMES.o (O from NRLIB)>>
<<PRIMES.NRLIB (NRLIB from MID)>>
<<PRIMES.spad (SPAD from IN)>>

<<intfact.spad (SPAD from IN)>>
<<intfact.spad.dvi (DOC from IN)>>

<<INTPM.o (O from NRLIB)>>
<<INTPM.NRLIB (NRLIB from MID)>>
<<INTPM.spad (SPAD from IN)>>

<<intpm.spad (SPAD from IN)>>
<<intpm.spad.dvi (DOC from IN)>>

<<INTHERTR.o (O from NRLIB)>>
<<INTHERTR.NRLIB (NRLIB from MID)>>
<<INTHERTR.spad (SPAD from IN)>>

<<INTRAT.o (O from NRLIB)>>
<<INTRAT.NRLIB (NRLIB from MID)>>
<<INTRAT.spad (SPAD from IN)>>

<<INTRF.o (O from NRLIB)>>
<<INTRF.NRLIB (NRLIB from MID)>>
<<INTRF.spad (SPAD from IN)>>

<<INTTR.o (O from NRLIB)>>
<<INTTR.NRLIB (NRLIB from MID)>>
<<INTTR.spad (SPAD from IN)>>

<<MONOTOOL.o (O from NRLIB)>>
<<MONOTOOL.NRLIB (NRLIB from MID)>>
<<MONOTOOL.spad (SPAD from IN)>>

<<SUBRESP.o (O from NRLIB)>>
<<SUBRESP.NRLIB (NRLIB from MID)>>
<<SUBRESP.spad (SPAD from IN)>>

<<intrf.spad (SPAD from IN)>>
<<intrf.spad.dvi (DOC from IN)>>

<<invnode.as (SPAD from IN)>>
<<invnode.as.dvi (DOC from IN)>>

<<invrender.as (SPAD from IN)>>
<<invrender.as.dvi (DOC from IN)>>

<<invtypes.as (SPAD from IN)>>
<<invtypes.as.dvi (DOC from IN)>>

<<invutils.as (SPAD from IN)>>
<<invutils.as.dvi (DOC from IN)>>

<<IR2F.o (O from NRLIB)>>
<<IR2F.NRLIB (NRLIB from MID)>>
<<IR2F.spad (SPAD from IN)>>

<<IRRF2F.o (O from NRLIB)>>
<<IRRF2F.NRLIB (NRLIB from MID)>>
<<IRRF2F.spad (SPAD from IN)>>

<<irexpand.spad (SPAD from IN)>>
<<irexpand.spad.dvi (DOC from IN)>>

<<IRSN.o (O from NRLIB)>>
<<IRSN.NRLIB (NRLIB from MID)>>
<<IRSN.spad (SPAD from IN)>>

<<irsn.spad (SPAD from IN)>>
<<irsn.spad.dvi (DOC from IN)>>

<<ITFUN2.o (O from NRLIB)>>
<<ITFUN2.NRLIB (NRLIB from MID)>>
<<ITFUN2.spad (SPAD from IN)>>

<<ITFUN3.o (O from NRLIB)>>
<<ITFUN3.NRLIB (NRLIB from MID)>>
<<ITFUN3.spad (SPAD from IN)>>

<<ITUPLE.o (O from NRLIB)>>
<<ITUPLE.NRLIB (NRLIB from MID)>>
<<ITUPLE.spad (SPAD from IN)>>

<<ituple.spad (SPAD from IN)>>
<<ituple.spad.dvi (DOC from IN)>>

<<iviews.as (SPAD from IN)>>
<<iviews.as.dvi (DOC from IN)>>

<<CACHSET.o (O from NRLIB)>>
<<CACHSET.NRLIB (NRLIB from MID)>>
<<CACHSET.spad (SPAD from IN)>>

<<KERNEL.o (O from NRLIB)>>
<<KERNEL.NRLIB (NRLIB from MID)>>
<<KERNEL.spad (SPAD from IN)>>

<<KERNEL2.o (O from NRLIB)>>
<<KERNEL2.NRLIB (NRLIB from MID)>>
<<KERNEL2.spad (SPAD from IN)>>

<<MKCHSET.o (O from NRLIB)>>
<<MKCHSET.NRLIB (NRLIB from MID)>>
<<MKCHSET.spad (SPAD from IN)>>

<<SCACHE.o (O from NRLIB)>>
<<SCACHE.NRLIB (NRLIB from MID)>>
<<SCACHE.spad (SPAD from IN)>>

<<kl.spad (SPAD from IN)>>
<<kl.spad.dvi (DOC from IN)>>

<<KOVACIC.o (O from NRLIB)>>
<<KOVACIC.NRLIB (NRLIB from MID)>>
<<KOVACIC.spad (SPAD from IN)>>

<<kovacic.spad (SPAD from IN)>>
<<kovacic.spad.dvi (DOC from IN)>>

<<INVLAPLA.o (O from NRLIB)>>
<<INVLAPLA.NRLIB (NRLIB from MID)>>
<<INVLAPLA.spad (SPAD from IN)>>

<<LAPLACE.o (O from NRLIB)>>
<<LAPLACE.NRLIB (NRLIB from MID)>>
<<LAPLACE.spad (SPAD from IN)>>

<<laplace.spad (SPAD from IN)>>
<<laplace.spad.dvi (DOC from IN)>>

<<ULS.o (O from NRLIB)>>
<<ULS.NRLIB (NRLIB from MID)>>
<<ULS.spad (SPAD from IN)>>

<<ULSCCAT-.o (O from NRLIB)>>
<<ULSCCAT-.NRLIB (NRLIB from MID)>>
<<ULSCCAT.o (O from NRLIB)>>
<<ULSCCAT.NRLIB (NRLIB from MID)>>
<<ULSCCAT.spad (SPAD from IN)>>

<<ULSCONS.o (O from NRLIB)>>
<<ULSCONS.NRLIB (NRLIB from MID)>>
<<ULSCONS.spad (SPAD from IN)>>

<<ULS2.o (O from NRLIB)>>
<<ULS2.NRLIB (NRLIB from MID)>>
<<ULS2.spad (SPAD from IN)>>

<<laurent.spad (SPAD from IN)>>
<<laurent.spad.dvi (DOC from IN)>>

<<LEADCDET.o (O from NRLIB)>>
<<LEADCDET.NRLIB (NRLIB from MID)>>
<<LEADCDET.spad (SPAD from IN)>>

<<leadcdet.spad (SPAD from IN)>>
<<leadcdet.spad.dvi (DOC from IN)>>

<<JORDAN.o (O from NRLIB)>>
<<JORDAN.NRLIB (NRLIB from MID)>>
<<JORDAN.spad (SPAD from IN)>>

<<LIE.o (O from NRLIB)>>
<<LIE.NRLIB (NRLIB from MID)>>
<<LIE.spad (SPAD from IN)>>

<<LSQM.o (O from NRLIB)>>
<<LSQM.NRLIB (NRLIB from MID)>>
<<LSQM.spad (SPAD from IN)>>

<<lie.spad (SPAD from IN)>>
<<lie.spad.dvi (DOC from IN)>>

<<LIMITPS.o (O from NRLIB)>>
<<LIMITPS.NRLIB (NRLIB from MID)>>
<<LIMITPS.spad (SPAD from IN)>>

<<SIGNEF.o (O from NRLIB)>>
<<SIGNEF.NRLIB (NRLIB from MID)>>
<<SIGNEF.spad (SPAD from IN)>>

<<limitps.spad (SPAD from IN)>>
<<limitps.spad.dvi (DOC from IN)>>

<<LINDEP.o (O from NRLIB)>>
<<LINDEP.NRLIB (NRLIB from MID)>>
<<LINDEP.spad (SPAD from IN)>>

<<ZLINDEP.o (O from NRLIB)>>
<<ZLINDEP.NRLIB (NRLIB from MID)>>
<<ZLINDEP.spad (SPAD from IN)>>

<<lindep.spad (SPAD from IN)>>
<<lindep.spad.dvi (DOC from IN)>>

<<LGROBP.o (O from NRLIB)>>
<<LGROBP.NRLIB (NRLIB from MID)>>
<<LGROBP.spad (SPAD from IN)>>

<<lingrob.spad (SPAD from IN)>>
<<lingrob.spad.dvi (DOC from IN)>>

<<LF.o (O from NRLIB)>>
<<LF.NRLIB (NRLIB from MID)>>
<<LF.spad (SPAD from IN)>>

<<liouv.spad (SPAD from IN)>>
<<liouv.spad.dvi (DOC from IN)>>

<<HEUGCD.o (O from NRLIB)>>
<<HEUGCD.NRLIB (NRLIB from MID)>>
<<HEUGCD.spad (SPAD from IN)>>

<<listgcd.spad (SPAD from IN)>>
<<listgcd.spad.dvi (DOC from IN)>>

<<ILIST.o (O from NRLIB)>>
<<ILIST.NRLIB (NRLIB from MID)>>
<<ILIST.spad (SPAD from IN)>>
<<ILIST.o (BOOTSTRAP from MID)>>
<<ILIST.lsp (LISP from IN)>>

<<LIST.o (O from NRLIB)>>
<<LIST.NRLIB (NRLIB from MID)>>
<<LIST.spad (SPAD from IN)>>
<<LIST.o (BOOTSTRAP from MID)>>
<<LIST.lsp (LISP from IN)>>

<<ALIST.o (O from NRLIB)>>
<<ALIST.NRLIB (NRLIB from MID)>>
<<ALIST.spad (SPAD from IN)>>

<<LIST2.o (O from NRLIB)>>
<<LIST2.NRLIB (NRLIB from MID)>>
<<LIST2.spad (SPAD from IN)>>

<<LIST2MAP.o (O from NRLIB)>>
<<LIST2MAP.NRLIB (NRLIB from MID)>>
<<LIST2MAP.spad (SPAD from IN)>>

<<LIST3.o (O from NRLIB)>>
<<LIST3.NRLIB (NRLIB from MID)>>
<<LIST3.spad (SPAD from IN)>>

<<list.spad (SPAD from IN)>>
<<list.spad.dvi (DOC from IN)>>

<<LMDICT.o (O from NRLIB)>>
<<LMDICT.NRLIB (NRLIB from MID)>>
<<LMDICT.spad (SPAD from IN)>>

<<lmdict.spad (SPAD from IN)>>
<<lmdict.spad.dvi (DOC from IN)>>

<<ASSOCEQ.o (O from NRLIB)>>
<<ASSOCEQ.NRLIB (NRLIB from MID)>>
<<ASSOCEQ.spad (SPAD from IN)>>

<<LODOF.o (O from NRLIB)>>
<<LODOF.NRLIB (NRLIB from MID)>>
<<LODOF.spad (SPAD from IN)>>

<<PREASSOC.o (O from NRLIB)>>
<<PREASSOC.NRLIB (NRLIB from MID)>>
<<PREASSOC.spad (SPAD from IN)>>

<<SETMN.o (O from NRLIB)>>
<<SETMN.NRLIB (NRLIB from MID)>>
<<SETMN.spad (SPAD from IN)>>

<<lodof.spad (SPAD from IN)>>
<<lodof.spad.dvi (DOC from IN)>>

<<DPMO.o (O from NRLIB)>>
<<DPMO.NRLIB (NRLIB from MID)>>
<<DPMO.spad (SPAD from IN)>>

<<DPMM.o (O from NRLIB)>>
<<DPMM.NRLIB (NRLIB from MID)>>
<<DPMM.spad (SPAD from IN)>>

<<MLO.o (O from NRLIB)>>
<<MLO.NRLIB (NRLIB from MID)>>
<<MLO.spad (SPAD from IN)>>

<<NCODIV.o (O from NRLIB)>>
<<NCODIV.NRLIB (NRLIB from MID)>>
<<NCODIV.spad (SPAD from IN)>>

<<ODR.o (O from NRLIB)>>
<<ODR.NRLIB (NRLIB from MID)>>
<<ODR.spad (SPAD from IN)>>

<<OMLO.o (O from NRLIB)>>
<<OMLO.NRLIB (NRLIB from MID)>>
<<OMLO.spad (SPAD from IN)>>

<<lodop.spad (SPAD from IN)>>
<<lodop.spad.dvi (DOC from IN)>>

<<LODO.o (O from NRLIB)>>
<<LODO.NRLIB (NRLIB from MID)>>
<<LODO.spad (SPAD from IN)>>

<<LODO1.o (O from NRLIB)>>
<<LODO1.NRLIB (NRLIB from MID)>>
<<LODO1.spad (SPAD from IN)>>

<<LODO2.o (O from NRLIB)>>
<<LODO2.NRLIB (NRLIB from MID)>>
<<LODO2.spad (SPAD from IN)>>

<<LODOCAT-.o (O from NRLIB)>>
<<LODOCAT-.NRLIB (NRLIB from MID)>>
<<LODOCAT.o (O from NRLIB)>>
<<LODOCAT.NRLIB (NRLIB from MID)>>
<<LODOCAT.spad (SPAD from IN)>>

<<LODOOPS.o (O from NRLIB)>>
<<LODOOPS.NRLIB (NRLIB from MID)>>
<<LODOOPS.spad (SPAD from IN)>>

<<lodo.spad (SPAD from IN)>>
<<lodo.spad.dvi (DOC from IN)>>

<<FACTFUNC.o (O from NRLIB)>>
<<FACTFUNC.NRLIB (NRLIB from MID)>>
<<FACTFUNC.spad (SPAD from IN)>>

<<ALGMANIP.o (O from NRLIB)>>
<<ALGMANIP.NRLIB (NRLIB from MID)>>
<<ALGMANIP.spad (SPAD from IN)>>

<<POLYROOT.o (O from NRLIB)>>
<<POLYROOT.NRLIB (NRLIB from MID)>>
<<POLYROOT.spad (SPAD from IN)>>

<<SIMPAN.o (O from NRLIB)>>
<<SIMPAN.NRLIB (NRLIB from MID)>>
<<SIMPAN.spad (SPAD from IN)>>

<<TRMANIP.o (O from NRLIB)>>
<<TRMANIP.NRLIB (NRLIB from MID)>>
<<TRMANIP.spad (SPAD from IN)>>

<<manip.spad (SPAD from IN)>>
<<manip.spad.dvi (DOC from IN)>>

<<MAPHACK1.o (O from NRLIB)>>
<<MAPHACK1.NRLIB (NRLIB from MID)>>
<<MAPHACK1.spad (SPAD from IN)>>

<<MAPHACK2.o (O from NRLIB)>>
<<MAPHACK2.NRLIB (NRLIB from MID)>>
<<MAPHACK2.spad (SPAD from IN)>>

<<MAPHACK3.o (O from NRLIB)>>
<<MAPHACK3.NRLIB (NRLIB from MID)>>
<<MAPHACK3.spad (SPAD from IN)>>

<<MAPPKG1.o (O from NRLIB)>>
<<MAPPKG1.NRLIB (NRLIB from MID)>>
<<MAPPKG1.spad (SPAD from IN)>>

<<MAPPKG2.o (O from NRLIB)>>
<<MAPPKG2.NRLIB (NRLIB from MID)>>
<<MAPPKG2.spad (SPAD from IN)>>

<<MAPPKG3.o (O from NRLIB)>>
<<MAPPKG3.NRLIB (NRLIB from MID)>>
<<MAPPKG3.spad (SPAD from IN)>>

<<mappkg.spad (SPAD from IN)>>
<<mappkg.spad.dvi (DOC from IN)>>

<<MATCAT-.o (O from NRLIB)>>
<<MATCAT-.NRLIB (NRLIB from MID)>>
<<MATCAT.o (O from NRLIB)>>
<<MATCAT.NRLIB (NRLIB from MID)>>
<<MATCAT.spad (SPAD from IN)>>

<<RMATCAT-.o (O from NRLIB)>>
<<RMATCAT-.NRLIB (NRLIB from MID)>>
<<RMATCAT.o (O from NRLIB)>>
<<RMATCAT.NRLIB (NRLIB from MID)>>
<<RMATCAT.spad (SPAD from IN)>>

<<SMATCAT-.o (O from NRLIB)>>
<<SMATCAT-.NRLIB (NRLIB from MID)>>
<<SMATCAT.o (O from NRLIB)>>
<<SMATCAT.NRLIB (NRLIB from MID)>>
<<SMATCAT.spad (SPAD from IN)>>

<<matcat.spad (SPAD from IN)>>
<<matcat.spad.dvi (DOC from IN)>>

<<IMATLIN.o (O from NRLIB)>>
<<IMATLIN.NRLIB (NRLIB from MID)>>
<<IMATLIN.spad (SPAD from IN)>>

<<IMATQF.o (O from NRLIB)>>
<<IMATQF.NRLIB (NRLIB from MID)>>
<<IMATQF.spad (SPAD from IN)>>

<<MATCAT2.o (O from NRLIB)>>
<<MATCAT2.NRLIB (NRLIB from MID)>>
<<MATCAT2.spad (SPAD from IN)>>

<<MATLIN.o (O from NRLIB)>>
<<MATLIN.NRLIB (NRLIB from MID)>>
<<MATLIN.spad (SPAD from IN)>>

<<RMCAT2.o (O from NRLIB)>>
<<RMCAT2.NRLIB (NRLIB from MID)>>
<<RMCAT2.spad (SPAD from IN)>>

<<matfuns.spad (SPAD from IN)>>
<<matfuns.spad.dvi (DOC from IN)>>

<<IMATRIX.o (O from NRLIB)>>
<<IMATRIX.NRLIB (NRLIB from MID)>>
<<IMATRIX.spad (SPAD from IN)>>

<<MATRIX.o (O from NRLIB)>>
<<MATRIX.NRLIB (NRLIB from MID)>>
<<MATRIX.spad (SPAD from IN)>>

<<RMATRIX.o (O from NRLIB)>>
<<RMATRIX.NRLIB (NRLIB from MID)>>
<<RMATRIX.spad (SPAD from IN)>>

<<SQMATRIX.o (O from NRLIB)>>
<<SQMATRIX.NRLIB (NRLIB from MID)>>
<<SQMATRIX.spad (SPAD from IN)>>

<<matrix.spad (SPAD from IN)>>
<<matrix.spad.dvi (DOC from IN)>>

<<MATSTOR.o (O from NRLIB)>>
<<MATSTOR.NRLIB (NRLIB from MID)>>
<<MATSTOR.spad (SPAD from IN)>>

<<matstor.spad (SPAD from IN)>>
<<matstor.spad.dvi (DOC from IN)>>

<<MESH.o (O from NRLIB)>>
<<MESH.NRLIB (NRLIB from MID)>>
<<MESH.spad (SPAD from IN)>>

<<mesh.spad (SPAD from IN)>>
<<mesh.spad.dvi (DOC from IN)>>

<<MFINFACT.o (O from NRLIB)>>
<<MFINFACT.NRLIB (NRLIB from MID)>>
<<MFINFACT.spad (SPAD from IN)>>

<<mfinfact.spad (SPAD from IN)>>
<<mfinfact.spad.dvi (DOC from IN)>>

<<SAOS.o (O from NRLIB)>>
<<SAOS.NRLIB (NRLIB from MID)>>
<<SAOS.spad (SPAD from IN)>>

<<misc.spad (SPAD from IN)>>
<<misc.spad.dvi (DOC from IN)>>

<<INFORM.o (O from NRLIB)>>
<<INFORM.NRLIB (NRLIB from MID)>>
<<INFORM.spad (SPAD from IN)>>

<<INFORM1.o (O from NRLIB)>>
<<INFORM1.NRLIB (NRLIB from MID)>>
<<INFORM1.spad (SPAD from IN)>>

<<MKFLCFN.o (O from NRLIB)>>
<<MKFLCFN.NRLIB (NRLIB from MID)>>
<<MKFLCFN.spad (SPAD from IN)>>

<<MKFUNC.o (O from NRLIB)>>
<<MKFUNC.NRLIB (NRLIB from MID)>>
<<MKFUNC.spad (SPAD from IN)>>

<<MKBCFUNC.o (O from NRLIB)>>
<<MKBCFUNC.NRLIB (NRLIB from MID)>>
<<MKBCFUNC.spad (SPAD from IN)>>

<<MKUCFUNC.o (O from NRLIB)>>
<<MKUCFUNC.NRLIB (NRLIB from MID)>>
<<MKUCFUNC.spad (SPAD from IN)>>

<<mkfunc.spad (SPAD from IN)>>
<<mkfunc.spad.dvi (DOC from IN)>>

<<MKRECORD.o (O from NRLIB)>>
<<MKRECORD.NRLIB (NRLIB from MID)>>
<<MKRECORD.spad (SPAD from IN)>>

<<mkrecord.spad (SPAD from IN)>>
<<mkrecord.spad.dvi (DOC from IN)>>

<<mlift.spad.jhd.dvi (DOC from IN)>>

<<MLIFT.o (O from NRLIB)>>
<<MLIFT.NRLIB (NRLIB from MID)>>
<<MLIFT.spad (SPAD from IN)>>

<<mlift.spad (SPAD from IN)>>
<<mlift.spad.dvi (DOC from IN)>>

<<MDDFACT.o (O from NRLIB)>>
<<MDDFACT.NRLIB (NRLIB from MID)>>
<<MDDFACT.spad (SPAD from IN)>>

<<moddfact.spad (SPAD from IN)>>
<<moddfact.spad.dvi (DOC from IN)>>

<<INMODGCD.o (O from NRLIB)>>
<<INMODGCD.NRLIB (NRLIB from MID)>>
<<INMODGCD.spad (SPAD from IN)>>

<<modgcd.spad (SPAD from IN)>>
<<modgcd.spad.dvi (DOC from IN)>>

<<GMODPOL.o (O from NRLIB)>>
<<GMODPOL.NRLIB (NRLIB from MID)>>
<<GMODPOL.spad (SPAD from IN)>>

<<MODMONOM.o (O from NRLIB)>>
<<MODMONOM.NRLIB (NRLIB from MID)>>
<<MODMONOM.spad (SPAD from IN)>>

<<modmonom.spad (SPAD from IN)>>
<<modmonom.spad.dvi (DOC from IN)>>

<<MODMON.o (O from NRLIB)>>
<<MODMON.NRLIB (NRLIB from MID)>>
<<MODMON.spad (SPAD from IN)>>

<<modmon.spad (SPAD from IN)>>
<<modmon.spad.dvi (DOC from IN)>>

<<EMR.o (O from NRLIB)>>
<<EMR.NRLIB (NRLIB from MID)>>
<<EMR.spad (SPAD from IN)>>

<<MODFIELD.o (O from NRLIB)>>
<<MODFIELD.NRLIB (NRLIB from MID)>>
<<MODFIELD.spad (SPAD from IN)>>

<<MODRING.o (O from NRLIB)>>
<<MODRING.NRLIB (NRLIB from MID)>>
<<MODRING.spad (SPAD from IN)>>

<<modring.spad (SPAD from IN)>>
<<modring.spad.dvi (DOC from IN)>>

<<MOEBIUS.o (O from NRLIB)>>
<<MOEBIUS.NRLIB (NRLIB from MID)>>
<<MOEBIUS.spad (SPAD from IN)>>

<<moebius.spad (SPAD from IN)>>
<<moebius.spad.dvi (DOC from IN)>>

<<MRF2.o (O from NRLIB)>>
<<MRF2.NRLIB (NRLIB from MID)>>
<<MRF2.spad (SPAD from IN)>>

<<MRING.o (O from NRLIB)>>
<<MRING.NRLIB (NRLIB from MID)>>
<<MRING.spad (SPAD from IN)>>

<<mring.spad (SPAD from IN)>>
<<mring.spad.dvi (DOC from IN)>>

<<MSET.o (O from NRLIB)>>
<<MSET.NRLIB (NRLIB from MID)>>
<<MSET.spad (SPAD from IN)>>

<<mset.spad (SPAD from IN)>>
<<mset.spad.dvi (DOC from IN)>>

<<SMTS.o (O from NRLIB)>>
<<SMTS.NRLIB (NRLIB from MID)>>
<<SMTS.spad (SPAD from IN)>>

<<TS.o (O from NRLIB)>>
<<TS.NRLIB (NRLIB from MID)>>
<<TS.spad (SPAD from IN)>>

<<mts.spad (SPAD from IN)>>
<<mts.spad.dvi (DOC from IN)>>

<<ALGMFACT.o (O from NRLIB)>>
<<ALGMFACT.NRLIB (NRLIB from MID)>>
<<ALGMFACT.spad (SPAD from IN)>>

<<INNMFACT.o (O from NRLIB)>>
<<INNMFACT.NRLIB (NRLIB from MID)>>
<<INNMFACT.spad (SPAD from IN)>>

<<MULTFACT.o (O from NRLIB)>>
<<MULTFACT.NRLIB (NRLIB from MID)>>
<<MULTFACT.spad (SPAD from IN)>>

<<multfact.spad (SPAD from IN)>>
<<multfact.spad.dvi (DOC from IN)>>

<<INDE.o (O from NRLIB)>>
<<INDE.NRLIB (NRLIB from MID)>>
<<INDE.spad (SPAD from IN)>>

<<MPOLY.o (O from NRLIB)>>
<<MPOLY.NRLIB (NRLIB from MID)>>
<<MPOLY.spad (SPAD from IN)>>

<<POLY.o (O from NRLIB)>>
<<POLY.NRLIB (NRLIB from MID)>>
<<POLY.spad (SPAD from IN)>>

<<POLY2.o (O from NRLIB)>>
<<POLY2.NRLIB (NRLIB from MID)>>
<<POLY2.spad (SPAD from IN)>>

<<SMP.o (O from NRLIB)>>
<<SMP.NRLIB (NRLIB from MID)>>
<<SMP.spad (SPAD from IN)>>

<<multpoly.spad (SPAD from IN)>>
<<multpoly.spad.dvi (DOC from IN)>>

<<MULTSQFR.o (O from NRLIB)>>
<<MULTSQFR.NRLIB (NRLIB from MID)>>
<<MULTSQFR.spad (SPAD from IN)>>

<<multsqfr.spad (SPAD from IN)>>
<<multsqfr.spad.dvi (DOC from IN)>>

<<FINAALG-.o (O from NRLIB)>>
<<FINAALG-.NRLIB (NRLIB from MID)>>
<<FINAALG.o (O from NRLIB)>>
<<FINAALG.NRLIB (NRLIB from MID)>>
<<FINAALG.spad (SPAD from IN)>>

<<FRNAALG-.o (O from NRLIB)>>
<<FRNAALG-.NRLIB (NRLIB from MID)>>
<<FRNAALG.o (O from NRLIB)>>
<<FRNAALG.NRLIB (NRLIB from MID)>>
<<FRNAALG.spad (SPAD from IN)>>

<<MONAD-.o (O from NRLIB)>>
<<MONAD-.NRLIB (NRLIB from MID)>>
<<MONAD.o (O from NRLIB)>>
<<MONAD.NRLIB (NRLIB from MID)>>
<<MONAD.spad (SPAD from IN)>>

<<MONADWU-.o (O from NRLIB)>>
<<MONADWU-.NRLIB (NRLIB from MID)>>
<<MONADWU.o (O from NRLIB)>>
<<MONADWU.NRLIB (NRLIB from MID)>>
<<MONADWU.spad (SPAD from IN)>>

<<NAALG-.o (O from NRLIB)>>
<<NAALG-.NRLIB (NRLIB from MID)>>
<<NAALG.o (O from NRLIB)>>
<<NAALG.NRLIB (NRLIB from MID)>>
<<NAALG.spad (SPAD from IN)>>

<<NARNG-.o (O from NRLIB)>>
<<NARNG-.NRLIB (NRLIB from MID)>>
<<NARNG.o (O from NRLIB)>>
<<NARNG.NRLIB (NRLIB from MID)>>
<<NARNG.spad (SPAD from IN)>>

<<NASRING-.o (O from NRLIB)>>
<<NASRING-.NRLIB (NRLIB from MID)>>
<<NASRING.o (O from NRLIB)>>
<<NASRING.NRLIB (NRLIB from MID)>>
<<NASRING.spad (SPAD from IN)>>

<<naalgc.spad (SPAD from IN)>>
<<naalgc.spad.dvi (DOC from IN)>>

<<ALGPKG.o (O from NRLIB)>>
<<ALGPKG.NRLIB (NRLIB from MID)>>
<<ALGPKG.spad (SPAD from IN)>>

<<ALGSC.o (O from NRLIB)>>
<<ALGSC.NRLIB (NRLIB from MID)>>
<<ALGSC.spad (SPAD from IN)>>

<<FRNAAF2.o (O from NRLIB)>>
<<FRNAAF2.NRLIB (NRLIB from MID)>>
<<FRNAAF2.spad (SPAD from IN)>>

<<SCPKG.o (O from NRLIB)>>
<<SCPKG.NRLIB (NRLIB from MID)>>
<<SCPKG.spad (SPAD from IN)>>

<<naalg.spad (SPAD from IN)>>
<<naalg.spad.dvi (DOC from IN)>>

<<ndftip.as (SPAD from IN)>>
<<ndftip.as.dvi (DOC from IN)>>

<<nepip.as (SPAD from IN)>>
<<nepip.as.dvi (DOC from IN)>>

<<IPRNTPK.o (O from NRLIB)>>
<<IPRNTPK.NRLIB (NRLIB from MID)>>
<<IPRNTPK.spad (SPAD from IN)>>

<<SPLNODE.o (O from NRLIB)>>
<<SPLNODE.NRLIB (NRLIB from MID)>>
<<SPLNODE.spad (SPAD from IN)>>

<<SPLTREE.o (O from NRLIB)>>
<<SPLTREE.NRLIB (NRLIB from MID)>>
<<SPLTREE.spad (SPAD from IN)>>

<<TBCMPPK.o (O from NRLIB)>>
<<TBCMPPK.NRLIB (NRLIB from MID)>>
<<TBCMPPK.spad (SPAD from IN)>>

<<newdata.spad (SPAD from IN)>>
<<newdata.spad.dvi (DOC from IN)>>

<<COMPPROP.o (O from NRLIB)>>
<<COMPPROP.NRLIB (NRLIB from MID)>>
<<COMPPROP.spad (SPAD from IN)>>

<<SUBSPACE.o (O from NRLIB)>>
<<SUBSPACE.NRLIB (NRLIB from MID)>>
<<SUBSPACE.spad (SPAD from IN)>>

<<POINT.o (O from NRLIB)>>
<<POINT.NRLIB (NRLIB from MID)>>
<<POINT.spad (SPAD from IN)>>

<<PTCAT.o (O from NRLIB)>>
<<PTCAT.NRLIB (NRLIB from MID)>>
<<PTCAT.spad (SPAD from IN)>>

<<PTFUNC2.o (O from NRLIB)>>
<<PTFUNC2.NRLIB (NRLIB from MID)>>
<<PTFUNC2.spad (SPAD from IN)>>

<<PTPACK.o (O from NRLIB)>>
<<PTPACK.NRLIB (NRLIB from MID)>>
<<PTPACK.spad (SPAD from IN)>>

<<newpoint.spad (SPAD from IN)>>
<<newpoint.spad.dvi (DOC from IN)>>

<<NSMP.o (O from NRLIB)>>
<<NSMP.NRLIB (NRLIB from MID)>>
<<NSMP.spad (SPAD from IN)>>

<<NSUP.o (O from NRLIB)>>
<<NSUP.NRLIB (NRLIB from MID)>>
<<NSUP.spad (SPAD from IN)>>

<<NSUP2.o (O from NRLIB)>>
<<NSUP2.NRLIB (NRLIB from MID)>>
<<NSUP2.spad (SPAD from IN)>>

<<RPOLCAT-.o (O from NRLIB)>>
<<RPOLCAT-.NRLIB (NRLIB from MID)>>
<<RPOLCAT.o (O from NRLIB)>>
<<RPOLCAT.NRLIB (NRLIB from MID)>>
<<RPOLCAT.spad (SPAD from IN)>>

<<newpoly.spad (SPAD from IN)>>
<<newpoly.spad.dvi (DOC from IN)>>

<<NLINSOL.o (O from NRLIB)>>
<<NLINSOL.NRLIB (NRLIB from MID)>>
<<NLINSOL.spad (SPAD from IN)>>

<<RETSOL.o (O from NRLIB)>>
<<RETSOL.NRLIB (NRLIB from MID)>>
<<RETSOL.spad (SPAD from IN)>>

<<nlinsol.spad (SPAD from IN)>>
<<nlinsol.spad.dvi (DOC from IN)>>

<<NODE1.o (O from NRLIB)>>
<<NODE1.NRLIB (NRLIB from MID)>>
<<NODE1.spad (SPAD from IN)>>

<<nlode.spad (SPAD from IN)>>
<<nlode.spad.dvi (DOC from IN)>>

<<noptip.as (SPAD from IN)>>
<<noptip.as.dvi (DOC from IN)>>

<<NPCOEF.o (O from NRLIB)>>
<<NPCOEF.NRLIB (NRLIB from MID)>>
<<NPCOEF.spad (SPAD from IN)>>

<<npcoef.spad (SPAD from IN)>>
<<npcoef.spad.dvi (DOC from IN)>>

<<nqip.as (SPAD from IN)>>
<<nqip.as.dvi (DOC from IN)>>

<<nrc.as (SPAD from IN)>>
<<nrc.as.dvi (DOC from IN)>>

<<NORMPK.o (O from NRLIB)>>
<<NORMPK.NRLIB (NRLIB from MID)>>
<<NORMPK.spad (SPAD from IN)>>

<<NTSCAT.o (O from NRLIB)>>
<<NTSCAT.NRLIB (NRLIB from MID)>>
<<NTSCAT.spad (SPAD from IN)>>

<<nregset.spad (SPAD from IN)>>
<<nregset.spad.dvi (DOC from IN)>>

<<nsfip.as (SPAD from IN)>>
<<nsfip.as.dvi (DOC from IN)>>

<<LAZM3PK.o (O from NRLIB)>>
<<LAZM3PK.NRLIB (NRLIB from MID)>>
<<LAZM3PK.spad (SPAD from IN)>>

<<SNTSCAT.o (O from NRLIB)>>
<<SNTSCAT.NRLIB (NRLIB from MID)>>
<<SNTSCAT.spad (SPAD from IN)>>

<<nsregset.spad (SPAD from IN)>>
<<nsregset.spad.dvi (DOC from IN)>>

<<INEP.o (O from NRLIB)>>
<<INEP.NRLIB (NRLIB from MID)>>
<<INEP.spad (SPAD from IN)>>

<<NCEP.o (O from NRLIB)>>
<<NCEP.NRLIB (NRLIB from MID)>>
<<NCEP.spad (SPAD from IN)>>

<<NREP.o (O from NRLIB)>>
<<NREP.NRLIB (NRLIB from MID)>>
<<NREP.spad (SPAD from IN)>>

<<numeigen.spad (SPAD from IN)>>
<<numeigen.spad.dvi (DOC from IN)>>

<<DRAWHACK.o (O from NRLIB)>>
<<DRAWHACK.NRLIB (NRLIB from MID)>>
<<DRAWHACK.spad (SPAD from IN)>>

<<NUMERIC.o (O from NRLIB)>>
<<NUMERIC.NRLIB (NRLIB from MID)>>
<<NUMERIC.spad (SPAD from IN)>>

<<numeric.spad (SPAD from IN)>>
<<numeric.spad.dvi (DOC from IN)>>

<<NUMODE.o (O from NRLIB)>>
<<NUMODE.NRLIB (NRLIB from MID)>>
<<NUMODE.spad (SPAD from IN)>>

<<numode.spad (SPAD from IN)>>
<<numode.spad.dvi (DOC from IN)>>

<<NUMQUAD.o (O from NRLIB)>>
<<NUMQUAD.NRLIB (NRLIB from MID)>>
<<NUMQUAD.spad (SPAD from IN)>>

<<numquad.spad (SPAD from IN)>>
<<numquad.spad.dvi (DOC from IN)>>

<<FLOATCP.o (O from NRLIB)>>
<<FLOATCP.NRLIB (NRLIB from MID)>>
<<FLOATCP.spad (SPAD from IN)>>

<<FLOATRP.o (O from NRLIB)>>
<<FLOATRP.NRLIB (NRLIB from MID)>>
<<FLOATRP.spad (SPAD from IN)>>

<<INFSP.o (O from NRLIB)>>
<<INFSP.NRLIB (NRLIB from MID)>>
<<INFSP.spad (SPAD from IN)>>

<<numsolve.spad (SPAD from IN)>>
<<numsolve.spad.dvi (DOC from IN)>>

<<INTHEORY.o (O from NRLIB)>>
<<INTHEORY.NRLIB (NRLIB from MID)>>
<<INTHEORY.spad (SPAD from IN)>>

<<PNTHEORY.o (O from NRLIB)>>
<<PNTHEORY.NRLIB (NRLIB from MID)>>
<<PNTHEORY.spad (SPAD from IN)>>

<<numtheor.spad (SPAD from IN)>>
<<numtheor.spad.dvi (DOC from IN)>>

<<OC-.o (O from NRLIB)>>
<<OC-.NRLIB (NRLIB from MID)>>
<<OC.o (O from NRLIB)>>
<<OC.NRLIB (NRLIB from MID)>>
<<OC.spad (SPAD from IN)>>

<<OCT.o (O from NRLIB)>>
<<OCT.NRLIB (NRLIB from MID)>>
<<OCT.spad (SPAD from IN)>>

<<OCTCT2.o (O from NRLIB)>>
<<OCTCT2.NRLIB (NRLIB from MID)>>
<<OCTCT2.spad (SPAD from IN)>>

<<oct.spad (SPAD from IN)>>
<<oct.spad.dvi (DOC from IN)>>

<<ODEPAL.o (O from NRLIB)>>
<<ODEPAL.NRLIB (NRLIB from MID)>>
<<ODEPAL.spad (SPAD from IN)>>

<<ODERED.o (O from NRLIB)>>
<<ODERED.NRLIB (NRLIB from MID)>>
<<ODERED.spad (SPAD from IN)>>

<<ODESYS.o (O from NRLIB)>>
<<ODESYS.NRLIB (NRLIB from MID)>>
<<ODESYS.spad (SPAD from IN)>>

<<odealg.spad (SPAD from IN)>>
<<odealg.spad.dvi (DOC from IN)>>

<<LODEEF.o (O from NRLIB)>>
<<LODEEF.NRLIB (NRLIB from MID)>>
<<LODEEF.spad (SPAD from IN)>>

<<ODEEF.o (O from NRLIB)>>
<<ODEEF.NRLIB (NRLIB from MID)>>
<<ODEEF.spad (SPAD from IN)>>

<<REDORDER.o (O from NRLIB)>>
<<REDORDER.NRLIB (NRLIB from MID)>>
<<REDORDER.spad (SPAD from IN)>>

<<odeef.spad (SPAD from IN)>>
<<odeef.spad.dvi (DOC from IN)>>

<<BALFACT.o (O from NRLIB)>>
<<BALFACT.NRLIB (NRLIB from MID)>>
<<BALFACT.spad (SPAD from IN)>>

<<BOUNDZRO.o (O from NRLIB)>>
<<BOUNDZRO.NRLIB (NRLIB from MID)>>
<<BOUNDZRO.spad (SPAD from IN)>>

<<ODECONST.o (O from NRLIB)>>
<<ODECONST.NRLIB (NRLIB from MID)>>
<<ODECONST.spad (SPAD from IN)>>

<<ODEINT.o (O from NRLIB)>>
<<ODEINT.NRLIB (NRLIB from MID)>>
<<ODEINT.spad (SPAD from IN)>>

<<ODEPRIM.o (O from NRLIB)>>
<<ODEPRIM.NRLIB (NRLIB from MID)>>
<<ODEPRIM.spad (SPAD from IN)>>

<<ODERAT.o (O from NRLIB)>>
<<ODERAT.NRLIB (NRLIB from MID)>>
<<ODERAT.spad (SPAD from IN)>>

<<ODETOOLS.o (O from NRLIB)>>
<<ODETOOLS.NRLIB (NRLIB from MID)>>
<<ODETOOLS.spad (SPAD from IN)>>

<<UTSODETL.o (O from NRLIB)>>
<<UTSODETL.NRLIB (NRLIB from MID)>>
<<UTSODETL.spad (SPAD from IN)>>

<<oderf.spad (SPAD from IN)>>
<<oderf.spad.dvi (DOC from IN)>>

<<OM.o (O from NRLIB)>>
<<OM.NRLIB (NRLIB from MID)>>
<<OM.spad (SPAD from IN)>>

<<omcat.spad (SPAD from IN)>>
<<omcat.spad.dvi (DOC from IN)>>

<<OMCONN.o (O from NRLIB)>>
<<OMCONN.NRLIB (NRLIB from MID)>>
<<OMCONN.spad (SPAD from IN)>>

<<OMDEV.o (O from NRLIB)>>
<<OMDEV.NRLIB (NRLIB from MID)>>
<<OMDEV.spad (SPAD from IN)>>

<<OMENC.o (O from NRLIB)>>
<<OMENC.NRLIB (NRLIB from MID)>>
<<OMENC.spad (SPAD from IN)>>

<<OMPKG.o (O from NRLIB)>>
<<OMPKG.NRLIB (NRLIB from MID)>>
<<OMPKG.spad (SPAD from IN)>>

<<omdev.spad (SPAD from IN)>>
<<omdev.spad.dvi (DOC from IN)>>

<<OMERR.o (O from NRLIB)>>
<<OMERR.NRLIB (NRLIB from MID)>>
<<OMERR.spad (SPAD from IN)>>

<<OMERRK.o (O from NRLIB)>>
<<OMERRK.NRLIB (NRLIB from MID)>>
<<OMERRK.spad (SPAD from IN)>>

<<omerror.spad (SPAD from IN)>>
<<omerror.spad.dvi (DOC from IN)>>

<<OMSERVER.o (O from NRLIB)>>
<<OMSERVER.NRLIB (NRLIB from MID)>>
<<OMSERVER.spad (SPAD from IN)>>

<<omserver.spad (SPAD from IN)>>
<<omserver.spad.dvi (DOC from IN)>>

<<MODOP.o (O from NRLIB)>>
<<MODOP.NRLIB (NRLIB from MID)>>
<<MODOP.spad (SPAD from IN)>>

<<OP.o (O from NRLIB)>>
<<OP.NRLIB (NRLIB from MID)>>
<<OP.spad (SPAD from IN)>>

<<opalg.spad (SPAD from IN)>>
<<opalg.spad.dvi (DOC from IN)>>

<<OMEXPR.o (O from NRLIB)>>
<<OMEXPR.NRLIB (NRLIB from MID)>>
<<OMEXPR.spad (SPAD from IN)>>

<<openmath.spad (SPAD from IN)>>
<<openmath.spad.dvi (DOC from IN)>>

<<BOP.o (O from NRLIB)>>
<<BOP.NRLIB (NRLIB from MID)>>
<<BOP.spad (SPAD from IN)>>

<<BOP1.o (O from NRLIB)>>
<<BOP1.NRLIB (NRLIB from MID)>>
<<BOP1.spad (SPAD from IN)>>

<<COMMONOP.o (O from NRLIB)>>
<<COMMONOP.NRLIB (NRLIB from MID)>>
<<COMMONOP.spad (SPAD from IN)>>

<<op.spad (SPAD from IN)>>
<<op.spad.dvi (DOC from IN)>>

<<APPLYORE.o (O from NRLIB)>>
<<APPLYORE.NRLIB (NRLIB from MID)>>
<<APPLYORE.spad (SPAD from IN)>>

<<AUTOMOR.o (O from NRLIB)>>
<<AUTOMOR.NRLIB (NRLIB from MID)>>
<<AUTOMOR.spad (SPAD from IN)>>

<<OREPCAT-.o (O from NRLIB)>>
<<OREPCAT-.NRLIB (NRLIB from MID)>>
<<OREPCAT.o (O from NRLIB)>>
<<OREPCAT.NRLIB (NRLIB from MID)>>
<<OREPCAT.spad (SPAD from IN)>>

<<OREPCTO.o (O from NRLIB)>>
<<OREPCTO.NRLIB (NRLIB from MID)>>
<<OREPCTO.spad (SPAD from IN)>>

<<ORESUP.o (O from NRLIB)>>
<<ORESUP.NRLIB (NRLIB from MID)>>
<<ORESUP.spad (SPAD from IN)>>

<<OREUP.o (O from NRLIB)>>
<<OREUP.NRLIB (NRLIB from MID)>>
<<OREUP.spad (SPAD from IN)>>

<<ore.spad (SPAD from IN)>>
<<ore.spad.dvi (DOC from IN)>>

<<NUMFMT.o (O from NRLIB)>>
<<NUMFMT.NRLIB (NRLIB from MID)>>
<<NUMFMT.spad (SPAD from IN)>>

<<OUTFORM.o (O from NRLIB)>>
<<OUTFORM.NRLIB (NRLIB from MID)>>
<<OUTFORM.spad (SPAD from IN)>>
<<OUTFORM.o (BOOTSTRAP from MID)>>
<<OUTFORM.lsp (LISP from IN)>>

<<outform.spad (SPAD from IN)>>
<<outform.spad.dvi (DOC from IN)>>

<<DISPLAY.o (O from NRLIB)>>
<<DISPLAY.NRLIB (NRLIB from MID)>>
<<DISPLAY.spad (SPAD from IN)>>

<<OUT.o (O from NRLIB)>>
<<OUT.NRLIB (NRLIB from MID)>>
<<OUT.spad (SPAD from IN)>>

<<SPECOUT.o (O from NRLIB)>>
<<SPECOUT.NRLIB (NRLIB from MID)>>
<<SPECOUT.spad (SPAD from IN)>>

<<out.spad (SPAD from IN)>>
<<out.spad.dvi (DOC from IN)>>

<<PADE.o (O from NRLIB)>>
<<PADE.NRLIB (NRLIB from MID)>>
<<PADE.spad (SPAD from IN)>>

<<PADEPAC.o (O from NRLIB)>>
<<PADEPAC.NRLIB (NRLIB from MID)>>
<<PADEPAC.spad (SPAD from IN)>>

<<pade.spad (SPAD from IN)>>
<<pade.spad.dvi (DOC from IN)>>

<<IBACHIN.o (O from NRLIB)>>
<<IBACHIN.NRLIB (NRLIB from MID)>>
<<IBACHIN.spad (SPAD from IN)>>

<<IBPTOOLS.o (O from NRLIB)>>
<<IBPTOOLS.NRLIB (NRLIB from MID)>>
<<IBPTOOLS.spad (SPAD from IN)>>

<<PWFFINTB.o (O from NRLIB)>>
<<PWFFINTB.NRLIB (NRLIB from MID)>>
<<PWFFINTB.spad (SPAD from IN)>>

<<padiclib.spad (SPAD from IN)>>
<<padiclib.spad.dvi (DOC from IN)>>

<<BPADIC.o (O from NRLIB)>>
<<BPADIC.NRLIB (NRLIB from MID)>>
<<BPADIC.spad (SPAD from IN)>>

<<BPADICRT.o (O from NRLIB)>>
<<BPADICRT.NRLIB (NRLIB from MID)>>
<<BPADICRT.spad (SPAD from IN)>>

<<IPADIC.o (O from NRLIB)>>
<<IPADIC.NRLIB (NRLIB from MID)>>
<<IPADIC.spad (SPAD from IN)>>

<<PADIC.o (O from NRLIB)>>
<<PADIC.NRLIB (NRLIB from MID)>>
<<PADIC.spad (SPAD from IN)>>

<<PADICCT.o (O from NRLIB)>>
<<PADICCT.NRLIB (NRLIB from MID)>>
<<PADICCT.spad (SPAD from IN)>>

<<PADICRAT.o (O from NRLIB)>>
<<PADICRAT.NRLIB (NRLIB from MID)>>
<<PADICRAT.spad (SPAD from IN)>>

<<PADICRC.o (O from NRLIB)>>
<<PADICRC.NRLIB (NRLIB from MID)>>
<<PADICRC.spad (SPAD from IN)>>

<<padic.spad (SPAD from IN)>>
<<padic.spad.dvi (DOC from IN)>>

<<PARPCURV.o (O from NRLIB)>>
<<PARPCURV.NRLIB (NRLIB from MID)>>
<<PARPCURV.spad (SPAD from IN)>>

<<PARPC2.o (O from NRLIB)>>
<<PARPC2.NRLIB (NRLIB from MID)>>
<<PARPC2.spad (SPAD from IN)>>

<<PARSCURV.o (O from NRLIB)>>
<<PARSCURV.NRLIB (NRLIB from MID)>>
<<PARSCURV.spad (SPAD from IN)>>

<<PARSC2.o (O from NRLIB)>>
<<PARSC2.NRLIB (NRLIB from MID)>>
<<PARSC2.spad (SPAD from IN)>>

<<PARSURF.o (O from NRLIB)>>
<<PARSURF.NRLIB (NRLIB from MID)>>
<<PARSURF.spad (SPAD from IN)>>

<<PARSU2.o (O from NRLIB)>>
<<PARSU2.NRLIB (NRLIB from MID)>>
<<PARSU2.spad (SPAD from IN)>>

<<paramete.spad (SPAD from IN)>>
<<paramete.spad.dvi (DOC from IN)>>

<<PARTPERM.o (O from NRLIB)>>
<<PARTPERM.NRLIB (NRLIB from MID)>>
<<PARTPERM.spad (SPAD from IN)>>

<<partperm.spad (SPAD from IN)>>
<<partperm.spad.dvi (DOC from IN)>>

<<FPATMAB.o (O from NRLIB)>>
<<FPATMAB.NRLIB (NRLIB from MID)>>
<<FPATMAB.spad (SPAD from IN)>>

<<PATLRES.o (O from NRLIB)>>
<<PATLRES.NRLIB (NRLIB from MID)>>
<<PATLRES.spad (SPAD from IN)>>

<<PATMAB.o (O from NRLIB)>>
<<PATMAB.NRLIB (NRLIB from MID)>>
<<PATMAB.spad (SPAD from IN)>>

<<PATRES.o (O from NRLIB)>>
<<PATRES.NRLIB (NRLIB from MID)>>
<<PATRES.spad (SPAD from IN)>>

<<PATRES2.o (O from NRLIB)>>
<<PATRES2.NRLIB (NRLIB from MID)>>
<<PATRES2.spad (SPAD from IN)>>

<<PMDOWN.o (O from NRLIB)>>
<<PMDOWN.NRLIB (NRLIB from MID)>>
<<PMDOWN.spad (SPAD from IN)>>

<<PMKERNEL.o (O from NRLIB)>>
<<PMKERNEL.NRLIB (NRLIB from MID)>>
<<PMKERNEL.spad (SPAD from IN)>>

<<PMLSAGG.o (O from NRLIB)>>
<<PMLSAGG.NRLIB (NRLIB from MID)>>
<<PMLSAGG.spad (SPAD from IN)>>

<<PMSYM.o (O from NRLIB)>>
<<PMSYM.NRLIB (NRLIB from MID)>>
<<PMSYM.spad (SPAD from IN)>>

<<PMTOOLS.o (O from NRLIB)>>
<<PMTOOLS.NRLIB (NRLIB from MID)>>
<<PMTOOLS.spad (SPAD from IN)>>

<<patmatch1.spad (SPAD from IN)>>
<<patmatch1.spad.dvi (DOC from IN)>>

<<PATMATCH.o (O from NRLIB)>>
<<PATMATCH.NRLIB (NRLIB from MID)>>
<<PATMATCH.spad (SPAD from IN)>>

<<PMFS.o (O from NRLIB)>>
<<PMFS.NRLIB (NRLIB from MID)>>
<<PMFS.spad (SPAD from IN)>>

<<PMINS.o (O from NRLIB)>>
<<PMINS.NRLIB (NRLIB from MID)>>
<<PMINS.spad (SPAD from IN)>>

<<PMPLCAT.o (O from NRLIB)>>
<<PMPLCAT.NRLIB (NRLIB from MID)>>
<<PMPLCAT.spad (SPAD from IN)>>

<<PMQFCAT.o (O from NRLIB)>>
<<PMQFCAT.NRLIB (NRLIB from MID)>>
<<PMQFCAT.spad (SPAD from IN)>>

<<patmatch2.spad (SPAD from IN)>>
<<patmatch2.spad.dvi (DOC from IN)>>

<<PATAB.o (O from NRLIB)>>
<<PATAB.NRLIB (NRLIB from MID)>>
<<PATAB.spad (SPAD from IN)>>

<<PATTERN.o (O from NRLIB)>>
<<PATTERN.NRLIB (NRLIB from MID)>>
<<PATTERN.spad (SPAD from IN)>>

<<PATTERN1.o (O from NRLIB)>>
<<PATTERN1.NRLIB (NRLIB from MID)>>
<<PATTERN1.spad (SPAD from IN)>>

<<PATTERN2.o (O from NRLIB)>>
<<PATTERN2.NRLIB (NRLIB from MID)>>
<<PATTERN2.spad (SPAD from IN)>>

<<pattern.spad (SPAD from IN)>>
<<pattern.spad.dvi (DOC from IN)>>

<<PPCURVE.o (O from NRLIB)>>
<<PPCURVE.NRLIB (NRLIB from MID)>>
<<PPCURVE.spad (SPAD from IN)>>

<<PSCURVE.o (O from NRLIB)>>
<<PSCURVE.NRLIB (NRLIB from MID)>>
<<PSCURVE.spad (SPAD from IN)>>

<<pcurve.spad (SPAD from IN)>>
<<pcurve.spad.dvi (DOC from IN)>>

<<PCOMP.o (O from NRLIB)>>
<<PCOMP.NRLIB (NRLIB from MID)>>
<<PCOMP.spad (SPAD from IN)>>

<<PDECOMP.o (O from NRLIB)>>
<<PDECOMP.NRLIB (NRLIB from MID)>>
<<PDECOMP.spad (SPAD from IN)>>

<<pdecomp.spad (SPAD from IN)>>
<<pdecomp.spad.dvi (DOC from IN)>>

<<GRAY.o (O from NRLIB)>>
<<GRAY.NRLIB (NRLIB from MID)>>
<<GRAY.spad (SPAD from IN)>>

<<PERMAN.o (O from NRLIB)>>
<<PERMAN.NRLIB (NRLIB from MID)>>
<<PERMAN.spad (SPAD from IN)>>

<<perman.spad (SPAD from IN)>>
<<perman.spad.dvi (DOC from IN)>>

<<PERMGRP.o (O from NRLIB)>>
<<PERMGRP.NRLIB (NRLIB from MID)>>
<<PERMGRP.spad (SPAD from IN)>>

<<PGE.o (O from NRLIB)>>
<<PGE.NRLIB (NRLIB from MID)>>
<<PGE.spad (SPAD from IN)>>

<<permgrps.spad (SPAD from IN)>>
<<permgrps.spad.dvi (DOC from IN)>>

<<PERM.o (O from NRLIB)>>
<<PERM.NRLIB (NRLIB from MID)>>
<<PERM.spad (SPAD from IN)>>

<<PERMCAT.o (O from NRLIB)>>
<<PERMCAT.NRLIB (NRLIB from MID)>>
<<PERMCAT.spad (SPAD from IN)>>

<<perm.spad (SPAD from IN)>>
<<perm.spad.dvi (DOC from IN)>>

<<PFBR.o (O from NRLIB)>>
<<PFBR.NRLIB (NRLIB from MID)>>
<<PFBR.spad (SPAD from IN)>>

<<PFBRU.o (O from NRLIB)>>
<<PFBRU.NRLIB (NRLIB from MID)>>
<<PFBRU.spad (SPAD from IN)>>

<<pfbr.spad (SPAD from IN)>>
<<pfbr.spad.dvi (DOC from IN)>>

<<FORDER.o (O from NRLIB)>>
<<FORDER.NRLIB (NRLIB from MID)>>
<<FORDER.spad (SPAD from IN)>>

<<FSRED.o (O from NRLIB)>>
<<FSRED.NRLIB (NRLIB from MID)>>
<<FSRED.spad (SPAD from IN)>>

<<PFO.o (O from NRLIB)>>
<<PFO.NRLIB (NRLIB from MID)>>
<<PFO.spad (SPAD from IN)>>

<<PFOQ.o (O from NRLIB)>>
<<PFOQ.NRLIB (NRLIB from MID)>>
<<PFOQ.spad (SPAD from IN)>>

<<PFOTOOLS.o (O from NRLIB)>>
<<PFOTOOLS.NRLIB (NRLIB from MID)>>
<<PFOTOOLS.spad (SPAD from IN)>>

<<RDIV.o (O from NRLIB)>>
<<RDIV.NRLIB (NRLIB from MID)>>
<<RDIV.spad (SPAD from IN)>>

<<pfo.spad (SPAD from IN)>>
<<pfo.spad.dvi (DOC from IN)>>

<<PFR.o (O from NRLIB)>>
<<PFR.NRLIB (NRLIB from MID)>>
<<PFR.spad (SPAD from IN)>>

<<PFRPAC.o (O from NRLIB)>>
<<PFRPAC.NRLIB (NRLIB from MID)>>
<<PFRPAC.spad (SPAD from IN)>>

<<pfr.spad (SPAD from IN)>>
<<pfr.spad.dvi (DOC from IN)>>

<<IPF.o (O from NRLIB)>>
<<IPF.NRLIB (NRLIB from MID)>>
<<IPF.spad (SPAD from IN)>>

<<PF.o (O from NRLIB)>>
<<PF.NRLIB (NRLIB from MID)>>
<<PF.spad (SPAD from IN)>>

<<pf.spad (SPAD from IN)>>
<<pf.spad.dvi (DOC from IN)>>

<<PGCD.o (O from NRLIB)>>
<<PGCD.NRLIB (NRLIB from MID)>>
<<PGCD.spad (SPAD from IN)>>

<<pgcd.spad (SPAD from IN)>>
<<pgcd.spad.dvi (DOC from IN)>>

<<PGROEB.o (O from NRLIB)>>
<<PGROEB.NRLIB (NRLIB from MID)>>
<<PGROEB.spad (SPAD from IN)>>

<<pgrobner.spad (SPAD from IN)>>
<<pgrobner.spad.dvi (DOC from IN)>>

<<PINTERP.o (O from NRLIB)>>
<<PINTERP.NRLIB (NRLIB from MID)>>
<<PINTERP.spad (SPAD from IN)>>

<<PINTERPA.o (O from NRLIB)>>
<<PINTERPA.NRLIB (NRLIB from MID)>>
<<PINTERPA.spad (SPAD from IN)>>

<<pinterp.spad (SPAD from IN)>>
<<pinterp.spad.dvi (DOC from IN)>>

<<PLEQN.o (O from NRLIB)>>
<<PLEQN.NRLIB (NRLIB from MID)>>
<<PLEQN.spad (SPAD from IN)>>

<<pleqn.spad (SPAD from IN)>>
<<pleqn.spad.dvi (DOC from IN)>>

<<PLOT3D.o (O from NRLIB)>>
<<PLOT3D.NRLIB (NRLIB from MID)>>
<<PLOT3D.spad (SPAD from IN)>>

<<plot3d.spad (SPAD from IN)>>
<<plot3d.spad.dvi (DOC from IN)>>

<<PLOT1.o (O from NRLIB)>>
<<PLOT1.NRLIB (NRLIB from MID)>>
<<PLOT1.spad (SPAD from IN)>>

<<PLOT.o (O from NRLIB)>>
<<PLOT.NRLIB (NRLIB from MID)>>
<<PLOT.spad (SPAD from IN)>>

<<plot.spad (SPAD from IN)>>
<<plot.spad.dvi (DOC from IN)>>

<<PLOTTOOL.o (O from NRLIB)>>
<<PLOTTOOL.NRLIB (NRLIB from MID)>>
<<PLOTTOOL.spad (SPAD from IN)>>

<<plottool.spad (SPAD from IN)>>
<<plottool.spad.dvi (DOC from IN)>>

<<GPOLSET.o (O from NRLIB)>>
<<GPOLSET.NRLIB (NRLIB from MID)>>
<<GPOLSET.spad (SPAD from IN)>>

<<PSETCAT-.o (O from NRLIB)>>
<<PSETCAT-.NRLIB (NRLIB from MID)>>
<<PSETCAT.o (O from NRLIB)>>
<<PSETCAT.NRLIB (NRLIB from MID)>>
<<PSETCAT.spad (SPAD from IN)>>
<<PSETCAT-.o (BOOTSTRAP from MID)>>
<<PSETCAT-.lsp (LISP from IN)>>
<<PSETCAT.o (BOOTSTRAP from MID)>>
<<PSETCAT.lsp (LISP from IN)>>

<<polset.spad (SPAD from IN)>>
<<polset.spad.dvi (DOC from IN)>>

<<MPC2.o (O from NRLIB)>>
<<MPC2.NRLIB (NRLIB from MID)>>
<<MPC2.spad (SPAD from IN)>>

<<MPC3.o (O from NRLIB)>>
<<MPC3.NRLIB (NRLIB from MID)>>
<<MPC3.spad (SPAD from IN)>>

<<POLTOPOL.o (O from NRLIB)>>
<<POLTOPOL.NRLIB (NRLIB from MID)>>
<<POLTOPOL.spad (SPAD from IN)>>

<<poltopol.spad (SPAD from IN)>>
<<poltopol.spad.dvi (DOC from IN)>>

<<AMR-.o (O from NRLIB)>>
<<AMR-.NRLIB (NRLIB from MID)>>
<<AMR.o (O from NRLIB)>>
<<AMR.NRLIB (NRLIB from MID)>>
<<AMR.spad (SPAD from IN)>>

<<COMMUPC.o (O from NRLIB)>>
<<COMMUPC.NRLIB (NRLIB from MID)>>
<<COMMUPC.spad (SPAD from IN)>>

<<FAMR-.o (O from NRLIB)>>
<<FAMR-.NRLIB (NRLIB from MID)>>
<<FAMR.o (O from NRLIB)>>
<<FAMR.NRLIB (NRLIB from MID)>>
<<FAMR.spad (SPAD from IN)>>

<<POLYCAT-.o (O from NRLIB)>>
<<POLYCAT-.NRLIB (NRLIB from MID)>>
<<POLYCAT.o (O from NRLIB)>>
<<POLYCAT.NRLIB (NRLIB from MID)>>
<<POLYCAT.spad (SPAD from IN)>>
<<POLYCAT-.o (BOOTSTRAP from MID)>>
<<POLYCAT-.lsp (LISP from IN)>>
<<POLYCAT.o (BOOTSTRAP from MID)>>
<<POLYCAT.lsp (LISP from IN)>>

<<POLYLIFT.o (O from NRLIB)>>
<<POLYLIFT.NRLIB (NRLIB from MID)>>
<<POLYLIFT.spad (SPAD from IN)>>

<<UPOLYC-.o (O from NRLIB)>>
<<UPOLYC-.NRLIB (NRLIB from MID)>>
<<UPOLYC.o (O from NRLIB)>>
<<UPOLYC.NRLIB (NRLIB from MID)>>
<<UPOLYC.spad (SPAD from IN)>>
<<UPOLYC-.o (BOOTSTRAP from MID)>>
<<UPOLYC-.lsp (LISP from IN)>>
<<UPOLYC.o (BOOTSTRAP from MID)>>
<<UPOLYC.lsp (LISP from IN)>>

<<polycat.spad (SPAD from IN)>>
<<polycat.spad.dvi (DOC from IN)>>

<<FM.o (O from NRLIB)>>
<<FM.NRLIB (NRLIB from MID)>>
<<FM.spad (SPAD from IN)>>

<<POLY2UP.o (O from NRLIB)>>
<<POLY2UP.NRLIB (NRLIB from MID)>>
<<POLY2UP.spad (SPAD from IN)>>

<<PR.o (O from NRLIB)>>
<<PR.NRLIB (NRLIB from MID)>>
<<PR.spad (SPAD from IN)>>

<<PSQFR.o (O from NRLIB)>>
<<PSQFR.NRLIB (NRLIB from MID)>>
<<PSQFR.spad (SPAD from IN)>>

<<SUP.o (O from NRLIB)>>
<<SUP.NRLIB (NRLIB from MID)>>
<<SUP.spad (SPAD from IN)>>

<<SUP2.o (O from NRLIB)>>
<<SUP2.NRLIB (NRLIB from MID)>>
<<SUP2.spad (SPAD from IN)>>

<<UPMP.o (O from NRLIB)>>
<<UPMP.NRLIB (NRLIB from MID)>>
<<UPMP.spad (SPAD from IN)>>

<<UPOLYC2.o (O from NRLIB)>>
<<UPOLYC2.NRLIB (NRLIB from MID)>>
<<UPOLYC2.spad (SPAD from IN)>>

<<UP.o (O from NRLIB)>>
<<UP.NRLIB (NRLIB from MID)>>
<<UP.spad (SPAD from IN)>>

<<UP2.o (O from NRLIB)>>
<<UP2.NRLIB (NRLIB from MID)>>
<<UP2.spad (SPAD from IN)>>

<<UPSQFREE.o (O from NRLIB)>>
<<UPSQFREE.NRLIB (NRLIB from MID)>>
<<UPSQFREE.spad (SPAD from IN)>>

<<poly.spad (SPAD from IN)>>
<<poly.spad.dvi (DOC from IN)>>

<<FSPRMELT.o (O from NRLIB)>>
<<FSPRMELT.NRLIB (NRLIB from MID)>>
<<FSPRMELT.spad (SPAD from IN)>>

<<PRIMELT.o (O from NRLIB)>>
<<PRIMELT.NRLIB (NRLIB from MID)>>
<<PRIMELT.spad (SPAD from IN)>>

<<primelt.spad (SPAD from IN)>>
<<primelt.spad.dvi (DOC from IN)>>

<<PRINT.o (O from NRLIB)>>
<<PRINT.NRLIB (NRLIB from MID)>>
<<PRINT.spad (SPAD from IN)>>

<<print.spad (SPAD from IN)>>
<<print.spad.dvi (DOC from IN)>>

<<PRODUCT.o (O from NRLIB)>>
<<PRODUCT.NRLIB (NRLIB from MID)>>
<<PRODUCT.spad (SPAD from IN)>>

<<product.spad (SPAD from IN)>>
<<product.spad.dvi (DOC from IN)>>

<<PRS.o (O from NRLIB)>>
<<PRS.NRLIB (NRLIB from MID)>>
<<PRS.spad (SPAD from IN)>>

<<prs.spad (SPAD from IN)>>
<<prs.spad.dvi (DOC from IN)>>

<<SYMPOLY.o (O from NRLIB)>>
<<SYMPOLY.NRLIB (NRLIB from MID)>>
<<SYMPOLY.spad (SPAD from IN)>>

<<PRTITION.o (O from NRLIB)>>
<<PRTITION.NRLIB (NRLIB from MID)>>
<<PRTITION.spad (SPAD from IN)>>

<<prtition.spad (SPAD from IN)>>
<<prtition.spad.dvi (DOC from IN)>>

<<MTSCAT.o (O from NRLIB)>>
<<MTSCAT.NRLIB (NRLIB from MID)>>
<<MTSCAT.spad (SPAD from IN)>>
<<MTSCAT.o (BOOTSTRAP from MID)>>
<<MTSCAT.lsp (LISP from IN)>>

<<PSCAT-.o (O from NRLIB)>>
<<PSCAT-.NRLIB (NRLIB from MID)>>
<<PSCAT.o (O from NRLIB)>>
<<PSCAT.NRLIB (NRLIB from MID)>>
<<PSCAT.spad (SPAD from IN)>>

<<ULSCAT.o (O from NRLIB)>>
<<ULSCAT.NRLIB (NRLIB from MID)>>
<<ULSCAT.spad (SPAD from IN)>>
<<ULSCAT.o (BOOTSTRAP from MID)>>
<<ULSCAT.lsp (LISP from IN)>>

<<UPSCAT-.o (O from NRLIB)>>
<<UPSCAT-.NRLIB (NRLIB from MID)>>
<<UPSCAT.o (O from NRLIB)>>
<<UPSCAT.NRLIB (NRLIB from MID)>>
<<UPSCAT.spad (SPAD from IN)>>

<<UPXSCAT.o (O from NRLIB)>>
<<UPXSCAT.NRLIB (NRLIB from MID)>>
<<UPXSCAT.spad (SPAD from IN)>>

<<UTSCAT-.o (O from NRLIB)>>
<<UTSCAT-.NRLIB (NRLIB from MID)>>
<<UTSCAT.o (O from NRLIB)>>
<<UTSCAT.NRLIB (NRLIB from MID)>>
<<UTSCAT.spad (SPAD from IN)>>

<<pscat.spad (SPAD from IN)>>
<<pscat.spad.dvi (DOC from IN)>>

<<PSEUDLIN.o (O from NRLIB)>>
<<PSEUDLIN.NRLIB (NRLIB from MID)>>
<<PSEUDLIN.spad (SPAD from IN)>>

<<pseudolin.spad (SPAD from IN)>>
<<pseudolin.spad.dvi (DOC from IN)>>

<<PTRANFN.o (O from NRLIB)>>
<<PTRANFN.NRLIB (NRLIB from MID)>>
<<PTRANFN.spad (SPAD from IN)>>

<<ptranfn.spad (SPAD from IN)>>
<<ptranfn.spad.dvi (DOC from IN)>>

<<UPXS.o (O from NRLIB)>>
<<UPXS.NRLIB (NRLIB from MID)>>
<<UPXS.spad (SPAD from IN)>>

<<UPXSCCA-.o (O from NRLIB)>>
<<UPXSCCA-.NRLIB (NRLIB from MID)>>
<<UPXSCCA.o (O from NRLIB)>>
<<UPXSCCA.NRLIB (NRLIB from MID)>>
<<UPXSCCA.spad (SPAD from IN)>>

<<UPXSCONS.o (O from NRLIB)>>
<<UPXSCONS.NRLIB (NRLIB from MID)>>
<<UPXSCONS.spad (SPAD from IN)>>

<<UPXS2.o (O from NRLIB)>>
<<UPXS2.NRLIB (NRLIB from MID)>>
<<UPXS2.spad (SPAD from IN)>>

<<puiseux.spad (SPAD from IN)>>
<<puiseux.spad.dvi (DOC from IN)>>

<<QALGSET.o (O from NRLIB)>>
<<QALGSET.NRLIB (NRLIB from MID)>>
<<QALGSET.spad (SPAD from IN)>>

<<QALGSET2.o (O from NRLIB)>>
<<QALGSET2.NRLIB (NRLIB from MID)>>
<<QALGSET2.spad (SPAD from IN)>>

<<qalgset.spad (SPAD from IN)>>
<<qalgset.spad.dvi (DOC from IN)>>

<<QUAT.o (O from NRLIB)>>
<<QUAT.NRLIB (NRLIB from MID)>>
<<QUAT.spad (SPAD from IN)>>

<<QUATCAT-.o (O from NRLIB)>>
<<QUATCAT-.NRLIB (NRLIB from MID)>>
<<QUATCAT.o (O from NRLIB)>>
<<QUATCAT.NRLIB (NRLIB from MID)>>
<<QUATCAT.spad (SPAD from IN)>>

<<QUATCT2.o (O from NRLIB)>>
<<QUATCT2.NRLIB (NRLIB from MID)>>
<<QUATCT2.spad (SPAD from IN)>>

<<quat.spad (SPAD from IN)>>
<<quat.spad.dvi (DOC from IN)>>

<<REP.o (O from NRLIB)>>
<<REP.NRLIB (NRLIB from MID)>>
<<REP.spad (SPAD from IN)>>

<<radeigen.spad (SPAD from IN)>>
<<radeigen.spad.dvi (DOC from IN)>>

<<BINARY.o (O from NRLIB)>>
<<BINARY.NRLIB (NRLIB from MID)>>
<<BINARY.spad (SPAD from IN)>>

<<DECIMAL.o (O from NRLIB)>>
<<DECIMAL.NRLIB (NRLIB from MID)>>
<<DECIMAL.spad (SPAD from IN)>>

<<HEXADEC.o (O from NRLIB)>>
<<HEXADEC.NRLIB (NRLIB from MID)>>
<<HEXADEC.spad (SPAD from IN)>>

<<RADIX.o (O from NRLIB)>>
<<RADIX.NRLIB (NRLIB from MID)>>
<<RADIX.spad (SPAD from IN)>>

<<RADUTIL.o (O from NRLIB)>>
<<RADUTIL.NRLIB (NRLIB from MID)>>
<<RADUTIL.spad (SPAD from IN)>>

<<radix.spad (SPAD from IN)>>
<<radix.spad.dvi (DOC from IN)>>

<<INTBIT.o (O from NRLIB)>>
<<INTBIT.NRLIB (NRLIB from MID)>>
<<INTBIT.spad (SPAD from IN)>>

<<RANDSRC.o (O from NRLIB)>>
<<RANDSRC.NRLIB (NRLIB from MID)>>
<<RANDSRC.spad (SPAD from IN)>>

<<RDIST.o (O from NRLIB)>>
<<RDIST.NRLIB (NRLIB from MID)>>
<<RDIST.spad (SPAD from IN)>>

<<RFDIST.o (O from NRLIB)>>
<<RFDIST.NRLIB (NRLIB from MID)>>
<<RFDIST.spad (SPAD from IN)>>

<<RIDIST.o (O from NRLIB)>>
<<RIDIST.NRLIB (NRLIB from MID)>>
<<RIDIST.spad (SPAD from IN)>>

<<random.spad (SPAD from IN)>>
<<random.spad.dvi (DOC from IN)>>

<<RATFACT.o (O from NRLIB)>>
<<RATFACT.NRLIB (NRLIB from MID)>>
<<RATFACT.spad (SPAD from IN)>>

<<ratfact.spad (SPAD from IN)>>
<<ratfact.spad.dvi (DOC from IN)>>

<<INTTOOLS.o (O from NRLIB)>>
<<INTTOOLS.NRLIB (NRLIB from MID)>>
<<INTTOOLS.spad (SPAD from IN)>>

<<RDEEF.o (O from NRLIB)>>
<<RDEEF.NRLIB (NRLIB from MID)>>
<<RDEEF.spad (SPAD from IN)>>

<<rdeef.spad (SPAD from IN)>>
<<rdeef.spad.dvi (DOC from IN)>>

<<RDETR.o (O from NRLIB)>>
<<RDETR.NRLIB (NRLIB from MID)>>
<<RDETR.spad (SPAD from IN)>>

<<rderf.spad (SPAD from IN)>>
<<rderf.spad.dvi (DOC from IN)>>

<<RDEEFS.o (O from NRLIB)>>
<<RDEEFS.NRLIB (NRLIB from MID)>>
<<RDEEFS.spad (SPAD from IN)>>

<<RDETRS.o (O from NRLIB)>>
<<RDETRS.NRLIB (NRLIB from MID)>>
<<RDETRS.spad (SPAD from IN)>>

<<rdesys.spad (SPAD from IN)>>
<<rdesys.spad.dvi (DOC from IN)>>

<<REAL0Q.o (O from NRLIB)>>
<<REAL0Q.NRLIB (NRLIB from MID)>>
<<REAL0Q.spad (SPAD from IN)>>

<<real0q.spad (SPAD from IN)>>
<<real0q.spad.dvi (DOC from IN)>>

<<REAL0.o (O from NRLIB)>>
<<REAL0.NRLIB (NRLIB from MID)>>
<<REAL0.spad (SPAD from IN)>>

<<realzero.spad (SPAD from IN)>>
<<realzero.spad.dvi (DOC from IN)>>

<<POLUTIL.o (O from NRLIB)>>
<<POLUTIL.NRLIB (NRLIB from MID)>>
<<POLUTIL.spad (SPAD from IN)>>

<<RCFIELD-.o (O from NRLIB)>>
<<RCFIELD-.NRLIB (NRLIB from MID)>>
<<RCFIELD.o (O from NRLIB)>>
<<RCFIELD.NRLIB (NRLIB from MID)>>
<<RCFIELD.spad (SPAD from IN)>>

<<RECLOS.o (O from NRLIB)>>
<<RECLOS.NRLIB (NRLIB from MID)>>
<<RECLOS.spad (SPAD from IN)>>

<<ROIRC.o (O from NRLIB)>>
<<ROIRC.NRLIB (NRLIB from MID)>>
<<ROIRC.spad (SPAD from IN)>>

<<RRCC-.o (O from NRLIB)>>
<<RRCC-.NRLIB (NRLIB from MID)>>
<<RRCC.o (O from NRLIB)>>
<<RRCC.NRLIB (NRLIB from MID)>>
<<RRCC.spad (SPAD from IN)>>

<<reclos.spad (SPAD from IN)>>
<<reclos.spad.dvi (DOC from IN)>>

<<QCMPACK.o (O from NRLIB)>>
<<QCMPACK.NRLIB (NRLIB from MID)>>
<<QCMPACK.spad (SPAD from IN)>>

<<REGSET.o (O from NRLIB)>>
<<REGSET.NRLIB (NRLIB from MID)>>
<<REGSET.spad (SPAD from IN)>>

<<RSDCMPK.o (O from NRLIB)>>
<<RSDCMPK.NRLIB (NRLIB from MID)>>
<<RSDCMPK.spad (SPAD from IN)>>

<<RSETCAT-.o (O from NRLIB)>>
<<RSETCAT-.NRLIB (NRLIB from MID)>>
<<RSETCAT.o (O from NRLIB)>>
<<RSETCAT.NRLIB (NRLIB from MID)>>
<<RSETCAT.spad (SPAD from IN)>>

<<RSETGCD.o (O from NRLIB)>>
<<RSETGCD.NRLIB (NRLIB from MID)>>
<<RSETGCD.spad (SPAD from IN)>>

<<regset.spad (SPAD from IN)>>
<<regset.spad.dvi (DOC from IN)>>

<<REP1.o (O from NRLIB)>>
<<REP1.NRLIB (NRLIB from MID)>>
<<REP1.spad (SPAD from IN)>>

<<rep1.spad (SPAD from IN)>>
<<rep1.spad.dvi (DOC from IN)>>

<<REP2.o (O from NRLIB)>>
<<REP2.NRLIB (NRLIB from MID)>>
<<REP2.spad (SPAD from IN)>>

<<rep2.spad (SPAD from IN)>>
<<rep2.spad.dvi (DOC from IN)>>

<<RESRING.o (O from NRLIB)>>
<<RESRING.NRLIB (NRLIB from MID)>>
<<RESRING.spad (SPAD from IN)>>

<<resring.spad (SPAD from IN)>>
<<resring.spad.dvi (DOC from IN)>>

<<FRETRCT-.o (O from NRLIB)>>
<<FRETRCT-.NRLIB (NRLIB from MID)>>
<<FRETRCT.o (O from NRLIB)>>
<<FRETRCT.NRLIB (NRLIB from MID)>>
<<FRETRCT.spad (SPAD from IN)>>

<<INTRET.o (O from NRLIB)>>
<<INTRET.NRLIB (NRLIB from MID)>>
<<INTRET.spad (SPAD from IN)>>

<<RATRET.o (O from NRLIB)>>
<<RATRET.NRLIB (NRLIB from MID)>>
<<RATRET.spad (SPAD from IN)>>

<<retract.spad (SPAD from IN)>>
<<retract.spad.dvi (DOC from IN)>>

<<POLYCATQ.o (O from NRLIB)>>
<<POLYCATQ.NRLIB (NRLIB from MID)>>
<<POLYCATQ.spad (SPAD from IN)>>

<<RF.o (O from NRLIB)>>
<<RF.NRLIB (NRLIB from MID)>>
<<RF.spad (SPAD from IN)>>

<<rf.spad (SPAD from IN)>>
<<rf.spad.dvi (DOC from IN)>>

<<ODEPRRIC.o (O from NRLIB)>>
<<ODEPRRIC.NRLIB (NRLIB from MID)>>
<<ODEPRRIC.spad (SPAD from IN)>>

<<ODERTRIC.o (O from NRLIB)>>
<<ODERTRIC.NRLIB (NRLIB from MID)>>
<<ODERTRIC.spad (SPAD from IN)>>

<<riccati.spad (SPAD from IN)>>
<<riccati.spad.dvi (DOC from IN)>>

<<RINTERP.o (O from NRLIB)>>
<<RINTERP.NRLIB (NRLIB from MID)>>
<<RINTERP.spad (SPAD from IN)>>

<<rinterp.spad (SPAD from IN)>>
<<rinterp.spad.dvi (DOC from IN)>>

<<ATTRBUT.o (O from NRLIB)>>
<<ATTRBUT.NRLIB (NRLIB from MID)>>
<<ATTRBUT.spad (SPAD from IN)>>

<<ROUTINE.o (O from NRLIB)>>
<<ROUTINE.NRLIB (NRLIB from MID)>>
<<ROUTINE.spad (SPAD from IN)>>

<<routines.spad (SPAD from IN)>>
<<routines.spad.dvi (DOC from IN)>>

<<APPRULE.o (O from NRLIB)>>
<<APPRULE.NRLIB (NRLIB from MID)>>
<<APPRULE.spad (SPAD from IN)>>

<<RULE.o (O from NRLIB)>>
<<RULE.NRLIB (NRLIB from MID)>>
<<RULE.spad (SPAD from IN)>>

<<RULESET.o (O from NRLIB)>>
<<RULESET.NRLIB (NRLIB from MID)>>
<<RULESET.spad (SPAD from IN)>>

<<rule.spad (SPAD from IN)>>
<<rule.spad.dvi (DOC from IN)>>

<<INCRMAPS.o (O from NRLIB)>>
<<INCRMAPS.NRLIB (NRLIB from MID)>>
<<INCRMAPS.spad (SPAD from IN)>>

<<SEG.o (O from NRLIB)>>
<<SEG.NRLIB (NRLIB from MID)>>
<<SEG.spad (SPAD from IN)>>

<<SEG2.o (O from NRLIB)>>
<<SEG2.NRLIB (NRLIB from MID)>>
<<SEG2.spad (SPAD from IN)>>

<<SEGBIND.o (O from NRLIB)>>
<<SEGBIND.NRLIB (NRLIB from MID)>>
<<SEGBIND.spad (SPAD from IN)>>

<<SEGBIND2.o (O from NRLIB)>>
<<SEGBIND2.NRLIB (NRLIB from MID)>>
<<SEGBIND2.spad (SPAD from IN)>>

<<SEGCAT.o (O from NRLIB)>>
<<SEGCAT.NRLIB (NRLIB from MID)>>
<<SEGCAT.spad (SPAD from IN)>>

<<SEGXCAT.o (O from NRLIB)>>
<<SEGXCAT.NRLIB (NRLIB from MID)>>
<<SEGXCAT.spad (SPAD from IN)>>

<<UNISEG.o (O from NRLIB)>>
<<UNISEG.NRLIB (NRLIB from MID)>>
<<UNISEG.spad (SPAD from IN)>>

<<UNISEG2.o (O from NRLIB)>>
<<UNISEG2.NRLIB (NRLIB from MID)>>
<<UNISEG2.spad (SPAD from IN)>>

<<seg.spad (SPAD from IN)>>
<<seg.spad.dvi (DOC from IN)>>

<<UDPO.o (O from NRLIB)>>
<<UDPO.NRLIB (NRLIB from MID)>>
<<UDPO.spad (SPAD from IN)>>

<<UDVO.o (O from NRLIB)>>
<<UDVO.NRLIB (NRLIB from MID)>>
<<UDVO.spad (SPAD from IN)>>

<<setorder.spad (SPAD from IN)>>
<<setorder.spad.dvi (DOC from IN)>>

<<SET.o (O from NRLIB)>>
<<SET.NRLIB (NRLIB from MID)>>
<<SET.spad (SPAD from IN)>>

<<sets.spad (SPAD from IN)>>
<<sets.spad.dvi (DOC from IN)>>

<<SEX.o (O from NRLIB)>>
<<SEX.NRLIB (NRLIB from MID)>>
<<SEX.spad (SPAD from IN)>>

<<SEXCAT.o (O from NRLIB)>>
<<SEXCAT.NRLIB (NRLIB from MID)>>
<<SEXCAT.spad (SPAD from IN)>>

<<SEXOF.o (O from NRLIB)>>
<<SEXOF.NRLIB (NRLIB from MID)>>
<<SEXOF.spad (SPAD from IN)>>

<<sex.spad (SPAD from IN)>>
<<sex.spad.dvi (DOC from IN)>>

<<DFLOAT.o (O from NRLIB)>>
<<DFLOAT.NRLIB (NRLIB from MID)>>
<<DFLOAT.spad (SPAD from IN)>>
<<DFLOAT.o (BOOTSTRAP from MID)>>
<<DFLOAT.lsp (LISP from IN)>>

<<FPS-.o (O from NRLIB)>>
<<FPS-.NRLIB (NRLIB from MID)>>
<<FPS.o (O from NRLIB)>>
<<FPS.NRLIB (NRLIB from MID)>>
<<FPS.spad (SPAD from IN)>>
<<FPS-.o (BOOTSTRAP from MID)>>
<<FPS-.lsp (LISP from IN)>>
<<FPS.o (BOOTSTRAP from MID)>>
<<FPS.lsp (LISP from IN)>>

<<RADCAT-.o (O from NRLIB)>>
<<RADCAT-.NRLIB (NRLIB from MID)>>
<<RADCAT.o (O from NRLIB)>>
<<RADCAT.NRLIB (NRLIB from MID)>>
<<RADCAT.spad (SPAD from IN)>>

<<REAL.o (O from NRLIB)>>
<<REAL.NRLIB (NRLIB from MID)>>
<<REAL.spad (SPAD from IN)>>

<<RNS-.o (O from NRLIB)>>
<<RNS-.NRLIB (NRLIB from MID)>>
<<RNS.o (O from NRLIB)>>
<<RNS.NRLIB (NRLIB from MID)>>
<<RNS.spad (SPAD from IN)>>
<<RNS-.o (BOOTSTRAP from MID)>>
<<RNS-.lsp (LISP from IN)>>
<<RNS.o (BOOTSTRAP from MID)>>
<<RNS.lsp (LISP from IN)>>

<<sf.spad (SPAD from IN)>>
<<sf.spad.dvi (DOC from IN)>>

<<SGCF.o (O from NRLIB)>>
<<SGCF.NRLIB (NRLIB from MID)>>
<<SGCF.spad (SPAD from IN)>>

<<sgcf.spad (SPAD from IN)>>
<<sgcf.spad.dvi (DOC from IN)>>

<<INPSIGN.o (O from NRLIB)>>
<<INPSIGN.NRLIB (NRLIB from MID)>>
<<INPSIGN.spad (SPAD from IN)>>

<<LIMITRF.o (O from NRLIB)>>
<<LIMITRF.NRLIB (NRLIB from MID)>>
<<LIMITRF.spad (SPAD from IN)>>

<<SIGNRF.o (O from NRLIB)>>
<<SIGNRF.NRLIB (NRLIB from MID)>>
<<SIGNRF.spad (SPAD from IN)>>

<<TOOLSIGN.o (O from NRLIB)>>
<<TOOLSIGN.NRLIB (NRLIB from MID)>>
<<TOOLSIGN.spad (SPAD from IN)>>

<<sign.spad (SPAD from IN)>>
<<sign.spad.dvi (DOC from IN)>>

<<SINT.o (O from NRLIB)>>
<<SINT.NRLIB (NRLIB from MID)>>
<<SINT.spad (SPAD from IN)>>
<<SINT.o (BOOTSTRAP from MID)>>
<<SINT.lsp (LISP from IN)>>

<<INS-.o (O from NRLIB)>>
<<INS-.NRLIB (NRLIB from MID)>>
<<INS.o (O from NRLIB)>>
<<INS.NRLIB (NRLIB from MID)>>
<<INS.spad (SPAD from IN)>>
<<INS-.o (BOOTSTRAP from MID)>>
<<INS-.lsp (LISP from IN)>>
<<INS.o (BOOTSTRAP from MID)>>
<<INS.lsp (LISP from IN)>>

<<si.spad (SPAD from IN)>>
<<si.spad.dvi (DOC from IN)>>

<<SMITH.o (O from NRLIB)>>
<<SMITH.NRLIB (NRLIB from MID)>>
<<SMITH.spad (SPAD from IN)>>

<<smith.spad (SPAD from IN)>>
<<smith.spad.dvi (DOC from IN)>>

<<DIOSP.o (O from NRLIB)>>
<<DIOSP.NRLIB (NRLIB from MID)>>
<<DIOSP.spad (SPAD from IN)>>

<<solvedio.spad (SPAD from IN)>>
<<solvedio.spad.dvi (DOC from IN)>>

<<SOLVEFOR.o (O from NRLIB)>>
<<SOLVEFOR.NRLIB (NRLIB from MID)>>
<<SOLVEFOR.spad (SPAD from IN)>>

<<solvefor.spad (SPAD from IN)>>
<<solvefor.spad.dvi (DOC from IN)>>

<<LSMP.o (O from NRLIB)>>
<<LSMP.NRLIB (NRLIB from MID)>>
<<LSMP.spad (SPAD from IN)>>

<<LSMP1.o (O from NRLIB)>>
<<LSMP1.NRLIB (NRLIB from MID)>>
<<LSMP1.spad (SPAD from IN)>>

<<LSPP.o (O from NRLIB)>>
<<LSPP.NRLIB (NRLIB from MID)>>
<<LSPP.spad (SPAD from IN)>>

<<solvelin.spad (SPAD from IN)>>
<<solvelin.spad.dvi (DOC from IN)>>

<<SOLVERAD.o (O from NRLIB)>>
<<SOLVERAD.NRLIB (NRLIB from MID)>>
<<SOLVERAD.spad (SPAD from IN)>>

<<solverad.spad (SPAD from IN)>>
<<solverad.spad.dvi (DOC from IN)>>

<<SORTPAK.o (O from NRLIB)>>
<<SORTPAK.NRLIB (NRLIB from MID)>>
<<SORTPAK.spad (SPAD from IN)>>

<<sortpak.spad (SPAD from IN)>>
<<sortpak.spad.dvi (DOC from IN)>>

<<SPACEC.o (O from NRLIB)>>
<<SPACEC.NRLIB (NRLIB from MID)>>
<<SPACEC.spad (SPAD from IN)>>

<<SPACE3.o (O from NRLIB)>>
<<SPACE3.NRLIB (NRLIB from MID)>>
<<SPACE3.spad (SPAD from IN)>>

<<TOPSP.o (O from NRLIB)>>
<<TOPSP.NRLIB (NRLIB from MID)>>
<<TOPSP.spad (SPAD from IN)>>

<<space.spad (SPAD from IN)>>
<<space.spad.dvi (DOC from IN)>>

<<DFSFUN.o (O from NRLIB)>>
<<DFSFUN.NRLIB (NRLIB from MID)>>
<<DFSFUN.spad (SPAD from IN)>>

<<NTPOLFN.o (O from NRLIB)>>
<<NTPOLFN.NRLIB (NRLIB from MID)>>
<<NTPOLFN.spad (SPAD from IN)>>

<<ORTHPOL.o (O from NRLIB)>>
<<ORTHPOL.NRLIB (NRLIB from MID)>>
<<ORTHPOL.spad (SPAD from IN)>>

<<special.spad (SPAD from IN)>>
<<special.spad.dvi (DOC from IN)>>

<<SFQCMPK.o (O from NRLIB)>>
<<SFQCMPK.NRLIB (NRLIB from MID)>>
<<SFQCMPK.spad (SPAD from IN)>>

<<SFRGCD.o (O from NRLIB)>>
<<SFRGCD.NRLIB (NRLIB from MID)>>
<<SFRGCD.spad (SPAD from IN)>>

<<SFRTCAT.o (O from NRLIB)>>
<<SFRTCAT.NRLIB (NRLIB from MID)>>
<<SFRTCAT.spad (SPAD from IN)>>

<<SRDCMPK.o (O from NRLIB)>>
<<SRDCMPK.NRLIB (NRLIB from MID)>>
<<SRDCMPK.spad (SPAD from IN)>>

<<SREGSET.o (O from NRLIB)>>
<<SREGSET.NRLIB (NRLIB from MID)>>
<<SREGSET.spad (SPAD from IN)>>

<<sregset.spad (SPAD from IN)>>
<<sregset.spad.dvi (DOC from IN)>>

<<NAGS.o (O from NRLIB)>>
<<NAGS.NRLIB (NRLIB from MID)>>
<<NAGS.spad (SPAD from IN)>>

<<s.spad (SPAD from IN)>>
<<s.spad.dvi (DOC from IN)>>

<<CSTTOOLS.o (O from NRLIB)>>
<<CSTTOOLS.NRLIB (NRLIB from MID)>>
<<CSTTOOLS.spad (SPAD from IN)>>

<<LZSTAGG-.o (O from NRLIB)>>
<<LZSTAGG-.NRLIB (NRLIB from MID)>>
<<LZSTAGG.o (O from NRLIB)>>
<<LZSTAGG.NRLIB (NRLIB from MID)>>
<<LZSTAGG.spad (SPAD from IN)>>

<<STREAM.o (O from NRLIB)>>
<<STREAM.NRLIB (NRLIB from MID)>>
<<STREAM.spad (SPAD from IN)>>

<<STREAM1.o (O from NRLIB)>>
<<STREAM1.NRLIB (NRLIB from MID)>>
<<STREAM1.spad (SPAD from IN)>>

<<STREAM2.o (O from NRLIB)>>
<<STREAM2.NRLIB (NRLIB from MID)>>
<<STREAM2.spad (SPAD from IN)>>

<<STREAM3.o (O from NRLIB)>>
<<STREAM3.NRLIB (NRLIB from MID)>>
<<STREAM3.spad (SPAD from IN)>>

<<stream.spad (SPAD from IN)>>
<<stream.spad.dvi (DOC from IN)>>

<<CCLASS.o (O from NRLIB)>>
<<CCLASS.NRLIB (NRLIB from MID)>>
<<CCLASS.spad (SPAD from IN)>>

<<CHAR.o (O from NRLIB)>>
<<CHAR.NRLIB (NRLIB from MID)>>
<<CHAR.spad (SPAD from IN)>>
<<CHAR.o (BOOTSTRAP from MID)>>
<<CHAR.lsp (LISP from IN)>>

<<ISTRING.o (O from NRLIB)>>
<<ISTRING.NRLIB (NRLIB from MID)>>
<<ISTRING.spad (SPAD from IN)>>
<<ISTRING.o (BOOTSTRAP from MID)>>
<<ISTRING.lsp (LISP from IN)>>

<<STRICAT.o (O from NRLIB)>>
<<STRICAT.NRLIB (NRLIB from MID)>>
<<STRICAT.spad (SPAD from IN)>>

<<STRING.o (O from NRLIB)>>
<<STRING.NRLIB (NRLIB from MID)>>
<<STRING.spad (SPAD from IN)>>

<<string.spad (SPAD from IN)>>
<<string.spad.dvi (DOC from IN)>>

<<STTAYLOR.o (O from NRLIB)>>
<<STTAYLOR.NRLIB (NRLIB from MID)>>
<<STTAYLOR.spad (SPAD from IN)>>

<<sttaylor.spad (SPAD from IN)>>
<<sttaylor.spad.dvi (DOC from IN)>>

<<STTF.o (O from NRLIB)>>
<<STTF.NRLIB (NRLIB from MID)>>
<<STTF.spad (SPAD from IN)>>

<<STTFNC.o (O from NRLIB)>>
<<STTFNC.NRLIB (NRLIB from MID)>>
<<STTFNC.spad (SPAD from IN)>>

<<sttf.spad (SPAD from IN)>>
<<sttf.spad.dvi (DOC from IN)>>

<<SHP.o (O from NRLIB)>>
<<SHP.NRLIB (NRLIB from MID)>>
<<SHP.spad (SPAD from IN)>>

<<sturm.spad (SPAD from IN)>>
<<sturm.spad.dvi (DOC from IN)>>

<<SUCH.o (O from NRLIB)>>
<<SUCH.NRLIB (NRLIB from MID)>>
<<SUCH.spad (SPAD from IN)>>

<<suchthat.spad (SPAD from IN)>>
<<suchthat.spad.dvi (DOC from IN)>>

<<SULS.o (O from NRLIB)>>
<<SULS.NRLIB (NRLIB from MID)>>
<<SULS.spad (SPAD from IN)>>

<<suls.spad (SPAD from IN)>>
<<suls.spad.dvi (DOC from IN)>>

<<GOSPER.o (O from NRLIB)>>
<<GOSPER.NRLIB (NRLIB from MID)>>
<<GOSPER.spad (SPAD from IN)>>

<<ISUMP.o (O from NRLIB)>>
<<ISUMP.NRLIB (NRLIB from MID)>>
<<ISUMP.spad (SPAD from IN)>>

<<SUMRF.o (O from NRLIB)>>
<<SUMRF.NRLIB (NRLIB from MID)>>
<<SUMRF.spad (SPAD from IN)>>

<<sum.spad (SPAD from IN)>>
<<sum.spad.dvi (DOC from IN)>>

<<ISUPS.o (O from NRLIB)>>
<<ISUPS.NRLIB (NRLIB from MID)>>
<<ISUPS.spad (SPAD from IN)>>

<<sups.spad (SPAD from IN)>>
<<sups.spad.dvi (DOC from IN)>>

<<SUPXS.o (O from NRLIB)>>
<<SUPXS.NRLIB (NRLIB from MID)>>
<<SUPXS.spad (SPAD from IN)>>

<<supxs.spad (SPAD from IN)>>
<<supxs.spad.dvi (DOC from IN)>>

<<SUTS.o (O from NRLIB)>>
<<SUTS.NRLIB (NRLIB from MID)>>
<<SUTS.spad (SPAD from IN)>>

<<suts.spad (SPAD from IN)>>
<<suts.spad.dvi (DOC from IN)>>

<<SYMBOL.o (O from NRLIB)>>
<<SYMBOL.NRLIB (NRLIB from MID)>>
<<SYMBOL.spad (SPAD from IN)>>
<<SYMBOL.o (BOOTSTRAP from MID)>>
<<SYMBOL.lsp (LISP from IN)>>

<<symbol.spad (SPAD from IN)>>
<<symbol.spad.dvi (DOC from IN)>>

<<SYSSOLP.o (O from NRLIB)>>
<<SYSSOLP.NRLIB (NRLIB from MID)>>
<<SYSSOLP.spad (SPAD from IN)>>

<<syssolp.spad (SPAD from IN)>>
<<syssolp.spad.dvi (DOC from IN)>>

<<MSYSCMD.o (O from NRLIB)>>
<<MSYSCMD.NRLIB (NRLIB from MID)>>
<<MSYSCMD.spad (SPAD from IN)>>

<<system.spad (SPAD from IN)>>
<<system.spad.dvi (DOC from IN)>>

<<TABLBUMP.o (O from NRLIB)>>
<<TABLBUMP.NRLIB (NRLIB from MID)>>
<<TABLBUMP.spad (SPAD from IN)>>

<<TABLEAU.o (O from NRLIB)>>
<<TABLEAU.NRLIB (NRLIB from MID)>>
<<TABLEAU.spad (SPAD from IN)>>

<<tableau.spad (SPAD from IN)>>
<<tableau.spad.dvi (DOC from IN)>>

<<EQTBL.o (O from NRLIB)>>
<<EQTBL.NRLIB (NRLIB from MID)>>
<<EQTBL.spad (SPAD from IN)>>

<<GSTBL.o (O from NRLIB)>>
<<GSTBL.NRLIB (NRLIB from MID)>>
<<GSTBL.spad (SPAD from IN)>>

<<HASHTBL.o (O from NRLIB)>>
<<HASHTBL.NRLIB (NRLIB from MID)>>
<<HASHTBL.spad (SPAD from IN)>>

<<INTABL.o (O from NRLIB)>>
<<INTABL.NRLIB (NRLIB from MID)>>
<<INTABL.spad (SPAD from IN)>>

<<STBL.o (O from NRLIB)>>
<<STBL.NRLIB (NRLIB from MID)>>
<<STBL.spad (SPAD from IN)>>

<<STRTBL.o (O from NRLIB)>>
<<STRTBL.NRLIB (NRLIB from MID)>>
<<STRTBL.spad (SPAD from IN)>>

<<TABLE.o (O from NRLIB)>>
<<TABLE.NRLIB (NRLIB from MID)>>
<<TABLE.spad (SPAD from IN)>>

<<table.spad (SPAD from IN)>>
<<table.spad.dvi (DOC from IN)>>

<<ITAYLOR.o (O from NRLIB)>>
<<ITAYLOR.NRLIB (NRLIB from MID)>>
<<ITAYLOR.spad (SPAD from IN)>>

<<UTS.o (O from NRLIB)>>
<<UTS.NRLIB (NRLIB from MID)>>
<<UTS.spad (SPAD from IN)>>

<<UTS2.o (O from NRLIB)>>
<<UTS2.NRLIB (NRLIB from MID)>>
<<UTS2.spad (SPAD from IN)>>

<<taylor.spad (SPAD from IN)>>
<<taylor.spad.dvi (DOC from IN)>>

<<TEX.o (O from NRLIB)>>
<<TEX.NRLIB (NRLIB from MID)>>
<<TEX.spad (SPAD from IN)>>

<<TEX1.o (O from NRLIB)>>
<<TEX1.NRLIB (NRLIB from MID)>>
<<TEX1.spad (SPAD from IN)>>

<<tex.spad (SPAD from IN)>>
<<tex.spad.dvi (DOC from IN)>>

<<ESTOOLS.o (O from NRLIB)>>
<<ESTOOLS.NRLIB (NRLIB from MID)>>
<<ESTOOLS.spad (SPAD from IN)>>

<<ESTOOLS1.o (O from NRLIB)>>
<<ESTOOLS1.NRLIB (NRLIB from MID)>>
<<ESTOOLS1.spad (SPAD from IN)>>

<<ESTOOLS2.o (O from NRLIB)>>
<<ESTOOLS2.NRLIB (NRLIB from MID)>>
<<ESTOOLS2.spad (SPAD from IN)>>

<<tools.spad (SPAD from IN)>>
<<tools.spad.dvi (DOC from IN)>>

<<SOLVESER.o (O from NRLIB)>>
<<SOLVESER.NRLIB (NRLIB from MID)>>
<<SOLVESER.spad (SPAD from IN)>>

<<SOLVETRA.o (O from NRLIB)>>
<<SOLVETRA.NRLIB (NRLIB from MID)>>
<<SOLVETRA.spad (SPAD from IN)>>

<<transsolve.spad (SPAD from IN)>>
<<transsolve.spad.dvi (DOC from IN)>>

<<BBTREE.o (O from NRLIB)>>
<<BBTREE.NRLIB (NRLIB from MID)>>
<<BBTREE.spad (SPAD from IN)>>

<<BSTREE.o (O from NRLIB)>>
<<BSTREE.NRLIB (NRLIB from MID)>>
<<BSTREE.spad (SPAD from IN)>>

<<BTCAT-.o (O from NRLIB)>>
<<BTCAT-.NRLIB (NRLIB from MID)>>
<<BTCAT.o (O from NRLIB)>>
<<BTCAT.NRLIB (NRLIB from MID)>>
<<BTCAT.spad (SPAD from IN)>>

<<BTOURN.o (O from NRLIB)>>
<<BTOURN.NRLIB (NRLIB from MID)>>
<<BTOURN.spad (SPAD from IN)>>

<<BTREE.o (O from NRLIB)>>
<<BTREE.NRLIB (NRLIB from MID)>>
<<BTREE.spad (SPAD from IN)>>

<<PENDTREE.o (O from NRLIB)>>
<<PENDTREE.NRLIB (NRLIB from MID)>>
<<PENDTREE.spad (SPAD from IN)>>

<<TREE.o (O from NRLIB)>>
<<TREE.NRLIB (NRLIB from MID)>>
<<TREE.spad (SPAD from IN)>>

<<tree.spad (SPAD from IN)>>
<<tree.spad.dvi (DOC from IN)>>

<<AHYP.o (O from NRLIB)>>
<<AHYP.NRLIB (NRLIB from MID)>>
<<AHYP.spad (SPAD from IN)>>

<<ATRIG-.o (O from NRLIB)>>
<<ATRIG-.NRLIB (NRLIB from MID)>>
<<ATRIG.o (O from NRLIB)>>
<<ATRIG.NRLIB (NRLIB from MID)>>
<<ATRIG.spad (SPAD from IN)>>

<<CFCAT.o (O from NRLIB)>>
<<CFCAT.NRLIB (NRLIB from MID)>>
<<CFCAT.spad (SPAD from IN)>>

<<ELEMFUN-.o (O from NRLIB)>>
<<ELEMFUN-.NRLIB (NRLIB from MID)>>
<<ELEMFUN.o (O from NRLIB)>>
<<ELEMFUN.NRLIB (NRLIB from MID)>>
<<ELEMFUN.spad (SPAD from IN)>>

<<LFCAT.o (O from NRLIB)>>
<<LFCAT.NRLIB (NRLIB from MID)>>
<<LFCAT.spad (SPAD from IN)>>

<<HYPCAT-.o (O from NRLIB)>>
<<HYPCAT-.NRLIB (NRLIB from MID)>>
<<HYPCAT.o (O from NRLIB)>>
<<HYPCAT.NRLIB (NRLIB from MID)>>
<<HYPCAT.spad (SPAD from IN)>>

<<PRIMCAT.o (O from NRLIB)>>
<<PRIMCAT.NRLIB (NRLIB from MID)>>
<<PRIMCAT.spad (SPAD from IN)>>

<<SPFCAT.o (O from NRLIB)>>
<<SPFCAT.NRLIB (NRLIB from MID)>>
<<SPFCAT.spad (SPAD from IN)>>

<<TRANFUN-.o (O from NRLIB)>>
<<TRANFUN-.NRLIB (NRLIB from MID)>>
<<TRANFUN.o (O from NRLIB)>>
<<TRANFUN.NRLIB (NRLIB from MID)>>
<<TRANFUN.spad (SPAD from IN)>>

<<TRIGCAT-.o (O from NRLIB)>>
<<TRIGCAT-.NRLIB (NRLIB from MID)>>
<<TRIGCAT.o (O from NRLIB)>>
<<TRIGCAT.NRLIB (NRLIB from MID)>>
<<TRIGCAT.spad (SPAD from IN)>>

<<trigcat.spad (SPAD from IN)>>
<<trigcat.spad.dvi (DOC from IN)>>

<<GTSET.o (O from NRLIB)>>
<<GTSET.NRLIB (NRLIB from MID)>>
<<GTSET.spad (SPAD from IN)>>

<<PSETPK.o (O from NRLIB)>>
<<PSETPK.NRLIB (NRLIB from MID)>>
<<PSETPK.spad (SPAD from IN)>>

<<TSETCAT-.o (O from NRLIB)>>
<<TSETCAT-.NRLIB (NRLIB from MID)>>
<<TSETCAT.o (O from NRLIB)>>
<<TSETCAT.NRLIB (NRLIB from MID)>>
<<TSETCAT.spad (SPAD from IN)>>
<<TSETCAT-.o (BOOTSTRAP from MID)>>
<<TSETCAT-.lsp (LISP from IN)>>
<<TSETCAT.o (BOOTSTRAP from MID)>>
<<TSETCAT.lsp (LISP from IN)>>

<<WUTSET.o (O from NRLIB)>>
<<WUTSET.NRLIB (NRLIB from MID)>>
<<WUTSET.spad (SPAD from IN)>>

<<triset.spad (SPAD from IN)>>
<<triset.spad.dvi (DOC from IN)>>

<<EXPRTUBE.o (O from NRLIB)>>
<<EXPRTUBE.NRLIB (NRLIB from MID)>>
<<EXPRTUBE.spad (SPAD from IN)>>

<<NUMTUBE.o (O from NRLIB)>>
<<NUMTUBE.NRLIB (NRLIB from MID)>>
<<NUMTUBE.spad (SPAD from IN)>>

<<TUBE.o (O from NRLIB)>>
<<TUBE.NRLIB (NRLIB from MID)>>
<<TUBE.spad (SPAD from IN)>>

<<TUBETOOL.o (O from NRLIB)>>
<<TUBETOOL.NRLIB (NRLIB from MID)>>
<<TUBETOOL.spad (SPAD from IN)>>

<<tube.spad (SPAD from IN)>>
<<tube.spad.dvi (DOC from IN)>>

<<NORMRETR.o (O from NRLIB)>>
<<NORMRETR.NRLIB (NRLIB from MID)>>
<<NORMRETR.spad (SPAD from IN)>>

<<TWOFACT.o (O from NRLIB)>>
<<TWOFACT.NRLIB (NRLIB from MID)>>
<<TWOFACT.spad (SPAD from IN)>>

<<twofact.spad (SPAD from IN)>>
<<twofact.spad.dvi (DOC from IN)>>

<<UNIFACT.o (O from NRLIB)>>
<<UNIFACT.NRLIB (NRLIB from MID)>>
<<UNIFACT.spad (SPAD from IN)>>

<<unifact.spad (SPAD from IN)>>
<<unifact.spad.dvi (DOC from IN)>>

<<UPDECOMP.o (O from NRLIB)>>
<<UPDECOMP.NRLIB (NRLIB from MID)>>
<<UPDECOMP.spad (SPAD from IN)>>

<<updecomp.spad (SPAD from IN)>>
<<updecomp.spad.dvi (DOC from IN)>>

<<UPDIVP.o (O from NRLIB)>>
<<UPDIVP.NRLIB (NRLIB from MID)>>
<<UPDIVP.spad (SPAD from IN)>>

<<updivp.spad (SPAD from IN)>>
<<updivp.spad.dvi (DOC from IN)>>

<<UTSODE.o (O from NRLIB)>>
<<UTSODE.NRLIB (NRLIB from MID)>>
<<UTSODE.spad (SPAD from IN)>>

<<utsode.spad (SPAD from IN)>>
<<utsode.spad.dvi (DOC from IN)>>

<<ANON.o (O from NRLIB)>>
<<ANON.NRLIB (NRLIB from MID)>>
<<ANON.spad (SPAD from IN)>>

<<FUNCTION.o (O from NRLIB)>>
<<FUNCTION.NRLIB (NRLIB from MID)>>
<<FUNCTION.spad (SPAD from IN)>>

<<OVAR.o (O from NRLIB)>>
<<OVAR.NRLIB (NRLIB from MID)>>
<<OVAR.spad (SPAD from IN)>>

<<RULECOLD.o (O from NRLIB)>>
<<RULECOLD.NRLIB (NRLIB from MID)>>
<<RULECOLD.spad (SPAD from IN)>>

<<VARIABLE.o (O from NRLIB)>>
<<VARIABLE.NRLIB (NRLIB from MID)>>
<<VARIABLE.spad (SPAD from IN)>>

<<variable.spad (SPAD from IN)>>
<<variable.spad.dvi (DOC from IN)>>

<<DIRPCAT-.o (O from NRLIB)>>
<<DIRPCAT-.NRLIB (NRLIB from MID)>>
<<DIRPCAT.o (O from NRLIB)>>
<<DIRPCAT.NRLIB (NRLIB from MID)>>
<<DIRPCAT.spad (SPAD from IN)>>

<<DIRPROD.o (O from NRLIB)>>
<<DIRPROD.NRLIB (NRLIB from MID)>>
<<DIRPROD.spad (SPAD from IN)>>

<<DIRPROD2.o (O from NRLIB)>>
<<DIRPROD2.NRLIB (NRLIB from MID)>>
<<DIRPROD2.spad (SPAD from IN)>>

<<IVECTOR.o (O from NRLIB)>>
<<IVECTOR.NRLIB (NRLIB from MID)>>
<<IVECTOR.spad (SPAD from IN)>>

<<VECTCAT-.o (O from NRLIB)>>
<<VECTCAT-.NRLIB (NRLIB from MID)>>
<<VECTCAT.o (O from NRLIB)>>
<<VECTCAT.NRLIB (NRLIB from MID)>>
<<VECTCAT.spad (SPAD from IN)>>

<<VECTOR.o (O from NRLIB)>>
<<VECTOR.NRLIB (NRLIB from MID)>>
<<VECTOR.spad (SPAD from IN)>>
<<VECTOR.o (BOOTSTRAP from MID)>>
<<VECTOR.lsp (LISP from IN)>>

<<VECTOR2.o (O from NRLIB)>>
<<VECTOR2.NRLIB (NRLIB from MID)>>
<<VECTOR2.spad (SPAD from IN)>>

<<vector.spad (SPAD from IN)>>
<<vector.spad.dvi (DOC from IN)>>

<<GRIMAGE.o (O from NRLIB)>>
<<GRIMAGE.NRLIB (NRLIB from MID)>>
<<GRIMAGE.spad (SPAD from IN)>>

<<VIEW2D.o (O from NRLIB)>>
<<VIEW2D.NRLIB (NRLIB from MID)>>
<<VIEW2D.spad (SPAD from IN)>>

<<view2D.spad (SPAD from IN)>>
<<view2D.spad.dvi (DOC from IN)>>

<<VIEW3D.o (O from NRLIB)>>
<<VIEW3D.NRLIB (NRLIB from MID)>>
<<VIEW3D.spad (SPAD from IN)>>

<<view3D.spad (SPAD from IN)>>
<<view3D.spad.dvi (DOC from IN)>>

<<VIEWDEF.o (O from NRLIB)>>
<<VIEWDEF.NRLIB (NRLIB from MID)>>
<<VIEWDEF.spad (SPAD from IN)>>

<<viewDef.spad (SPAD from IN)>>
<<viewDef.spad.dvi (DOC from IN)>>

<<VIEW.o (O from NRLIB)>>
<<VIEW.NRLIB (NRLIB from MID)>>
<<VIEW.spad (SPAD from IN)>>

<<viewpack.spad (SPAD from IN)>>
<<viewpack.spad.dvi (DOC from IN)>>

<<EXIT.o (O from NRLIB)>>
<<EXIT.NRLIB (NRLIB from MID)>>
<<EXIT.spad (SPAD from IN)>>

<<RESLATC.o (O from NRLIB)>>
<<RESLATC.NRLIB (NRLIB from MID)>>
<<RESLATC.spad (SPAD from IN)>>

<<VOID.o (O from NRLIB)>>
<<VOID.NRLIB (NRLIB from MID)>>
<<VOID.spad (SPAD from IN)>>

<<void.spad (SPAD from IN)>>
<<void.spad.dvi (DOC from IN)>>

<<WEIER.o (O from NRLIB)>>
<<WEIER.NRLIB (NRLIB from MID)>>
<<WEIER.spad (SPAD from IN)>>

<<weier.spad (SPAD from IN)>>
<<weier.spad.dvi (DOC from IN)>>

<<OWP.o (O from NRLIB)>>
<<OWP.NRLIB (NRLIB from MID)>>
<<OWP.spad (SPAD from IN)>>

<<WP.o (O from NRLIB)>>
<<WP.NRLIB (NRLIB from MID)>>
<<WP.spad (SPAD from IN)>>

<<wtpol.spad (SPAD from IN)>>
<<wtpol.spad.dvi (DOC from IN)>>

<<FLALG.o (O from NRLIB)>>
<<FLALG.NRLIB (NRLIB from MID)>>
<<FLALG.spad (SPAD from IN)>>

<<LEXP.o (O from NRLIB)>>
<<LEXP.NRLIB (NRLIB from MID)>>
<<LEXP.spad (SPAD from IN)>>

<<LIECAT-.o (O from NRLIB)>>
<<LIECAT-.NRLIB (NRLIB from MID)>>
<<LIECAT.o (O from NRLIB)>>
<<LIECAT.NRLIB (NRLIB from MID)>>
<<LIECAT.spad (SPAD from IN)>>

<<LPOLY.o (O from NRLIB)>>
<<LPOLY.NRLIB (NRLIB from MID)>>
<<LPOLY.spad (SPAD from IN)>>

<<LWORD.o (O from NRLIB)>>
<<LWORD.NRLIB (NRLIB from MID)>>
<<LWORD.spad (SPAD from IN)>>

<<MAGMA.o (O from NRLIB)>>
<<MAGMA.NRLIB (NRLIB from MID)>>
<<MAGMA.spad (SPAD from IN)>>

<<PBWLB.o (O from NRLIB)>>
<<PBWLB.NRLIB (NRLIB from MID)>>
<<PBWLB.spad (SPAD from IN)>>

<<XEXPPKG.o (O from NRLIB)>>
<<XEXPPKG.NRLIB (NRLIB from MID)>>
<<XEXPPKG.spad (SPAD from IN)>>

<<XPBWPOLY.o (O from NRLIB)>>
<<XPBWPOLY.NRLIB (NRLIB from MID)>>
<<XPBWPOLY.spad (SPAD from IN)>>

<<xlpoly.spad (SPAD from IN)>>
<<xlpoly.spad.dvi (DOC from IN)>>

<<FMCAT.o (O from NRLIB)>>
<<FMCAT.NRLIB (NRLIB from MID)>>
<<FMCAT.spad (SPAD from IN)>>

<<FM1.o (O from NRLIB)>>
<<FM1.NRLIB (NRLIB from MID)>>
<<FM1.spad (SPAD from IN)>>

<<OFMONOID.o (O from NRLIB)>>
<<OFMONOID.NRLIB (NRLIB from MID)>>
<<OFMONOID.spad (SPAD from IN)>>

<<XALG.o (O from NRLIB)>>
<<XALG.NRLIB (NRLIB from MID)>>
<<XALG.spad (SPAD from IN)>>

<<XDPOLY.o (O from NRLIB)>>
<<XDPOLY.NRLIB (NRLIB from MID)>>
<<XDPOLY.spad (SPAD from IN)>>

<<XFALG.o (O from NRLIB)>>
<<XFALG.NRLIB (NRLIB from MID)>>
<<XFALG.spad (SPAD from IN)>>

<<XPOLY.o (O from NRLIB)>>
<<XPOLY.NRLIB (NRLIB from MID)>>
<<XPOLY.spad (SPAD from IN)>>

<<XPOLYC.o (O from NRLIB)>>
<<XPOLYC.NRLIB (NRLIB from MID)>>
<<XPOLYC.spad (SPAD from IN)>>

<<XPR.o (O from NRLIB)>>
<<XPR.NRLIB (NRLIB from MID)>>
<<XPR.spad (SPAD from IN)>>

<<XRPOLY.o (O from NRLIB)>>
<<XRPOLY.NRLIB (NRLIB from MID)>>
<<XRPOLY.spad (SPAD from IN)>>

<<xpoly.spad (SPAD from IN)>>
<<xpoly.spad.dvi (DOC from IN)>>

<<YSTREAM.o (O from NRLIB)>>
<<YSTREAM.NRLIB (NRLIB from MID)>>
<<YSTREAM.spad (SPAD from IN)>>

<<ystream.spad (SPAD from IN)>>
<<ystream.spad.dvi (DOC from IN)>>

<<FGLMICPK.o (O from NRLIB)>>
<<FGLMICPK.NRLIB (NRLIB from MID)>>
<<FGLMICPK.spad (SPAD from IN)>>

<<IRURPK.o (O from NRLIB)>>
<<IRURPK.NRLIB (NRLIB from MID)>>
<<IRURPK.spad (SPAD from IN)>>

<<LEXTRIPK.o (O from NRLIB)>>
<<LEXTRIPK.NRLIB (NRLIB from MID)>>
<<LEXTRIPK.spad (SPAD from IN)>>

<<RGCHAIN.o (O from NRLIB)>>
<<RGCHAIN.NRLIB (NRLIB from MID)>>
<<RGCHAIN.spad (SPAD from IN)>>

<<RURPK.o (O from NRLIB)>>
<<RURPK.NRLIB (NRLIB from MID)>>
<<RURPK.spad (SPAD from IN)>>

<<ZDSOLVE.o (O from NRLIB)>>
<<ZDSOLVE.NRLIB (NRLIB from MID)>>
<<ZDSOLVE.spad (SPAD from IN)>>

<<zerodim.spad (SPAD from IN)>>
<<zerodim.spad.dvi (DOC from IN)>>

<<axiom.sty (OUT from IN)>>

@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}
