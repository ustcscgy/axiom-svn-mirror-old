\documentclass{article}
\usepackage{../../../../src/scripts/tex/axiom}
\begin{document}
\title{\$SPAD/lsp/ccl/src/util/ nsort.c}
\author{Arthur Norman}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
<<*>>=

/*
 * Sort from one file to another.
 *
 *    nsort <from> <to>
 */

#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#define SIZE       12000000
#define MAXLINES    1000000

static int compar(const void *a, const void *b)
{
#ifdef FORWARDS
/*
 * Compile with -DFORWARDS for ascending order sort
 */
    return strcmp(*(char **)a, *(char **)b);
#else
    return strcmp(*(char **)b, *(char **)a);
#endif
}

int main(int argc, char *argv[])
{
    FILE *from, *to = stdout;
    int i, nchars = 0, nlines = 0, ch;
    char *b = (char *)malloc(SIZE);
    char **lines = (char **)malloc(MAXLINES*sizeof(char *));
    if (b == NULL || lines == NULL)
    {   fprintf(stderr, "\nNot enough free space to run SORT utility\n");
        exit(1);
    }
    switch (argc)
    {
default:
        fprintf(stderr, "\nUsage:   nsort file [destination]\n");
        exit(1);
case 3:
        to = fopen(argv[2], "w");
        if (to == NULL)
        {   fprintf(stderr, "\nFile \'%s\' can not be opened\n", argv[2]);
            exit(1);
        }
        /* Drop through */
case 2:
        from = fopen(argv[1], "r");
        if (from == NULL)
        {   fprintf(stderr, "\nFile \'%s\' can not be opened\n", argv[1]);
            fclose(to);
            exit(1);
        }
        break;
    }

    ch = getc(from);
    if (ch == EOF)
    {   fprintf(stderr, "\nSource file empty\n");
        fclose(from);
        fclose(to);
        exit(1);
    }
    while (ch != EOF)
    {   lines[nlines++] = &b[nchars];
        if (nlines >= MAXLINES)
        {   fprintf(stderr, "\nSource file has too many lines\n");
            exit(1);
        }
        while (ch != EOF && ch != '\n')
        {   b[nchars++] = ch;
            if (nchars >= SIZE)
            {   fprintf(stderr, "\nSource file is too large\n");
                exit(1);
            }
            ch = getc(from);
        }
        b[nchars++] = 0;
        ch = getc(from);
    }
    fclose(from);

    qsort(lines, nlines, sizeof(char *), compar);

    for (i = 0; i<nlines; i++)
    {   char *p = lines[i];
        while ((ch = *p++) != 0) putc(ch, to);
        putc('\n', to);
    }
    fclose(to);
    return 0;
}

/* End of nsort.c */

@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}
