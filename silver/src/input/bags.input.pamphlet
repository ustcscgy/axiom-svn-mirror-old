\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{\$SPAD/src/input bags.input}
\author{Timothy Daly}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{License}
<<license>>=
--Copyright The Numerical Algorithms Group Limited 1991.
@
<<*>>=
)spool bags.output
)set message test on
)set message auto off
)clear all

--S 1 of 44
a:Stack INT:= stack [1,2,3,4,5]
--R 
--R
--R   (1)  [1,2,3,4,5]
--R                                                          Type: Stack Integer
--E 1

--S 2 of 44
pop! a
--R 
--R
--R   (2)  1
--R                                                        Type: PositiveInteger
--E 2

--S 3 of 44
a
--R 
--R
--R   (3)  [2,3,4,5]
--R                                                          Type: Stack Integer
--E 3

--S 4 of 44
push!(9,a)
--R 
--R
--R   (4)  9
--R                                                        Type: PositiveInteger
--E 4

--S 5 of 44
a
--R 
--R
--R   (5)  [9,2,3,4,5]
--R                                                          Type: Stack Integer
--E 5

--S 6 of 44
empty? a
--R 
--R
--R   (6)  false
--R                                                                Type: Boolean
--E 6

--S 7 of 44
b:=empty()$(Stack INT)
--R 
--R
--R   (7)  []
--R                                                          Type: Stack Integer
--E 7

--S 8 of 44
empty? b
--R 
--R
--R   (8)  true
--R                                                                Type: Boolean
--E 8

--S 9 of 44
c:ArrayStack INT:= arrayStack [1,2,3,4,5]
--R 
--R
--R   (9)  [1,2,3,4,5]
--R                                                     Type: ArrayStack Integer
--E 9

--S 10 of 44
pop! c
--R 
--R
--R   (10)  5
--R                                                        Type: PositiveInteger
--E 10

--S 11 of 44
c
--R 
--R
--R   (11)  [1,2,3,4]
--R                                                     Type: ArrayStack Integer
--E 11

--S 12 of 44
push!(9,c)
--R 
--R
--R   (12)  9
--R                                                        Type: PositiveInteger
--E 12

--S 13 of 44
c
--R 
--R
--R   (13)  [9,1,2,3,4]
--R                                                     Type: ArrayStack Integer
--E 13

--S 14 of 44
empty? c
--R 
--R
--R   (14)  false
--R                                                                Type: Boolean
--E 14

--S 15 of 44
d:=empty()$(ArrayStack INT)
--R 
--R
--R   (15)  []
--R                                                     Type: ArrayStack Integer
--E 15

--S 16 of 44
empty? d
--R 
--R
--R   (16)  true
--R                                                                Type: Boolean
--E 16

--S 17 of 44
e:Queue INT:= queue [1,2,3,4,5]
--R 
--R
--R   (17)  [1,2,3,4,5]
--R                                                          Type: Queue Integer
--E 17

--S 18 of 44
dequeue! e
--R 
--R
--R   (18)  1
--R                                                        Type: PositiveInteger
--E 18

--S 19 of 44
e
--R 
--R
--R   (19)  [2,3,4,5]
--R                                                          Type: Queue Integer
--E 19

--S 20 of 44
enqueue!(9,e)
--R 
--R
--R   (20)  9
--R                                                        Type: PositiveInteger
--E 20

--S 21 of 44
e
--R 
--R
--R   (21)  [2,3,4,5,9]
--R                                                          Type: Queue Integer
--E 21

--S 22 of 44
empty? e
--R 
--R
--R   (22)  false
--R                                                                Type: Boolean
--E 22

--S 23 of 44
f:=empty()$(Queue INT)
--R 
--R
--R   (23)  []
--R                                                          Type: Queue Integer
--E 23

--S 24 of 44
empty? f
--R 
--R
--R   (24)  true
--R                                                                Type: Boolean
--E 24

--S 25 of 44
g:Dequeue INT:= dequeue [1,2,3,4,5]
--R 
--R
--R   (25)  [1,2,3,4,5]
--R                                                        Type: Dequeue Integer
--E 25

--S 26 of 44
extractBottom! g
--R 
--R
--R   (26)  5
--R                                                        Type: PositiveInteger
--E 26

--S 27 of 44
g
--R 
--R
--R   (27)  [1,2,3,4]
--R                                                        Type: Dequeue Integer
--E 27

--S 28 of 44
insertBottom!(9,g)
--R 
--R
--R   (28)  9
--R                                                        Type: PositiveInteger
--E 28

--S 29 of 44
g
--R 
--R
--R   (29)  [1,2,3,4,9]
--R                                                        Type: Dequeue Integer
--E 29

--S 30 of 44
extractTop! g
--R 
--R
--R   (30)  1
--R                                                        Type: PositiveInteger
--E 30

--S 31 of 44
g
--R 
--R
--R   (31)  [2,3,4,9]
--R                                                        Type: Dequeue Integer
--E 31

--S 32 of 44
insertTop!(9,g)
--R 
--R
--R   (32)  9
--R                                                        Type: PositiveInteger
--E 32

--S 33 of 44
g
--R 
--R
--R   (33)  [9,2,3,4,9]
--R                                                        Type: Dequeue Integer
--E 33

--S 34 of 44
empty? g
--R 
--R
--R   (34)  false
--R                                                                Type: Boolean
--E 34

--S 35 of 44
h:=empty()$(Dequeue INT)
--R 
--R
--R   (35)  []
--R                                                        Type: Dequeue Integer
--E 35

--S 36 of 44
empty? h
--R 
--R
--R   (36)  true
--R                                                                Type: Boolean
--E 36

--S 37 of 44
i:Heap INT := bag [1,6,3,7,5,2,4]
--R 
--R
--R   (37)  [7,6,4,1,5,2,3]
--R                                                           Type: Heap Integer
--E 37

--S 38 of 44
insert!(10,i)
--R 
--R
--R   (38)  [10,7,4,6,5,2,3,1]
--R                                                           Type: Heap Integer
--E 38

--S 39 of 44
i
--R 
--R
--R   (39)  [10,7,4,6,5,2,3,1]
--R                                                           Type: Heap Integer
--E 39

--S 40 of 44
max i
--R 
--R
--R   (40)  10
--R                                                        Type: PositiveInteger
--E 40

--S 41 of 44
extract! i
--R 
--R
--R   (41)  10
--R                                                        Type: PositiveInteger
--E 41

--S 42 of 44
i
--R 
--R
--R   (42)  [7,6,4,1,5,2,3]
--R                                                           Type: Heap Integer
--E 42

--S 43 of 44
heapsort x ==
       empty? x => []
       cons(extract! x,heapsort x)
--R 
--R                                                                   Type: Void
--E 43

--S 44 of 44
heapsort i
--R 
--R   Compiling function heapsort with type Heap Integer -> List Integer 
--R
--R   (44)  [7,6,5,4,3,2,1]
--R                                                           Type: List Integer
--E 44
)spool
)lisp (bye)
 
@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}
 
